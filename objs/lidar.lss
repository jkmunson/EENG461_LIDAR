
objs/lidar.axf:     file format elf32-littlearm

Contents of the .debug_info section:

  Compilation Unit @ offset 0:
   Length:        0x6bb (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0
   Pointer Size:  4
 <0><c>: Abbrev Number: 22 (DW_TAG_compile_unit)
    <d>   DW_AT_producer    : (indirect string, offset: 0x203): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <11>   DW_AT_language    : 29	(C11)
    <12>   DW_AT_name        : (indirect string, offset: 0x25): src/lidar.c
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0xf8): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1a>   DW_AT_ranges      : 0x2a
    <1e>   DW_AT_low_pc      : 0
    <22>   DW_AT_stmt_list   : 0
 <1><26>: Abbrev Number: 2 (DW_TAG_base_type)
    <27>   DW_AT_byte_size   : 4
    <28>   DW_AT_encoding    : 7	(unsigned)
    <29>   DW_AT_name        : (indirect string, offset: 0x187): unsigned int
 <1><2d>: Abbrev Number: 2 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 8
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x17d): long long unsigned int
 <1><34>: Abbrev Number: 2 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 4
    <36>   DW_AT_encoding    : 4	(float)
    <37>   DW_AT_name        : (indirect string, offset: 0x484): float
 <1><3b>: Abbrev Number: 2 (DW_TAG_base_type)
    <3c>   DW_AT_byte_size   : 2
    <3d>   DW_AT_encoding    : 7	(unsigned)
    <3e>   DW_AT_name        : (indirect string, offset: 0x1a7): short unsigned int
 <1><42>: Abbrev Number: 23 (DW_TAG_base_type)
    <43>   DW_AT_byte_size   : 4
    <44>   DW_AT_encoding    : 5	(signed)
    <45>   DW_AT_name        : int
 <1><49>: Abbrev Number: 2 (DW_TAG_base_type)
    <4a>   DW_AT_byte_size   : 1
    <4b>   DW_AT_encoding    : 6	(signed char)
    <4c>   DW_AT_name        : (indirect string, offset: 0x167): signed char
 <1><50>: Abbrev Number: 4 (DW_TAG_typedef)
    <51>   DW_AT_name        : (indirect string, offset: 0x343): __uint8_t
    <55>   DW_AT_decl_file   : 2
    <56>   DW_AT_decl_line   : 43
    <57>   DW_AT_decl_column : 24
    <58>   DW_AT_type        : <0x5c>
 <1><5c>: Abbrev Number: 2 (DW_TAG_base_type)
    <5d>   DW_AT_byte_size   : 1
    <5e>   DW_AT_encoding    : 8	(unsigned char)
    <5f>   DW_AT_name        : (indirect string, offset: 0x165): unsigned char
 <1><63>: Abbrev Number: 2 (DW_TAG_base_type)
    <64>   DW_AT_byte_size   : 2
    <65>   DW_AT_encoding    : 5	(signed)
    <66>   DW_AT_name        : (indirect string, offset: 0x31): short int
 <1><6a>: Abbrev Number: 4 (DW_TAG_typedef)
    <6b>   DW_AT_name        : (indirect string, offset: 0x6d): __uint16_t
    <6f>   DW_AT_decl_file   : 2
    <70>   DW_AT_decl_line   : 57
    <71>   DW_AT_decl_column : 25
    <72>   DW_AT_type        : <0x3b>
 <1><76>: Abbrev Number: 4 (DW_TAG_typedef)
    <77>   DW_AT_name        : (indirect string, offset: 0x2c6): __int32_t
    <7b>   DW_AT_decl_file   : 2
    <7c>   DW_AT_decl_line   : 77
    <7d>   DW_AT_decl_column : 24
    <7e>   DW_AT_type        : <0x82>
 <1><82>: Abbrev Number: 2 (DW_TAG_base_type)
    <83>   DW_AT_byte_size   : 4
    <84>   DW_AT_encoding    : 5	(signed)
    <85>   DW_AT_name        : (indirect string, offset: 0xcf): long int
 <1><89>: Abbrev Number: 4 (DW_TAG_typedef)
    <8a>   DW_AT_name        : (indirect string, offset: 0x48): __uint32_t
    <8e>   DW_AT_decl_file   : 2
    <8f>   DW_AT_decl_line   : 79
    <90>   DW_AT_decl_column : 25
    <91>   DW_AT_type        : <0x95>
 <1><95>: Abbrev Number: 2 (DW_TAG_base_type)
    <96>   DW_AT_byte_size   : 4
    <97>   DW_AT_encoding    : 7	(unsigned)
    <98>   DW_AT_name        : (indirect string, offset: 0x182): long unsigned int
 <1><9c>: Abbrev Number: 2 (DW_TAG_base_type)
    <9d>   DW_AT_byte_size   : 8
    <9e>   DW_AT_encoding    : 5	(signed)
    <9f>   DW_AT_name        : (indirect string, offset: 0xca): long long int
 <1><a3>: Abbrev Number: 4 (DW_TAG_typedef)
    <a4>   DW_AT_name        : (indirect string, offset: 0x345): uint8_t
    <a8>   DW_AT_decl_file   : 3
    <a9>   DW_AT_decl_line   : 24
    <aa>   DW_AT_decl_column : 19
    <ab>   DW_AT_type        : <0x50>
 <1><af>: Abbrev Number: 4 (DW_TAG_typedef)
    <b0>   DW_AT_name        : (indirect string, offset: 0x6f): uint16_t
    <b4>   DW_AT_decl_file   : 3
    <b5>   DW_AT_decl_line   : 36
    <b6>   DW_AT_decl_column : 20
    <b7>   DW_AT_type        : <0x6a>
 <1><bb>: Abbrev Number: 4 (DW_TAG_typedef)
    <bc>   DW_AT_name        : (indirect string, offset: 0x2c8): int32_t
    <c0>   DW_AT_decl_file   : 3
    <c1>   DW_AT_decl_line   : 44
    <c2>   DW_AT_decl_column : 19
    <c3>   DW_AT_type        : <0x76>
 <1><c7>: Abbrev Number: 4 (DW_TAG_typedef)
    <c8>   DW_AT_name        : (indirect string, offset: 0x4a): uint32_t
    <cc>   DW_AT_decl_file   : 3
    <cd>   DW_AT_decl_line   : 48
    <ce>   DW_AT_decl_column : 20
    <cf>   DW_AT_type        : <0x89>
 <1><d3>: Abbrev Number: 4 (DW_TAG_typedef)
    <d4>   DW_AT_name        : (indirect string, offset: 0x3b): size_t
    <d8>   DW_AT_decl_file   : 4
    <d9>   DW_AT_decl_line   : 214
    <da>   DW_AT_decl_column : 23
    <db>   DW_AT_type        : <0x26>
 <1><df>: Abbrev Number: 2 (DW_TAG_base_type)
    <e0>   DW_AT_byte_size   : 8
    <e1>   DW_AT_encoding    : 4	(float)
    <e2>   DW_AT_name        : (indirect string, offset: 0x159): long double
 <1><e6>: Abbrev Number: 17 (DW_TAG_enumeration_type)
    <e7>   DW_AT_encoding    : 7	(unsigned)
    <e7>   DW_AT_byte_size   : 1
    <e7>   DW_AT_type        : <0x5c>
    <eb>   DW_AT_decl_file   : 5
    <ec>   DW_AT_decl_line   : 22
    <ed>   DW_AT_decl_column : 7
    <ee>   DW_AT_sibling     : <0xff>
 <2><f2>: Abbrev Number: 5 (DW_TAG_enumerator)
    <f3>   DW_AT_name        : (indirect string, offset: 0x60): START_PACKET
    <f7>   DW_AT_const_value : 1
 <2><f8>: Abbrev Number: 5 (DW_TAG_enumerator)
    <f9>   DW_AT_name        : (indirect string, offset: 0x96): DATA_PACKET
    <fd>   DW_AT_const_value : 0
 <2><fe>: Abbrev Number: 0
 <1><ff>: Abbrev Number: 24 (DW_TAG_structure_type)
    <100>   DW_AT_name        : (indirect string, offset: 0): ScanHeaderFields
    <104>   DW_AT_byte_size   : 10
    <105>   DW_AT_decl_file   : 5
    <106>   DW_AT_decl_line   : 20
    <107>   DW_AT_decl_column : 32
    <108>   DW_AT_sibling     : <0x157>
 <2><10c>: Abbrev Number: 8 (DW_TAG_member)
    <10d>   DW_AT_name        : (indirect string, offset: 0x78): start_code
    <111>   DW_AT_decl_file   : 5
    <111>   DW_AT_decl_line   : 21
    <112>   DW_AT_decl_column : 11
    <113>   DW_AT_type        : <0xaf>
    <117>   DW_AT_data_member_location: 0
 <2><118>: Abbrev Number: 25 (DW_TAG_member)
    <119>   DW_AT_name        : (indirect string, offset: 0x1df): type
    <11d>   DW_AT_decl_file   : 5
    <11e>   DW_AT_decl_line   : 22
    <11f>   DW_AT_decl_column : 45
    <120>   DW_AT_type        : <0xe6>
    <124>   DW_AT_bit_size    : 8
    <125>   DW_AT_data_bit_offset: 16
 <2><126>: Abbrev Number: 8 (DW_TAG_member)
    <127>   DW_AT_name        : (indirect string, offset: 0x1e4): sample_count
    <12b>   DW_AT_decl_file   : 5
    <12b>   DW_AT_decl_line   : 23
    <12c>   DW_AT_decl_column : 10
    <12d>   DW_AT_type        : <0xa3>
    <131>   DW_AT_data_member_location: 3
 <2><132>: Abbrev Number: 8 (DW_TAG_member)
    <133>   DW_AT_name        : (indirect string, offset: 0x303): start_angle
    <137>   DW_AT_decl_file   : 5
    <137>   DW_AT_decl_line   : 24
    <138>   DW_AT_decl_column : 11
    <139>   DW_AT_type        : <0xaf>
    <13d>   DW_AT_data_member_location: 4
 <2><13e>: Abbrev Number: 8 (DW_TAG_member)
    <13f>   DW_AT_name        : (indirect string, offset: 0x173): end_angle
    <143>   DW_AT_decl_file   : 5
    <143>   DW_AT_decl_line   : 25
    <144>   DW_AT_decl_column : 11
    <145>   DW_AT_type        : <0xaf>
    <149>   DW_AT_data_member_location: 6
 <2><14a>: Abbrev Number: 8 (DW_TAG_member)
    <14b>   DW_AT_name        : (indirect string, offset: 0x2eb): checksum
    <14f>   DW_AT_decl_file   : 5
    <14f>   DW_AT_decl_line   : 26
    <150>   DW_AT_decl_column : 11
    <151>   DW_AT_type        : <0xaf>
    <155>   DW_AT_data_member_location: 8
 <2><156>: Abbrev Number: 0
 <1><157>: Abbrev Number: 26 (DW_TAG_union_type)
    <158>   DW_AT_byte_size   : 10
    <159>   DW_AT_decl_file   : 5
    <15a>   DW_AT_decl_line   : 28
    <15b>   DW_AT_decl_column : 9
    <15c>   DW_AT_sibling     : <0x177>
 <2><160>: Abbrev Number: 18 (DW_TAG_member)
    <161>   DW_AT_name        : (indirect string, offset: 0x2b1): bytes
    <165>   DW_AT_decl_file   : 5
    <165>   DW_AT_decl_line   : 29
    <166>   DW_AT_decl_column : 10
    <167>   DW_AT_type        : <0x177>
 <2><16b>: Abbrev Number: 18 (DW_TAG_member)
    <16c>   DW_AT_name        : (indirect string, offset: 0x59): header
    <170>   DW_AT_decl_file   : 5
    <170>   DW_AT_decl_line   : 30
    <171>   DW_AT_decl_column : 26
    <172>   DW_AT_type        : <0xff>
 <2><176>: Abbrev Number: 0
 <1><177>: Abbrev Number: 19 (DW_TAG_array_type)
    <178>   DW_AT_type        : <0xa3>
    <17c>   DW_AT_sibling     : <0x187>
 <2><180>: Abbrev Number: 27 (DW_TAG_subrange_type)
    <181>   DW_AT_type        : <0x26>
    <185>   DW_AT_upper_bound : 9
 <2><186>: Abbrev Number: 0
 <1><187>: Abbrev Number: 4 (DW_TAG_typedef)
    <188>   DW_AT_name        : (indirect string, offset: 0x2e0): ScanHeader
    <18c>   DW_AT_decl_file   : 5
    <18d>   DW_AT_decl_line   : 31
    <18e>   DW_AT_decl_column : 3
    <18f>   DW_AT_type        : <0x157>
 <1><193>: Abbrev Number: 28 (DW_TAG_subprogram)
    <194>   DW_AT_external    : 1
    <194>   DW_AT_name        : (indirect string, offset: 0x1c8): printlf
    <198>   DW_AT_decl_file   : 6
    <199>   DW_AT_decl_line   : 10
    <19a>   DW_AT_decl_column : 6
    <19b>   DW_AT_prototyped  : 1
    <19b>   DW_AT_declaration : 1
    <19b>   DW_AT_sibling     : <0x1a6>
 <2><19f>: Abbrev Number: 29 (DW_TAG_formal_parameter)
    <1a0>   DW_AT_type        : <0x1a6>
 <2><1a4>: Abbrev Number: 30 (DW_TAG_unspecified_parameters)
 <2><1a5>: Abbrev Number: 0
 <1><1a6>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <1a7>   DW_AT_byte_size   : 4
    <1a7>   DW_AT_type        : <0x1ab>
 <1><1ab>: Abbrev Number: 2 (DW_TAG_base_type)
    <1ac>   DW_AT_byte_size   : 1
    <1ad>   DW_AT_encoding    : 8	(unsigned char)
    <1ae>   DW_AT_name        : (indirect string, offset: 0x16e): char
 <1><1b2>: Abbrev Number: 9 (DW_TAG_subprogram)
    <1b3>   DW_AT_external    : 1
    <1b3>   DW_AT_name        : (indirect string, offset: 0x2a1): process_packets
    <1b7>   DW_AT_decl_file   : 1
    <1b7>   DW_AT_decl_line   : 147
    <1b8>   DW_AT_decl_column : 6
    <1b8>   DW_AT_prototyped  : 1
    <1b8>   DW_AT_low_pc      : 0x480
    <1bc>   DW_AT_high_pc     : 0x140
    <1c0>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1c2>   DW_AT_call_all_calls: 1
    <1c2>   DW_AT_sibling     : <0x373>
 <2><1c6>: Abbrev Number: 17 (DW_TAG_enumeration_type)
    <1c7>   DW_AT_encoding    : 7	(unsigned)
    <1c7>   DW_AT_byte_size   : 1
    <1c7>   DW_AT_type        : <0x5c>
    <1cb>   DW_AT_decl_file   : 1
    <1cc>   DW_AT_decl_line   : 148
    <1cd>   DW_AT_decl_column : 14
    <1ce>   DW_AT_sibling     : <0x1f7>
 <3><1d2>: Abbrev Number: 5 (DW_TAG_enumerator)
    <1d3>   DW_AT_name        : (indirect string, offset: 0x194): COMM_WAITING
    <1d7>   DW_AT_const_value : 0
 <3><1d8>: Abbrev Number: 5 (DW_TAG_enumerator)
    <1d9>   DW_AT_name        : (indirect string, offset: 0x30f): RECEIVING_HEADER
    <1dd>   DW_AT_const_value : 1
 <3><1de>: Abbrev Number: 5 (DW_TAG_enumerator)
    <1df>   DW_AT_name        : (indirect string, offset: 0x11): WAITING_SCAN_HEADER
    <1e3>   DW_AT_const_value : 2
 <3><1e4>: Abbrev Number: 5 (DW_TAG_enumerator)
    <1e5>   DW_AT_name        : (indirect string, offset: 0xb4): RECEIVING_SCAN_HEADER
    <1e9>   DW_AT_const_value : 3
 <3><1ea>: Abbrev Number: 5 (DW_TAG_enumerator)
    <1eb>   DW_AT_name        : (indirect string, offset: 0x134): RECEIVING_SCAN_DATA
    <1ef>   DW_AT_const_value : 4
 <3><1f0>: Abbrev Number: 5 (DW_TAG_enumerator)
    <1f1>   DW_AT_name        : (indirect string, offset: 0x32b): RECEIVING_HEALTH_REPORT
    <1f5>   DW_AT_const_value : 5
 <3><1f6>: Abbrev Number: 0
 <2><1f7>: Abbrev Number: 6 (DW_TAG_variable)
    <1f8>   DW_AT_name        : (indirect string, offset: 0x320): comm_state
    <1fc>   DW_AT_decl_file   : 1
    <1fc>   DW_AT_decl_line   : 148
    <1fd>   DW_AT_decl_column : 137
    <1fe>   DW_AT_type        : <0x1c6>
    <202>   DW_AT_location    : 5 byte block: 3 0 0 0 20 	(DW_OP_addr: 20000000)
 <2><208>: Abbrev Number: 6 (DW_TAG_variable)
    <209>   DW_AT_name        : (indirect string, offset: 0x127): current_byte
    <20d>   DW_AT_decl_file   : 1
    <20d>   DW_AT_decl_line   : 149
    <20e>   DW_AT_decl_column : 18
    <20f>   DW_AT_type        : <0xc7>
    <213>   DW_AT_location    : 5 byte block: 3 ec 2 0 20 	(DW_OP_addr: 200002ec)
 <2><219>: Abbrev Number: 6 (DW_TAG_variable)
    <21a>   DW_AT_name        : (indirect string, offset: 0xd8): current_scan
    <21e>   DW_AT_decl_file   : 1
    <21e>   DW_AT_decl_line   : 150
    <21f>   DW_AT_decl_column : 20
    <220>   DW_AT_type        : <0x187>
    <224>   DW_AT_location    : 5 byte block: 3 e0 2 0 20 	(DW_OP_addr: 200002e0)
 <2><22a>: Abbrev Number: 6 (DW_TAG_variable)
    <22b>   DW_AT_name        : (indirect string, offset: 0x88): current_point
    <22f>   DW_AT_decl_file   : 1
    <22f>   DW_AT_decl_line   : 151
    <230>   DW_AT_decl_column : 18
    <231>   DW_AT_type        : <0xc7>
    <235>   DW_AT_location    : 5 byte block: 3 c 0 0 20 	(DW_OP_addr: 2000000c)
 <2><23b>: Abbrev Number: 6 (DW_TAG_variable)
    <23c>   DW_AT_name        : (indirect string, offset: 0x1f7): scan_points
    <240>   DW_AT_decl_file   : 1
    <240>   DW_AT_decl_line   : 152
    <241>   DW_AT_decl_column : 18
    <242>   DW_AT_type        : <0x373>
    <246>   DW_AT_location    : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <2><24c>: Abbrev Number: 31 (DW_TAG_label)
    <24d>   DW_AT_name        : (indirect string, offset: 0x2c0): reset
    <251>   DW_AT_decl_file   : 1
    <252>   DW_AT_decl_line   : 223
    <253>   DW_AT_decl_column : 2
    <254>   DW_AT_low_pc      : 0x520
 <2><258>: Abbrev Number: 32 (DW_TAG_lexical_block)
    <259>   DW_AT_ranges      : 0x18
    <25d>   DW_AT_sibling     : <0x339>
 <3><261>: Abbrev Number: 7 (DW_TAG_variable)
    <262>   DW_AT_name        : (indirect string, offset: 0x2b7): received
    <266>   DW_AT_decl_file   : 1
    <266>   DW_AT_decl_line   : 155
    <267>   DW_AT_decl_column : 11
    <268>   DW_AT_type        : <0xa3>
    <26c>   DW_AT_location    : 0x12 (location list)
    <270>   DW_AT_GNU_locviews: 0xc
 <3><274>: Abbrev Number: 33 (DW_TAG_lexical_block)
    <275>   DW_AT_low_pc      : 0x544
    <279>   DW_AT_high_pc     : 0x7c
    <27d>   DW_AT_sibling     : <0x2ee>
 <4><281>: Abbrev Number: 34 (DW_TAG_variable)
    <282>   DW_AT_name        : low
    <286>   DW_AT_decl_file   : 1
    <287>   DW_AT_decl_line   : 197
    <288>   DW_AT_decl_column : 20
    <289>   DW_AT_type        : <0xa3>
    <28d>   DW_AT_location    : 5 byte block: 3 9 0 0 20 	(DW_OP_addr: 20000009)
 <4><293>: Abbrev Number: 6 (DW_TAG_variable)
    <294>   DW_AT_name        : (indirect string, offset: 0xf3): high
    <298>   DW_AT_decl_file   : 1
    <298>   DW_AT_decl_line   : 197
    <299>   DW_AT_decl_column : 25
    <29a>   DW_AT_type        : <0xa3>
    <29e>   DW_AT_location    : 5 byte block: 3 8 0 0 20 	(DW_OP_addr: 20000008)
 <4><2a4>: Abbrev Number: 13 (DW_TAG_lexical_block)
    <2a5>   DW_AT_low_pc      : 0x54e
    <2a9>   DW_AT_high_pc     : 0x72
 <5><2ad>: Abbrev Number: 7 (DW_TAG_variable)
    <2ae>   DW_AT_name        : (indirect string, offset: 0x90): point
    <2b2>   DW_AT_decl_file   : 1
    <2b2>   DW_AT_decl_line   : 206
    <2b3>   DW_AT_decl_column : 16
    <2b4>   DW_AT_type        : <0xaf>
    <2b8>   DW_AT_location    : 0x2c (location list)
    <2bc>   DW_AT_GNU_locviews: 0x2a
 <5><2c0>: Abbrev Number: 7 (DW_TAG_variable)
    <2c1>   DW_AT_name        : (indirect string, offset: 0x177): angle
    <2c5>   DW_AT_decl_file   : 1
    <2c5>   DW_AT_decl_line   : 207
    <2c6>   DW_AT_decl_column : 16
    <2c7>   DW_AT_type        : <0xaf>
    <2cb>   DW_AT_location    : 0x37 (location list)
    <2cf>   DW_AT_GNU_locviews: 0x35
 <5><2d3>: Abbrev Number: 35 (DW_TAG_call_site)
    <2d4>   DW_AT_call_return_pc: 0x56c
    <2d8>   DW_AT_call_origin : <0x43d>
 <5><2dc>: Abbrev Number: 10 (DW_TAG_call_site)
    <2dd>   DW_AT_call_return_pc: 0x57c
    <2e1>   DW_AT_call_origin : <0x410>
 <6><2e5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <2e6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <2e8>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <6><2eb>: Abbrev Number: 0
 <5><2ec>: Abbrev Number: 0
 <4><2ed>: Abbrev Number: 0
 <3><2ee>: Abbrev Number: 36 (DW_TAG_call_site)
    <2ef>   DW_AT_call_return_pc: 0x4a4
    <2f3>   DW_AT_call_origin : <0x384>
    <2f7>   DW_AT_sibling     : <0x305>
 <4><2fb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <2fc>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <2fe>   DW_AT_call_value  : 5 byte block: 3 e0 2 0 20 	(DW_OP_addr: 200002e0)
 <4><304>: Abbrev Number: 0
 <3><305>: Abbrev Number: 3 (DW_TAG_call_site)
    <306>   DW_AT_call_return_pc: 0x4de
    <30a>   DW_AT_sibling     : <0x315>
 <4><30e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <30f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <311>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><314>: Abbrev Number: 0
 <3><315>: Abbrev Number: 3 (DW_TAG_call_site)
    <316>   DW_AT_call_return_pc: 0x4e8
    <31a>   DW_AT_sibling     : <0x325>
 <4><31e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <31f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <321>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><324>: Abbrev Number: 0
 <3><325>: Abbrev Number: 10 (DW_TAG_call_site)
    <326>   DW_AT_call_return_pc: 0x520
    <32a>   DW_AT_call_origin : <0x65d>
 <4><32e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <32f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <331>   DW_AT_call_value  : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <4><337>: Abbrev Number: 0
 <3><338>: Abbrev Number: 0
 <2><339>: Abbrev Number: 3 (DW_TAG_call_site)
    <33a>   DW_AT_call_return_pc: 0x4cc
    <33e>   DW_AT_sibling     : <0x34c>
 <3><342>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <343>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <345>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><34b>: Abbrev Number: 0
 <2><34c>: Abbrev Number: 3 (DW_TAG_call_site)
    <34d>   DW_AT_call_return_pc: 0x52c
    <351>   DW_AT_sibling     : <0x35f>
 <3><355>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <356>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <358>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><35e>: Abbrev Number: 0
 <2><35f>: Abbrev Number: 10 (DW_TAG_call_site)
    <360>   DW_AT_call_return_pc: 0x542
    <364>   DW_AT_call_origin : <0x193>
 <3><368>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <369>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <36b>   DW_AT_call_value  : 5 byte block: 3 44 a 0 0 	(DW_OP_addr: a44)
 <3><371>: Abbrev Number: 0
 <2><372>: Abbrev Number: 0
 <1><373>: Abbrev Number: 19 (DW_TAG_array_type)
    <374>   DW_AT_type        : <0xaf>
    <378>   DW_AT_sibling     : <0x384>
 <2><37c>: Abbrev Number: 37 (DW_TAG_subrange_type)
    <37d>   DW_AT_type        : <0x26>
    <381>   DW_AT_upper_bound : 359
 <2><383>: Abbrev Number: 0
 <1><384>: Abbrev Number: 14 (DW_TAG_subprogram)
    <385>   DW_AT_external    : 1
    <385>   DW_AT_name        : (indirect string, offset: 0x53): check_header
    <389>   DW_AT_decl_file   : 1
    <389>   DW_AT_decl_line   : 131
    <38a>   DW_AT_decl_column : 6
    <38b>   DW_AT_prototyped  : 1
    <38b>   DW_AT_type        : <0x404>
    <38f>   DW_AT_low_pc      : 0x430
    <393>   DW_AT_high_pc     : 0x50
    <397>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <399>   DW_AT_call_all_calls: 1
    <399>   DW_AT_sibling     : <0x404>
 <2><39d>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <39e>   DW_AT_name        : (indirect string, offset: 0x83): head
    <3a2>   DW_AT_decl_file   : 1
    <3a2>   DW_AT_decl_line   : 131
    <3a3>   DW_AT_decl_column : 31
    <3a4>   DW_AT_type        : <0x40b>
    <3a8>   DW_AT_location    : 0x50 (location list)
    <3ac>   DW_AT_GNU_locviews: 0x40
 <2><3b0>: Abbrev Number: 7 (DW_TAG_variable)
    <3b1>   DW_AT_name        : (indirect string, offset: 0x2eb): checksum
    <3b5>   DW_AT_decl_file   : 1
    <3b5>   DW_AT_decl_line   : 136
    <3b6>   DW_AT_decl_column : 11
    <3b7>   DW_AT_type        : <0xaf>
    <3bb>   DW_AT_location    : 0xa6 (location list)
    <3bf>   DW_AT_GNU_locviews: 0xa2
 <2><3c3>: Abbrev Number: 38 (DW_TAG_lexical_block)
    <3c4>   DW_AT_ranges      : 0xc
 <3><3c8>: Abbrev Number: 15 (DW_TAG_variable)
    <3c9>   DW_AT_name        : i
    <3cb>   DW_AT_decl_file   : 1
    <3cb>   DW_AT_decl_line   : 138
    <3cc>   DW_AT_decl_column : 13
    <3cd>   DW_AT_type        : <0xd3>
    <3d1>   DW_AT_location    : 0xbe (location list)
    <3d5>   DW_AT_GNU_locviews: 0xb6
 <3><3d9>: Abbrev Number: 13 (DW_TAG_lexical_block)
    <3da>   DW_AT_low_pc      : 0x450
    <3de>   DW_AT_high_pc     : 0x16
 <4><3e2>: Abbrev Number: 15 (DW_TAG_variable)
    <3e3>   DW_AT_name        : low
    <3e7>   DW_AT_decl_file   : 1
    <3e7>   DW_AT_decl_line   : 139
    <3e8>   DW_AT_decl_column : 11
    <3e9>   DW_AT_type        : <0xa3>
    <3ed>   DW_AT_location    : 0xde (location list)
    <3f1>   DW_AT_GNU_locviews: 0xda
 <4><3f5>: Abbrev Number: 39 (DW_TAG_variable)
    <3f6>   DW_AT_name        : (indirect string, offset: 0xf3): high
    <3fa>   DW_AT_decl_file   : 1
    <3fb>   DW_AT_decl_line   : 140
    <3fc>   DW_AT_decl_column : 11
    <3fd>   DW_AT_type        : <0xa3>
 <4><401>: Abbrev Number: 0
 <3><402>: Abbrev Number: 0
 <2><403>: Abbrev Number: 0
 <1><404>: Abbrev Number: 2 (DW_TAG_base_type)
    <405>   DW_AT_byte_size   : 1
    <406>   DW_AT_encoding    : 2	(boolean)
    <407>   DW_AT_name        : (indirect string, offset: 0x1f1): _Bool
 <1><40b>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <40c>   DW_AT_byte_size   : 4
    <40c>   DW_AT_type        : <0x187>
 <1><410>: Abbrev Number: 14 (DW_TAG_subprogram)
    <411>   DW_AT_external    : 1
    <411>   DW_AT_name        : (indirect string, offset: 0x1ba): convert_to_mm
    <415>   DW_AT_decl_file   : 1
    <415>   DW_AT_decl_line   : 126
    <416>   DW_AT_decl_column : 10
    <417>   DW_AT_prototyped  : 1
    <417>   DW_AT_type        : <0xaf>
    <41b>   DW_AT_low_pc      : 0x42c
    <41f>   DW_AT_high_pc     : 0x4
    <423>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <425>   DW_AT_call_all_calls: 1
    <425>   DW_AT_sibling     : <0x43d>
 <2><429>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <42a>   DW_AT_name        : (indirect string, offset: 0x90): point
    <42e>   DW_AT_decl_file   : 1
    <42e>   DW_AT_decl_line   : 126
    <42f>   DW_AT_decl_column : 33
    <430>   DW_AT_type        : <0xaf>
    <434>   DW_AT_location    : 0xf8 (location list)
    <438>   DW_AT_GNU_locviews: 0xf4
 <2><43c>: Abbrev Number: 0
 <1><43d>: Abbrev Number: 14 (DW_TAG_subprogram)
    <43e>   DW_AT_external    : 1
    <43e>   DW_AT_name        : (indirect string, offset: 0xe5): map_to_degree
    <442>   DW_AT_decl_file   : 1
    <442>   DW_AT_decl_line   : 116
    <443>   DW_AT_decl_column : 10
    <444>   DW_AT_prototyped  : 1
    <444>   DW_AT_type        : <0xaf>
    <448>   DW_AT_low_pc      : 0x3bc
    <44c>   DW_AT_high_pc     : 0x70
    <450>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <452>   DW_AT_call_all_calls: 1
    <452>   DW_AT_sibling     : <0x4c9>
 <2><456>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <457>   DW_AT_name        : (indirect string, offset: 0x1a1): start
    <45b>   DW_AT_decl_file   : 1
    <45b>   DW_AT_decl_line   : 116
    <45c>   DW_AT_decl_column : 33
    <45d>   DW_AT_type        : <0xaf>
    <461>   DW_AT_location    : 0x115 (location list)
    <465>   DW_AT_GNU_locviews: 0x111
 <2><469>: Abbrev Number: 20 (DW_TAG_formal_parameter)
    <46a>   DW_AT_name        : end
    <46e>   DW_AT_decl_file   : 1
    <46e>   DW_AT_decl_line   : 116
    <46f>   DW_AT_decl_column : 49
    <470>   DW_AT_type        : <0xaf>
    <474>   DW_AT_location    : 0x132 (location list)
    <478>   DW_AT_GNU_locviews: 0x12e
 <2><47c>: Abbrev Number: 20 (DW_TAG_formal_parameter)
    <47d>   DW_AT_name        : num
    <481>   DW_AT_decl_file   : 1
    <481>   DW_AT_decl_line   : 116
    <482>   DW_AT_decl_column : 63
    <483>   DW_AT_type        : <0xaf>
    <487>   DW_AT_location    : 0x14f (location list)
    <48b>   DW_AT_GNU_locviews: 0x14b
 <2><48f>: Abbrev Number: 7 (DW_TAG_variable)
    <490>   DW_AT_name        : (indirect string, offset: 0x42): delta
    <494>   DW_AT_decl_file   : 1
    <494>   DW_AT_decl_line   : 117
    <495>   DW_AT_decl_column : 8
    <496>   DW_AT_type        : <0x34>
    <49a>   DW_AT_location    : 0x16e (location list)
    <49e>   DW_AT_GNU_locviews: 0x168
 <2><4a2>: Abbrev Number: 7 (DW_TAG_variable)
    <4a3>   DW_AT_name        : (indirect string, offset: 0xec): degree
    <4a7>   DW_AT_decl_file   : 1
    <4a7>   DW_AT_decl_line   : 118
    <4a8>   DW_AT_decl_column : 8
    <4a9>   DW_AT_type        : <0x34>
    <4ad>   DW_AT_location    : 0x1cc (location list)
    <4b1>   DW_AT_GNU_locviews: 0x1c8
 <2><4b5>: Abbrev Number: 10 (DW_TAG_call_site)
    <4b6>   DW_AT_call_return_pc: 0x410
    <4ba>   DW_AT_call_origin : <0x193>
 <3><4be>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4bf>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4c1>   DW_AT_call_value  : 5 byte block: 3 38 a 0 0 	(DW_OP_addr: a38)
 <3><4c7>: Abbrev Number: 0
 <2><4c8>: Abbrev Number: 0
 <1><4c9>: Abbrev Number: 9 (DW_TAG_subprogram)
    <4ca>   DW_AT_external    : 1
    <4ca>   DW_AT_name        : (indirect string, offset: 0x1d0): clear_lidar_IO
    <4ce>   DW_AT_decl_file   : 1
    <4ce>   DW_AT_decl_line   : 109
    <4cf>   DW_AT_decl_column : 6
    <4cf>   DW_AT_prototyped  : 1
    <4cf>   DW_AT_low_pc      : 0x38c
    <4d3>   DW_AT_high_pc     : 0x30
    <4d7>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4d9>   DW_AT_call_all_calls: 1
    <4d9>   DW_AT_sibling     : <0x50d>
 <2><4dd>: Abbrev Number: 3 (DW_TAG_call_site)
    <4de>   DW_AT_call_return_pc: 0x39e
    <4e2>   DW_AT_sibling     : <0x4ed>
 <3><4e6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4e7>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4e9>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><4ec>: Abbrev Number: 0
 <2><4ed>: Abbrev Number: 3 (DW_TAG_call_site)
    <4ee>   DW_AT_call_return_pc: 0x3a6
    <4f2>   DW_AT_sibling     : <0x4fd>
 <3><4f6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4f7>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4f9>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><4fc>: Abbrev Number: 0
 <2><4fd>: Abbrev Number: 16 (DW_TAG_call_site)
    <4fe>   DW_AT_call_return_pc: 0x3b2
 <3><502>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <503>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <505>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><50b>: Abbrev Number: 0
 <2><50c>: Abbrev Number: 0
 <1><50d>: Abbrev Number: 9 (DW_TAG_subprogram)
    <50e>   DW_AT_external    : 1
    <50e>   DW_AT_name        : (indirect string, offset: 0x2d0): stop_lidar_scan
    <512>   DW_AT_decl_file   : 1
    <512>   DW_AT_decl_line   : 104
    <513>   DW_AT_decl_column : 6
    <513>   DW_AT_prototyped  : 1
    <513>   DW_AT_low_pc      : 0x368
    <517>   DW_AT_high_pc     : 0x24
    <51b>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <51d>   DW_AT_call_all_calls: 1
    <51d>   DW_AT_sibling     : <0x54a>
 <2><521>: Abbrev Number: 3 (DW_TAG_call_site)
    <522>   DW_AT_call_return_pc: 0x37a
    <526>   DW_AT_sibling     : <0x537>
 <3><52a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <52b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <52d>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><530>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <531>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <533>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><536>: Abbrev Number: 0
 <2><537>: Abbrev Number: 16 (DW_TAG_call_site)
    <538>   DW_AT_call_return_pc: 0x384
 <3><53c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <53d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <53f>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><542>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <543>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <545>   DW_AT_call_value  : 2 byte block: 8 65 	(DW_OP_const1u: 101)
 <3><548>: Abbrev Number: 0
 <2><549>: Abbrev Number: 0
 <1><54a>: Abbrev Number: 9 (DW_TAG_subprogram)
    <54b>   DW_AT_external    : 1
    <54b>   DW_AT_name        : (indirect string, offset: 0x148): start_lidar_scan
    <54f>   DW_AT_decl_file   : 1
    <54f>   DW_AT_decl_line   : 99
    <550>   DW_AT_decl_column : 6
    <550>   DW_AT_prototyped  : 1
    <550>   DW_AT_low_pc      : 0x344
    <554>   DW_AT_high_pc     : 0x24
    <558>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <55a>   DW_AT_call_all_calls: 1
    <55a>   DW_AT_sibling     : <0x587>
 <2><55e>: Abbrev Number: 3 (DW_TAG_call_site)
    <55f>   DW_AT_call_return_pc: 0x356
    <563>   DW_AT_sibling     : <0x574>
 <3><567>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <568>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <56a>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><56d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <56e>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <570>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><573>: Abbrev Number: 0
 <2><574>: Abbrev Number: 16 (DW_TAG_call_site)
    <575>   DW_AT_call_return_pc: 0x360
 <3><579>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <57a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <57c>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><57f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <580>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <582>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><585>: Abbrev Number: 0
 <2><586>: Abbrev Number: 0
 <1><587>: Abbrev Number: 40 (DW_TAG_subprogram)
    <588>   DW_AT_external    : 1
    <588>   DW_AT_name        : (indirect string, offset: 0xa2): setup_lidar_comms
    <58c>   DW_AT_decl_file   : 1
    <58d>   DW_AT_decl_line   : 83
    <58e>   DW_AT_decl_column : 6
    <58f>   DW_AT_prototyped  : 1
    <58f>   DW_AT_low_pc      : 0x294
    <593>   DW_AT_high_pc     : 0xb0
    <597>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <599>   DW_AT_call_all_tail_calls: 1
    <599>   DW_AT_sibling     : <0x65d>
 <2><59d>: Abbrev Number: 3 (DW_TAG_call_site)
    <59e>   DW_AT_call_return_pc: 0x2a2
    <5a2>   DW_AT_sibling     : <0x5b1>
 <3><5a6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5a7>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5a9>   DW_AT_call_value  : 6 byte block: 11 83 90 80 80 7f 	(DW_OP_consts: -268433405)
 <3><5b0>: Abbrev Number: 0
 <2><5b1>: Abbrev Number: 3 (DW_TAG_call_site)
    <5b2>   DW_AT_call_return_pc: 0x2aa
    <5b6>   DW_AT_sibling     : <0x5c5>
 <3><5ba>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5bb>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5bd>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><5c4>: Abbrev Number: 0
 <2><5c5>: Abbrev Number: 3 (DW_TAG_call_site)
    <5c6>   DW_AT_call_return_pc: 0x2b8
    <5ca>   DW_AT_sibling     : <0x5d9>
 <3><5ce>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5cf>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5d1>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><5d8>: Abbrev Number: 0
 <2><5d9>: Abbrev Number: 21 (DW_TAG_call_site)
    <5da>   DW_AT_call_return_pc: 0x2fe
    <5de>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <5e1>   DW_AT_sibling     : <0x5fd>
 <3><5e5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5e6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5e8>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5eb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5ec>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5ee>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><5f1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5f2>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <5f4>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><5f7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5f8>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <5fa>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><5fc>: Abbrev Number: 0
 <2><5fd>: Abbrev Number: 21 (DW_TAG_call_site)
    <5fe>   DW_AT_call_return_pc: 0x30c
    <602>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <605>   DW_AT_sibling     : <0x621>
 <3><609>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <60a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <60c>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><60f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <610>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <612>   DW_AT_call_value  : 2 byte block: 8 40 	(DW_OP_const1u: 64)
 <3><615>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <616>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <618>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><61b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <61c>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <61e>   DW_AT_call_value  : 1 byte block: 3a 	(DW_OP_lit10)
 <3><620>: Abbrev Number: 0
 <2><621>: Abbrev Number: 3 (DW_TAG_call_site)
    <622>   DW_AT_call_return_pc: 0x318
    <626>   DW_AT_sibling     : <0x63c>
 <3><62a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <62b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <62d>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><630>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <631>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <633>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><636>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <637>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <639>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><63b>: Abbrev Number: 0
 <2><63c>: Abbrev Number: 41 (DW_TAG_call_site)
    <63d>   DW_AT_call_return_pc: 0x32e
    <641>   DW_AT_call_target : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><644>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <645>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <647>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><64d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <64e>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <650>   DW_AT_call_value  : 4 byte block: 8 e1 3a 24 	(DW_OP_const1u: 225; DW_OP_lit10; DW_OP_shl)
 <3><655>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <656>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <658>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><65b>: Abbrev Number: 0
 <2><65c>: Abbrev Number: 0
 <1><65d>: Abbrev Number: 9 (DW_TAG_subprogram)
    <65e>   DW_AT_external    : 1
    <65e>   DW_AT_name        : (indirect string, offset: 0x2f4): process_points
    <662>   DW_AT_decl_file   : 1
    <662>   DW_AT_decl_line   : 75
    <663>   DW_AT_decl_column : 6
    <663>   DW_AT_prototyped  : 1
    <663>   DW_AT_low_pc      : 0x26c
    <667>   DW_AT_high_pc     : 0x28
    <66b>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <66d>   DW_AT_call_all_calls: 1
    <66d>   DW_AT_sibling     : <0x6b9>
 <2><671>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <672>   DW_AT_name        : (indirect string, offset: 0x1f7): scan_points
    <676>   DW_AT_decl_file   : 1
    <676>   DW_AT_decl_line   : 75
    <677>   DW_AT_decl_column : 31
    <678>   DW_AT_type        : <0x6b9>
    <67c>   DW_AT_location    : 0x22a (location list)
    <680>   DW_AT_GNU_locviews: 0x224
 <2><684>: Abbrev Number: 13 (DW_TAG_lexical_block)
    <685>   DW_AT_low_pc      : 0x270
    <689>   DW_AT_high_pc     : 0x1e
 <3><68d>: Abbrev Number: 15 (DW_TAG_variable)
    <68e>   DW_AT_name        : i
    <690>   DW_AT_decl_file   : 1
    <690>   DW_AT_decl_line   : 77
    <691>   DW_AT_decl_column : 10
    <692>   DW_AT_type        : <0x42>
    <696>   DW_AT_location    : 0x24c (location list)
    <69a>   DW_AT_GNU_locviews: 0x248
 <3><69e>: Abbrev Number: 10 (DW_TAG_call_site)
    <69f>   DW_AT_call_return_pc: 0x280
    <6a3>   DW_AT_call_origin : <0x193>
 <4><6a7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6a8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6aa>   DW_AT_call_value  : 5 byte block: 3 30 a 0 0 	(DW_OP_addr: a30)
 <4><6b0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6b1>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6b3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><6b6>: Abbrev Number: 0
 <3><6b7>: Abbrev Number: 0
 <2><6b8>: Abbrev Number: 0
 <1><6b9>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <6ba>   DW_AT_byte_size   : 4
    <6ba>   DW_AT_type        : <0xaf>
 <1><6be>: Abbrev Number: 0
  Compilation Unit @ offset 0x6bf:
   Length:        0x1b9 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x24d
   Pointer Size:  4
 <0><6cb>: Abbrev Number: 8 (DW_TAG_compile_unit)
    <6cc>   DW_AT_producer    : (indirect string, offset: 0x203): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <6d0>   DW_AT_language    : 29	(C11)
    <6d1>   DW_AT_name        : (indirect string, offset: 0x34d): src/main.c
    <6d5>   DW_AT_comp_dir    : (indirect string, offset: 0xf8): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <6d9>   DW_AT_ranges      : 0x6f
    <6dd>   DW_AT_low_pc      : 0
    <6e1>   DW_AT_stmt_list   : 0x462
 <1><6e5>: Abbrev Number: 1 (DW_TAG_base_type)
    <6e6>   DW_AT_byte_size   : 1
    <6e7>   DW_AT_encoding    : 6	(signed char)
    <6e8>   DW_AT_name        : (indirect string, offset: 0x167): signed char
 <1><6ec>: Abbrev Number: 1 (DW_TAG_base_type)
    <6ed>   DW_AT_byte_size   : 1
    <6ee>   DW_AT_encoding    : 8	(unsigned char)
    <6ef>   DW_AT_name        : (indirect string, offset: 0x165): unsigned char
 <1><6f3>: Abbrev Number: 1 (DW_TAG_base_type)
    <6f4>   DW_AT_byte_size   : 2
    <6f5>   DW_AT_encoding    : 5	(signed)
    <6f6>   DW_AT_name        : (indirect string, offset: 0x31): short int
 <1><6fa>: Abbrev Number: 1 (DW_TAG_base_type)
    <6fb>   DW_AT_byte_size   : 2
    <6fc>   DW_AT_encoding    : 7	(unsigned)
    <6fd>   DW_AT_name        : (indirect string, offset: 0x1a7): short unsigned int
 <1><701>: Abbrev Number: 1 (DW_TAG_base_type)
    <702>   DW_AT_byte_size   : 4
    <703>   DW_AT_encoding    : 5	(signed)
    <704>   DW_AT_name        : (indirect string, offset: 0xcf): long int
 <1><708>: Abbrev Number: 6 (DW_TAG_typedef)
    <709>   DW_AT_name        : (indirect string, offset: 0x48): __uint32_t
    <70d>   DW_AT_decl_file   : 2
    <70e>   DW_AT_decl_line   : 79
    <70f>   DW_AT_decl_column : 25
    <710>   DW_AT_type        : <0x714>
 <1><714>: Abbrev Number: 1 (DW_TAG_base_type)
    <715>   DW_AT_byte_size   : 4
    <716>   DW_AT_encoding    : 7	(unsigned)
    <717>   DW_AT_name        : (indirect string, offset: 0x182): long unsigned int
 <1><71b>: Abbrev Number: 1 (DW_TAG_base_type)
    <71c>   DW_AT_byte_size   : 8
    <71d>   DW_AT_encoding    : 5	(signed)
    <71e>   DW_AT_name        : (indirect string, offset: 0xca): long long int
 <1><722>: Abbrev Number: 1 (DW_TAG_base_type)
    <723>   DW_AT_byte_size   : 8
    <724>   DW_AT_encoding    : 7	(unsigned)
    <725>   DW_AT_name        : (indirect string, offset: 0x17d): long long unsigned int
 <1><729>: Abbrev Number: 9 (DW_TAG_base_type)
    <72a>   DW_AT_byte_size   : 4
    <72b>   DW_AT_encoding    : 5	(signed)
    <72c>   DW_AT_name        : int
 <1><730>: Abbrev Number: 1 (DW_TAG_base_type)
    <731>   DW_AT_byte_size   : 4
    <732>   DW_AT_encoding    : 7	(unsigned)
    <733>   DW_AT_name        : (indirect string, offset: 0x187): unsigned int
 <1><737>: Abbrev Number: 6 (DW_TAG_typedef)
    <738>   DW_AT_name        : (indirect string, offset: 0x4a): uint32_t
    <73c>   DW_AT_decl_file   : 3
    <73d>   DW_AT_decl_line   : 48
    <73e>   DW_AT_decl_column : 20
    <73f>   DW_AT_type        : <0x708>
 <1><743>: Abbrev Number: 1 (DW_TAG_base_type)
    <744>   DW_AT_byte_size   : 8
    <745>   DW_AT_encoding    : 4	(float)
    <746>   DW_AT_name        : (indirect string, offset: 0x159): long double
 <1><74a>: Abbrev Number: 3 (DW_TAG_subprogram)
    <74b>   DW_AT_external    : 1
    <74b>   DW_AT_name        : (indirect string, offset: 0x2a1): process_packets
    <74f>   DW_AT_decl_file   : 4
    <750>   DW_AT_decl_line   : 37
    <751>   DW_AT_decl_column : 6
    <751>   DW_AT_prototyped  : 1
    <751>   DW_AT_declaration : 1
 <1><751>: Abbrev Number: 3 (DW_TAG_subprogram)
    <752>   DW_AT_external    : 1
    <752>   DW_AT_name        : (indirect string, offset: 0x148): start_lidar_scan
    <756>   DW_AT_decl_file   : 4
    <757>   DW_AT_decl_line   : 35
    <758>   DW_AT_decl_column : 6
    <758>   DW_AT_prototyped  : 1
    <758>   DW_AT_declaration : 1
 <1><758>: Abbrev Number: 3 (DW_TAG_subprogram)
    <759>   DW_AT_external    : 1
    <759>   DW_AT_name        : (indirect string, offset: 0x1d0): clear_lidar_IO
    <75d>   DW_AT_decl_file   : 4
    <75e>   DW_AT_decl_line   : 38
    <75f>   DW_AT_decl_column : 6
    <75f>   DW_AT_prototyped  : 1
    <75f>   DW_AT_declaration : 1
 <1><75f>: Abbrev Number: 3 (DW_TAG_subprogram)
    <760>   DW_AT_external    : 1
    <760>   DW_AT_name        : (indirect string, offset: 0x2d0): stop_lidar_scan
    <764>   DW_AT_decl_file   : 4
    <765>   DW_AT_decl_line   : 36
    <766>   DW_AT_decl_column : 6
    <766>   DW_AT_prototyped  : 1
    <766>   DW_AT_declaration : 1
 <1><766>: Abbrev Number: 3 (DW_TAG_subprogram)
    <767>   DW_AT_external    : 1
    <767>   DW_AT_name        : (indirect string, offset: 0xa2): setup_lidar_comms
    <76b>   DW_AT_decl_file   : 4
    <76c>   DW_AT_decl_line   : 34
    <76d>   DW_AT_decl_column : 6
    <76d>   DW_AT_prototyped  : 1
    <76d>   DW_AT_declaration : 1
 <1><76d>: Abbrev Number: 10 (DW_TAG_subprogram)
    <76e>   DW_AT_external    : 1
    <76e>   DW_AT_name        : (indirect string, offset: 0x1c8): printlf
    <772>   DW_AT_decl_file   : 5
    <773>   DW_AT_decl_line   : 10
    <774>   DW_AT_decl_column : 6
    <775>   DW_AT_prototyped  : 1
    <775>   DW_AT_declaration : 1
    <775>   DW_AT_sibling     : <0x780>
 <2><779>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <77a>   DW_AT_type        : <0x780>
 <2><77e>: Abbrev Number: 12 (DW_TAG_unspecified_parameters)
 <2><77f>: Abbrev Number: 0
 <1><780>: Abbrev Number: 13 (DW_TAG_pointer_type)
    <781>   DW_AT_byte_size   : 4
    <782>   DW_AT_type        : <0x786>
 <1><786>: Abbrev Number: 1 (DW_TAG_base_type)
    <787>   DW_AT_byte_size   : 1
    <788>   DW_AT_encoding    : 8	(unsigned char)
    <789>   DW_AT_name        : (indirect string, offset: 0x16e): char
 <1><78d>: Abbrev Number: 3 (DW_TAG_subprogram)
    <78e>   DW_AT_external    : 1
    <78e>   DW_AT_name        : (indirect string, offset: 0x35d): setup_uart_printer
    <792>   DW_AT_decl_file   : 5
    <793>   DW_AT_decl_line   : 1
    <794>   DW_AT_decl_column : 6
    <794>   DW_AT_prototyped  : 1
    <794>   DW_AT_declaration : 1
 <1><794>: Abbrev Number: 14 (DW_TAG_subprogram)
    <795>   DW_AT_external    : 1
    <795>   DW_AT_name        : (indirect string, offset: 0x358): main
    <799>   DW_AT_decl_file   : 1
    <79a>   DW_AT_decl_line   : 20
    <79b>   DW_AT_decl_column : 5
    <79c>   DW_AT_prototyped  : 1
    <79c>   DW_AT_type        : <0x729>
    <7a0>   DW_AT_low_pc      : 0x5c0
    <7a4>   DW_AT_high_pc     : 0x6c
    <7a8>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <7aa>   DW_AT_call_all_calls: 1
 <2><7aa>: Abbrev Number: 7 (DW_TAG_call_site)
    <7ab>   DW_AT_call_return_pc: 0x5ce
    <7af>   DW_AT_sibling     : <0x7be>
 <3><7b3>: Abbrev Number: 2 (DW_TAG_call_site_parameter)
    <7b4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7b6>   DW_AT_call_value  : 6 byte block: 11 c0 8a 80 88 7c 	(DW_OP_consts: -1056963264)
 <3><7bd>: Abbrev Number: 0
 <2><7be>: Abbrev Number: 4 (DW_TAG_call_site)
    <7bf>   DW_AT_call_return_pc: 0x5d2
    <7c3>   DW_AT_call_origin : <0x78d>
 <2><7c7>: Abbrev Number: 5 (DW_TAG_call_site)
    <7c8>   DW_AT_call_return_pc: 0x5d8
    <7cc>   DW_AT_call_origin : <0x76d>
    <7d0>   DW_AT_sibling     : <0x7de>
 <3><7d4>: Abbrev Number: 2 (DW_TAG_call_site_parameter)
    <7d5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7d7>   DW_AT_call_value  : 5 byte block: 3 48 a 0 0 	(DW_OP_addr: a48)
 <3><7dd>: Abbrev Number: 0
 <2><7de>: Abbrev Number: 4 (DW_TAG_call_site)
    <7df>   DW_AT_call_return_pc: 0x5dc
    <7e3>   DW_AT_call_origin : <0x766>
 <2><7e7>: Abbrev Number: 5 (DW_TAG_call_site)
    <7e8>   DW_AT_call_return_pc: 0x5e2
    <7ec>   DW_AT_call_origin : <0x76d>
    <7f0>   DW_AT_sibling     : <0x7fe>
 <3><7f4>: Abbrev Number: 2 (DW_TAG_call_site_parameter)
    <7f5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7f7>   DW_AT_call_value  : 5 byte block: 3 5c a 0 0 	(DW_OP_addr: a5c)
 <3><7fd>: Abbrev Number: 0
 <2><7fe>: Abbrev Number: 4 (DW_TAG_call_site)
    <7ff>   DW_AT_call_return_pc: 0x5e6
    <803>   DW_AT_call_origin : <0x75f>
 <2><807>: Abbrev Number: 5 (DW_TAG_call_site)
    <808>   DW_AT_call_return_pc: 0x5ec
    <80c>   DW_AT_call_origin : <0x76d>
    <810>   DW_AT_sibling     : <0x81e>
 <3><814>: Abbrev Number: 2 (DW_TAG_call_site_parameter)
    <815>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <817>   DW_AT_call_value  : 5 byte block: 3 74 a 0 0 	(DW_OP_addr: a74)
 <3><81d>: Abbrev Number: 0
 <2><81e>: Abbrev Number: 7 (DW_TAG_call_site)
    <81f>   DW_AT_call_return_pc: 0x5f6
    <823>   DW_AT_sibling     : <0x831>
 <3><827>: Abbrev Number: 2 (DW_TAG_call_site_parameter)
    <828>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <82a>   DW_AT_call_value  : 5 byte block: c 40 42 f 0 	(DW_OP_const4u: 1000000)
 <3><830>: Abbrev Number: 0
 <2><831>: Abbrev Number: 4 (DW_TAG_call_site)
    <832>   DW_AT_call_return_pc: 0x5fa
    <836>   DW_AT_call_origin : <0x758>
 <2><83a>: Abbrev Number: 5 (DW_TAG_call_site)
    <83b>   DW_AT_call_return_pc: 0x600
    <83f>   DW_AT_call_origin : <0x76d>
    <843>   DW_AT_sibling     : <0x851>
 <3><847>: Abbrev Number: 2 (DW_TAG_call_site_parameter)
    <848>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <84a>   DW_AT_call_value  : 5 byte block: 3 8c a 0 0 	(DW_OP_addr: a8c)
 <3><850>: Abbrev Number: 0
 <2><851>: Abbrev Number: 4 (DW_TAG_call_site)
    <852>   DW_AT_call_return_pc: 0x604
    <856>   DW_AT_call_origin : <0x751>
 <2><85a>: Abbrev Number: 5 (DW_TAG_call_site)
    <85b>   DW_AT_call_return_pc: 0x60a
    <85f>   DW_AT_call_origin : <0x76d>
    <863>   DW_AT_sibling     : <0x871>
 <3><867>: Abbrev Number: 2 (DW_TAG_call_site_parameter)
    <868>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <86a>   DW_AT_call_value  : 5 byte block: 3 9c a 0 0 	(DW_OP_addr: a9c)
 <3><870>: Abbrev Number: 0
 <2><871>: Abbrev Number: 4 (DW_TAG_call_site)
    <872>   DW_AT_call_return_pc: 0x60e
    <876>   DW_AT_call_origin : <0x74a>
 <2><87a>: Abbrev Number: 0
 <1><87b>: Abbrev Number: 0
  Compilation Unit @ offset 0x87c:
   Length:        0x17a (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x305
   Pointer Size:  4
 <0><888>: Abbrev Number: 4 (DW_TAG_compile_unit)
    <889>   DW_AT_producer    : (indirect string, offset: 0x203): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <88d>   DW_AT_language    : 29	(C11)
    <88e>   DW_AT_name        : (indirect string, offset: 0x39c): src/timers.c
    <892>   DW_AT_comp_dir    : (indirect string, offset: 0xf8): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <896>   DW_AT_ranges      : 0x82
    <89a>   DW_AT_low_pc      : 0
    <89e>   DW_AT_stmt_list   : 0x535
 <1><8a2>: Abbrev Number: 1 (DW_TAG_base_type)
    <8a3>   DW_AT_byte_size   : 1
    <8a4>   DW_AT_encoding    : 6	(signed char)
    <8a5>   DW_AT_name        : (indirect string, offset: 0x167): signed char
 <1><8a9>: Abbrev Number: 1 (DW_TAG_base_type)
    <8aa>   DW_AT_byte_size   : 1
    <8ab>   DW_AT_encoding    : 8	(unsigned char)
    <8ac>   DW_AT_name        : (indirect string, offset: 0x165): unsigned char
 <1><8b0>: Abbrev Number: 1 (DW_TAG_base_type)
    <8b1>   DW_AT_byte_size   : 2
    <8b2>   DW_AT_encoding    : 5	(signed)
    <8b3>   DW_AT_name        : (indirect string, offset: 0x31): short int
 <1><8b7>: Abbrev Number: 1 (DW_TAG_base_type)
    <8b8>   DW_AT_byte_size   : 2
    <8b9>   DW_AT_encoding    : 7	(unsigned)
    <8ba>   DW_AT_name        : (indirect string, offset: 0x1a7): short unsigned int
 <1><8be>: Abbrev Number: 2 (DW_TAG_typedef)
    <8bf>   DW_AT_name        : (indirect string, offset: 0x2c6): __int32_t
    <8c3>   DW_AT_decl_file   : 2
    <8c4>   DW_AT_decl_line   : 77
    <8c5>   DW_AT_decl_column : 24
    <8c6>   DW_AT_type        : <0x8ca>
 <1><8ca>: Abbrev Number: 1 (DW_TAG_base_type)
    <8cb>   DW_AT_byte_size   : 4
    <8cc>   DW_AT_encoding    : 5	(signed)
    <8cd>   DW_AT_name        : (indirect string, offset: 0xcf): long int
 <1><8d1>: Abbrev Number: 2 (DW_TAG_typedef)
    <8d2>   DW_AT_name        : (indirect string, offset: 0x48): __uint32_t
    <8d6>   DW_AT_decl_file   : 2
    <8d7>   DW_AT_decl_line   : 79
    <8d8>   DW_AT_decl_column : 25
    <8d9>   DW_AT_type        : <0x8dd>
 <1><8dd>: Abbrev Number: 1 (DW_TAG_base_type)
    <8de>   DW_AT_byte_size   : 4
    <8df>   DW_AT_encoding    : 7	(unsigned)
    <8e0>   DW_AT_name        : (indirect string, offset: 0x182): long unsigned int
 <1><8e4>: Abbrev Number: 1 (DW_TAG_base_type)
    <8e5>   DW_AT_byte_size   : 8
    <8e6>   DW_AT_encoding    : 5	(signed)
    <8e7>   DW_AT_name        : (indirect string, offset: 0xca): long long int
 <1><8eb>: Abbrev Number: 2 (DW_TAG_typedef)
    <8ec>   DW_AT_name        : (indirect string, offset: 0x3ef): __uint64_t
    <8f0>   DW_AT_decl_file   : 2
    <8f1>   DW_AT_decl_line   : 105
    <8f2>   DW_AT_decl_column : 25
    <8f3>   DW_AT_type        : <0x8f7>
 <1><8f7>: Abbrev Number: 1 (DW_TAG_base_type)
    <8f8>   DW_AT_byte_size   : 8
    <8f9>   DW_AT_encoding    : 7	(unsigned)
    <8fa>   DW_AT_name        : (indirect string, offset: 0x17d): long long unsigned int
 <1><8fe>: Abbrev Number: 5 (DW_TAG_base_type)
    <8ff>   DW_AT_byte_size   : 4
    <900>   DW_AT_encoding    : 5	(signed)
    <901>   DW_AT_name        : int
 <1><905>: Abbrev Number: 1 (DW_TAG_base_type)
    <906>   DW_AT_byte_size   : 4
    <907>   DW_AT_encoding    : 7	(unsigned)
    <908>   DW_AT_name        : (indirect string, offset: 0x187): unsigned int
 <1><90c>: Abbrev Number: 2 (DW_TAG_typedef)
    <90d>   DW_AT_name        : (indirect string, offset: 0x2c8): int32_t
    <911>   DW_AT_decl_file   : 3
    <912>   DW_AT_decl_line   : 44
    <913>   DW_AT_decl_column : 19
    <914>   DW_AT_type        : <0x8be>
 <1><918>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <919>   DW_AT_type        : <0x90c>
 <1><91d>: Abbrev Number: 2 (DW_TAG_typedef)
    <91e>   DW_AT_name        : (indirect string, offset: 0x4a): uint32_t
    <922>   DW_AT_decl_file   : 3
    <923>   DW_AT_decl_line   : 48
    <924>   DW_AT_decl_column : 20
    <925>   DW_AT_type        : <0x8d1>
 <1><929>: Abbrev Number: 2 (DW_TAG_typedef)
    <92a>   DW_AT_name        : (indirect string, offset: 0x3f1): uint64_t
    <92e>   DW_AT_decl_file   : 3
    <92f>   DW_AT_decl_line   : 60
    <930>   DW_AT_decl_column : 20
    <931>   DW_AT_type        : <0x8eb>
 <1><935>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <936>   DW_AT_type        : <0x929>
 <1><93a>: Abbrev Number: 6 (DW_TAG_variable)
    <93b>   DW_AT_name        : (indirect string, offset: 0x3a9): uptime_seconds
    <93f>   DW_AT_decl_file   : 4
    <940>   DW_AT_decl_line   : 4
    <941>   DW_AT_decl_column : 25
    <942>   DW_AT_type        : <0x918>
    <946>   DW_AT_external    : 1
    <946>   DW_AT_declaration : 1
 <1><946>: Abbrev Number: 7 (DW_TAG_variable)
    <947>   DW_AT_specification: <0x93a>
    <94b>   DW_AT_decl_file   : 1
    <94c>   DW_AT_decl_line   : 11
    <94d>   DW_AT_decl_column : 18
    <94e>   DW_AT_location    : 5 byte block: 3 0 3 0 20 	(DW_OP_addr: 20000300)
 <1><954>: Abbrev Number: 8 (DW_TAG_variable)
    <955>   DW_AT_name        : (indirect string, offset: 0x3b8): timer1_overflow_count
    <959>   DW_AT_decl_file   : 1
    <95a>   DW_AT_decl_line   : 12
    <95b>   DW_AT_decl_column : 19
    <95c>   DW_AT_type        : <0x935>
    <960>   DW_AT_external    : 1
    <960>   DW_AT_location    : 5 byte block: 3 f8 2 0 20 	(DW_OP_addr: 200002f8)
 <1><966>: Abbrev Number: 9 (DW_TAG_subprogram)
    <967>   DW_AT_external    : 1
    <967>   DW_AT_name        : (indirect string, offset: 0x37f): get_uptime_cycles
    <96b>   DW_AT_decl_file   : 1
    <96c>   DW_AT_decl_line   : 52
    <96d>   DW_AT_decl_column : 10
    <96e>   DW_AT_prototyped  : 1
    <96e>   DW_AT_type        : <0x929>
    <972>   DW_AT_low_pc      : 0
    <976>   DW_AT_high_pc     : 0x58
    <97a>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <97c>   DW_AT_call_all_tail_calls: 1
    <97c>   DW_AT_sibling     : <0x9aa>
 <2><980>: Abbrev Number: 10 (DW_TAG_variable)
    <981>   DW_AT_name        : (indirect string, offset: 0x3dc): overflow_count_now
    <985>   DW_AT_decl_file   : 1
    <986>   DW_AT_decl_line   : 53
    <987>   DW_AT_decl_column : 11
    <988>   DW_AT_type        : <0x929>
    <98c>   DW_AT_location    : 0x26d (location list)
    <990>   DW_AT_GNU_locviews: 0x269
 <2><994>: Abbrev Number: 11 (DW_TAG_variable)
    <995>   DW_AT_name        : (indirect string, offset: 0x391): cycles_now
    <999>   DW_AT_decl_file   : 1
    <99a>   DW_AT_decl_line   : 54
    <99b>   DW_AT_decl_column : 11
    <99c>   DW_AT_type        : <0x929>
 <2><9a0>: Abbrev Number: 12 (DW_TAG_call_site)
    <9a1>   DW_AT_call_return_pc: 0
    <9a5>   DW_AT_call_origin : <0x9aa>
 <2><9a9>: Abbrev Number: 0
 <1><9aa>: Abbrev Number: 13 (DW_TAG_subprogram)
    <9ab>   DW_AT_external    : 1
    <9ab>   DW_AT_name        : (indirect string, offset: 0x3ce): timeKeeperISR
    <9af>   DW_AT_decl_file   : 1
    <9b0>   DW_AT_decl_line   : 34
    <9b1>   DW_AT_decl_column : 6
    <9b2>   DW_AT_prototyped  : 1
    <9b2>   DW_AT_low_pc      : 0x62c
    <9b6>   DW_AT_high_pc     : 0x64
    <9ba>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <9bc>   DW_AT_call_all_calls: 1
    <9bc>   DW_AT_sibling     : <0x9e0>
 <2><9c0>: Abbrev Number: 14 (DW_TAG_variable)
    <9c1>   DW_AT_name        : (indirect string, offset: 0x370): second_counter
    <9c5>   DW_AT_decl_file   : 1
    <9c6>   DW_AT_decl_line   : 35
    <9c7>   DW_AT_decl_column : 14
    <9c8>   DW_AT_type        : <0x9e0>
    <9cc>   DW_AT_location    : 5 byte block: 3 f0 2 0 20 	(DW_OP_addr: 200002f0)
 <2><9d2>: Abbrev Number: 15 (DW_TAG_variable)
    <9d3>   DW_AT_name        : (indirect string, offset: 0x3fa): sonic_sensor_action_div
    <9d7>   DW_AT_decl_file   : 1
    <9d8>   DW_AT_decl_line   : 36
    <9d9>   DW_AT_decl_column : 14
    <9da>   DW_AT_type        : <0x9e0>
    <9de>   DW_AT_const_value : 0
 <2><9df>: Abbrev Number: 0
 <1><9e0>: Abbrev Number: 1 (DW_TAG_base_type)
    <9e1>   DW_AT_byte_size   : 1
    <9e2>   DW_AT_encoding    : 8	(unsigned char)
    <9e3>   DW_AT_name        : (indirect string, offset: 0x16e): char
 <1><9e7>: Abbrev Number: 16 (DW_TAG_subprogram)
    <9e8>   DW_AT_external    : 1
    <9e8>   DW_AT_name        : (indirect string, offset: 0x412): configureDebounceTimer
    <9ec>   DW_AT_decl_file   : 1
    <9ed>   DW_AT_decl_line   : 16
    <9ee>   DW_AT_decl_column : 6
    <9ef>   DW_AT_prototyped  : 1
    <9ef>   DW_AT_low_pc      : 0
    <9f3>   DW_AT_high_pc     : 0x7c
    <9f7>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <9f9>   DW_AT_call_all_tail_calls: 1
 <1><9f9>: Abbrev Number: 0
  Compilation Unit @ offset 0x9fa:
   Length:        0x531 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x419
   Pointer Size:  4
 <0><a06>: Abbrev Number: 20 (DW_TAG_compile_unit)
    <a07>   DW_AT_producer    : (indirect string, offset: 0x203): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <a0b>   DW_AT_language    : 29	(C11)
    <a0c>   DW_AT_name        : (indirect string, offset: 0x48a): src/uart_print.c
    <a10>   DW_AT_comp_dir    : (indirect string, offset: 0xf8): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <a14>   DW_AT_ranges      : 0xb0
    <a18>   DW_AT_low_pc      : 0
    <a1c>   DW_AT_stmt_list   : 0x729
 <1><a20>: Abbrev Number: 2 (DW_TAG_base_type)
    <a21>   DW_AT_byte_size   : 4
    <a22>   DW_AT_encoding    : 4	(float)
    <a23>   DW_AT_name        : (indirect string, offset: 0x484): float
 <1><a27>: Abbrev Number: 2 (DW_TAG_base_type)
    <a28>   DW_AT_byte_size   : 8
    <a29>   DW_AT_encoding    : 7	(unsigned)
    <a2a>   DW_AT_name        : (indirect string, offset: 0x17d): long long unsigned int
 <1><a2e>: Abbrev Number: 2 (DW_TAG_base_type)
    <a2f>   DW_AT_byte_size   : 1
    <a30>   DW_AT_encoding    : 8	(unsigned char)
    <a31>   DW_AT_name        : (indirect string, offset: 0x165): unsigned char
 <1><a35>: Abbrev Number: 5 (DW_TAG_typedef)
    <a36>   DW_AT_name        : (indirect string, offset: 0x462): __gnuc_va_list
    <a3a>   DW_AT_decl_file   : 2
    <a3b>   DW_AT_decl_line   : 40
    <a3c>   DW_AT_decl_column : 27
    <a3d>   DW_AT_type        : <0xa41>
 <1><a41>: Abbrev Number: 21 (DW_TAG_structure_type)
    <a42>   DW_AT_name        : (indirect string, offset: 0x4df): __va_list
    <a46>   DW_AT_byte_size   : 4
    <a47>   DW_AT_decl_file   : 5
    <a48>   DW_AT_decl_line   : 0
    <a49>   DW_AT_sibling     : <0xa58>
 <2><a4d>: Abbrev Number: 22 (DW_TAG_member)
    <a4e>   DW_AT_name        : (indirect string, offset: 0x4c7): __ap
    <a52>   DW_AT_type        : <0xa58>
    <a56>   DW_AT_data_member_location: 0
    <a57>   DW_AT_artificial  : 1
 <2><a57>: Abbrev Number: 0
 <1><a58>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <a59>   DW_AT_byte_size   : 4
 <1><a5a>: Abbrev Number: 5 (DW_TAG_typedef)
    <a5b>   DW_AT_name        : (indirect string, offset: 0x4e1): va_list
    <a5f>   DW_AT_decl_file   : 2
    <a60>   DW_AT_decl_line   : 103
    <a61>   DW_AT_decl_column : 24
    <a62>   DW_AT_type        : <0xa35>
 <1><a66>: Abbrev Number: 2 (DW_TAG_base_type)
    <a67>   DW_AT_byte_size   : 1
    <a68>   DW_AT_encoding    : 6	(signed char)
    <a69>   DW_AT_name        : (indirect string, offset: 0x167): signed char
 <1><a6d>: Abbrev Number: 2 (DW_TAG_base_type)
    <a6e>   DW_AT_byte_size   : 2
    <a6f>   DW_AT_encoding    : 5	(signed)
    <a70>   DW_AT_name        : (indirect string, offset: 0x31): short int
 <1><a74>: Abbrev Number: 2 (DW_TAG_base_type)
    <a75>   DW_AT_byte_size   : 2
    <a76>   DW_AT_encoding    : 7	(unsigned)
    <a77>   DW_AT_name        : (indirect string, offset: 0x1a7): short unsigned int
 <1><a7b>: Abbrev Number: 5 (DW_TAG_typedef)
    <a7c>   DW_AT_name        : (indirect string, offset: 0x2c6): __int32_t
    <a80>   DW_AT_decl_file   : 3
    <a81>   DW_AT_decl_line   : 77
    <a82>   DW_AT_decl_column : 24
    <a83>   DW_AT_type        : <0xa87>
 <1><a87>: Abbrev Number: 2 (DW_TAG_base_type)
    <a88>   DW_AT_byte_size   : 4
    <a89>   DW_AT_encoding    : 5	(signed)
    <a8a>   DW_AT_name        : (indirect string, offset: 0xcf): long int
 <1><a8e>: Abbrev Number: 5 (DW_TAG_typedef)
    <a8f>   DW_AT_name        : (indirect string, offset: 0x48): __uint32_t
    <a93>   DW_AT_decl_file   : 3
    <a94>   DW_AT_decl_line   : 79
    <a95>   DW_AT_decl_column : 25
    <a96>   DW_AT_type        : <0xa9a>
 <1><a9a>: Abbrev Number: 2 (DW_TAG_base_type)
    <a9b>   DW_AT_byte_size   : 4
    <a9c>   DW_AT_encoding    : 7	(unsigned)
    <a9d>   DW_AT_name        : (indirect string, offset: 0x182): long unsigned int
 <1><aa1>: Abbrev Number: 2 (DW_TAG_base_type)
    <aa2>   DW_AT_byte_size   : 8
    <aa3>   DW_AT_encoding    : 5	(signed)
    <aa4>   DW_AT_name        : (indirect string, offset: 0xca): long long int
 <1><aa8>: Abbrev Number: 24 (DW_TAG_base_type)
    <aa9>   DW_AT_byte_size   : 4
    <aaa>   DW_AT_encoding    : 5	(signed)
    <aab>   DW_AT_name        : int
 <1><aaf>: Abbrev Number: 2 (DW_TAG_base_type)
    <ab0>   DW_AT_byte_size   : 4
    <ab1>   DW_AT_encoding    : 7	(unsigned)
    <ab2>   DW_AT_name        : (indirect string, offset: 0x187): unsigned int
 <1><ab6>: Abbrev Number: 5 (DW_TAG_typedef)
    <ab7>   DW_AT_name        : (indirect string, offset: 0x2c8): int32_t
    <abb>   DW_AT_decl_file   : 4
    <abc>   DW_AT_decl_line   : 44
    <abd>   DW_AT_decl_column : 19
    <abe>   DW_AT_type        : <0xa7b>
 <1><ac2>: Abbrev Number: 5 (DW_TAG_typedef)
    <ac3>   DW_AT_name        : (indirect string, offset: 0x4a): uint32_t
    <ac7>   DW_AT_decl_file   : 4
    <ac8>   DW_AT_decl_line   : 48
    <ac9>   DW_AT_decl_column : 20
    <aca>   DW_AT_type        : <0xa8e>
 <1><ace>: Abbrev Number: 6 (DW_TAG_subprogram)
    <acf>   DW_AT_external    : 1
    <acf>   DW_AT_name        : (indirect string, offset: 0x1c8): printlf
    <ad3>   DW_AT_decl_file   : 1
    <ad3>   DW_AT_decl_line   : 116
    <ad4>   DW_AT_decl_column : 6
    <ad4>   DW_AT_prototyped  : 1
    <ad4>   DW_AT_low_pc      : 0x8ec
    <ad8>   DW_AT_high_pc     : 0xea
    <adc>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <ade>   DW_AT_call_all_calls: 1
    <ade>   DW_AT_sibling     : <0xba9>
 <2><ae2>: Abbrev Number: 25 (DW_TAG_formal_parameter)
    <ae3>   DW_AT_name        : (indirect string, offset: 0x49b): format
    <ae7>   DW_AT_decl_file   : 1
    <ae8>   DW_AT_decl_line   : 116
    <ae9>   DW_AT_decl_column : 19
    <aea>   DW_AT_type        : <0xba9>
    <aee>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><af1>: Abbrev Number: 26 (DW_TAG_unspecified_parameters)
 <2><af2>: Abbrev Number: 11 (DW_TAG_variable)
    <af3>   DW_AT_name        : (indirect string, offset: 0x4e9): args
    <af7>   DW_AT_decl_file   : 1
    <af7>   DW_AT_decl_line   : 117
    <af8>   DW_AT_decl_column : 10
    <af9>   DW_AT_type        : <0xa5a>
    <afd>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><b00>: Abbrev Number: 14 (DW_TAG_variable)
    <b01>   DW_AT_name        : str
    <b05>   DW_AT_decl_file   : 1
    <b05>   DW_AT_decl_line   : 120
    <b06>   DW_AT_decl_column : 8
    <b07>   DW_AT_type        : <0xba9>
 <2><b0b>: Abbrev Number: 14 (DW_TAG_variable)
    <b0c>   DW_AT_name        : num
    <b10>   DW_AT_decl_file   : 1
    <b10>   DW_AT_decl_line   : 121
    <b11>   DW_AT_decl_column : 10
    <b12>   DW_AT_type        : <0xab6>
 <2><b16>: Abbrev Number: 27 (DW_TAG_variable)
    <b17>   DW_AT_name        : (indirect string, offset: 0x471): numu
    <b1b>   DW_AT_decl_file   : 1
    <b1c>   DW_AT_decl_line   : 122
    <b1d>   DW_AT_decl_column : 11
    <b1e>   DW_AT_type        : <0xac2>
 <2><b22>: Abbrev Number: 11 (DW_TAG_variable)
    <b23>   DW_AT_name        : (indirect string, offset: 0x4da): numf
    <b27>   DW_AT_decl_file   : 1
    <b27>   DW_AT_decl_line   : 123
    <b28>   DW_AT_decl_column : 9
    <b29>   DW_AT_type        : <0xbba>
    <b2d>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
 <2><b2f>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <b30>   DW_AT_low_pc      : 0x8fa
    <b34>   DW_AT_high_pc     : 0xd2
 <3><b38>: Abbrev Number: 8 (DW_TAG_variable)
    <b39>   DW_AT_name        : i
    <b3b>   DW_AT_decl_file   : 1
    <b3b>   DW_AT_decl_line   : 125
    <b3c>   DW_AT_decl_column : 10
    <b3d>   DW_AT_type        : <0xaa8>
    <b41>   DW_AT_location    : 0x2a1 (location list)
    <b45>   DW_AT_GNU_locviews: 0x293
 <3><b49>: Abbrev Number: 3 (DW_TAG_call_site)
    <b4a>   DW_AT_call_return_pc: 0x90a
    <b4e>   DW_AT_call_origin : <0xd1f>
 <3><b52>: Abbrev Number: 3 (DW_TAG_call_site)
    <b53>   DW_AT_call_return_pc: 0x91a
    <b57>   DW_AT_call_origin : <0xcd3>
 <3><b5b>: Abbrev Number: 4 (DW_TAG_call_site)
    <b5c>   DW_AT_call_return_pc: 0x924
    <b60>   DW_AT_call_origin : <0xde4>
    <b64>   DW_AT_sibling     : <0xb6f>
 <4><b68>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b69>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b6b>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><b6e>: Abbrev Number: 0
 <3><b6f>: Abbrev Number: 3 (DW_TAG_call_site)
    <b70>   DW_AT_call_return_pc: 0x932
    <b74>   DW_AT_call_origin : <0xd8e>
 <3><b78>: Abbrev Number: 3 (DW_TAG_call_site)
    <b79>   DW_AT_call_return_pc: 0x946
    <b7d>   DW_AT_call_origin : <0xbbf>
 <3><b81>: Abbrev Number: 4 (DW_TAG_call_site)
    <b82>   DW_AT_call_return_pc: 0x950
    <b86>   DW_AT_call_origin : <0xde4>
    <b8a>   DW_AT_sibling     : <0xb95>
 <4><b8e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b8f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b91>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><b94>: Abbrev Number: 0
 <3><b95>: Abbrev Number: 3 (DW_TAG_call_site)
    <b96>   DW_AT_call_return_pc: 0x956
    <b9a>   DW_AT_call_origin : <0xde4>
 <3><b9e>: Abbrev Number: 3 (DW_TAG_call_site)
    <b9f>   DW_AT_call_return_pc: 0x95e
    <ba3>   DW_AT_call_origin : <0xde4>
 <3><ba7>: Abbrev Number: 0
 <2><ba8>: Abbrev Number: 0
 <1><ba9>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <baa>   DW_AT_byte_size   : 4
    <baa>   DW_AT_type        : <0xbae>
 <1><bae>: Abbrev Number: 2 (DW_TAG_base_type)
    <baf>   DW_AT_byte_size   : 1
    <bb0>   DW_AT_encoding    : 8	(unsigned char)
    <bb1>   DW_AT_name        : (indirect string, offset: 0x16e): char
 <1><bb5>: Abbrev Number: 16 (DW_TAG_const_type)
    <bb6>   DW_AT_type        : <0xbae>
 <1><bba>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <bbb>   DW_AT_byte_size   : 4
    <bbb>   DW_AT_type        : <0xa20>
 <1><bbf>: Abbrev Number: 6 (DW_TAG_subprogram)
    <bc0>   DW_AT_external    : 1
    <bc0>   DW_AT_name        : (indirect string, offset: 0x47e): print_float
    <bc4>   DW_AT_decl_file   : 1
    <bc4>   DW_AT_decl_line   : 73
    <bc5>   DW_AT_decl_column : 6
    <bc5>   DW_AT_prototyped  : 1
    <bc5>   DW_AT_low_pc      : 0x7cc
    <bc9>   DW_AT_high_pc     : 0x120
    <bcd>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <bcf>   DW_AT_call_all_calls: 1
    <bcf>   DW_AT_sibling     : <0xcc3>
 <2><bd3>: Abbrev Number: 28 (DW_TAG_formal_parameter)
    <bd4>   DW_AT_name        : (indirect string, offset: 0x4d3): number
    <bd8>   DW_AT_decl_file   : 1
    <bd9>   DW_AT_decl_line   : 73
    <bda>   DW_AT_decl_column : 24
    <bdb>   DW_AT_type        : <0xa20>
    <bdf>   DW_AT_location    : 0x2e2 (location list)
    <be3>   DW_AT_GNU_locviews: 0x2ce
 <2><be7>: Abbrev Number: 17 (DW_TAG_variable)
    <be8>   DW_AT_name        : buf
    <bec>   DW_AT_decl_file   : 1
    <bec>   DW_AT_decl_line   : 90
    <bed>   DW_AT_decl_column : 7
    <bed>   DW_AT_type        : <0xcc3>
    <bf1>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><bf4>: Abbrev Number: 9 (DW_TAG_variable)
    <bf5>   DW_AT_name        : (indirect string, offset: 0x429): integerPart
    <bf9>   DW_AT_decl_file   : 1
    <bf9>   DW_AT_decl_line   : 97
    <bfa>   DW_AT_decl_column : 11
    <bfb>   DW_AT_type        : <0xac2>
    <bff>   DW_AT_location    : 0x34a (location list)
    <c03>   DW_AT_GNU_locviews: 0x346
 <2><c07>: Abbrev Number: 9 (DW_TAG_variable)
    <c08>   DW_AT_name        : (indirect string, offset: 0x456): decimalPart
    <c0c>   DW_AT_decl_file   : 1
    <c0c>   DW_AT_decl_line   : 98
    <c0d>   DW_AT_decl_column : 11
    <c0e>   DW_AT_type        : <0xac2>
    <c12>   DW_AT_location    : 0x363 (location list)
    <c16>   DW_AT_GNU_locviews: 0x35d
 <2><c1a>: Abbrev Number: 9 (DW_TAG_variable)
    <c1b>   DW_AT_name        : (indirect string, offset: 0x4cc): places
    <c1f>   DW_AT_decl_file   : 1
    <c1f>   DW_AT_decl_line   : 100
    <c20>   DW_AT_decl_column : 6
    <c21>   DW_AT_type        : <0xaa8>
    <c25>   DW_AT_location    : 0x386 (location list)
    <c29>   DW_AT_GNU_locviews: 0x378
 <2><c2d>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <c2e>   DW_AT_ranges      : 0xa1
    <c32>   DW_AT_sibling     : <0xc48>
 <3><c36>: Abbrev Number: 8 (DW_TAG_variable)
    <c37>   DW_AT_name        : i
    <c39>   DW_AT_decl_file   : 1
    <c39>   DW_AT_decl_line   : 102
    <c3a>   DW_AT_decl_column : 10
    <c3b>   DW_AT_type        : <0xaa8>
    <c3f>   DW_AT_location    : 0x3bb (location list)
    <c43>   DW_AT_GNU_locviews: 0x3b7
 <3><c47>: Abbrev Number: 0
 <2><c48>: Abbrev Number: 4 (DW_TAG_call_site)
    <c49>   DW_AT_call_return_pc: 0x854
    <c4d>   DW_AT_call_origin : <0xd8e>
    <c51>   DW_AT_sibling     : <0xc5f>
 <3><c55>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c56>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c58>   DW_AT_call_value  : 5 byte block: 3 a8 a 0 0 	(DW_OP_addr: aa8)
 <3><c5e>: Abbrev Number: 0
 <2><c5f>: Abbrev Number: 4 (DW_TAG_call_site)
    <c60>   DW_AT_call_return_pc: 0x85c
    <c64>   DW_AT_call_origin : <0xd8e>
    <c68>   DW_AT_sibling     : <0xc76>
 <3><c6c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c6d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c6f>   DW_AT_call_value  : 5 byte block: 3 ac a 0 0 	(DW_OP_addr: aac)
 <3><c75>: Abbrev Number: 0
 <2><c76>: Abbrev Number: 4 (DW_TAG_call_site)
    <c77>   DW_AT_call_return_pc: 0x86a
    <c7b>   DW_AT_call_origin : <0xd8e>
    <c7f>   DW_AT_sibling     : <0xc8d>
 <3><c83>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c84>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c86>   DW_AT_call_value  : 5 byte block: 3 b0 a 0 0 	(DW_OP_addr: ab0)
 <3><c8c>: Abbrev Number: 0
 <2><c8d>: Abbrev Number: 4 (DW_TAG_call_site)
    <c8e>   DW_AT_call_return_pc: 0x872
    <c92>   DW_AT_call_origin : <0xde4>
    <c96>   DW_AT_sibling     : <0xca1>
 <3><c9a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c9b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c9d>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><ca0>: Abbrev Number: 0
 <2><ca1>: Abbrev Number: 3 (DW_TAG_call_site)
    <ca2>   DW_AT_call_return_pc: 0x8b8
    <ca6>   DW_AT_call_origin : <0xd1f>
 <2><caa>: Abbrev Number: 13 (DW_TAG_call_site)
    <cab>   DW_AT_call_return_pc: 0x8ca
    <caf>   DW_AT_call_origin : <0xde4>
 <3><cb3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <cb4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <cb6>   DW_AT_call_value  : 10 byte block: 91 0 74 0 22 8 20 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_const1u: 32; DW_OP_minus; DW_OP_deref_size: 1)
 <3><cc1>: Abbrev Number: 0
 <2><cc2>: Abbrev Number: 0
 <1><cc3>: Abbrev Number: 18 (DW_TAG_array_type)
    <cc4>   DW_AT_type        : <0xbae>
    <cc8>   DW_AT_sibling     : <0xcd3>
 <2><ccc>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <ccd>   DW_AT_type        : <0xaaf>
    <cd1>   DW_AT_upper_bound : 14
 <2><cd2>: Abbrev Number: 0
 <1><cd3>: Abbrev Number: 6 (DW_TAG_subprogram)
    <cd4>   DW_AT_external    : 1
    <cd4>   DW_AT_name        : (indirect string, offset: 0x4b9): print_decimal
    <cd8>   DW_AT_decl_file   : 1
    <cd8>   DW_AT_decl_line   : 63
    <cd9>   DW_AT_decl_column : 6
    <cd9>   DW_AT_prototyped  : 1
    <cd9>   DW_AT_low_pc      : 0x7b4
    <cdd>   DW_AT_high_pc     : 0x18
    <ce1>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <ce3>   DW_AT_call_all_calls: 1
    <ce3>   DW_AT_sibling     : <0xd1f>
 <2><ce7>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <ce8>   DW_AT_name        : num
    <cec>   DW_AT_decl_file   : 1
    <cec>   DW_AT_decl_line   : 63
    <ced>   DW_AT_decl_column : 28
    <cee>   DW_AT_type        : <0xab6>
    <cf2>   DW_AT_location    : 0x3d4 (location list)
    <cf6>   DW_AT_GNU_locviews: 0x3cc
 <2><cfa>: Abbrev Number: 4 (DW_TAG_call_site)
    <cfb>   DW_AT_call_return_pc: 0x7c0
    <cff>   DW_AT_call_origin : <0xd1f>
    <d03>   DW_AT_sibling     : <0xd0e>
 <3><d07>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <d08>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <d0a>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><d0d>: Abbrev Number: 0
 <2><d0e>: Abbrev Number: 13 (DW_TAG_call_site)
    <d0f>   DW_AT_call_return_pc: 0x7c8
    <d13>   DW_AT_call_origin : <0xde4>
 <3><d17>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <d18>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <d1a>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><d1d>: Abbrev Number: 0
 <2><d1e>: Abbrev Number: 0
 <1><d1f>: Abbrev Number: 6 (DW_TAG_subprogram)
    <d20>   DW_AT_external    : 1
    <d20>   DW_AT_name        : (indirect string, offset: 0x4a2): print_unsigned_decimal
    <d24>   DW_AT_decl_file   : 1
    <d24>   DW_AT_decl_line   : 47
    <d25>   DW_AT_decl_column : 6
    <d25>   DW_AT_prototyped  : 1
    <d25>   DW_AT_low_pc      : 0x768
    <d29>   DW_AT_high_pc     : 0x4c
    <d2d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <d2f>   DW_AT_call_all_calls: 1
    <d2f>   DW_AT_sibling     : <0xd7e>
 <2><d33>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <d34>   DW_AT_name        : num
    <d38>   DW_AT_decl_file   : 1
    <d38>   DW_AT_decl_line   : 47
    <d39>   DW_AT_decl_column : 38
    <d3a>   DW_AT_type        : <0xac2>
    <d3e>   DW_AT_location    : 0x3f2 (location list)
    <d42>   DW_AT_GNU_locviews: 0x3ee
 <2><d46>: Abbrev Number: 17 (DW_TAG_variable)
    <d47>   DW_AT_name        : buf
    <d4b>   DW_AT_decl_file   : 1
    <d4b>   DW_AT_decl_line   : 49
    <d4c>   DW_AT_decl_column : 7
    <d4c>   DW_AT_type        : <0xd7e>
    <d50>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><d53>: Abbrev Number: 9 (DW_TAG_variable)
    <d54>   DW_AT_name        : (indirect string, offset: 0x4cc): places
    <d58>   DW_AT_decl_file   : 1
    <d58>   DW_AT_decl_line   : 51
    <d59>   DW_AT_decl_column : 6
    <d5a>   DW_AT_type        : <0xaa8>
    <d5e>   DW_AT_location    : 0x40e (location list)
    <d62>   DW_AT_GNU_locviews: 0x402
 <2><d66>: Abbrev Number: 13 (DW_TAG_call_site)
    <d67>   DW_AT_call_return_pc: 0x7a8
    <d6b>   DW_AT_call_origin : <0xde4>
 <3><d6f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <d70>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <d72>   DW_AT_call_value  : 9 byte block: 91 0 74 0 22 44 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_lit20; DW_OP_minus; DW_OP_deref_size: 1)
 <3><d7c>: Abbrev Number: 0
 <2><d7d>: Abbrev Number: 0
 <1><d7e>: Abbrev Number: 18 (DW_TAG_array_type)
    <d7f>   DW_AT_type        : <0xbae>
    <d83>   DW_AT_sibling     : <0xd8e>
 <2><d87>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <d88>   DW_AT_type        : <0xaaf>
    <d8c>   DW_AT_upper_bound : 10
 <2><d8d>: Abbrev Number: 0
 <1><d8e>: Abbrev Number: 6 (DW_TAG_subprogram)
    <d8f>   DW_AT_external    : 1
    <d8f>   DW_AT_name        : (indirect string, offset: 0x435): print_string
    <d93>   DW_AT_decl_file   : 1
    <d93>   DW_AT_decl_line   : 41
    <d94>   DW_AT_decl_column : 6
    <d94>   DW_AT_prototyped  : 1
    <d94>   DW_AT_low_pc      : 0x750
    <d98>   DW_AT_high_pc     : 0x16
    <d9c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <d9e>   DW_AT_call_all_calls: 1
    <d9e>   DW_AT_sibling     : <0xdda>
 <2><da2>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <da3>   DW_AT_name        : str
    <da7>   DW_AT_decl_file   : 1
    <da7>   DW_AT_decl_line   : 41
    <da8>   DW_AT_decl_column : 38
    <da9>   DW_AT_type        : <0xddf>
    <dad>   DW_AT_location    : 0x43b (location list)
    <db1>   DW_AT_GNU_locviews: 0x437
 <2><db5>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <db6>   DW_AT_low_pc      : 0x754
    <dba>   DW_AT_high_pc     : 0x10
 <3><dbe>: Abbrev Number: 8 (DW_TAG_variable)
    <dbf>   DW_AT_name        : i
    <dc1>   DW_AT_decl_file   : 1
    <dc1>   DW_AT_decl_line   : 42
    <dc2>   DW_AT_decl_column : 10
    <dc3>   DW_AT_type        : <0xaa8>
    <dc7>   DW_AT_location    : 0x44f (location list)
    <dcb>   DW_AT_GNU_locviews: 0x44b
 <3><dcf>: Abbrev Number: 3 (DW_TAG_call_site)
    <dd0>   DW_AT_call_return_pc: 0x75c
    <dd4>   DW_AT_call_origin : <0xde4>
 <3><dd8>: Abbrev Number: 0
 <2><dd9>: Abbrev Number: 0
 <1><dda>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <ddb>   DW_AT_byte_size   : 4
    <ddb>   DW_AT_type        : <0xbb5>
 <1><ddf>: Abbrev Number: 16 (DW_TAG_const_type)
    <de0>   DW_AT_type        : <0xdda>
 <1><de4>: Abbrev Number: 6 (DW_TAG_subprogram)
    <de5>   DW_AT_external    : 1
    <de5>   DW_AT_name        : (indirect string, offset: 0x476): putchar
    <de9>   DW_AT_decl_file   : 1
    <de9>   DW_AT_decl_line   : 27
    <dea>   DW_AT_decl_column : 6
    <dea>   DW_AT_prototyped  : 1
    <dea>   DW_AT_low_pc      : 0x70c
    <dee>   DW_AT_high_pc     : 0x44
    <df2>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <df4>   DW_AT_call_all_calls: 1
    <df4>   DW_AT_sibling     : <0xe69>
 <2><df8>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <df9>   DW_AT_name        : c
    <dfb>   DW_AT_decl_file   : 1
    <dfb>   DW_AT_decl_line   : 27
    <dfc>   DW_AT_decl_column : 19
    <dfd>   DW_AT_type        : <0xbae>
    <e01>   DW_AT_location    : 0x466 (location list)
    <e05>   DW_AT_GNU_locviews: 0x460
 <2><e09>: Abbrev Number: 11 (DW_TAG_variable)
    <e0a>   DW_AT_name        : (indirect string, offset: 0x442): chars_sent_recently
    <e0e>   DW_AT_decl_file   : 1
    <e0e>   DW_AT_decl_line   : 28
    <e0f>   DW_AT_decl_column : 13
    <e10>   DW_AT_type        : <0xaa8>
    <e14>   DW_AT_location    : 5 byte block: 3 4 3 0 20 	(DW_OP_addr: 20000304)
 <2><e1a>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <e1b>   DW_AT_low_pc      : 0x73c
    <e1f>   DW_AT_high_pc     : 0xa
    <e23>   DW_AT_sibling     : <0xe39>
 <3><e27>: Abbrev Number: 8 (DW_TAG_variable)
    <e28>   DW_AT_name        : i
    <e2a>   DW_AT_decl_file   : 1
    <e2a>   DW_AT_decl_line   : 35
    <e2b>   DW_AT_decl_column : 11
    <e2c>   DW_AT_type        : <0xaa8>
    <e30>   DW_AT_location    : 0x488 (location list)
    <e34>   DW_AT_GNU_locviews: 0x484
 <3><e38>: Abbrev Number: 0
 <2><e39>: Abbrev Number: 7 (DW_TAG_call_site)
    <e3a>   DW_AT_call_return_pc: 0x71c
    <e3e>   DW_AT_sibling     : <0xe59>
 <3><e42>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e43>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e45>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><e4b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e4c>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <e4e>   DW_AT_call_value  : 9 byte block: a3 3 a5 0 2d a8 34 a8 0 	(DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xa27>); DW_OP_convert <0xa2e>; DW_OP_convert <0>)
 <3><e58>: Abbrev Number: 0
 <2><e59>: Abbrev Number: 31 (DW_TAG_call_site)
    <e5a>   DW_AT_call_return_pc: 0x728
 <3><e5e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e5f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e61>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><e67>: Abbrev Number: 0
 <2><e68>: Abbrev Number: 0
 <1><e69>: Abbrev Number: 32 (DW_TAG_subprogram)
    <e6a>   DW_AT_external    : 1
    <e6a>   DW_AT_name        : (indirect string, offset: 0x35d): setup_uart_printer
    <e6e>   DW_AT_decl_file   : 1
    <e6f>   DW_AT_decl_line   : 15
    <e70>   DW_AT_decl_column : 6
    <e71>   DW_AT_prototyped  : 1
    <e71>   DW_AT_low_pc      : 0x690
    <e75>   DW_AT_high_pc     : 0x7c
    <e79>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <e7b>   DW_AT_call_all_tail_calls: 1
 <2><e7b>: Abbrev Number: 7 (DW_TAG_call_site)
    <e7c>   DW_AT_call_return_pc: 0x69e
    <e80>   DW_AT_sibling     : <0xe8f>
 <3><e84>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e85>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e87>   DW_AT_call_value  : 6 byte block: 11 80 90 80 80 7f 	(DW_OP_consts: -268433408)
 <3><e8e>: Abbrev Number: 0
 <2><e8f>: Abbrev Number: 7 (DW_TAG_call_site)
    <e90>   DW_AT_call_return_pc: 0x6a6
    <e94>   DW_AT_sibling     : <0xea3>
 <3><e98>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e99>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e9b>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><ea2>: Abbrev Number: 0
 <2><ea3>: Abbrev Number: 7 (DW_TAG_call_site)
    <ea4>   DW_AT_call_return_pc: 0x6b4
    <ea8>   DW_AT_sibling     : <0xeb7>
 <3><eac>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ead>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <eaf>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><eb6>: Abbrev Number: 0
 <2><eb7>: Abbrev Number: 33 (DW_TAG_call_site)
    <eb8>   DW_AT_call_return_pc: 0x6cc
    <ebc>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
    <ebf>   DW_AT_sibling     : <0xedd>
 <3><ec3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ec4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ec6>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><ecc>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ecd>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <ecf>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><ed1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ed2>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <ed4>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><ed7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ed8>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <eda>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><edc>: Abbrev Number: 0
 <2><edd>: Abbrev Number: 7 (DW_TAG_call_site)
    <ede>   DW_AT_call_return_pc: 0x6da
    <ee2>   DW_AT_sibling     : <0xefa>
 <3><ee6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ee7>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ee9>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><eef>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ef0>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <ef2>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><ef4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ef5>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <ef7>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><ef9>: Abbrev Number: 0
 <2><efa>: Abbrev Number: 7 (DW_TAG_call_site)
    <efb>   DW_AT_call_return_pc: 0x6e6
    <eff>   DW_AT_sibling     : <0xf0f>
 <3><f03>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f04>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f06>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><f09>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f0a>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <f0c>   DW_AT_call_value  : 1 byte block: 30 	(DW_OP_lit0)
 <3><f0e>: Abbrev Number: 0
 <2><f0f>: Abbrev Number: 34 (DW_TAG_call_site)
    <f10>   DW_AT_call_return_pc: 0x6fa
    <f14>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <3><f17>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f18>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f1a>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><f1d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f1e>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <f20>   DW_AT_call_value  : 5 byte block: c 0 9 3d 0 	(DW_OP_const4u: 4000000)
 <3><f26>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f27>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <f29>   DW_AT_call_value  : 2 byte block: 8 68 	(DW_OP_const1u: 104)
 <3><f2c>: Abbrev Number: 0
 <2><f2d>: Abbrev Number: 0
 <1><f2e>: Abbrev Number: 0
  Compilation Unit @ offset 0xf2f:
   Length:        0x193 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x5e4
   Pointer Size:  4
 <0><f3b>: Abbrev Number: 10 (DW_TAG_compile_unit)
    <f3c>   DW_AT_producer    : (indirect string, offset: 0x203): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <f40>   DW_AT_language    : 29	(C11)
    <f41>   DW_AT_name        : (indirect string, offset: 0x525): sys/startup_gcc.c
    <f45>   DW_AT_comp_dir    : (indirect string, offset: 0xf8): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <f49>   DW_AT_ranges      : 0xe9
    <f4d>   DW_AT_low_pc      : 0
    <f51>   DW_AT_stmt_list   : 0xb4e
 <1><f55>: Abbrev Number: 1 (DW_TAG_base_type)
    <f56>   DW_AT_byte_size   : 1
    <f57>   DW_AT_encoding    : 6	(signed char)
    <f58>   DW_AT_name        : (indirect string, offset: 0x167): signed char
 <1><f5c>: Abbrev Number: 1 (DW_TAG_base_type)
    <f5d>   DW_AT_byte_size   : 1
    <f5e>   DW_AT_encoding    : 8	(unsigned char)
    <f5f>   DW_AT_name        : (indirect string, offset: 0x165): unsigned char
 <1><f63>: Abbrev Number: 1 (DW_TAG_base_type)
    <f64>   DW_AT_byte_size   : 2
    <f65>   DW_AT_encoding    : 5	(signed)
    <f66>   DW_AT_name        : (indirect string, offset: 0x31): short int
 <1><f6a>: Abbrev Number: 1 (DW_TAG_base_type)
    <f6b>   DW_AT_byte_size   : 2
    <f6c>   DW_AT_encoding    : 7	(unsigned)
    <f6d>   DW_AT_name        : (indirect string, offset: 0x1a7): short unsigned int
 <1><f71>: Abbrev Number: 1 (DW_TAG_base_type)
    <f72>   DW_AT_byte_size   : 4
    <f73>   DW_AT_encoding    : 5	(signed)
    <f74>   DW_AT_name        : (indirect string, offset: 0xcf): long int
 <1><f78>: Abbrev Number: 4 (DW_TAG_typedef)
    <f79>   DW_AT_name        : (indirect string, offset: 0x48): __uint32_t
    <f7d>   DW_AT_decl_file   : 2
    <f7e>   DW_AT_decl_line   : 79
    <f7f>   DW_AT_decl_column : 25
    <f80>   DW_AT_type        : <0xf84>
 <1><f84>: Abbrev Number: 1 (DW_TAG_base_type)
    <f85>   DW_AT_byte_size   : 4
    <f86>   DW_AT_encoding    : 7	(unsigned)
    <f87>   DW_AT_name        : (indirect string, offset: 0x182): long unsigned int
 <1><f8b>: Abbrev Number: 1 (DW_TAG_base_type)
    <f8c>   DW_AT_byte_size   : 8
    <f8d>   DW_AT_encoding    : 5	(signed)
    <f8e>   DW_AT_name        : (indirect string, offset: 0xca): long long int
 <1><f92>: Abbrev Number: 1 (DW_TAG_base_type)
    <f93>   DW_AT_byte_size   : 8
    <f94>   DW_AT_encoding    : 7	(unsigned)
    <f95>   DW_AT_name        : (indirect string, offset: 0x17d): long long unsigned int
 <1><f99>: Abbrev Number: 11 (DW_TAG_base_type)
    <f9a>   DW_AT_byte_size   : 4
    <f9b>   DW_AT_encoding    : 5	(signed)
    <f9c>   DW_AT_name        : int
 <1><fa0>: Abbrev Number: 1 (DW_TAG_base_type)
    <fa1>   DW_AT_byte_size   : 4
    <fa2>   DW_AT_encoding    : 7	(unsigned)
    <fa3>   DW_AT_name        : (indirect string, offset: 0x187): unsigned int
 <1><fa7>: Abbrev Number: 4 (DW_TAG_typedef)
    <fa8>   DW_AT_name        : (indirect string, offset: 0x4a): uint32_t
    <fac>   DW_AT_decl_file   : 3
    <fad>   DW_AT_decl_line   : 48
    <fae>   DW_AT_decl_column : 20
    <faf>   DW_AT_type        : <0xf78>
 <1><fb3>: Abbrev Number: 1 (DW_TAG_base_type)
    <fb4>   DW_AT_byte_size   : 8
    <fb5>   DW_AT_encoding    : 4	(float)
    <fb6>   DW_AT_name        : (indirect string, offset: 0x159): long double
 <1><fba>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <fbb>   DW_AT_byte_size   : 4
    <fbb>   DW_AT_type        : <0xfc4>
 <1><fbf>: Abbrev Number: 6 (DW_TAG_const_type)
    <fc0>   DW_AT_type        : <0xfba>
 <1><fc4>: Abbrev Number: 12 (DW_TAG_subroutine_type)
    <fc5>   DW_AT_prototyped  : 1
 <1><fc5>: Abbrev Number: 1 (DW_TAG_base_type)
    <fc6>   DW_AT_byte_size   : 1
    <fc7>   DW_AT_encoding    : 8	(unsigned char)
    <fc8>   DW_AT_name        : (indirect string, offset: 0x16e): char
 <1><fcc>: Abbrev Number: 7 (DW_TAG_array_type)
    <fcd>   DW_AT_type        : <0xf84>
    <fd1>   DW_AT_sibling     : <0xfdc>
 <2><fd5>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <fd6>   DW_AT_type        : <0xfa0>
    <fda>   DW_AT_upper_bound : 63
 <2><fdb>: Abbrev Number: 0
 <1><fdc>: Abbrev Number: 13 (DW_TAG_variable)
    <fdd>   DW_AT_name        : (indirect string, offset: 0x4f4): pulStack
    <fe1>   DW_AT_decl_file   : 1
    <fe2>   DW_AT_decl_line   : 33
    <fe3>   DW_AT_decl_column : 22
    <fe4>   DW_AT_type        : <0xfcc>
    <fe8>   DW_AT_location    : 5 byte block: 3 8 3 0 20 	(DW_OP_addr: 20000308)
 <1><fee>: Abbrev Number: 7 (DW_TAG_array_type)
    <fef>   DW_AT_type        : <0xfbf>
    <ff3>   DW_AT_sibling     : <0xffe>
 <2><ff7>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <ff8>   DW_AT_type        : <0xfa0>
    <ffc>   DW_AT_upper_bound : 154
 <2><ffd>: Abbrev Number: 0
 <1><ffe>: Abbrev Number: 6 (DW_TAG_const_type)
    <fff>   DW_AT_type        : <0xfee>
 <1><1003>: Abbrev Number: 14 (DW_TAG_variable)
    <1004>   DW_AT_name        : (indirect string, offset: 0x540): g_pfnVectors
    <1008>   DW_AT_decl_file   : 1
    <1009>   DW_AT_decl_line   : 42
    <100a>   DW_AT_decl_column : 15
    <100b>   DW_AT_type        : <0xffe>
    <100f>   DW_AT_external    : 1
    <100f>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <1><1015>: Abbrev Number: 2 (DW_TAG_variable)
    <1016>   DW_AT_name        : (indirect string, offset: 0x517): _etext
    <101a>   DW_AT_decl_file   : 1
    <101a>   DW_AT_decl_line   : 209
    <101b>   DW_AT_decl_column : 22
    <101b>   DW_AT_type        : <0xf84>
    <101f>   DW_AT_external    : 1
    <101f>   DW_AT_declaration : 1
 <1><101f>: Abbrev Number: 2 (DW_TAG_variable)
    <1020>   DW_AT_name        : (indirect string, offset: 0x4ee): _data
    <1024>   DW_AT_decl_file   : 1
    <1024>   DW_AT_decl_line   : 210
    <1025>   DW_AT_decl_column : 22
    <1025>   DW_AT_type        : <0xf84>
    <1029>   DW_AT_external    : 1
    <1029>   DW_AT_declaration : 1
 <1><1029>: Abbrev Number: 2 (DW_TAG_variable)
    <102a>   DW_AT_name        : (indirect string, offset: 0x51e): _edata
    <102e>   DW_AT_decl_file   : 1
    <102e>   DW_AT_decl_line   : 211
    <102f>   DW_AT_decl_column : 22
    <102f>   DW_AT_type        : <0xf84>
    <1033>   DW_AT_external    : 1
    <1033>   DW_AT_declaration : 1
 <1><1033>: Abbrev Number: 15 (DW_TAG_subprogram)
    <1034>   DW_AT_external    : 1
    <1034>   DW_AT_name        : (indirect string, offset: 0x358): main
    <1038>   DW_AT_decl_file   : 1
    <1039>   DW_AT_decl_line   : 26
    <103a>   DW_AT_decl_column : 12
    <103b>   DW_AT_prototyped  : 1
    <103b>   DW_AT_type        : <0xf99>
    <103f>   DW_AT_declaration : 1
 <1><103f>: Abbrev Number: 16 (DW_TAG_subprogram)
    <1040>   DW_AT_external    : 1
    <1040>   DW_AT_name        : (indirect string, offset: 0x3ce): timeKeeperISR
    <1044>   DW_AT_decl_file   : 4
    <1045>   DW_AT_decl_line   : 7
    <1046>   DW_AT_decl_column : 6
    <1047>   DW_AT_prototyped  : 1
    <1047>   DW_AT_declaration : 1
 <1><1047>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1048>   DW_AT_name        : (indirect string, offset: 0x4fd): IntDefaultHandler
    <104c>   DW_AT_decl_file   : 1
    <104c>   DW_AT_decl_line   : 304
    <104e>   DW_AT_decl_column : 1
    <104e>   DW_AT_prototyped  : 1
    <104e>   DW_AT_low_pc      : 0x9dc
    <1052>   DW_AT_high_pc     : 0x2
    <1056>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1058>   DW_AT_call_all_calls: 1
 <1><1058>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1059>   DW_AT_name        : (indirect string, offset: 0x537): FaultISR
    <105d>   DW_AT_decl_file   : 1
    <105d>   DW_AT_decl_line   : 286
    <105f>   DW_AT_decl_column : 1
    <105f>   DW_AT_prototyped  : 1
    <105f>   DW_AT_low_pc      : 0x9da
    <1063>   DW_AT_high_pc     : 0x2
    <1067>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1069>   DW_AT_call_all_calls: 1
 <1><1069>: Abbrev Number: 3 (DW_TAG_subprogram)
    <106a>   DW_AT_name        : (indirect string, offset: 0x55d): NmiSR
    <106e>   DW_AT_decl_file   : 1
    <106e>   DW_AT_decl_line   : 268
    <1070>   DW_AT_decl_column : 1
    <1070>   DW_AT_prototyped  : 1
    <1070>   DW_AT_low_pc      : 0x9d8
    <1074>   DW_AT_high_pc     : 0x2
    <1078>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <107a>   DW_AT_call_all_calls: 1
 <1><107a>: Abbrev Number: 17 (DW_TAG_subprogram)
    <107b>   DW_AT_external    : 1
    <107b>   DW_AT_name        : (indirect string, offset: 0x554): ResetISR
    <107f>   DW_AT_decl_file   : 1
    <1080>   DW_AT_decl_line   : 226
    <1081>   DW_AT_decl_column : 1
    <1082>   DW_AT_prototyped  : 1
    <1082>   DW_AT_low_pc      : 0x9e0
    <1086>   DW_AT_high_pc     : 0x48
    <108a>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <108c>   DW_AT_call_all_calls: 1
    <108c>   DW_AT_sibling     : <0x10c0>
 <2><1090>: Abbrev Number: 9 (DW_TAG_variable)
    <1091>   DW_AT_name        : (indirect string, offset: 0x54d): pulSrc
    <1095>   DW_AT_decl_file   : 1
    <1095>   DW_AT_decl_line   : 228
    <1096>   DW_AT_decl_column : 20
    <1097>   DW_AT_type        : <0x10c0>
    <109b>   DW_AT_location    : 0x4ab (location list)
    <109f>   DW_AT_GNU_locviews: 0x4a5
 <2><10a3>: Abbrev Number: 9 (DW_TAG_variable)
    <10a4>   DW_AT_name        : (indirect string, offset: 0x50f): pulDest
    <10a8>   DW_AT_decl_file   : 1
    <10a8>   DW_AT_decl_line   : 228
    <10a9>   DW_AT_decl_column : 29
    <10aa>   DW_AT_type        : <0x10c0>
    <10ae>   DW_AT_location    : 0x4c8 (location list)
    <10b2>   DW_AT_GNU_locviews: 0x4c2
 <2><10b6>: Abbrev Number: 18 (DW_TAG_call_site)
    <10b7>   DW_AT_call_return_pc: 0xa18
    <10bb>   DW_AT_call_origin : <0x1033>
 <2><10bf>: Abbrev Number: 0
 <1><10c0>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <10c1>   DW_AT_byte_size   : 4
    <10c1>   DW_AT_type        : <0xf84>
 <1><10c5>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 5
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_enumeration_type    [has children]
    DW_AT_encoding     DW_FORM_implicit_const: 7
    DW_AT_byte_size    DW_FORM_implicit_const: 1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 5
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_bit_size     DW_FORM_data1
    DW_AT_data_bit_offset DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_union_type    [has children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_label    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   35      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   36      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   37      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   38      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   39      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   40      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   41      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x24d)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x305)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x419)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 7
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x5e4)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 22
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_implicit_const: 1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subroutine_type    [no children]
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_loclists section:

    Offset   Begin            End              Expression

    0000000c v0000000 v0000001 location view pair
    0000000e v0000000 v0000000 location view pair
    00000010 v0000000 v0000000 location view pair

    00000012 00000484 (base address)
    00000017 v0000000 v0000001 views at 0000000c for:
             00000484 000004c0 (DW_OP_reg6 (r6))
    0000001c v0000000 v0000000 views at 0000000e for:
             000004e0 00000542 (DW_OP_reg6 (r6))
    00000022 v0000000 v0000000 views at 00000010 for:
             00000544 000005c0 (DW_OP_reg6 (r6))
    00000029 <End of list>

    0000002a v0000000 v0000000 location view pair

    0000002c v0000000 v0000000 views at 0000002a for:
             0000055a 00000594 (DW_OP_reg5 (r5))
    00000034 <End of list>

    00000035 v0000000 v0000000 location view pair

    00000037 v0000000 v0000000 views at 00000035 for:
             0000056e 00000578 (DW_OP_reg0 (r0))
    0000003f <End of list>

    00000040 v0000000 v0000000 location view pair
    00000042 v0000000 v0000000 location view pair
    00000044 v0000000 v0000000 location view pair
    00000046 v0000000 v0000000 location view pair
    00000048 v0000000 v0000000 location view pair
    0000004a v0000000 v0000000 location view pair
    0000004c v0000000 v0000000 location view pair
    0000004e v0000000 v0000000 location view pair

    00000050 00000430 (base address)
    00000055 v0000000 v0000000 views at 00000040 for:
             00000430 0000046c (DW_OP_reg0 (r0))
    0000005a v0000000 v0000000 views at 00000042 for:
             0000046c 00000474 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_stack_value)
    00000068 v0000000 v0000000 views at 00000044 for:
             00000474 00000476 (DW_OP_reg0 (r0))
    0000006d v0000000 v0000000 views at 00000046 for:
             00000476 00000478 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_stack_value)
    0000007b v0000000 v0000000 views at 00000048 for:
             00000478 0000047a (DW_OP_reg0 (r0))
    00000080 v0000000 v0000000 views at 0000004a for:
             0000047a 0000047c (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_stack_value)
    0000008e v0000000 v0000000 views at 0000004c for:
             0000047c 0000047e (DW_OP_reg0 (r0))
    00000093 v0000000 v0000000 views at 0000004e for:
             0000047e 00000480 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_stack_value)
    000000a1 <End of list>

    000000a2 v0000000 v0000000 location view pair
    000000a4 v0000000 v0000000 location view pair

    000000a6 00000450 (base address)
    000000ab v0000000 v0000000 views at 000000a2 for:
             00000450 00000464 (DW_OP_reg1 (r1))
    000000b0 v0000000 v0000000 views at 000000a4 for:
             00000466 00000474 (DW_OP_reg1 (r1))
    000000b5 <End of list>

    000000b6 v0000000 v0000000 location view pair
    000000b8 v0000001 v0000000 location view pair
    000000ba v0000000 v0000000 location view pair
    000000bc v0000000 v0000000 location view pair

    000000be 00000450 (base address)
    000000c3 v0000000 v0000000 views at 000000b6 for:
             00000450 00000454 (DW_OP_reg2 (r2))
    000000c8 v0000001 v0000000 views at 000000b8 for:
             00000456 0000045c (DW_OP_reg2 (r2))
    000000cd v0000000 v0000000 views at 000000ba for:
             0000045c 00000466 (DW_OP_breg2 (r2): -2; DW_OP_stack_value)
    000000d4 v0000000 v0000000 views at 000000bc for:
             00000466 00000474 (DW_OP_reg2 (r2))
    000000d9 <End of list>

    000000da v0000000 v0000000 location view pair
    000000dc v0000000 v0000000 location view pair

    000000de 00000456 (base address)
    000000e3 v0000000 v0000000 views at 000000da for:
             00000456 00000460 (DW_OP_reg3 (r3))
    000000e8 v0000000 v0000000 views at 000000dc for:
             00000460 00000466 (DW_OP_breg0 (r0): 0; DW_OP_breg2 (r2): 0; DW_OP_plus; DW_OP_lit2; DW_OP_minus)
    000000f3 <End of list>

    000000f4 v0000000 v0000000 location view pair
    000000f6 v0000000 v0000000 location view pair

    000000f8 0000042c (base address)
    000000fd v0000000 v0000000 views at 000000f4 for:
             0000042c 0000042e (DW_OP_reg0 (r0))
    00000102 v0000000 v0000000 views at 000000f6 for:
             0000042e 00000430 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x3b>; DW_OP_convert <0>; DW_OP_stack_value)
    00000110 <End of list>

    00000111 v0000000 v0000000 location view pair
    00000113 v0000000 v0000000 location view pair

    00000115 000003bc (base address)
    0000011a v0000000 v0000000 views at 00000111 for:
             000003bc 0000040c (DW_OP_reg0 (r0))
    0000011f v0000000 v0000000 views at 00000113 for:
             0000040c 0000042c (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x3b>; DW_OP_convert <0>; DW_OP_stack_value)
    0000012d <End of list>

    0000012e v0000000 v0000000 location view pair
    00000130 v0000000 v0000000 location view pair

    00000132 000003bc (base address)
    00000137 v0000000 v0000000 views at 0000012e for:
             000003bc 0000040f (DW_OP_reg1 (r1))
    0000013c v0000000 v0000000 views at 00000130 for:
             0000040f 0000042c (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x2d>); DW_OP_convert <0x3b>; DW_OP_convert <0>; DW_OP_stack_value)
    0000014a <End of list>

    0000014b v0000000 v0000000 location view pair
    0000014d v0000000 v0000000 location view pair

    0000014f 000003bc (base address)
    00000154 v0000000 v0000000 views at 0000014b for:
             000003bc 0000040f (DW_OP_reg2 (r2))
    00000159 v0000000 v0000000 views at 0000014d for:
             0000040f 0000042c (DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x2d>); DW_OP_convert <0x3b>; DW_OP_convert <0>; DW_OP_stack_value)
    00000167 <End of list>

    00000168 v0000000 v0000000 location view pair
    0000016a v0000000 v0000000 location view pair
    0000016c v0000000 v0000000 location view pair

    0000016e 000003e6 (base address)
    00000173 v0000000 v0000000 views at 00000168 for:
             000003e6 000003ee (DW_OP_regx: 79 (r79))
    00000179 v0000000 v0000000 views at 0000016a for:
             000003ee 0000040f (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_convert <0x26>; DW_OP_convert <0x34>; DW_OP_const_type: <0x34>  4 byte block: 0 0 80 3c ; DW_OP_mul; DW_OP_regval_type: 77 (r77) <0x34>; DW_OP_minus; DW_OP_stack_value)
    00000197 v0000000 v0000000 views at 0000016c for:
             0000040f 0000042c (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_convert <0x26>; DW_OP_convert <0x34>; DW_OP_const_type: <0x34>  4 byte block: 0 0 80 3c ; DW_OP_mul; DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_convert <0x26>; DW_OP_convert <0x34>; DW_OP_const_type: <0x34>  4 byte block: 0 0 80 3c ; DW_OP_mul; DW_OP_minus; DW_OP_stack_value)
    000001c7 <End of list>

    000001c8 v0000000 v0000000 location view pair
    000001ca v0000000 v0000000 location view pair

    000001cc 000003f2 (base address)
    000001d1 v0000000 v0000000 views at 000001c8 for:
             000003f2 00000414 (DW_OP_regx: 80 (r80))
    000001d7 v0000000 v0000000 views at 000001ca for:
             00000414 0000042c (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_convert <0x26>; DW_OP_convert <0x34>; DW_OP_const_type: <0x34>  4 byte block: 0 0 80 3c ; DW_OP_mul; DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_convert <0x26>; DW_OP_convert <0x34>; DW_OP_const_type: <0x34>  4 byte block: 0 0 80 3c ; DW_OP_mul; DW_OP_minus; DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_convert <0x42>; DW_OP_convert <0x34>; DW_OP_mul; DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_convert <0x26>; DW_OP_convert <0x34>; DW_OP_plus; DW_OP_stack_value)
    00000223 <End of list>

    00000224 v0000000 v0000000 location view pair
    00000226 v0000000 v0000000 location view pair
    00000228 v0000000 v0000000 location view pair

    0000022a 0000026c (base address)
    0000022f v0000000 v0000000 views at 00000224 for:
             0000026c 00000274 (DW_OP_reg0 (r0))
    00000234 v0000000 v0000000 views at 00000226 for:
             00000274 00000290 (DW_OP_reg5 (r5))
    00000239 v0000000 v0000000 views at 00000228 for:
             00000290 00000294 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x2d>); DW_OP_convert <0x26>; DW_OP_convert <0>; DW_OP_stack_value)
    00000247 <End of list>

    00000248 v0000002 v0000000 location view pair
    0000024a v0000000 v0000000 location view pair

    0000024c 00000270 (base address)
    00000251 v0000002 v0000000 views at 00000248 for:
             00000270 00000274 (DW_OP_lit0; DW_OP_stack_value)
    00000257 v0000000 v0000000 views at 0000024a for:
             00000274 00000290 (DW_OP_reg4 (r4))
    0000025c <End of list>

    00000269 v0000000 v0000000 location view pair
    0000026b v0000000 v0000000 location view pair

    0000026d 00000000 (base address)
    00000272 v0000000 v0000000 views at 00000269 for:
             00000000 0000001a (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    0000027c v0000000 v0000000 views at 0000026b for:
             0000002a 00000046 (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    00000286 <End of list>

    00000293 v0000006 v0000000 location view pair
    00000295 v0000000 v0000001 location view pair
    00000297 v0000001 v0000000 location view pair
    00000299 v0000000 v0000000 location view pair
    0000029b v0000000 v0000000 location view pair
    0000029d v0000000 v0000000 location view pair
    0000029f v0000000 v0000000 location view pair

    000002a1 000008fa (base address)
    000002a6 v0000006 v0000000 views at 00000293 for:
             000008fa 000008fe (DW_OP_lit0; DW_OP_stack_value)
    000002ac v0000000 v0000001 views at 00000295 for:
             000008fe 00000924 (DW_OP_reg6 (r6))
    000002b1 v0000001 v0000000 views at 00000297 for:
             00000924 00000926 (DW_OP_reg4 (r4))
    000002b6 v0000000 v0000000 views at 00000299 for:
             00000926 0000095a (DW_OP_reg6 (r6))
    000002bb v0000000 v0000000 views at 0000029b for:
             0000095a 0000096a (DW_OP_reg4 (r4))
    000002c0 v0000000 v0000000 views at 0000029d for:
             0000096a 000009cc (DW_OP_reg6 (r6))
    000002c6 v0000000 v0000000 views at 0000029f for:
             000009cc 000009d2 (DW_OP_reg4 (r4))
    000002cd <End of list>

    000002ce v0000000 v0000000 location view pair
    000002d0 v0000000 v0000000 location view pair
    000002d2 v0000000 v0000000 location view pair
    000002d4 v0000000 v0000000 location view pair
    000002d6 v0000000 v0000001 location view pair
    000002d8 v0000000 v0000000 location view pair
    000002da v0000000 v0000000 location view pair
    000002dc v0000000 v0000000 location view pair
    000002de v0000000 v0000001 location view pair
    000002e0 v0000001 v0000000 location view pair

    000002e2 000007cc (base address)
    000002e7 v0000000 v0000000 views at 000002ce for:
             000007cc 00000838 (DW_OP_regx: 64 (r64))
    000002ed v0000000 v0000000 views at 000002d0 for:
             0000084e 00000853 (DW_OP_regx: 64 (r64))
    000002f5 v0000000 v0000000 views at 000002d2 for:
             00000853 00000856 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xa20>); DW_OP_stack_value)
    00000301 v0000000 v0000000 views at 000002d4 for:
             00000856 0000085b (DW_OP_regx: 64 (r64))
    00000309 v0000000 v0000001 views at 000002d6 for:
             0000085b 0000085c (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xa20>); DW_OP_stack_value)
    00000315 v0000000 v0000000 views at 000002d8 for:
             00000864 00000869 (DW_OP_regx: 64 (r64))
    0000031d v0000000 v0000000 views at 000002da for:
             00000869 0000086c (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xa20>); DW_OP_stack_value)
    00000329 v0000000 v0000000 views at 000002dc for:
             0000086c 00000871 (DW_OP_regx: 64 (r64))
    00000331 v0000000 v0000001 views at 000002de for:
             00000871 00000872 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xa20>); DW_OP_stack_value)
    0000033d v0000001 v0000000 views at 000002e0 for:
             00000872 00000878 (DW_OP_regx: 80 (r80))
    00000345 <End of list>

    00000346 v0000000 v0000000 location view pair
    00000348 v0000000 v0000000 location view pair

    0000034a 00000830 (base address)
    0000034f v0000000 v0000000 views at 00000346 for:
             00000830 0000084e (DW_OP_regx: 79 (r79))
    00000355 v0000000 v0000000 views at 00000348 for:
             00000878 000008b7 (DW_OP_regx: 79 (r79))
    0000035c <End of list>

    0000035d v0000000 v0000000 location view pair
    0000035f v0000000 v0000000 location view pair
    00000361 v0000000 v0000000 location view pair

    00000363 00000848 (base address)
    00000368 v0000000 v0000000 views at 0000035d for:
             00000848 0000084e (DW_OP_reg3 (r3))
    0000036d v0000000 v0000000 views at 0000035f for:
             00000878 00000890 (DW_OP_reg3 (r3))
    00000372 v0000000 v0000000 views at 00000361 for:
             00000898 000008a6 (DW_OP_reg3 (r3))
    00000377 <End of list>

    00000378 v0000001 v0000000 location view pair
    0000037a v0000000 v0000000 location view pair
    0000037c v0000000 v0000000 location view pair
    0000037e v0000000 v0000000 location view pair
    00000380 v0000000 v0000000 location view pair
    00000382 v0000000 v0000001 location view pair
    00000384 v0000001 v0000000 location view pair

    00000386 00000848 (base address)
    0000038b v0000001 v0000000 views at 00000378 for:
             00000848 0000084e (DW_OP_lit0; DW_OP_stack_value)
    00000391 v0000000 v0000000 views at 0000037a for:
             00000878 0000088a (DW_OP_reg1 (r1))
    00000396 v0000000 v0000000 views at 0000037c for:
             0000088a 0000089c (DW_OP_breg1 (r1): 1; DW_OP_stack_value)
    0000039d v0000000 v0000000 views at 0000037e for:
             0000089c 000008a2 (DW_OP_reg1 (r1))
    000003a2 v0000000 v0000000 views at 00000380 for:
             000008a2 000008bc (DW_OP_reg4 (r4))
    000003a7 v0000000 v0000001 views at 00000382 for:
             000008bc 000008ca (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000003af v0000001 v0000000 views at 00000384 for:
             000008ca 000008ec (DW_OP_reg4 (r4))
    000003b6 <End of list>

    000003b7 v0000003 v0000000 location view pair
    000003b9 v0000000 v0000000 location view pair

    000003bb 00000848 (base address)
    000003c0 v0000003 v0000000 views at 000003b7 for:
             00000848 0000084e (DW_OP_lit0; DW_OP_stack_value)
    000003c6 v0000000 v0000000 views at 000003b9 for:
             00000878 000008b4 (DW_OP_reg0 (r0))
    000003cb <End of list>

    000003cc v0000000 v0000000 location view pair
    000003ce v0000000 v0000000 location view pair
    000003d0 v0000000 v0000000 location view pair
    000003d2 v0000000 v0000000 location view pair

    000003d4 000007b4 (base address)
    000003d9 v0000000 v0000000 views at 000003cc for:
             000007b4 000007ba (DW_OP_reg0 (r0))
    000003de v0000000 v0000000 views at 000003ce for:
             000007ba 000007c2 (DW_OP_reg4 (r4))
    000003e3 v0000000 v0000000 views at 000003d0 for:
             000007c2 000007c4 (DW_OP_reg0 (r0))
    000003e8 v0000000 v0000000 views at 000003d2 for:
             000007c4 000007cc (DW_OP_reg4 (r4))
    000003ed <End of list>

    000003ee v0000000 v0000000 location view pair
    000003f0 v0000000 v0000000 location view pair

    000003f2 00000768 (base address)
    000003f7 v0000000 v0000000 views at 000003ee for:
             00000768 0000076e (DW_OP_reg0 (r0))
    000003fc v0000000 v0000000 views at 000003f0 for:
             0000076e 00000798 (DW_OP_reg0 (r0))
    00000401 <End of list>

    00000402 v0000002 v0000000 location view pair
    00000404 v0000000 v0000000 location view pair
    00000406 v0000000 v0000000 location view pair
    00000408 v0000000 v0000000 location view pair
    0000040a v0000000 v0000001 location view pair
    0000040c v0000001 v0000000 location view pair

    0000040e 0000076c (base address)
    00000413 v0000002 v0000000 views at 00000402 for:
             0000076c 0000076e (DW_OP_lit0; DW_OP_stack_value)
    00000419 v0000000 v0000000 views at 00000404 for:
             0000076e 0000078a (DW_OP_reg4 (r4))
    0000041e v0000000 v0000000 views at 00000406 for:
             0000078a 00000798 (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    00000425 v0000000 v0000000 views at 00000408 for:
             00000798 0000079a (DW_OP_reg4 (r4))
    0000042a v0000000 v0000001 views at 0000040a for:
             0000079a 000007a8 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    00000431 v0000001 v0000000 views at 0000040c for:
             000007a8 000007b0 (DW_OP_reg4 (r4))
    00000436 <End of list>

    00000437 v0000000 v0000000 location view pair
    00000439 v0000000 v0000000 location view pair

    0000043b 00000750 (base address)
    00000440 v0000000 v0000000 views at 00000437 for:
             00000750 00000758 (DW_OP_reg0 (r0))
    00000445 v0000000 v0000000 views at 00000439 for:
             00000758 00000766 (DW_OP_reg5 (r5))
    0000044a <End of list>

    0000044b v0000002 v0000000 location view pair
    0000044d v0000000 v0000000 location view pair

    0000044f 00000754 (base address)
    00000454 v0000002 v0000000 views at 0000044b for:
             00000754 00000758 (DW_OP_lit0; DW_OP_stack_value)
    0000045a v0000000 v0000000 views at 0000044d for:
             00000758 00000766 (DW_OP_reg4 (r4))
    0000045f <End of list>

    00000460 v0000000 v0000000 location view pair
    00000462 v0000000 v0000000 location view pair
    00000464 v0000000 v0000000 location view pair

    00000466 0000070c (base address)
    0000046b v0000000 v0000000 views at 00000460 for:
             0000070c 0000071a (DW_OP_reg0 (r0))
    00000470 v0000000 v0000000 views at 00000462 for:
             0000071a 0000071b (DW_OP_reg1 (r1))
    00000475 v0000000 v0000000 views at 00000464 for:
             0000071b 00000750 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xa27>); DW_OP_convert <0xa2e>; DW_OP_convert <0>; DW_OP_stack_value)
    00000483 <End of list>

    00000484 v0000002 v0000000 location view pair
    00000486 v0000000 v0000000 location view pair

    00000488 0000073c (base address)
    0000048d v0000002 v0000000 views at 00000484 for:
             0000073c 0000073e (DW_OP_lit0; DW_OP_stack_value)
    00000493 v0000000 v0000000 views at 00000486 for:
             0000073e 00000746 (DW_OP_reg3 (r3))
    00000498 <End of list>

    000004a5 v0000000 v0000001 location view pair
    000004a7 v0000001 v0000000 location view pair
    000004a9 v0000000 v0000000 location view pair

    000004ab 000009e8 (base address)
    000004b0 v0000000 v0000001 views at 000004a5 for:
             000009e8 000009e8 (DW_OP_reg2 (r2))
    000004b5 v0000001 v0000000 views at 000004a7 for:
             000009e8 000009ec (DW_OP_breg2 (r2): 4; DW_OP_stack_value)
    000004bc v0000000 v0000000 views at 000004a9 for:
             000009ec 00000a10 (DW_OP_reg2 (r2))
    000004c1 <End of list>

    000004c2 v0000000 v0000001 location view pair
    000004c4 v0000001 v0000000 location view pair
    000004c6 v0000000 v0000000 location view pair

    000004c8 000009e8 (base address)
    000004cd v0000000 v0000001 views at 000004c2 for:
             000009e8 000009e8 (DW_OP_reg3 (r3))
    000004d2 v0000001 v0000000 views at 000004c4 for:
             000009e8 000009f0 (DW_OP_breg3 (r3): 4; DW_OP_stack_value)
    000004d9 v0000000 v0000000 views at 000004c6 for:
             000009f0 00000a0c (DW_OP_reg3 (r3))
    000004de <End of list>

Contents of the .debug_aranges section:

  Length:                   92
  Version:                  2
  Offset into .debug_info:  0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000026c 00000028
    00000294 000000b0
    00000344 00000024
    00000368 00000024
    0000038c 00000030
    000003bc 00000070
    0000042c 00000004
    00000430 00000050
    00000480 00000140
    00000000 00000000
  Length:                   28
  Version:                  2
  Offset into .debug_info:  0x6bf
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000005c0 0000006c
    00000000 00000000
  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x87c
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000000 0000007c
    0000062c 00000064
    00000000 00000058
    00000000 00000000
  Length:                   76
  Version:                  2
  Offset into .debug_info:  0x9fa
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000690 0000007c
    0000070c 00000044
    00000750 00000016
    00000768 0000004c
    000007b4 00000018
    000007cc 00000120
    000008ec 000000ea
    00000000 00000000
  Length:                   52
  Version:                  2
  Offset into .debug_info:  0xf2f
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000009d8 00000002
    000009da 00000002
    000009dc 00000002
    000009e0 00000048
    00000000 00000000

Contents of the .debug_rnglists section:

 Table at Offset: 0:
  Length:          0x5f
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xc, Index: 0
    Offset   Begin    End
    0000000c 0000044a (base address)
    00000011 0000044a 0000044c 
    00000014 00000450 0000046a 
    00000017 <End of list>

 Table at Offset: 0x63:
  Length:          0xf
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x6f, Index: 0
    Offset   Begin    End
    0000006f 000005c0 0000062c 
    00000075 <End of list>

 Table at Offset: 0x76:
  Length:          0x1b
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x82, Index: 0
    Offset   Begin    End
    00000082 00000000 0000007c 
    00000088 0000062c 00000690 
    0000008e 00000000 00000058 
    00000094 <End of list>

 Table at Offset: 0x95:
  Length:          0x44
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xa1, Index: 0
    Offset   Begin    End
    000000a1 00000848 (base address)
    000000a6 00000848 0000084a 
    000000a9 0000084c 0000084e 
    000000ac 00000878 000008a0 
    000000af <End of list>

 Table at Offset: 0xdd:
  Length:          0x21
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xe9, Index: 0
    Offset   Begin    End
    000000e9 000009d8 000009da 
    000000ef 000009da 000009dc 
    000000f5 000009dc 000009de 
    000000fb 000009e0 00000a28 
    00000101 <End of list>

Raw dump of debug contents of section .debug_line:

  Offset:                      0
  Length:                      1118
  DWARF Version:               3
  Prologue Length:             214
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	/usr/lib/gcc/arm-none-eabi/13.2.0/include

 The File Name Table (offset 0x8c):
  Entry	Dir	Time	Size	Name
  1	1	0	0	lidar.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	stddef.h
  5	1	0	0	lidar.h
  6	1	0	0	uart_print.h

 Line Number Statements:
  [0x000000e0]  Set column to 43
  [0x000000e2]  Extended opcode 2: set Address to 0x26c
  [0x000000e9]  Advance Line by 74 to 75
  [0x000000ec]  Copy
  [0x000000ed]  Set is_stmt to 0
  [0x000000ee]  Copy (view 1)
  [0x000000ef]  Set column to 2
  [0x000000f1]  Set is_stmt to 1
  [0x000000f2]  Special opcode 35: advance Address by 4 to 0x270 and Line by 2 to 77
  [0x000000f3]  Set column to 6
  [0x000000f5]  Copy (view 1)
  [0x000000f6]  Set column to 10
  [0x000000f8]  Set is_stmt to 0
  [0x000000f9]  Copy (view 2)
  [0x000000fa]  Set column to 2
  [0x000000fc]  Special opcode 19: advance Address by 2 to 0x272 and Line by 0 to 77
  [0x000000fd]  Set column to 3
  [0x000000ff]  Set is_stmt to 1
  [0x00000100]  Special opcode 20: advance Address by 2 to 0x274 and Line by 1 to 78
  [0x00000101]  Special opcode 90: advance Address by 12 to 0x280 and Line by 1 to 79
  [0x00000102]  Set column to 18
  [0x00000104]  Set is_stmt to 0
  [0x00000105]  Copy (view 1)
  [0x00000106]  Set column to 27
  [0x00000108]  Extended opcode 4: set Discriminator to 3
  [0x0000010c]  Set is_stmt to 1
  [0x0000010d]  Special opcode 45: advance Address by 6 to 0x286 and Line by -2 to 77
  [0x0000010e]  Set column to 19
  [0x00000110]  Extended opcode 4: set Discriminator to 1
  [0x00000114]  Special opcode 19: advance Address by 2 to 0x288 and Line by 0 to 77
  [0x00000115]  Set column to 1
  [0x00000117]  Set is_stmt to 0
  [0x00000118]  Special opcode 51: advance Address by 6 to 0x28e and Line by 4 to 81
  [0x00000119]  Special opcode 19: advance Address by 2 to 0x290 and Line by 0 to 81
  [0x0000011a]  Advance PC by 4 to 0x294
  [0x0000011c]  Extended opcode 1: End of Sequence

  [0x0000011f]  Set column to 29
  [0x00000121]  Extended opcode 2: set Address to 0x294
  [0x00000128]  Advance Line by 82 to 83
  [0x0000012b]  Copy
  [0x0000012c]  Set column to 2
  [0x0000012e]  Special opcode 20: advance Address by 2 to 0x296 and Line by 1 to 84
  [0x0000012f]  Special opcode 90: advance Address by 12 to 0x2a2 and Line by 1 to 85
  [0x00000130]  Special opcode 62: advance Address by 8 to 0x2aa and Line by 1 to 86
  [0x00000131]  Set column to 57
  [0x00000133]  Extended opcode 4: set Discriminator to 1
  [0x00000137]  Copy (view 1)
  [0x00000138]  Set column to 8
  [0x0000013a]  Extended opcode 4: set Discriminator to 1
  [0x0000013e]  Copy (view 2)
  [0x0000013f]  Set column to 9
  [0x00000141]  Extended opcode 4: set Discriminator to 1
  [0x00000145]  Set is_stmt to 0
  [0x00000146]  Copy (view 3)
  [0x00000147]  Set column to 8
  [0x00000149]  Extended opcode 4: set Discriminator to 1
  [0x0000014d]  Special opcode 103: advance Address by 14 to 0x2b8 and Line by 0 to 86
  [0x0000014e]  Set column to 58
  [0x00000150]  Extended opcode 4: set Discriminator to 2
  [0x00000154]  Set is_stmt to 1
  [0x00000155]  Special opcode 33: advance Address by 4 to 0x2bc and Line by 0 to 86
  [0x00000156]  Set column to 2
  [0x00000158]  Special opcode 6: advance Address by 0 to 0x2bc and Line by 1 to 87 (view 1)
  [0x00000159]  Set column to 20
  [0x0000015b]  Set is_stmt to 0
  [0x0000015c]  Copy (view 2)
  [0x0000015d]  Set column to 2
  [0x0000015f]  Set is_stmt to 1
  [0x00000160]  Special opcode 62: advance Address by 8 to 0x2c4 and Line by 1 to 88
  [0x00000161]  Set column to 18
  [0x00000163]  Set is_stmt to 0
  [0x00000164]  Special opcode 33: advance Address by 4 to 0x2c8 and Line by 0 to 88
  [0x00000165]  Set column to 2
  [0x00000167]  Set is_stmt to 1
  [0x00000168]  Special opcode 62: advance Address by 8 to 0x2d0 and Line by 1 to 89
  [0x00000169]  Set column to 19
  [0x0000016b]  Set is_stmt to 0
  [0x0000016c]  Special opcode 33: advance Address by 4 to 0x2d4 and Line by 0 to 89
  [0x0000016d]  Set column to 2
  [0x0000016f]  Set is_stmt to 1
  [0x00000170]  Special opcode 62: advance Address by 8 to 0x2dc and Line by 1 to 90
  [0x00000171]  Set column to 23
  [0x00000173]  Set is_stmt to 0
  [0x00000174]  Copy (view 1)
  [0x00000175]  Set column to 41
  [0x00000177]  Special opcode 33: advance Address by 4 to 0x2e0 and Line by 0 to 90
  [0x00000178]  Set column to 102
  [0x0000017a]  Special opcode 33: advance Address by 4 to 0x2e4 and Line by 0 to 90
  [0x0000017b]  Set column to 20
  [0x0000017d]  Special opcode 33: advance Address by 4 to 0x2e8 and Line by 0 to 90
  [0x0000017e]  Set column to 2
  [0x00000180]  Set is_stmt to 1
  [0x00000181]  Special opcode 34: advance Address by 4 to 0x2ec and Line by 1 to 91
  [0x00000182]  Special opcode 132: advance Address by 18 to 0x2fe and Line by 1 to 92
  [0x00000183]  Special opcode 104: advance Address by 14 to 0x30c and Line by 1 to 93
  [0x00000184]  Special opcode 91: advance Address by 12 to 0x318 and Line by 2 to 95
  [0x00000185]  Set column to 36
  [0x00000187]  Set is_stmt to 0
  [0x00000188]  Special opcode 33: advance Address by 4 to 0x31c and Line by 0 to 95
  [0x00000189]  Set column to 2
  [0x0000018b]  Special opcode 33: advance Address by 4 to 0x320 and Line by 0 to 95
  [0x0000018c]  Extended opcode 4: set Discriminator to 1
  [0x00000190]  Special opcode 33: advance Address by 4 to 0x324 and Line by 0 to 95
  [0x00000191]  Set column to 1
  [0x00000193]  Special opcode 77: advance Address by 10 to 0x32e and Line by 2 to 97
  [0x00000194]  Advance PC by 22 to 0x344
  [0x00000196]  Extended opcode 1: End of Sequence

  [0x00000199]  Set column to 29
  [0x0000019b]  Extended opcode 2: set Address to 0x344
  [0x000001a2]  Advance Line by 98 to 99
  [0x000001a5]  Copy
  [0x000001a6]  Set column to 2
  [0x000001a8]  Special opcode 20: advance Address by 2 to 0x346 and Line by 1 to 100
  [0x000001a9]  Special opcode 118: advance Address by 16 to 0x356 and Line by 1 to 101
  [0x000001aa]  Set column to 1
  [0x000001ac]  Set is_stmt to 0
  [0x000001ad]  Special opcode 76: advance Address by 10 to 0x360 and Line by 1 to 102
  [0x000001ae]  Advance PC by 8 to 0x368
  [0x000001b0]  Extended opcode 1: End of Sequence

  [0x000001b3]  Set column to 28
  [0x000001b5]  Extended opcode 2: set Address to 0x368
  [0x000001bc]  Advance Line by 103 to 104
  [0x000001bf]  Copy
  [0x000001c0]  Set column to 2
  [0x000001c2]  Special opcode 20: advance Address by 2 to 0x36a and Line by 1 to 105
  [0x000001c3]  Special opcode 118: advance Address by 16 to 0x37a and Line by 1 to 106
  [0x000001c4]  Set column to 1
  [0x000001c6]  Set is_stmt to 0
  [0x000001c7]  Special opcode 76: advance Address by 10 to 0x384 and Line by 1 to 107
  [0x000001c8]  Advance PC by 8 to 0x38c
  [0x000001ca]  Extended opcode 1: End of Sequence

  [0x000001cd]  Set column to 26
  [0x000001cf]  Extended opcode 2: set Address to 0x38c
  [0x000001d6]  Advance Line by 108 to 109
  [0x000001d9]  Copy
  [0x000001da]  Set column to 2
  [0x000001dc]  Special opcode 20: advance Address by 2 to 0x38e and Line by 1 to 110
  [0x000001dd]  Set column to 7
  [0x000001df]  Set is_stmt to 0
  [0x000001e0]  Copy (view 1)
  [0x000001e1]  Set column to 3
  [0x000001e3]  Set is_stmt to 1
  [0x000001e4]  Special opcode 20: advance Address by 2 to 0x390 and Line by 1 to 111
  [0x000001e5]  Special opcode 104: advance Address by 14 to 0x39e and Line by 1 to 112
  [0x000001e6]  Set column to 8
  [0x000001e8]  Special opcode 59: advance Address by 8 to 0x3a6 and Line by -2 to 110
  [0x000001e9]  Extended opcode 4: set Discriminator to 1
  [0x000001ed]  Set is_stmt to 0
  [0x000001ee]  Special opcode 89: advance Address by 12 to 0x3b2 and Line by 0 to 110
  [0x000001ef]  Set column to 1
  [0x000001f1]  Special opcode 37: advance Address by 4 to 0x3b6 and Line by 4 to 114
  [0x000001f2]  Advance PC by 6 to 0x3bc
  [0x000001f4]  Extended opcode 1: End of Sequence

  [0x000001f7]  Set column to 67
  [0x000001f9]  Extended opcode 2: set Address to 0x3bc
  [0x00000200]  Advance Line by 115 to 116
  [0x00000203]  Copy
  [0x00000204]  Set is_stmt to 0
  [0x00000205]  Copy (view 1)
  [0x00000206]  Set column to 2
  [0x00000208]  Set is_stmt to 1
  [0x00000209]  Special opcode 132: advance Address by 18 to 0x3ce and Line by 1 to 117
  [0x0000020a]  Set column to 17
  [0x0000020c]  Set is_stmt to 0
  [0x0000020d]  Copy (view 1)
  [0x0000020e]  Set column to 28
  [0x00000210]  Special opcode 33: advance Address by 4 to 0x3d2 and Line by 0 to 117
  [0x00000211]  Set column to 38
  [0x00000213]  Special opcode 61: advance Address by 8 to 0x3da and Line by 0 to 117
  [0x00000214]  Set column to 51
  [0x00000216]  Special opcode 33: advance Address by 4 to 0x3de and Line by 0 to 117
  [0x00000217]  Set column to 8
  [0x00000219]  Special opcode 33: advance Address by 4 to 0x3e2 and Line by 0 to 117
  [0x0000021a]  Set column to 2
  [0x0000021c]  Set is_stmt to 1
  [0x0000021d]  Special opcode 34: advance Address by 4 to 0x3e6 and Line by 1 to 118
  [0x0000021e]  Set column to 39
  [0x00000220]  Set is_stmt to 0
  [0x00000221]  Copy (view 1)
  [0x00000222]  Set column to 8
  [0x00000224]  Special opcode 61: advance Address by 8 to 0x3ee and Line by 0 to 118
  [0x00000225]  Set column to 2
  [0x00000227]  Set is_stmt to 1
  [0x00000228]  Special opcode 36: advance Address by 4 to 0x3f2 and Line by 3 to 121
  [0x00000229]  Set column to 4
  [0x0000022b]  Set is_stmt to 0
  [0x0000022c]  Copy (view 1)
  [0x0000022d]  Set column to 16
  [0x0000022f]  Extended opcode 4: set Discriminator to 2
  [0x00000233]  Special opcode 75: advance Address by 10 to 0x3fc and Line by 0 to 121
  [0x00000234]  Set column to 32
  [0x00000236]  Extended opcode 4: set Discriminator to 3
  [0x0000023a]  Set is_stmt to 1
  [0x0000023b]  Special opcode 103: advance Address by 14 to 0x40a and Line by 0 to 121
  [0x0000023c]  Extended opcode 4: set Discriminator to 3
  [0x00000240]  Set is_stmt to 0
  [0x00000241]  Special opcode 19: advance Address by 2 to 0x40c and Line by 0 to 121
  [0x00000242]  Set column to 2
  [0x00000244]  Set is_stmt to 1
  [0x00000245]  Special opcode 35: advance Address by 4 to 0x410 and Line by 2 to 123
  [0x00000246]  Set column to 9
  [0x00000248]  Set is_stmt to 0
  [0x00000249]  Copy (view 1)
  [0x0000024a]  Set column to 1
  [0x0000024c]  Special opcode 34: advance Address by 4 to 0x414 and Line by 1 to 124
  [0x0000024d]  Advance PC by 24 to 0x42c
  [0x0000024f]  Extended opcode 1: End of Sequence

  [0x00000252]  Set column to 39
  [0x00000254]  Extended opcode 2: set Address to 0x42c
  [0x0000025b]  Advance Line by 125 to 126
  [0x0000025e]  Copy
  [0x0000025f]  Set column to 2
  [0x00000261]  Special opcode 6: advance Address by 0 to 0x42c and Line by 1 to 127 (view 1)
  [0x00000262]  Set column to 1
  [0x00000264]  Set is_stmt to 0
  [0x00000265]  Special opcode 6: advance Address by 0 to 0x42c and Line by 1 to 128 (view 2)
  [0x00000266]  Special opcode 19: advance Address by 2 to 0x42e and Line by 0 to 128
  [0x00000267]  Advance PC by 2 to 0x430
  [0x00000269]  Extended opcode 1: End of Sequence

  [0x0000026c]  Set column to 37
  [0x0000026e]  Extended opcode 2: set Address to 0x430
  [0x00000275]  Advance Line by 130 to 131
  [0x00000278]  Copy
  [0x00000279]  Set column to 2
  [0x0000027b]  Special opcode 6: advance Address by 0 to 0x430 and Line by 1 to 132 (view 1)
  [0x0000027c]  Set column to 17
  [0x0000027e]  Set is_stmt to 0
  [0x0000027f]  Copy (view 2)
  [0x00000280]  Set column to 4
  [0x00000282]  Special opcode 19: advance Address by 2 to 0x432 and Line by 0 to 132
  [0x00000283]  Set column to 2
  [0x00000285]  Set is_stmt to 1
  [0x00000286]  Special opcode 62: advance Address by 8 to 0x43a and Line by 1 to 133
  [0x00000287]  Set column to 19
  [0x00000289]  Set is_stmt to 0
  [0x0000028a]  Copy (view 1)
  [0x0000028b]  Set column to 4
  [0x0000028d]  Special opcode 19: advance Address by 2 to 0x43c and Line by 0 to 133
  [0x0000028e]  Set column to 2
  [0x00000290]  Set is_stmt to 1
  [0x00000291]  Special opcode 48: advance Address by 6 to 0x442 and Line by 1 to 134
  [0x00000292]  Set column to 19
  [0x00000294]  Set is_stmt to 0
  [0x00000295]  Copy (view 1)
  [0x00000296]  Set column to 4
  [0x00000298]  Special opcode 19: advance Address by 2 to 0x444 and Line by 0 to 134
  [0x00000299]  Set column to 13
  [0x0000029b]  Special opcode 51: advance Address by 6 to 0x44a and Line by 4 to 138
  [0x0000029c]  Set column to 11
  [0x0000029e]  Special opcode 17: advance Address by 2 to 0x44c and Line by -2 to 136
  [0x0000029f]  Set column to 3
  [0x000002a1]  Set is_stmt to 1
  [0x000002a2]  Special opcode 36: advance Address by 4 to 0x450 and Line by 3 to 139
  [0x000002a3]  Set column to 30
  [0x000002a5]  Set is_stmt to 0
  [0x000002a6]  Copy (view 1)
  [0x000002a7]  Set column to 11
  [0x000002a9]  Special opcode 33: advance Address by 4 to 0x454 and Line by 0 to 139
  [0x000002aa]  Set column to 3
  [0x000002ac]  Set is_stmt to 1
  [0x000002ad]  Special opcode 20: advance Address by 2 to 0x456 and Line by 1 to 140
  [0x000002ae]  Set column to 11
  [0x000002b0]  Set is_stmt to 0
  [0x000002b1]  Copy (view 1)
  [0x000002b2]  Set column to 3
  [0x000002b4]  Set is_stmt to 1
  [0x000002b5]  Special opcode 48: advance Address by 6 to 0x45c and Line by 1 to 141
  [0x000002b6]  Set column to 27
  [0x000002b8]  Set is_stmt to 0
  [0x000002b9]  Copy (view 1)
  [0x000002ba]  Special opcode 33: advance Address by 4 to 0x460 and Line by 0 to 141
  [0x000002bb]  Set column to 12
  [0x000002bd]  Special opcode 19: advance Address by 2 to 0x462 and Line by 0 to 141
  [0x000002be]  Special opcode 19: advance Address by 2 to 0x464 and Line by 0 to 141
  [0x000002bf]  Special opcode 19: advance Address by 2 to 0x466 and Line by 0 to 141
  [0x000002c0]  Set column to 22
  [0x000002c2]  Extended opcode 4: set Discriminator to 1
  [0x000002c6]  Set is_stmt to 1
  [0x000002c7]  Special opcode 2: advance Address by 0 to 0x466 and Line by -3 to 138 (view 1)
  [0x000002c8]  Set column to 2
  [0x000002ca]  Special opcode 39: advance Address by 4 to 0x46a and Line by 6 to 144
  [0x000002cb]  Set column to 34
  [0x000002cd]  Set is_stmt to 0
  [0x000002ce]  Copy (view 1)
  [0x000002cf]  Set column to 19
  [0x000002d1]  Special opcode 19: advance Address by 2 to 0x46c and Line by 0 to 144
  [0x000002d2]  Set column to 51
  [0x000002d4]  Extended opcode 4: set Discriminator to 1
  [0x000002d8]  Advance Line by -12 to 132
  [0x000002da]  Special opcode 61: advance Address by 8 to 0x474 and Line by 0 to 132
  [0x000002db]  Extended opcode 4: set Discriminator to 1
  [0x000002df]  Special opcode 19: advance Address by 2 to 0x476 and Line by 0 to 132
  [0x000002e0]  Set column to 47
  [0x000002e2]  Extended opcode 4: set Discriminator to 1
  [0x000002e6]  Special opcode 20: advance Address by 2 to 0x478 and Line by 1 to 133
  [0x000002e7]  Extended opcode 4: set Discriminator to 1
  [0x000002eb]  Special opcode 19: advance Address by 2 to 0x47a and Line by 0 to 133
  [0x000002ec]  Set column to 45
  [0x000002ee]  Extended opcode 4: set Discriminator to 1
  [0x000002f2]  Special opcode 20: advance Address by 2 to 0x47c and Line by 1 to 134
  [0x000002f3]  Set column to 1
  [0x000002f5]  Advance Line by 11 to 145
  [0x000002f7]  Special opcode 19: advance Address by 2 to 0x47e and Line by 0 to 145
  [0x000002f8]  Advance PC by 2 to 0x480
  [0x000002fa]  Extended opcode 1: End of Sequence

  [0x000002fd]  Set column to 28
  [0x000002ff]  Extended opcode 2: set Address to 0x480
  [0x00000306]  Advance Line by 146 to 147
  [0x00000309]  Copy
  [0x0000030a]  Set column to 2
  [0x0000030c]  Special opcode 20: advance Address by 2 to 0x482 and Line by 1 to 148
  [0x0000030d]  Special opcode 6: advance Address by 0 to 0x482 and Line by 1 to 149 (view 1)
  [0x0000030e]  Special opcode 6: advance Address by 0 to 0x482 and Line by 1 to 150 (view 2)
  [0x0000030f]  Special opcode 6: advance Address by 0 to 0x482 and Line by 1 to 151 (view 3)
  [0x00000310]  Special opcode 6: advance Address by 0 to 0x482 and Line by 1 to 152 (view 4)
  [0x00000311]  Special opcode 7: advance Address by 0 to 0x482 and Line by 2 to 154 (view 5)
  [0x00000312]  Set column to 7
  [0x00000314]  Set is_stmt to 0
  [0x00000315]  Copy (view 6)
  [0x00000316]  Set is_stmt to 1
  [0x00000317]  Advance Line by 10 to 164
  [0x00000319]  Special opcode 19: advance Address by 2 to 0x484 and Line by 0 to 164
  [0x0000031a]  Set column to 9
  [0x0000031c]  Set is_stmt to 0
  [0x0000031d]  Copy (view 1)
  [0x0000031e]  Set column to 7
  [0x00000320]  Set is_stmt to 1
  [0x00000321]  Special opcode 34: advance Address by 4 to 0x488 and Line by 1 to 165
  [0x00000322]  Set column to 29
  [0x00000324]  Set is_stmt to 0
  [0x00000325]  Copy (view 1)
  [0x00000326]  Set column to 6
  [0x00000328]  Set is_stmt to 1
  [0x00000329]  Special opcode 34: advance Address by 4 to 0x48c and Line by 1 to 166
  [0x0000032a]  Set column to 5
  [0x0000032c]  Advance Line by 11 to 177
  [0x0000032e]  Special opcode 19: advance Address by 2 to 0x48e and Line by 0 to 177
  [0x0000032f]  Set column to 36
  [0x00000331]  Set is_stmt to 0
  [0x00000332]  Copy (view 1)
  [0x00000333]  Set column to 40
  [0x00000335]  Special opcode 61: advance Address by 8 to 0x496 and Line by 0 to 177
  [0x00000336]  Set column to 5
  [0x00000338]  Set is_stmt to 1
  [0x00000339]  Special opcode 36: advance Address by 4 to 0x49a and Line by 3 to 180
  [0x0000033a]  Set column to 7
  [0x0000033c]  Set is_stmt to 0
  [0x0000033d]  Copy (view 1)
  [0x0000033e]  Set column to 5
  [0x00000340]  Set is_stmt to 1
  [0x00000341]  Special opcode 35: advance Address by 4 to 0x49e and Line by 2 to 182
  [0x00000342]  Set column to 8
  [0x00000344]  Set is_stmt to 0
  [0x00000345]  Copy (view 1)
  [0x00000346]  Set column to 7
  [0x00000348]  Extended opcode 4: set Discriminator to 1
  [0x0000034c]  Special opcode 47: advance Address by 6 to 0x4a4 and Line by 0 to 182
  [0x0000034d]  Set column to 5
  [0x0000034f]  Set is_stmt to 1
  [0x00000350]  Special opcode 36: advance Address by 4 to 0x4a8 and Line by 3 to 185
  [0x00000351]  Set column to 27
  [0x00000353]  Set is_stmt to 0
  [0x00000354]  Copy (view 1)
  [0x00000355]  Set column to 7
  [0x00000357]  Special opcode 33: advance Address by 4 to 0x4ac and Line by 0 to 185
  [0x00000358]  Set column to 5
  [0x0000035a]  Set is_stmt to 1
  [0x0000035b]  Special opcode 39: advance Address by 4 to 0x4b0 and Line by 6 to 191
  [0x0000035c]  Set column to 18
  [0x0000035e]  Set is_stmt to 0
  [0x0000035f]  Copy (view 1)
  [0x00000360]  Set column to 5
  [0x00000362]  Set is_stmt to 1
  [0x00000363]  Special opcode 48: advance Address by 6 to 0x4b6 and Line by 1 to 192
  [0x00000364]  Set column to 19
  [0x00000366]  Set is_stmt to 0
  [0x00000367]  Copy (view 1)
  [0x00000368]  Set column to 5
  [0x0000036a]  Set is_stmt to 1
  [0x0000036b]  Special opcode 34: advance Address by 4 to 0x4ba and Line by 1 to 193
  [0x0000036c]  Set column to 16
  [0x0000036e]  Set is_stmt to 0
  [0x0000036f]  Copy (view 1)
  [0x00000370]  Set column to 6
  [0x00000372]  Set is_stmt to 1
  [0x00000373]  Special opcode 48: advance Address by 6 to 0x4c0 and Line by 1 to 194
  [0x00000374]  Set is_stmt to 0
  [0x00000375]  Copy (view 1)
  [0x00000376]  Set column to 8
  [0x00000378]  Set is_stmt to 1
  [0x00000379]  Advance Line by -40 to 154
  [0x0000037b]  Copy (view 2)
  [0x0000037c]  Extended opcode 4: set Discriminator to 1
  [0x00000380]  Set is_stmt to 0
  [0x00000381]  Special opcode 89: advance Address by 12 to 0x4cc and Line by 0 to 154
  [0x00000382]  Set column to 3
  [0x00000384]  Set is_stmt to 1
  [0x00000385]  Special opcode 34: advance Address by 4 to 0x4d0 and Line by 1 to 155
  [0x00000386]  Set column to 22
  [0x00000388]  Set is_stmt to 0
  [0x00000389]  Copy (view 1)
  [0x0000038a]  Set column to 11
  [0x0000038c]  Extended opcode 4: set Discriminator to 1
  [0x00000390]  Special opcode 103: advance Address by 14 to 0x4de and Line by 0 to 155
  [0x00000391]  Set column to 3
  [0x00000393]  Set is_stmt to 1
  [0x00000394]  Special opcode 20: advance Address by 2 to 0x4e0 and Line by 1 to 156
  [0x00000395]  Set column to 6
  [0x00000397]  Set is_stmt to 0
  [0x00000398]  Copy (view 1)
  [0x00000399]  Set column to 5
  [0x0000039b]  Extended opcode 4: set Discriminator to 1
  [0x0000039f]  Special opcode 61: advance Address by 8 to 0x4e8 and Line by 0 to 156
  [0x000003a0]  Set column to 3
  [0x000003a2]  Set is_stmt to 1
  [0x000003a3]  Special opcode 21: advance Address by 2 to 0x4ea and Line by 2 to 158
  [0x000003a4]  Set column to 5
  [0x000003a6]  Special opcode 121: advance Address by 16 to 0x4fa and Line by 4 to 162
  [0x000003a7]  Set column to 24
  [0x000003a9]  Set is_stmt to 0
  [0x000003aa]  Copy (view 1)
  [0x000003ab]  Set column to 7
  [0x000003ad]  Set is_stmt to 1
  [0x000003ae]  Special opcode 124: advance Address by 16 to 0x50a and Line by 7 to 169
  [0x000003af]  Set column to 9
  [0x000003b1]  Set is_stmt to 0
  [0x000003b2]  Copy (view 1)
  [0x000003b3]  Set column to 7
  [0x000003b5]  Set is_stmt to 1
  [0x000003b6]  Special opcode 34: advance Address by 4 to 0x50e and Line by 1 to 170
  [0x000003b7]  Set column to 29
  [0x000003b9]  Set is_stmt to 0
  [0x000003ba]  Copy (view 1)
  [0x000003bb]  Set column to 7
  [0x000003bd]  Set is_stmt to 1
  [0x000003be]  Special opcode 34: advance Address by 4 to 0x512 and Line by 1 to 171
  [0x000003bf]  Set column to 18
  [0x000003c1]  Set is_stmt to 0
  [0x000003c2]  Copy (view 1)
  [0x000003c3]  Set column to 6
  [0x000003c5]  Set is_stmt to 1
  [0x000003c6]  Special opcode 48: advance Address by 6 to 0x518 and Line by 1 to 172
  [0x000003c7]  Advance Line by 14 to 186
  [0x000003c9]  Special opcode 19: advance Address by 2 to 0x51a and Line by 0 to 186
  [0x000003ca]  Special opcode 48: advance Address by 6 to 0x520 and Line by 1 to 187
  [0x000003cb]  Set is_stmt to 0
  [0x000003cc]  Copy (view 1)
  [0x000003cd]  Set column to 2
  [0x000003cf]  Set is_stmt to 1
  [0x000003d0]  Advance Line by 37 to 224
  [0x000003d2]  Copy (view 2)
  [0x000003d3]  Special opcode 90: advance Address by 12 to 0x52c and Line by 1 to 225
  [0x000003d4]  Set column to 15
  [0x000003d6]  Set is_stmt to 0
  [0x000003d7]  Copy (view 1)
  [0x000003d8]  Set column to 2
  [0x000003da]  Set is_stmt to 1
  [0x000003db]  Special opcode 48: advance Address by 6 to 0x532 and Line by 1 to 226
  [0x000003dc]  Set column to 16
  [0x000003de]  Set is_stmt to 0
  [0x000003df]  Copy (view 1)
  [0x000003e0]  Set column to 2
  [0x000003e2]  Set is_stmt to 1
  [0x000003e3]  Special opcode 34: advance Address by 4 to 0x536 and Line by 1 to 227
  [0x000003e4]  Set column to 13
  [0x000003e6]  Set is_stmt to 0
  [0x000003e7]  Copy (view 1)
  [0x000003e8]  Set column to 2
  [0x000003ea]  Set is_stmt to 1
  [0x000003eb]  Special opcode 49: advance Address by 6 to 0x53c and Line by 2 to 229
  [0x000003ec]  Set column to 1
  [0x000003ee]  Set is_stmt to 0
  [0x000003ef]  Special opcode 49: advance Address by 6 to 0x542 and Line by 2 to 231
  [0x000003f0]  Set column to 5
  [0x000003f2]  Set is_stmt to 1
  [0x000003f3]  Advance Line by -34 to 197
  [0x000003f5]  Special opcode 19: advance Address by 2 to 0x544 and Line by 0 to 197
  [0x000003f6]  Special opcode 7: advance Address by 0 to 0x544 and Line by 2 to 199 (view 1)
  [0x000003f7]  Set column to 7
  [0x000003f9]  Special opcode 81: advance Address by 10 to 0x54e and Line by 6 to 205
  [0x000003fa]  Set column to 12
  [0x000003fc]  Set is_stmt to 0
  [0x000003fd]  Copy (view 1)
  [0x000003fe]  Set column to 7
  [0x00000400]  Set is_stmt to 1
  [0x00000401]  Special opcode 34: advance Address by 4 to 0x552 and Line by 1 to 206
  [0x00000402]  Set column to 36
  [0x00000404]  Set is_stmt to 0
  [0x00000405]  Copy (view 1)
  [0x00000406]  Set column to 16
  [0x00000408]  Special opcode 33: advance Address by 4 to 0x556 and Line by 0 to 206
  [0x00000409]  Set column to 7
  [0x0000040b]  Set is_stmt to 1
  [0x0000040c]  Special opcode 34: advance Address by 4 to 0x55a and Line by 1 to 207
  [0x0000040d]  Set column to 57
  [0x0000040f]  Set is_stmt to 0
  [0x00000410]  Copy (view 1)
  [0x00000411]  Set column to 93
  [0x00000413]  Special opcode 33: advance Address by 4 to 0x55e and Line by 0 to 207
  [0x00000414]  Set column to 24
  [0x00000416]  Special opcode 19: advance Address by 2 to 0x560 and Line by 0 to 207
  [0x00000417]  Set column to 7
  [0x00000419]  Set is_stmt to 1
  [0x0000041a]  Special opcode 106: advance Address by 14 to 0x56e and Line by 3 to 210
  [0x0000041b]  Set column to 22
  [0x0000041d]  Set is_stmt to 0
  [0x0000041e]  Copy (view 1)
  [0x0000041f]  Set column to 9
  [0x00000421]  Special opcode 47: advance Address by 6 to 0x574 and Line by 0 to 210
  [0x00000422]  Set column to 31
  [0x00000424]  Extended opcode 4: set Discriminator to 1
  [0x00000428]  Set is_stmt to 1
  [0x00000429]  Special opcode 19: advance Address by 2 to 0x576 and Line by 0 to 210
  [0x0000042a]  Set column to 52
  [0x0000042c]  Extended opcode 4: set Discriminator to 1
  [0x00000430]  Set is_stmt to 0
  [0x00000431]  Copy (view 1)
  [0x00000432]  Extended opcode 4: set Discriminator to 1
  [0x00000436]  Special opcode 19: advance Address by 2 to 0x578 and Line by 0 to 210
  [0x00000437]  Set column to 50
  [0x00000439]  Extended opcode 4: set Discriminator to 1
  [0x0000043d]  Special opcode 33: advance Address by 4 to 0x57c and Line by 0 to 210
  [0x0000043e]  Set column to 7
  [0x00000440]  Set is_stmt to 1
  [0x00000441]  Special opcode 50: advance Address by 6 to 0x582 and Line by 3 to 213
  [0x00000442]  Set column to 10
  [0x00000444]  Set is_stmt to 0
  [0x00000445]  Copy (view 1)
  [0x00000446]  Set column to 9
  [0x00000448]  Special opcode 47: advance Address by 6 to 0x588 and Line by 0 to 213
  [0x00000449]  Set column to 48
  [0x0000044b]  Special opcode 19: advance Address by 2 to 0x58a and Line by 0 to 213
  [0x0000044c]  Set column to 9
  [0x0000044e]  Special opcode 33: advance Address by 4 to 0x58e and Line by 0 to 213
  [0x0000044f]  Set column to 7
  [0x00000451]  Set is_stmt to 1
  [0x00000452]  Advance Line by -12 to 201
  [0x00000454]  Special opcode 47: advance Address by 6 to 0x594 and Line by 0 to 201
  [0x00000455]  Set column to 11
  [0x00000457]  Set is_stmt to 0
  [0x00000458]  Copy (view 1)
  [0x00000459]  Set column to 6
  [0x0000045b]  Set is_stmt to 1
  [0x0000045c]  Special opcode 34: advance Address by 4 to 0x598 and Line by 1 to 202
  [0x0000045d]  Advance PC by 40 to 0x5c0
  [0x0000045f]  Extended opcode 1: End of Sequence


  Offset:                      0x462
  Length:                      207
  DWARF Version:               3
  Prologue Length:             159
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x47d):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x4c4):
  Entry	Dir	Time	Size	Name
  1	1	0	0	main.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x0000050b]  Set column to 17
  [0x0000050d]  Extended opcode 2: set Address to 0x5c0
  [0x00000514]  Advance Line by 19 to 20
  [0x00000516]  Copy
  [0x00000517]  Set column to 2
  [0x00000519]  Special opcode 20: advance Address by 2 to 0x5c2 and Line by 1 to 21
  [0x0000051a]  Special opcode 91: advance Address by 12 to 0x5ce and Line by 2 to 23
  [0x0000051b]  Special opcode 34: advance Address by 4 to 0x5d2 and Line by 1 to 24
  [0x0000051c]  Special opcode 48: advance Address by 6 to 0x5d8 and Line by 1 to 25
  [0x0000051d]  Special opcode 34: advance Address by 4 to 0x5dc and Line by 1 to 26
  [0x0000051e]  Special opcode 48: advance Address by 6 to 0x5e2 and Line by 1 to 27
  [0x0000051f]  Special opcode 34: advance Address by 4 to 0x5e6 and Line by 1 to 28
  [0x00000520]  Special opcode 48: advance Address by 6 to 0x5ec and Line by 1 to 29
  [0x00000521]  Special opcode 76: advance Address by 10 to 0x5f6 and Line by 1 to 30
  [0x00000522]  Special opcode 34: advance Address by 4 to 0x5fa and Line by 1 to 31
  [0x00000523]  Special opcode 48: advance Address by 6 to 0x600 and Line by 1 to 32
  [0x00000524]  Special opcode 34: advance Address by 4 to 0x604 and Line by 1 to 33
  [0x00000525]  Special opcode 48: advance Address by 6 to 0x60a and Line by 1 to 34
  [0x00000526]  Set column to 3
  [0x00000528]  Extended opcode 4: set Discriminator to 1
  [0x0000052c]  Special opcode 6: advance Address by 0 to 0x60a and Line by 1 to 35 (view 1)
  [0x0000052d]  Set column to 7
  [0x0000052f]  Special opcode 32: advance Address by 4 to 0x60e and Line by -1 to 34
  [0x00000530]  Advance PC by 30 to 0x62c
  [0x00000532]  Extended opcode 1: End of Sequence


  Offset:                      0x535
  Length:                      496
  DWARF Version:               3
  Prologue Length:             146
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x550):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x597):
  Entry	Dir	Time	Size	Name
  1	1	0	0	timers.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	timers.h

 Line Number Statements:
  [0x000005d1]  Set column to 35
  [0x000005d3]  Extended opcode 2: set Address to 0
  [0x000005da]  Advance Line by 15 to 16
  [0x000005dc]  Copy
  [0x000005dd]  Set column to 2
  [0x000005df]  Special opcode 21: advance Address by 2 to 0x2 and Line by 2 to 18
  [0x000005e0]  Set column to 21
  [0x000005e2]  Set is_stmt to 0
  [0x000005e3]  Special opcode 47: advance Address by 6 to 0x8 and Line by 0 to 18
  [0x000005e4]  Set column to 2
  [0x000005e6]  Set is_stmt to 1
  [0x000005e7]  Special opcode 63: advance Address by 8 to 0x10 and Line by 2 to 20
  [0x000005e8]  Set column to 53
  [0x000005ea]  Extended opcode 4: set Discriminator to 1
  [0x000005ee]  Copy (view 1)
  [0x000005ef]  Set column to 9
  [0x000005f1]  Extended opcode 4: set Discriminator to 1
  [0x000005f5]  Copy (view 2)
  [0x000005f6]  Set column to 11
  [0x000005f8]  Extended opcode 4: set Discriminator to 1
  [0x000005fc]  Set is_stmt to 0
  [0x000005fd]  Copy (view 3)
  [0x000005fe]  Set column to 9
  [0x00000600]  Extended opcode 4: set Discriminator to 1
  [0x00000604]  Special opcode 47: advance Address by 6 to 0x16 and Line by 0 to 20
  [0x00000605]  Set column to 2
  [0x00000607]  Set is_stmt to 1
  [0x00000608]  Special opcode 49: advance Address by 6 to 0x1c and Line by 2 to 22
  [0x00000609]  Set column to 15
  [0x0000060b]  Set is_stmt to 0
  [0x0000060c]  Special opcode 33: advance Address by 4 to 0x20 and Line by 0 to 22
  [0x0000060d]  Set column to 2
  [0x0000060f]  Set is_stmt to 1
  [0x00000610]  Special opcode 48: advance Address by 6 to 0x26 and Line by 1 to 23
  [0x00000611]  Set column to 15
  [0x00000613]  Set is_stmt to 0
  [0x00000614]  Special opcode 19: advance Address by 2 to 0x28 and Line by 0 to 23
  [0x00000615]  Set column to 2
  [0x00000617]  Set is_stmt to 1
  [0x00000618]  Special opcode 48: advance Address by 6 to 0x2e and Line by 1 to 24
  [0x00000619]  Set column to 15
  [0x0000061b]  Set is_stmt to 0
  [0x0000061c]  Copy (view 1)
  [0x0000061d]  Set column to 2
  [0x0000061f]  Set is_stmt to 1
  [0x00000620]  Special opcode 34: advance Address by 4 to 0x32 and Line by 1 to 25
  [0x00000621]  Set column to 16
  [0x00000623]  Set is_stmt to 0
  [0x00000624]  Special opcode 19: advance Address by 2 to 0x34 and Line by 0 to 25
  [0x00000625]  Set column to 2
  [0x00000627]  Set is_stmt to 1
  [0x00000628]  Special opcode 48: advance Address by 6 to 0x3a and Line by 1 to 26
  [0x00000629]  Set column to 19
  [0x0000062b]  Set is_stmt to 0
  [0x0000062c]  Copy (view 1)
  [0x0000062d]  Extended opcode 4: set Discriminator to 1
  [0x00000631]  Special opcode 75: advance Address by 10 to 0x44 and Line by 0 to 26
  [0x00000632]  Set column to 31
  [0x00000634]  Extended opcode 4: set Discriminator to 1
  [0x00000638]  Special opcode 19: advance Address by 2 to 0x46 and Line by 0 to 26
  [0x00000639]  Set column to 17
  [0x0000063b]  Extended opcode 4: set Discriminator to 1
  [0x0000063f]  Special opcode 19: advance Address by 2 to 0x48 and Line by 0 to 26
  [0x00000640]  Set column to 2
  [0x00000642]  Set is_stmt to 1
  [0x00000643]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 27
  [0x00000644]  Set column to 16
  [0x00000646]  Set is_stmt to 0
  [0x00000647]  Copy (view 1)
  [0x00000648]  Set column to 2
  [0x0000064a]  Set is_stmt to 1
  [0x0000064b]  Special opcode 20: advance Address by 2 to 0x4c and Line by 1 to 28
  [0x0000064c]  Set column to 15
  [0x0000064e]  Set is_stmt to 0
  [0x0000064f]  Special opcode 19: advance Address by 2 to 0x4e and Line by 0 to 28
  [0x00000650]  Set column to 2
  [0x00000652]  Set is_stmt to 1
  [0x00000653]  Special opcode 48: advance Address by 6 to 0x54 and Line by 1 to 29
  [0x00000654]  Set column to 15
  [0x00000656]  Set is_stmt to 0
  [0x00000657]  Special opcode 19: advance Address by 2 to 0x56 and Line by 0 to 29
  [0x00000658]  Set column to 2
  [0x0000065a]  Set is_stmt to 1
  [0x0000065b]  Special opcode 48: advance Address by 6 to 0x5c and Line by 1 to 30
  [0x0000065c]  Set column to 13
  [0x0000065e]  Set is_stmt to 0
  [0x0000065f]  Copy (view 1)
  [0x00000660]  Set column to 2
  [0x00000662]  Set is_stmt to 1
  [0x00000663]  Special opcode 90: advance Address by 12 to 0x68 and Line by 1 to 31
  [0x00000664]  Set column to 15
  [0x00000666]  Set is_stmt to 0
  [0x00000667]  Special opcode 19: advance Address by 2 to 0x6a and Line by 0 to 31
  [0x00000668]  Set column to 1
  [0x0000066a]  Special opcode 48: advance Address by 6 to 0x70 and Line by 1 to 32
  [0x0000066b]  Advance PC by 12 to 0x7c
  [0x0000066d]  Extended opcode 1: End of Sequence

  [0x00000670]  Set column to 27
  [0x00000672]  Extended opcode 2: set Address to 0x62c
  [0x00000679]  Advance Line by 33 to 34
  [0x0000067b]  Copy
  [0x0000067c]  Set column to 2
  [0x0000067e]  Special opcode 20: advance Address by 2 to 0x62e and Line by 1 to 35
  [0x0000067f]  Special opcode 6: advance Address by 0 to 0x62e and Line by 1 to 36 (view 1)
  [0x00000680]  Special opcode 7: advance Address by 0 to 0x62e and Line by 2 to 38 (view 2)
  [0x00000681]  Set column to 15
  [0x00000683]  Set is_stmt to 0
  [0x00000684]  Special opcode 33: advance Address by 4 to 0x632 and Line by 0 to 38
  [0x00000685]  Set column to 2
  [0x00000687]  Set is_stmt to 1
  [0x00000688]  Special opcode 48: advance Address by 6 to 0x638 and Line by 1 to 39
  [0x00000689]  Set column to 15
  [0x0000068b]  Set is_stmt to 0
  [0x0000068c]  Special opcode 19: advance Address by 2 to 0x63a and Line by 0 to 39
  [0x0000068d]  Set column to 2
  [0x0000068f]  Set is_stmt to 1
  [0x00000690]  Special opcode 49: advance Address by 6 to 0x640 and Line by 2 to 41
  [0x00000691]  Set column to 23
  [0x00000693]  Set is_stmt to 0
  [0x00000694]  Copy (view 1)
  [0x00000695]  Set column to 2
  [0x00000697]  Set is_stmt to 1
  [0x00000698]  Special opcode 120: advance Address by 16 to 0x650 and Line by 3 to 44
  [0x00000699]  Set column to 5
  [0x0000069b]  Set is_stmt to 0
  [0x0000069c]  Copy (view 1)
  [0x0000069d]  Set column to 4
  [0x0000069f]  Special opcode 61: advance Address by 8 to 0x658 and Line by 0 to 44
  [0x000006a0]  Set column to 2
  [0x000006a2]  Set is_stmt to 1
  [0x000006a3]  Special opcode 52: advance Address by 6 to 0x65e and Line by 5 to 49
  [0x000006a4]  Set column to 15
  [0x000006a6]  Set is_stmt to 0
  [0x000006a7]  Special opcode 33: advance Address by 4 to 0x662 and Line by 0 to 49
  [0x000006a8]  Set column to 1
  [0x000006aa]  Special opcode 48: advance Address by 6 to 0x668 and Line by 1 to 50
  [0x000006ab]  Set column to 3
  [0x000006ad]  Set is_stmt to 1
  [0x000006ae]  Special opcode 42: advance Address by 6 to 0x66e and Line by -5 to 45
  [0x000006af]  Set column to 17
  [0x000006b1]  Set is_stmt to 0
  [0x000006b2]  Copy (view 1)
  [0x000006b3]  Set column to 3
  [0x000006b5]  Set is_stmt to 1
  [0x000006b6]  Special opcode 62: advance Address by 8 to 0x676 and Line by 1 to 46
  [0x000006b7]  Set column to 18
  [0x000006b9]  Set is_stmt to 0
  [0x000006ba]  Copy (view 1)
  [0x000006bb]  Advance PC by 26 to 0x690
  [0x000006bd]  Extended opcode 1: End of Sequence

  [0x000006c0]  Set column to 34
  [0x000006c2]  Extended opcode 2: set Address to 0
  [0x000006c9]  Advance Line by 51 to 52
  [0x000006cb]  Copy
  [0x000006cc]  Set column to 3
  [0x000006ce]  Special opcode 39: advance Address by 4 to 0x4 and Line by 6 to 58
  [0x000006cf]  Set column to 22
  [0x000006d1]  Set is_stmt to 0
  [0x000006d2]  Copy (view 1)
  [0x000006d3]  Set column to 3
  [0x000006d5]  Set is_stmt to 1
  [0x000006d6]  Special opcode 48: advance Address by 6 to 0xa and Line by 1 to 59
  [0x000006d7]  Set column to 16
  [0x000006d9]  Set is_stmt to 0
  [0x000006da]  Copy (view 1)
  [0x000006db]  Set column to 31
  [0x000006dd]  Extended opcode 4: set Discriminator to 1
  [0x000006e1]  Special opcode 75: advance Address by 10 to 0x14 and Line by 0 to 59
  [0x000006e2]  Set column to 14
  [0x000006e4]  Extended opcode 4: set Discriminator to 1
  [0x000006e8]  Special opcode 33: advance Address by 4 to 0x18 and Line by 0 to 59
  [0x000006e9]  Set column to 11
  [0x000006eb]  Set is_stmt to 1
  [0x000006ec]  Special opcode 35: advance Address by 4 to 0x1c and Line by 2 to 61
  [0x000006ed]  Set column to 2
  [0x000006ef]  Advance Line by -8 to 53
  [0x000006f1]  Special opcode 61: advance Address by 8 to 0x24 and Line by 0 to 53
  [0x000006f2]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 54 (view 1)
  [0x000006f3]  Special opcode 7: advance Address by 0 to 0x24 and Line by 2 to 56 (view 2)
  [0x000006f4]  Set column to 3
  [0x000006f6]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 57 (view 3)
  [0x000006f7]  Set column to 6
  [0x000006f9]  Set is_stmt to 0
  [0x000006fa]  Copy (view 4)
  [0x000006fb]  Set column to 5
  [0x000006fd]  Special opcode 33: advance Address by 4 to 0x28 and Line by 0 to 57
  [0x000006fe]  Set column to 28
  [0x00000700]  Extended opcode 4: set Discriminator to 1
  [0x00000704]  Set is_stmt to 1
  [0x00000705]  Special opcode 47: advance Address by 6 to 0x2e and Line by 0 to 57
  [0x00000706]  Set column to 2
  [0x00000708]  Special opcode 53: advance Address by 6 to 0x34 and Line by 6 to 63
  [0x00000709]  Set column to 10
  [0x0000070b]  Set is_stmt to 0
  [0x0000070c]  Copy (view 1)
  [0x0000070d]  Extended opcode 4: set Discriminator to 1
  [0x00000711]  Special opcode 75: advance Address by 10 to 0x3e and Line by 0 to 63
  [0x00000712]  Set column to 23
  [0x00000714]  Extended opcode 4: set Discriminator to 1
  [0x00000718]  Special opcode 19: advance Address by 2 to 0x40 and Line by 0 to 63
  [0x00000719]  Set column to 45
  [0x0000071b]  Extended opcode 4: set Discriminator to 1
  [0x0000071f]  Special opcode 61: advance Address by 8 to 0x48 and Line by 0 to 63
  [0x00000720]  Set column to 1
  [0x00000722]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 64
  [0x00000723]  Special opcode 47: advance Address by 6 to 0x50 and Line by 0 to 64
  [0x00000724]  Advance PC by 8 to 0x58
  [0x00000726]  Extended opcode 1: End of Sequence


  Offset:                      0x729
  Length:                      1057
  DWARF Version:               3
  Prologue Length:             206
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x744):
  1	src
  2	/usr/lib/gcc/arm-none-eabi/13.2.0/include
  3	/usr/arm-none-eabi/include/machine
  4	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x7b5):
  Entry	Dir	Time	Size	Name
  1	1	0	0	uart_print.c
  2	2	0	0	stdarg.h
  3	3	0	0	_default_types.h
  4	4	0	0	_stdint.h
  5	0	0	0	<built-in>

 Line Number Statements:
  [0x00000801]  Set column to 30
  [0x00000803]  Extended opcode 2: set Address to 0x690
  [0x0000080a]  Advance Line by 14 to 15
  [0x0000080c]  Copy
  [0x0000080d]  Set column to 2
  [0x0000080f]  Special opcode 20: advance Address by 2 to 0x692 and Line by 1 to 16
  [0x00000810]  Special opcode 90: advance Address by 12 to 0x69e and Line by 1 to 17
  [0x00000811]  Special opcode 62: advance Address by 8 to 0x6a6 and Line by 1 to 18
  [0x00000812]  Set column to 57
  [0x00000814]  Extended opcode 4: set Discriminator to 1
  [0x00000818]  Copy (view 1)
  [0x00000819]  Set column to 8
  [0x0000081b]  Extended opcode 4: set Discriminator to 1
  [0x0000081f]  Copy (view 2)
  [0x00000820]  Set column to 9
  [0x00000822]  Extended opcode 4: set Discriminator to 1
  [0x00000826]  Set is_stmt to 0
  [0x00000827]  Copy (view 3)
  [0x00000828]  Set column to 8
  [0x0000082a]  Extended opcode 4: set Discriminator to 1
  [0x0000082e]  Special opcode 103: advance Address by 14 to 0x6b4 and Line by 0 to 18
  [0x0000082f]  Set column to 58
  [0x00000831]  Extended opcode 4: set Discriminator to 2
  [0x00000835]  Set is_stmt to 1
  [0x00000836]  Special opcode 33: advance Address by 4 to 0x6b8 and Line by 0 to 18
  [0x00000837]  Set column to 2
  [0x00000839]  Special opcode 7: advance Address by 0 to 0x6b8 and Line by 2 to 20 (view 1)
  [0x0000083a]  Special opcode 146: advance Address by 20 to 0x6cc and Line by 1 to 21
  [0x0000083b]  Special opcode 104: advance Address by 14 to 0x6da and Line by 1 to 22
  [0x0000083c]  Special opcode 90: advance Address by 12 to 0x6e6 and Line by 1 to 23
  [0x0000083d]  Set column to 38
  [0x0000083f]  Set is_stmt to 0
  [0x00000840]  Special opcode 33: advance Address by 4 to 0x6ea and Line by 0 to 23
  [0x00000841]  Set column to 2
  [0x00000843]  Special opcode 33: advance Address by 4 to 0x6ee and Line by 0 to 23
  [0x00000844]  Extended opcode 4: set Discriminator to 1
  [0x00000848]  Special opcode 33: advance Address by 4 to 0x6f2 and Line by 0 to 23
  [0x00000849]  Set column to 1
  [0x0000084b]  Special opcode 63: advance Address by 8 to 0x6fa and Line by 2 to 25
  [0x0000084c]  Advance PC by 18 to 0x70c
  [0x0000084e]  Extended opcode 1: End of Sequence

  [0x00000851]  Set column to 22
  [0x00000853]  Extended opcode 2: set Address to 0x70c
  [0x0000085a]  Advance Line by 26 to 27
  [0x0000085c]  Copy
  [0x0000085d]  Set is_stmt to 0
  [0x0000085e]  Copy (view 1)
  [0x0000085f]  Set column to 2
  [0x00000861]  Set is_stmt to 1
  [0x00000862]  Special opcode 34: advance Address by 4 to 0x710 and Line by 1 to 28
  [0x00000863]  Special opcode 6: advance Address by 0 to 0x710 and Line by 1 to 29 (view 1)
  [0x00000864]  Set is_stmt to 0
  [0x00000865]  Special opcode 75: advance Address by 10 to 0x71a and Line by 0 to 29
  [0x00000866]  Set is_stmt to 1
  [0x00000867]  Special opcode 20: advance Address by 2 to 0x71c and Line by 1 to 30
  [0x00000868]  Set column to 35
  [0x0000086a]  Extended opcode 4: set Discriminator to 1
  [0x0000086e]  Copy (view 1)
  [0x0000086f]  Set column to 8
  [0x00000871]  Extended opcode 4: set Discriminator to 1
  [0x00000875]  Copy (view 2)
  [0x00000876]  Set column to 36
  [0x00000878]  Extended opcode 4: set Discriminator to 2
  [0x0000087c]  Special opcode 117: advance Address by 16 to 0x72c and Line by 0 to 30
  [0x0000087d]  Set column to 2
  [0x0000087f]  Special opcode 8: advance Address by 0 to 0x72c and Line by 3 to 33 (view 1)
  [0x00000880]  Set column to 5
  [0x00000882]  Set is_stmt to 0
  [0x00000883]  Copy (view 2)
  [0x00000884]  Set column to 4
  [0x00000886]  Special opcode 47: advance Address by 6 to 0x732 and Line by 0 to 33
  [0x00000887]  Set column to 3
  [0x00000889]  Set is_stmt to 1
  [0x0000088a]  Special opcode 48: advance Address by 6 to 0x738 and Line by 1 to 34
  [0x0000088b]  Set column to 23
  [0x0000088d]  Set is_stmt to 0
  [0x0000088e]  Copy (view 1)
  [0x0000088f]  Set column to 3
  [0x00000891]  Set is_stmt to 1
  [0x00000892]  Special opcode 34: advance Address by 4 to 0x73c and Line by 1 to 35
  [0x00000893]  Set column to 7
  [0x00000895]  Copy (view 1)
  [0x00000896]  Set column to 3
  [0x00000898]  Set is_stmt to 0
  [0x00000899]  Copy (view 2)
  [0x0000089a]  Set column to 4
  [0x0000089c]  Set is_stmt to 1
  [0x0000089d]  Special opcode 20: advance Address by 2 to 0x73e and Line by 1 to 36
  [0x0000089e]  Set column to 28
  [0x000008a0]  Extended opcode 4: set Discriminator to 3
  [0x000008a4]  Special opcode 18: advance Address by 2 to 0x740 and Line by -1 to 35
  [0x000008a5]  Set column to 20
  [0x000008a7]  Extended opcode 4: set Discriminator to 1
  [0x000008ab]  Special opcode 19: advance Address by 2 to 0x742 and Line by 0 to 35
  [0x000008ac]  Extended opcode 4: set Discriminator to 1
  [0x000008b0]  Set is_stmt to 0
  [0x000008b1]  Special opcode 33: advance Address by 4 to 0x746 and Line by 0 to 35
  [0x000008b2]  Set column to 1
  [0x000008b4]  Special opcode 9: advance Address by 0 to 0x746 and Line by 4 to 39 (view 1)
  [0x000008b5]  Advance PC by 10 to 0x750
  [0x000008b7]  Extended opcode 1: End of Sequence

  [0x000008ba]  Set column to 43
  [0x000008bc]  Extended opcode 2: set Address to 0x750
  [0x000008c3]  Advance Line by 40 to 41
  [0x000008c5]  Copy
  [0x000008c6]  Set is_stmt to 0
  [0x000008c7]  Copy (view 1)
  [0x000008c8]  Set column to 2
  [0x000008ca]  Set is_stmt to 1
  [0x000008cb]  Special opcode 34: advance Address by 4 to 0x754 and Line by 1 to 42
  [0x000008cc]  Set column to 6
  [0x000008ce]  Copy (view 1)
  [0x000008cf]  Set column to 10
  [0x000008d1]  Set is_stmt to 0
  [0x000008d2]  Copy (view 2)
  [0x000008d3]  Set column to 2
  [0x000008d5]  Special opcode 19: advance Address by 2 to 0x756 and Line by 0 to 42
  [0x000008d6]  Set column to 3
  [0x000008d8]  Set is_stmt to 1
  [0x000008d9]  Special opcode 20: advance Address by 2 to 0x758 and Line by 1 to 43
  [0x000008da]  Set column to 34
  [0x000008dc]  Extended opcode 4: set Discriminator to 3
  [0x000008e0]  Special opcode 32: advance Address by 4 to 0x75c and Line by -1 to 42
  [0x000008e1]  Set column to 24
  [0x000008e3]  Extended opcode 4: set Discriminator to 1
  [0x000008e7]  Special opcode 19: advance Address by 2 to 0x75e and Line by 0 to 42
  [0x000008e8]  Set column to 20
  [0x000008ea]  Extended opcode 4: set Discriminator to 1
  [0x000008ee]  Set is_stmt to 0
  [0x000008ef]  Copy (view 1)
  [0x000008f0]  Set column to 24
  [0x000008f2]  Extended opcode 4: set Discriminator to 1
  [0x000008f6]  Special opcode 19: advance Address by 2 to 0x760 and Line by 0 to 42
  [0x000008f7]  Set column to 1
  [0x000008f9]  Special opcode 36: advance Address by 4 to 0x764 and Line by 3 to 45
  [0x000008fa]  Special opcode 19: advance Address by 2 to 0x766 and Line by 0 to 45
  [0x000008fb]  Extended opcode 1: End of Sequence

  [0x000008fe]  Set column to 42
  [0x00000900]  Extended opcode 2: set Address to 0x768
  [0x00000907]  Advance Line by 46 to 47
  [0x00000909]  Copy
  [0x0000090a]  Set is_stmt to 0
  [0x0000090b]  Copy (view 1)
  [0x0000090c]  Set column to 2
  [0x0000090e]  Set is_stmt to 1
  [0x0000090f]  Special opcode 35: advance Address by 4 to 0x76c and Line by 2 to 49
  [0x00000910]  Special opcode 7: advance Address by 0 to 0x76c and Line by 2 to 51 (view 1)
  [0x00000911]  Set column to 6
  [0x00000913]  Set is_stmt to 0
  [0x00000914]  Copy (view 2)
  [0x00000915]  Set column to 2
  [0x00000917]  Set is_stmt to 1
  [0x00000918]  Special opcode 21: advance Address by 2 to 0x76e and Line by 2 to 53
  [0x00000919]  Set column to 3
  [0x0000091b]  Special opcode 6: advance Address by 0 to 0x76e and Line by 1 to 54 (view 1)
  [0x0000091c]  Set column to 37
  [0x0000091e]  Set is_stmt to 0
  [0x0000091f]  Copy (view 2)
  [0x00000920]  Set column to 19
  [0x00000922]  Special opcode 145: advance Address by 20 to 0x782 and Line by 0 to 54
  [0x00000923]  Set column to 17
  [0x00000925]  Special opcode 19: advance Address by 2 to 0x784 and Line by 0 to 54
  [0x00000926]  Special opcode 47: advance Address by 6 to 0x78a and Line by 0 to 54
  [0x00000927]  Set column to 3
  [0x00000929]  Set is_stmt to 1
  [0x0000092a]  Special opcode 34: advance Address by 4 to 0x78e and Line by 1 to 55
  [0x0000092b]  Set column to 7
  [0x0000092d]  Set is_stmt to 0
  [0x0000092e]  Special opcode 19: advance Address by 2 to 0x790 and Line by 0 to 55
  [0x0000092f]  Set column to 15
  [0x00000931]  Extended opcode 4: set Discriminator to 1
  [0x00000935]  Set is_stmt to 1
  [0x00000936]  Special opcode 20: advance Address by 2 to 0x792 and Line by 1 to 56
  [0x00000937]  Set column to 3
  [0x00000939]  Special opcode 50: advance Address by 6 to 0x798 and Line by 3 to 59
  [0x0000093a]  Set column to 22
  [0x0000093c]  Set is_stmt to 0
  [0x0000093d]  Copy (view 1)
  [0x0000093e]  Set column to 3
  [0x00000940]  Special opcode 19: advance Address by 2 to 0x79a and Line by 0 to 59
  [0x00000941]  Set column to 22
  [0x00000943]  Extended opcode 4: set Discriminator to 2
  [0x00000947]  Set is_stmt to 1
  [0x00000948]  Special opcode 102: advance Address by 14 to 0x7a8 and Line by -1 to 58
  [0x00000949]  Set column to 8
  [0x0000094b]  Extended opcode 4: set Discriminator to 1
  [0x0000094f]  Copy (view 1)
  [0x00000950]  Set column to 1
  [0x00000952]  Set is_stmt to 0
  [0x00000953]  Special opcode 36: advance Address by 4 to 0x7ac and Line by 3 to 61
  [0x00000954]  Special opcode 33: advance Address by 4 to 0x7b0 and Line by 0 to 61
  [0x00000955]  Advance PC by 4 to 0x7b4
  [0x00000957]  Extended opcode 1: End of Sequence

  [0x0000095a]  Set column to 32
  [0x0000095c]  Extended opcode 2: set Address to 0x7b4
  [0x00000963]  Advance Line by 62 to 63
  [0x00000965]  Copy
  [0x00000966]  Set is_stmt to 0
  [0x00000967]  Copy (view 1)
  [0x00000968]  Set column to 2
  [0x0000096a]  Set is_stmt to 1
  [0x0000096b]  Special opcode 21: advance Address by 2 to 0x7b6 and Line by 2 to 65
  [0x0000096c]  Set column to 5
  [0x0000096e]  Set is_stmt to 0
  [0x0000096f]  Copy (view 1)
  [0x00000970]  Set column to 2
  [0x00000972]  Set is_stmt to 1
  [0x00000973]  Special opcode 38: advance Address by 4 to 0x7ba and Line by 5 to 70
  [0x00000974]  Set column to 1
  [0x00000976]  Set is_stmt to 0
  [0x00000977]  Special opcode 48: advance Address by 6 to 0x7c0 and Line by 1 to 71
  [0x00000978]  Set column to 3
  [0x0000097a]  Set is_stmt to 1
  [0x0000097b]  Special opcode 14: advance Address by 2 to 0x7c2 and Line by -5 to 66
  [0x0000097c]  Set is_stmt to 0
  [0x0000097d]  Special opcode 19: advance Address by 2 to 0x7c4 and Line by 0 to 66
  [0x0000097e]  Set is_stmt to 1
  [0x0000097f]  Special opcode 34: advance Address by 4 to 0x7c8 and Line by 1 to 67
  [0x00000980]  Set column to 7
  [0x00000982]  Set is_stmt to 0
  [0x00000983]  Copy (view 1)
  [0x00000984]  Special opcode 19: advance Address by 2 to 0x7ca and Line by 0 to 67
  [0x00000985]  Advance PC by 2 to 0x7cc
  [0x00000987]  Extended opcode 1: End of Sequence

  [0x0000098a]  Set column to 32
  [0x0000098c]  Extended opcode 2: set Address to 0x7cc
  [0x00000993]  Advance Line by 72 to 73
  [0x00000996]  Copy
  [0x00000997]  Set is_stmt to 0
  [0x00000998]  Copy (view 1)
  [0x00000999]  Set column to 2
  [0x0000099b]  Set is_stmt to 1
  [0x0000099c]  Special opcode 63: advance Address by 8 to 0x7d4 and Line by 2 to 75
  [0x0000099d]  Set column to 4
  [0x0000099f]  Set is_stmt to 0
  [0x000009a0]  Copy (view 1)
  [0x000009a1]  Set column to 2
  [0x000009a3]  Set is_stmt to 1
  [0x000009a4]  Special opcode 80: advance Address by 10 to 0x7de and Line by 5 to 80
  [0x000009a5]  Set column to 15
  [0x000009a7]  Set is_stmt to 0
  [0x000009a8]  Copy (view 1)
  [0x000009a9]  Set column to 4
  [0x000009ab]  Special opcode 89: advance Address by 12 to 0x7ea and Line by 0 to 80
  [0x000009ac]  Set column to 24
  [0x000009ae]  Extended opcode 4: set Discriminator to 1
  [0x000009b2]  Special opcode 75: advance Address by 10 to 0x7f4 and Line by 0 to 80
  [0x000009b3]  Set column to 2
  [0x000009b5]  Set is_stmt to 1
  [0x000009b6]  Special opcode 108: advance Address by 14 to 0x802 and Line by 5 to 85
  [0x000009b7]  Set column to 4
  [0x000009b9]  Set is_stmt to 0
  [0x000009ba]  Copy (view 1)
  [0x000009bb]  Set column to 30
  [0x000009bd]  Extended opcode 4: set Discriminator to 1
  [0x000009c1]  Special opcode 103: advance Address by 14 to 0x810 and Line by 0 to 85
  [0x000009c2]  Set column to 25
  [0x000009c4]  Extended opcode 4: set Discriminator to 1
  [0x000009c8]  Special opcode 61: advance Address by 8 to 0x818 and Line by 0 to 85
  [0x000009c9]  Set column to 2
  [0x000009cb]  Set is_stmt to 1
  [0x000009cc]  Special opcode 80: advance Address by 10 to 0x822 and Line by 5 to 90
  [0x000009cd]  Special opcode 7: advance Address by 0 to 0x822 and Line by 2 to 92 (view 1)
  [0x000009ce]  Set column to 4
  [0x000009d0]  Set is_stmt to 0
  [0x000009d1]  Copy (view 2)
  [0x000009d2]  Set column to 2
  [0x000009d4]  Set is_stmt to 1
  [0x000009d5]  Special opcode 80: advance Address by 10 to 0x82c and Line by 5 to 97
  [0x000009d6]  Set column to 11
  [0x000009d8]  Set is_stmt to 0
  [0x000009d9]  Copy (view 1)
  [0x000009da]  Set column to 2
  [0x000009dc]  Set is_stmt to 1
  [0x000009dd]  Special opcode 34: advance Address by 4 to 0x830 and Line by 1 to 98
  [0x000009de]  Set column to 44
  [0x000009e0]  Set is_stmt to 0
  [0x000009e1]  Copy (view 1)
  [0x000009e2]  Set column to 59
  [0x000009e4]  Special opcode 61: advance Address by 8 to 0x838 and Line by 0 to 98
  [0x000009e5]  Set column to 11
  [0x000009e7]  Special opcode 61: advance Address by 8 to 0x840 and Line by 0 to 98
  [0x000009e8]  Set column to 2
  [0x000009ea]  Set is_stmt to 1
  [0x000009eb]  Special opcode 63: advance Address by 8 to 0x848 and Line by 2 to 100
  [0x000009ec]  Special opcode 7: advance Address by 0 to 0x848 and Line by 2 to 102 (view 1)
  [0x000009ed]  Set column to 6
  [0x000009ef]  Copy (view 2)
  [0x000009f0]  Set column to 10
  [0x000009f2]  Set is_stmt to 0
  [0x000009f3]  Copy (view 3)
  [0x000009f4]  Set column to 6
  [0x000009f6]  Special opcode 17: advance Address by 2 to 0x84a and Line by -2 to 100
  [0x000009f7]  Set column to 2
  [0x000009f9]  Special opcode 21: advance Address by 2 to 0x84c and Line by 2 to 102
  [0x000009fa]  Special opcode 19: advance Address by 2 to 0x84e and Line by 0 to 102
  [0x000009fb]  Set column to 3
  [0x000009fd]  Set is_stmt to 1
  [0x000009fe]  Advance Line by -26 to 76
  [0x00000a00]  Copy (view 1)
  [0x00000a01]  Special opcode 48: advance Address by 6 to 0x854 and Line by 1 to 77
  [0x00000a02]  Special opcode 23: advance Address by 2 to 0x856 and Line by 4 to 81
  [0x00000a03]  Special opcode 48: advance Address by 6 to 0x85c and Line by 1 to 82
  [0x00000a04]  Set column to 1
  [0x00000a06]  Set is_stmt to 0
  [0x00000a07]  Advance Line by 32 to 114
  [0x00000a09]  Copy (view 1)
  [0x00000a0a]  Set column to 3
  [0x00000a0c]  Set is_stmt to 1
  [0x00000a0d]  Advance Line by -28 to 86
  [0x00000a0f]  Special opcode 61: advance Address by 8 to 0x864 and Line by 0 to 86
  [0x00000a10]  Special opcode 48: advance Address by 6 to 0x86a and Line by 1 to 87
  [0x00000a11]  Special opcode 25: advance Address by 2 to 0x86c and Line by 6 to 93
  [0x00000a12]  Special opcode 48: advance Address by 6 to 0x872 and Line by 1 to 94
  [0x00000a13]  Set column to 10
  [0x00000a15]  Set is_stmt to 0
  [0x00000a16]  Copy (view 1)
  [0x00000a17]  Set column to 3
  [0x00000a19]  Set is_stmt to 1
  [0x00000a1a]  Advance Line by 9 to 103
  [0x00000a1c]  Special opcode 47: advance Address by 6 to 0x878 and Line by 0 to 103
  [0x00000a1d]  Set column to 44
  [0x00000a1f]  Set is_stmt to 0
  [0x00000a20]  Copy (view 1)
  [0x00000a21]  Set column to 19
  [0x00000a23]  Special opcode 131: advance Address by 18 to 0x88a and Line by 0 to 103
  [0x00000a24]  Set column to 17
  [0x00000a26]  Special opcode 19: advance Address by 2 to 0x88c and Line by 0 to 103
  [0x00000a27]  Special opcode 33: advance Address by 4 to 0x890 and Line by 0 to 103
  [0x00000a28]  Set column to 3
  [0x00000a2a]  Set is_stmt to 1
  [0x00000a2b]  Special opcode 48: advance Address by 6 to 0x896 and Line by 1 to 104
  [0x00000a2c]  Set column to 15
  [0x00000a2e]  Set is_stmt to 0
  [0x00000a2f]  Copy (view 1)
  [0x00000a30]  Set column to 25
  [0x00000a32]  Extended opcode 4: set Discriminator to 3
  [0x00000a36]  Set is_stmt to 1
  [0x00000a37]  Special opcode 17: advance Address by 2 to 0x898 and Line by -2 to 102
  [0x00000a38]  Set column to 13
  [0x00000a3a]  Set is_stmt to 0
  [0x00000a3b]  Special opcode 20: advance Address by 2 to 0x89a and Line by 1 to 103
  [0x00000a3c]  Set column to 19
  [0x00000a3e]  Extended opcode 4: set Discriminator to 1
  [0x00000a42]  Set is_stmt to 1
  [0x00000a43]  Special opcode 18: advance Address by 2 to 0x89c and Line by -1 to 102
  [0x00000a44]  Set column to 3
  [0x00000a46]  Special opcode 36: advance Address by 4 to 0x8a0 and Line by 3 to 105
  [0x00000a47]  Set column to 2
  [0x00000a49]  Special opcode 7: advance Address by 0 to 0x8a0 and Line by 2 to 107 (view 1)
  [0x00000a4a]  Set column to 12
  [0x00000a4c]  Set is_stmt to 0
  [0x00000a4d]  Copy (view 2)
  [0x00000a4e]  Set column to 16
  [0x00000a50]  Special opcode 19: advance Address by 2 to 0x8a2 and Line by 0 to 107
  [0x00000a51]  Special opcode 33: advance Address by 4 to 0x8a6 and Line by 0 to 107
  [0x00000a52]  Set column to 2
  [0x00000a54]  Set is_stmt to 1
  [0x00000a55]  Special opcode 77: advance Address by 10 to 0x8b0 and Line by 2 to 109
  [0x00000a56]  Set is_stmt to 0
  [0x00000a57]  Special opcode 33: advance Address by 4 to 0x8b4 and Line by 0 to 109
  [0x00000a58]  Set is_stmt to 1
  [0x00000a59]  Special opcode 35: advance Address by 4 to 0x8b8 and Line by 2 to 111
  [0x00000a5a]  Set column to 3
  [0x00000a5c]  Special opcode 20: advance Address by 2 to 0x8ba and Line by 1 to 112
  [0x00000a5d]  Set column to 22
  [0x00000a5f]  Set is_stmt to 0
  [0x00000a60]  Copy (view 1)
  [0x00000a61]  Set column to 3
  [0x00000a63]  Special opcode 19: advance Address by 2 to 0x8bc and Line by 0 to 112
  [0x00000a64]  Set column to 22
  [0x00000a66]  Extended opcode 4: set Discriminator to 2
  [0x00000a6a]  Set is_stmt to 1
  [0x00000a6b]  Special opcode 102: advance Address by 14 to 0x8ca and Line by -1 to 111
  [0x00000a6c]  Set column to 8
  [0x00000a6e]  Extended opcode 4: set Discriminator to 1
  [0x00000a72]  Copy (view 1)
  [0x00000a73]  Extended opcode 4: set Discriminator to 1
  [0x00000a77]  Set is_stmt to 0
  [0x00000a78]  Special opcode 33: advance Address by 4 to 0x8ce and Line by 0 to 111
  [0x00000a79]  Advance PC by 30 to 0x8ec
  [0x00000a7b]  Extended opcode 1: End of Sequence

  [0x00000a7e]  Set column to 34
  [0x00000a80]  Extended opcode 2: set Address to 0x8ec
  [0x00000a87]  Advance Line by 115 to 116
  [0x00000a8a]  Copy
  [0x00000a8b]  Set is_stmt to 0
  [0x00000a8c]  Copy (view 1)
  [0x00000a8d]  Set column to 2
  [0x00000a8f]  Set is_stmt to 1
  [0x00000a90]  Special opcode 90: advance Address by 12 to 0x8f8 and Line by 1 to 117
  [0x00000a91]  Special opcode 6: advance Address by 0 to 0x8f8 and Line by 1 to 118 (view 1)
  [0x00000a92]  Special opcode 21: advance Address by 2 to 0x8fa and Line by 2 to 120
  [0x00000a93]  Special opcode 6: advance Address by 0 to 0x8fa and Line by 1 to 121 (view 1)
  [0x00000a94]  Special opcode 6: advance Address by 0 to 0x8fa and Line by 1 to 122 (view 2)
  [0x00000a95]  Special opcode 6: advance Address by 0 to 0x8fa and Line by 1 to 123 (view 3)
  [0x00000a96]  Special opcode 7: advance Address by 0 to 0x8fa and Line by 2 to 125 (view 4)
  [0x00000a97]  Set column to 6
  [0x00000a99]  Copy (view 5)
  [0x00000a9a]  Set column to 10
  [0x00000a9c]  Set is_stmt to 0
  [0x00000a9d]  Copy (view 6)
  [0x00000a9e]  Set column to 2
  [0x00000aa0]  Special opcode 19: advance Address by 2 to 0x8fc and Line by 0 to 125
  [0x00000aa1]  Set column to 7
  [0x00000aa3]  Set is_stmt to 1
  [0x00000aa4]  Special opcode 25: advance Address by 2 to 0x8fe and Line by 6 to 131
  [0x00000aa5]  Set column to 12
  [0x00000aa7]  Set is_stmt to 0
  [0x00000aa8]  Copy (view 1)
  [0x00000aa9]  Set column to 7
  [0x00000aab]  Set is_stmt to 1
  [0x00000aac]  Special opcode 48: advance Address by 6 to 0x904 and Line by 1 to 132
  [0x00000aad]  Set column to 6
  [0x00000aaf]  Special opcode 48: advance Address by 6 to 0x90a and Line by 1 to 133
  [0x00000ab0]  Set is_stmt to 0
  [0x00000ab1]  Special opcode 0: advance Address by 0 to 0x90a and Line by -5 to 128 (view 1)
  [0x00000ab2]  Special opcode 24: advance Address by 2 to 0x90c and Line by 5 to 133
  [0x00000ab3]  Set column to 7
  [0x00000ab5]  Set is_stmt to 1
  [0x00000ab6]  Special opcode 22: advance Address by 2 to 0x90e and Line by 3 to 136
  [0x00000ab7]  Set column to 11
  [0x00000ab9]  Set is_stmt to 0
  [0x00000aba]  Copy (view 1)
  [0x00000abb]  Set column to 7
  [0x00000abd]  Set is_stmt to 1
  [0x00000abe]  Special opcode 48: advance Address by 6 to 0x914 and Line by 1 to 137
  [0x00000abf]  Set column to 6
  [0x00000ac1]  Special opcode 48: advance Address by 6 to 0x91a and Line by 1 to 138
  [0x00000ac2]  Set is_stmt to 0
  [0x00000ac3]  Advance Line by -10 to 128
  [0x00000ac5]  Copy (view 1)
  [0x00000ac6]  Advance Line by 10 to 138
  [0x00000ac8]  Special opcode 19: advance Address by 2 to 0x91c and Line by 0 to 138
  [0x00000ac9]  Set column to 7
  [0x00000acb]  Set is_stmt to 1
  [0x00000acc]  Special opcode 22: advance Address by 2 to 0x91e and Line by 3 to 141
  [0x00000acd]  Special opcode 48: advance Address by 6 to 0x924 and Line by 1 to 142
  [0x00000ace]  Set column to 6
  [0x00000ad0]  Special opcode 6: advance Address by 0 to 0x924 and Line by 1 to 143 (view 1)
  [0x00000ad1]  Set column to 7
  [0x00000ad3]  Special opcode 22: advance Address by 2 to 0x926 and Line by 3 to 146
  [0x00000ad4]  Set column to 11
  [0x00000ad6]  Set is_stmt to 0
  [0x00000ad7]  Copy (view 1)
  [0x00000ad8]  Set column to 7
  [0x00000ada]  Set is_stmt to 1
  [0x00000adb]  Special opcode 48: advance Address by 6 to 0x92c and Line by 1 to 147
  [0x00000adc]  Set column to 6
  [0x00000ade]  Special opcode 48: advance Address by 6 to 0x932 and Line by 1 to 148
  [0x00000adf]  Set is_stmt to 0
  [0x00000ae0]  Advance Line by -20 to 128
  [0x00000ae2]  Copy (view 1)
  [0x00000ae3]  Advance Line by 20 to 148
  [0x00000ae5]  Special opcode 19: advance Address by 2 to 0x934 and Line by 0 to 148
  [0x00000ae6]  Set column to 7
  [0x00000ae8]  Set is_stmt to 1
  [0x00000ae9]  Special opcode 22: advance Address by 2 to 0x936 and Line by 3 to 151
  [0x00000aea]  Set column to 12
  [0x00000aec]  Set is_stmt to 0
  [0x00000aed]  Copy (view 1)
  [0x00000aee]  Set column to 7
  [0x00000af0]  Set is_stmt to 1
  [0x00000af1]  Special opcode 62: advance Address by 8 to 0x93e and Line by 1 to 152
  [0x00000af2]  Set column to 6
  [0x00000af4]  Special opcode 62: advance Address by 8 to 0x946 and Line by 1 to 153
  [0x00000af5]  Set is_stmt to 0
  [0x00000af6]  Advance Line by -25 to 128
  [0x00000af8]  Copy (view 1)
  [0x00000af9]  Advance Line by 25 to 153
  [0x00000afb]  Special opcode 19: advance Address by 2 to 0x948 and Line by 0 to 153
  [0x00000afc]  Set is_stmt to 1
  [0x00000afd]  Special opcode 22: advance Address by 2 to 0x94a and Line by 3 to 156
  [0x00000afe]  Special opcode 48: advance Address by 6 to 0x950 and Line by 1 to 157
  [0x00000aff]  Special opcode 48: advance Address by 6 to 0x956 and Line by 1 to 158
  [0x00000b00]  Set is_stmt to 0
  [0x00000b01]  Advance Line by -30 to 128
  [0x00000b03]  Copy (view 1)
  [0x00000b04]  Advance Line by 30 to 158
  [0x00000b06]  Special opcode 19: advance Address by 2 to 0x958 and Line by 0 to 158
  [0x00000b07]  Set column to 5
  [0x00000b09]  Set is_stmt to 1
  [0x00000b0a]  Special opcode 24: advance Address by 2 to 0x95a and Line by 5 to 163
  [0x00000b0b]  Set column to 4
  [0x00000b0d]  Special opcode 34: advance Address by 4 to 0x95e and Line by 1 to 164
  [0x00000b0e]  Set column to 35
  [0x00000b10]  Extended opcode 4: set Discriminator to 2
  [0x00000b14]  Advance Line by -39 to 125
  [0x00000b16]  Copy (view 1)
  [0x00000b17]  Set column to 25
  [0x00000b19]  Extended opcode 4: set Discriminator to 1
  [0x00000b1d]  Special opcode 19: advance Address by 2 to 0x960 and Line by 0 to 125
  [0x00000b1e]  Set column to 21
  [0x00000b20]  Extended opcode 4: set Discriminator to 1
  [0x00000b24]  Set is_stmt to 0
  [0x00000b25]  Copy (view 1)
  [0x00000b26]  Set column to 25
  [0x00000b28]  Extended opcode 4: set Discriminator to 1
  [0x00000b2c]  Special opcode 19: advance Address by 2 to 0x962 and Line by 0 to 125
  [0x00000b2d]  Set column to 3
  [0x00000b2f]  Set is_stmt to 1
  [0x00000b30]  Special opcode 20: advance Address by 2 to 0x964 and Line by 1 to 126
  [0x00000b31]  Set column to 5
  [0x00000b33]  Special opcode 35: advance Address by 4 to 0x968 and Line by 2 to 128
  [0x00000b34]  Set column to 6
  [0x00000b36]  Set is_stmt to 0
  [0x00000b37]  Copy (view 1)
  [0x00000b38]  Set column to 5
  [0x00000b3a]  Set is_stmt to 1
  [0x00000b3b]  Special opcode 20: advance Address by 2 to 0x96a and Line by 1 to 129
  [0x00000b3c]  Set column to 18
  [0x00000b3e]  Set is_stmt to 0
  [0x00000b3f]  Copy (view 1)
  [0x00000b40]  Advance PC by 98 to 0x9cc
  [0x00000b42]  Special opcode 5: advance Address by 0 to 0x9cc and Line by 0 to 129
  [0x00000b43]  Set column to 1
  [0x00000b45]  Advance Line by 40 to 169
  [0x00000b47]  Copy (view 1)
  [0x00000b48]  Special opcode 47: advance Address by 6 to 0x9d2 and Line by 0 to 169
  [0x00000b49]  Advance PC by 4 to 0x9d6
  [0x00000b4b]  Extended opcode 1: End of Sequence


  Offset:                      0xb4e
  Length:                      308
  DWARF Version:               3
  Prologue Length:             155
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0xb69):
  1	sys
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	src

 The File Name Table (offset 0xbb4):
  Entry	Dir	Time	Size	Name
  1	1	0	0	startup_gcc.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	timers.h

 Line Number Statements:
  [0x00000bf3]  Set column to 1
  [0x00000bf5]  Extended opcode 2: set Address to 0x9d8
  [0x00000bfc]  Advance Line by 268 to 269
  [0x00000bff]  Copy
  [0x00000c00]  Set column to 5
  [0x00000c02]  Special opcode 9: advance Address by 0 to 0x9d8 and Line by 4 to 273 (view 1)
  [0x00000c03]  Special opcode 7: advance Address by 0 to 0x9d8 and Line by 2 to 275 (view 2)
  [0x00000c04]  Set column to 10
  [0x00000c06]  Special opcode 3: advance Address by 0 to 0x9d8 and Line by -2 to 273 (view 3)
  [0x00000c07]  Advance PC by 2 to 0x9da
  [0x00000c09]  Extended opcode 1: End of Sequence

  [0x00000c0c]  Set column to 1
  [0x00000c0e]  Extended opcode 2: set Address to 0x9da
  [0x00000c15]  Advance Line by 286 to 287
  [0x00000c18]  Copy
  [0x00000c19]  Set column to 5
  [0x00000c1b]  Special opcode 9: advance Address by 0 to 0x9da and Line by 4 to 291 (view 1)
  [0x00000c1c]  Special opcode 7: advance Address by 0 to 0x9da and Line by 2 to 293 (view 2)
  [0x00000c1d]  Set column to 10
  [0x00000c1f]  Special opcode 3: advance Address by 0 to 0x9da and Line by -2 to 291 (view 3)
  [0x00000c20]  Advance PC by 2 to 0x9dc
  [0x00000c22]  Extended opcode 1: End of Sequence

  [0x00000c25]  Set column to 1
  [0x00000c27]  Extended opcode 2: set Address to 0x9dc
  [0x00000c2e]  Advance Line by 304 to 305
  [0x00000c31]  Copy
  [0x00000c32]  Set column to 5
  [0x00000c34]  Special opcode 9: advance Address by 0 to 0x9dc and Line by 4 to 309 (view 1)
  [0x00000c35]  Special opcode 7: advance Address by 0 to 0x9dc and Line by 2 to 311 (view 2)
  [0x00000c36]  Set column to 10
  [0x00000c38]  Special opcode 3: advance Address by 0 to 0x9dc and Line by -2 to 309 (view 3)
  [0x00000c39]  Advance PC by 2 to 0x9de
  [0x00000c3b]  Extended opcode 1: End of Sequence

  [0x00000c3e]  Set column to 1
  [0x00000c40]  Extended opcode 2: set Address to 0x9e0
  [0x00000c47]  Advance Line by 226 to 227
  [0x00000c4a]  Copy
  [0x00000c4b]  Set column to 5
  [0x00000c4d]  Special opcode 20: advance Address by 2 to 0x9e2 and Line by 1 to 228
  [0x00000c4e]  Special opcode 10: advance Address by 0 to 0x9e2 and Line by 5 to 233 (view 1)
  [0x00000c4f]  Special opcode 6: advance Address by 0 to 0x9e2 and Line by 1 to 234 (view 2)
  [0x00000c50]  Set column to 17
  [0x00000c52]  Set is_stmt to 0
  [0x00000c53]  Copy (view 3)
  [0x00000c54]  Set column to 12
  [0x00000c56]  Special opcode 18: advance Address by 2 to 0x9e4 and Line by -1 to 233
  [0x00000c57]  Set column to 5
  [0x00000c59]  Special opcode 20: advance Address by 2 to 0x9e6 and Line by 1 to 234
  [0x00000c5a]  Set column to 9
  [0x00000c5c]  Set is_stmt to 1
  [0x00000c5d]  Special opcode 21: advance Address by 2 to 0x9e8 and Line by 2 to 236
  [0x00000c5e]  Set column to 22
  [0x00000c60]  Set is_stmt to 0
  [0x00000c61]  Copy (view 1)
  [0x00000c62]  Set column to 20
  [0x00000c64]  Special opcode 33: advance Address by 4 to 0x9ec and Line by 0 to 236
  [0x00000c65]  Set column to 35
  [0x00000c67]  Extended opcode 4: set Discriminator to 1
  [0x00000c6b]  Set is_stmt to 1
  [0x00000c6c]  Special opcode 31: advance Address by 4 to 0x9f0 and Line by -2 to 234
  [0x00000c6d]  Set column to 5
  [0x00000c6f]  Special opcode 55: advance Address by 6 to 0x9f6 and Line by 8 to 242
  [0x00000c70]  Advance Line by 14 to 256
  [0x00000c72]  Special opcode 131: advance Address by 18 to 0xa08 and Line by 0 to 256
  [0x00000c73]  Set column to 31
  [0x00000c75]  Set is_stmt to 0
  [0x00000c76]  Copy (view 1)
  [0x00000c77]  Special opcode 33: advance Address by 4 to 0xa0c and Line by 0 to 256
  [0x00000c78]  Special opcode 33: advance Address by 4 to 0xa10 and Line by 0 to 256
  [0x00000c79]  Set column to 5
  [0x00000c7b]  Set is_stmt to 1
  [0x00000c7c]  Special opcode 34: advance Address by 4 to 0xa14 and Line by 1 to 257
  [0x00000c7d]  Set column to 1
  [0x00000c7f]  Set is_stmt to 0
  [0x00000c80]  Special opcode 34: advance Address by 4 to 0xa18 and Line by 1 to 258
  [0x00000c81]  Advance PC by 24 to 0xa30
  [0x00000c83]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 5363616e 48656164 65724669 656c6473 ScanHeaderFields
  0x00000010 00574149 54494e47 5f534341 4e5f4845 .WAITING_SCAN_HE
  0x00000020 41444552 00737263 2f6c6964 61722e63 ADER.src/lidar.c
  0x00000030 0073686f 72742069 6e740073 697a655f .short int.size_
  0x00000040 74006465 6c746100 5f5f7569 6e743332 t.delta.__uint32
  0x00000050 5f740063 6865636b 5f686561 64657200 _t.check_header.
  0x00000060 53544152 545f5041 434b4554 005f5f75 START_PACKET.__u
  0x00000070 696e7431 365f7400 73746172 745f636f int16_t.start_co
  0x00000080 64650068 65616400 63757272 656e745f de.head.current_
  0x00000090 706f696e 74004441 54415f50 41434b45 point.DATA_PACKE
  0x000000a0 54007365 7475705f 6c696461 725f636f T.setup_lidar_co
  0x000000b0 6d6d7300 52454345 4956494e 475f5343 mms.RECEIVING_SC
  0x000000c0 414e5f48 45414445 52006c6f 6e67206c AN_HEADER.long l
  0x000000d0 6f6e6720 696e7400 63757272 656e745f ong int.current_
  0x000000e0 7363616e 006d6170 5f746f5f 64656772 scan.map_to_degr
  0x000000f0 65650068 69676800 2f686f6d 652f6a6b ee.high./home/jk
  0x00000100 6d756e73 6f6e2f77 6f726b73 70616365 munson/workspace
  0x00000110 2f45454e 47343631 2f45454e 47343631 /EENG461/EENG461
  0x00000120 5f4c4944 41520063 75727265 6e745f62 _LIDAR.current_b
  0x00000130 79746500 52454345 4956494e 475f5343 yte.RECEIVING_SC
  0x00000140 414e5f44 41544100 73746172 745f6c69 AN_DATA.start_li
  0x00000150 6461725f 7363616e 006c6f6e 6720646f dar_scan.long do
  0x00000160 75626c65 00756e73 69676e65 64206368 uble.unsigned ch
  0x00000170 61720065 6e645f61 6e676c65 006c6f6e ar.end_angle.lon
  0x00000180 67206c6f 6e672075 6e736967 6e656420 g long unsigned 
  0x00000190 696e7400 434f4d4d 5f574149 54494e47 int.COMM_WAITING
  0x000001a0 00737461 72740073 686f7274 20756e73 .start.short uns
  0x000001b0 69676e65 6420696e 7400636f 6e766572 igned int.conver
  0x000001c0 745f746f 5f6d6d00 7072696e 746c6600 t_to_mm.printlf.
  0x000001d0 636c6561 725f6c69 6461725f 494f0074 clear_lidar_IO.t
  0x000001e0 79706500 73616d70 6c655f63 6f756e74 ype.sample_count
  0x000001f0 005f426f 6f6c0073 63616e5f 706f696e ._Bool.scan_poin
  0x00000200 74730047 4e552043 31372031 332e322e ts.GNU C17 13.2.
  0x00000210 30202d6d 7468756d 62202d6d 6370753d 0 -mthumb -mcpu=
  0x00000220 636f7274 65782d6d 34202d6d 6670753d cortex-m4 -mfpu=
  0x00000230 66707634 2d73702d 64313620 2d6d666c fpv4-sp-d16 -mfl
  0x00000240 6f61742d 6162693d 68617264 202d6d61 oat-abi=hard -ma
  0x00000250 7263683d 61726d76 37652d6d 2b667020 rch=armv7e-m+fp 
  0x00000260 2d67202d 4f67202d 7374643d 63313720 -g -Og -std=c17 
  0x00000270 2d666675 6e637469 6f6e2d73 65637469 -ffunction-secti
  0x00000280 6f6e7320 2d666e6f 2d627569 6c74696e ons -fno-builtin
  0x00000290 202d6664 6174612d 73656374 696f6e73  -fdata-sections
  0x000002a0 0070726f 63657373 5f706163 6b657473 .process_packets
  0x000002b0 00627974 65730072 65636569 76656400 .bytes.received.
  0x000002c0 72657365 74005f5f 696e7433 325f7400 reset.__int32_t.
  0x000002d0 73746f70 5f6c6964 61725f73 63616e00 stop_lidar_scan.
  0x000002e0 5363616e 48656164 65720063 6865636b ScanHeader.check
  0x000002f0 73756d00 70726f63 6573735f 706f696e sum.process_poin
  0x00000300 74730073 74617274 5f616e67 6c650052 ts.start_angle.R
  0x00000310 45434549 56494e47 5f484541 44455200 ECEIVING_HEADER.
  0x00000320 636f6d6d 5f737461 74650052 45434549 comm_state.RECEI
  0x00000330 56494e47 5f484541 4c54485f 5245504f VING_HEALTH_REPO
  0x00000340 5254005f 5f75696e 74385f74 00737263 RT.__uint8_t.src
  0x00000350 2f6d6169 6e2e6300 6d61696e 00736574 /main.c.main.set
  0x00000360 75705f75 6172745f 7072696e 74657200 up_uart_printer.
  0x00000370 7365636f 6e645f63 6f756e74 65720067 second_counter.g
  0x00000380 65745f75 7074696d 655f6379 636c6573 et_uptime_cycles
  0x00000390 00637963 6c65735f 6e6f7700 7372632f .cycles_now.src/
  0x000003a0 74696d65 72732e63 00757074 696d655f timers.c.uptime_
  0x000003b0 7365636f 6e647300 74696d65 72315f6f seconds.timer1_o
  0x000003c0 76657266 6c6f775f 636f756e 74007469 verflow_count.ti
  0x000003d0 6d654b65 65706572 49535200 6f766572 meKeeperISR.over
  0x000003e0 666c6f77 5f636f75 6e745f6e 6f77005f flow_count_now._
  0x000003f0 5f75696e 7436345f 7400736f 6e69635f _uint64_t.sonic_
  0x00000400 73656e73 6f725f61 6374696f 6e5f6469 sensor_action_di
  0x00000410 7600636f 6e666967 75726544 65626f75 v.configureDebou
  0x00000420 6e636554 696d6572 00696e74 65676572 nceTimer.integer
  0x00000430 50617274 00707269 6e745f73 7472696e Part.print_strin
  0x00000440 67006368 6172735f 73656e74 5f726563 g.chars_sent_rec
  0x00000450 656e746c 79006465 63696d61 6c506172 ently.decimalPar
  0x00000460 74005f5f 676e7563 5f76615f 6c697374 t.__gnuc_va_list
  0x00000470 006e756d 75007075 74636861 72007072 .numu.putchar.pr
  0x00000480 696e745f 666c6f61 74007372 632f7561 int_float.src/ua
  0x00000490 72745f70 72696e74 2e630066 6f726d61 rt_print.c.forma
  0x000004a0 74007072 696e745f 756e7369 676e6564 t.print_unsigned
  0x000004b0 5f646563 696d616c 00707269 6e745f64 _decimal.print_d
  0x000004c0 6563696d 616c005f 5f617000 706c6163 ecimal.__ap.plac
  0x000004d0 6573006e 756d6265 72006e75 6d66005f es.number.numf._
  0x000004e0 5f76615f 6c697374 00617267 73005f64 _va_list.args._d
  0x000004f0 61746100 70756c53 7461636b 00496e74 ata.pulStack.Int
  0x00000500 44656661 756c7448 616e646c 65720070 DefaultHandler.p
  0x00000510 756c4465 7374005f 65746578 74005f65 ulDest._etext._e
  0x00000520 64617461 00737973 2f737461 72747570 data.sys/startup
  0x00000530 5f676363 2e630046 61756c74 49535200 _gcc.c.FaultISR.
  0x00000540 675f7066 6e566563 746f7273 0070756c g_pfnVectors.pul
  0x00000550 53726300 52657365 74495352 004e6d69 Src.ResetISR.Nmi
  0x00000560 535200                              SR.

Contents of the .debug_frame section:


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 00000018 00000000 FDE cie=00000000 pc=0000026c..00000294
  DW_CFA_advance_loc: 2 to 0000026e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000002c 00000018 00000000 FDE cie=00000000 pc=00000294..00000344
  DW_CFA_advance_loc: 2 to 00000296
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000048 00000018 00000000 FDE cie=00000000 pc=00000344..00000368
  DW_CFA_advance_loc: 2 to 00000346
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000064 00000018 00000000 FDE cie=00000000 pc=00000368..0000038c
  DW_CFA_advance_loc: 2 to 0000036a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000080 00000018 00000000 FDE cie=00000000 pc=0000038c..000003bc
  DW_CFA_advance_loc: 2 to 0000038e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000009c 00000024 00000000 FDE cie=00000000 pc=000003bc..0000042c
  DW_CFA_advance_loc: 2 to 000003be
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 000003c2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset_extended: r80 at cfa-16
  DW_CFA_offset_extended: r81 at cfa-12
  DW_CFA_advance_loc: 92 to 0000041e
  DW_CFA_restore_extended: r80
  DW_CFA_restore_extended: r81
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

000000c4 0000000c 00000000 FDE cie=00000000 pc=0000042c..00000430

000000d4 0000000c 00000000 FDE cie=00000000 pc=00000430..00000480

000000e4 00000018 00000000 FDE cie=00000000 pc=00000480..000005c0
  DW_CFA_advance_loc: 2 to 00000482
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000100 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000110 00000014 00000100 FDE cie=00000100 pc=000005c0..0000062c
  DW_CFA_advance_loc: 2 to 000005c2
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000128 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000138 00000018 00000128 FDE cie=00000128 pc=00000000..0000007c
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000154 00000018 00000128 FDE cie=00000128 pc=0000062c..00000690
  DW_CFA_advance_loc: 2 to 0000062e
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r4 at cfa-4
  DW_CFA_advance_loc: 62 to 0000066c
  DW_CFA_remember_state
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 0
  DW_CFA_advance_loc: 2 to 0000066e
  DW_CFA_restore_state

00000170 00000018 00000128 FDE cie=00000128 pc=00000000..00000058
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000018c 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

0000019c 00000018 0000018c FDE cie=0000018c pc=00000690..0000070c
  DW_CFA_advance_loc: 2 to 00000692
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001b8 00000014 0000018c FDE cie=0000018c pc=0000070c..00000750
  DW_CFA_advance_loc: 2 to 0000070e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001d0 00000018 0000018c FDE cie=0000018c pc=00000750..00000766
  DW_CFA_advance_loc: 2 to 00000752
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001ec 0000001c 0000018c FDE cie=0000018c pc=00000768..000007b4
  DW_CFA_advance_loc: 2 to 0000076a
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 0000076c
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 66 to 000007ae
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000020c 00000014 0000018c FDE cie=0000018c pc=000007b4..000007cc
  DW_CFA_advance_loc: 2 to 000007b6
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000224 00000030 0000018c FDE cie=0000018c pc=000007cc..000008ec
  DW_CFA_advance_loc: 2 to 000007ce
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 000007d2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset_extended: r80 at cfa-16
  DW_CFA_offset_extended: r81 at cfa-12
  DW_CFA_advance_loc: 2 to 000007d4
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc1: 138 to 0000085e
  DW_CFA_remember_state
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 4 to 00000862
  DW_CFA_restore_extended: r80
  DW_CFA_restore_extended: r81
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000864
  DW_CFA_restore_state
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000258 00000038 0000018c FDE cie=0000018c pc=000008ec..000009d6
  DW_CFA_advance_loc: 2 to 000008ee
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r0 at cfa-16
  DW_CFA_offset: r1 at cfa-12
  DW_CFA_offset: r2 at cfa-8
  DW_CFA_offset: r3 at cfa-4
  DW_CFA_advance_loc: 2 to 000008f0
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r4 at cfa-32
  DW_CFA_offset: r5 at cfa-28
  DW_CFA_offset: r6 at cfa-24
  DW_CFA_offset: r14 at cfa-20
  DW_CFA_advance_loc: 2 to 000008f2
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc1: 220 to 000009ce
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 4 to 000009d2
  DW_CFA_restore: r14
  DW_CFA_restore: r6
  DW_CFA_restore: r5
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 000009d4
  DW_CFA_restore: r3
  DW_CFA_restore: r2
  DW_CFA_restore: r1
  DW_CFA_restore: r0
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000294 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000002a4 0000000c 00000294 FDE cie=00000294 pc=000009d8..000009da

000002b4 0000000c 00000294 FDE cie=00000294 pc=000009da..000009dc

000002c4 0000000c 00000294 FDE cie=00000294 pc=000009dc..000009de

000002d4 00000014 00000294 FDE cie=00000294 pc=000009e0..00000a28
  DW_CFA_advance_loc: 2 to 000009e2
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop


Disassembly of section .text:

00000000 <g_pfnVectors>:
volatile int32_t uptime_seconds;
volatile uint64_t timer1_overflow_count;

#define TIMER_ISR_IS_PENDING (TIMER1_MIS_R & TIMER_ICR_TATOCINT)

void configureDebounceTimer(void) {
   0:	08 04 00 20 e1 09 00 00 d9 09 00 00 db 09 00 00     ... ............

	SYSCTL_RCGCTIMER_R |= SYSCTL_RCGCTIMER_R1; //Enable Run Mode Clock Gating Control for Timer 0

	while (!(SYSCTL_PRTIMER_R & SYSCTL_RCGCTIMER_R1)) {}
  10:	dd 09 00 00 dd 09 00 00 dd 09 00 00 00 00 00 00     ................
	...

	TIMER1_CTL_R &= ~TIMER_CTL_TAEN; //Disable Timer
	TIMER1_CTL_R |= TIMER_CTL_TASTALL; //Stall for debug
  2c:	dd 09 00 00 dd 09 00 00 00 00 00 00 dd 09 00 00     ................
	TIMER1_CFG_R = TIMER_CFG_32_BIT_TIMER;
	TIMER1_TAMR_R |= TIMER_TAMR_TAMR_PERIOD; //Set Timer to count down periodically
	TIMER1_TAILR_R = TIMER_CYCLES-1;
  3c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
	TIMER1_TAPR_R = 0;
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
  4c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt as Timeout
	NVIC_EN0_R = 1 << (INT_TIMER1A - 16);
  5c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
	TIMER1_CTL_R |= TIMER_CTL_TAEN; //Enable Timer
  6c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  7c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  8c:	dd 09 00 00 dd 09 00 00 2d 06 00 00 dd 09 00 00     ........-.......
  9c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  ac:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  bc:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  cc:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  dc:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  ec:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
  fc:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 10c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 11c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 12c:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 13c:	dd 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
 14c:	00 00 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 15c:	dd 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
 1b0:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 1c0:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 1d0:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 1e0:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 1f0:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 200:	dd 09 00 00 dd 09 00 00 dd 09 00 00 00 00 00 00     ................
 210:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 220:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 230:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 240:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 250:	dd 09 00 00 dd 09 00 00 dd 09 00 00 dd 09 00 00     ................
 260:	dd 09 00 00 dd 09 00 00 dd 09 00 00                 ............

0000026c <process_points>:
		}
		receiving_point_buffer[i] = (receiving_point_buffer[leftidx] + receiving_point_buffer[rightidx])/2;
	}
}*/

void process_points(uint16_t *scan_points){
 26c:	b538      	push	{r3, r4, r5, lr}
 26e:	4605      	mov	r5, r0

	for(int i = 0; i < 360; i++) {
 270:	2400      	movs	r4, #0
 272:	e009      	b.n	288 <process_points+0x1c>
		printlf("%d:%d\n", i, scan_points[i]);
 274:	f835 2014 	ldrh.w	r2, [r5, r4, lsl #1]
 278:	4621      	mov	r1, r4
 27a:	4805      	ldr	r0, [pc, #20]	@ (290 <process_points+0x24>)
 27c:	f000 fb36 	bl	8ec <printlf>
		scan_points[i] = 0;
 280:	2300      	movs	r3, #0
 282:	f825 3014 	strh.w	r3, [r5, r4, lsl #1]
	for(int i = 0; i < 360; i++) {
 286:	3401      	adds	r4, #1
 288:	f5b4 7fb4 	cmp.w	r4, #360	@ 0x168
 28c:	dbf2      	blt.n	274 <process_points+0x8>
	}
}
 28e:	bd38      	pop	{r3, r4, r5, pc}
 290:	00000a30 	.word	0x00000a30

00000294 <setup_lidar_comms>:

void setup_lidar_comms(void){
 294:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
 296:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 29a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 29c:	699b      	ldr	r3, [r3, #24]
 29e:	4824      	ldr	r0, [pc, #144]	@ (330 <setup_lidar_comms+0x9c>)
 2a0:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART2);
 2a2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 2a4:	699b      	ldr	r3, [r3, #24]
 2a6:	4823      	ldr	r0, [pc, #140]	@ (334 <setup_lidar_comms+0xa0>)
 2a8:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART2)){};
 2aa:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 2ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 2b0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 2b4:	481f      	ldr	r0, [pc, #124]	@ (334 <setup_lidar_comms+0xa0>)
 2b6:	4798      	blx	r3
 2b8:	2800      	cmp	r0, #0
 2ba:	d0f6      	beq.n	2aa <setup_lidar_comms+0x16>
	GPIO_PORTD_LOCK_R = 0x4C4F434B;
 2bc:	4c1e      	ldr	r4, [pc, #120]	@ (338 <setup_lidar_comms+0xa4>)
 2be:	4b1f      	ldr	r3, [pc, #124]	@ (33c <setup_lidar_comms+0xa8>)
 2c0:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
	GPIO_PORTD_CR_R |= 0xFF;
 2c4:	f8d4 3524 	ldr.w	r3, [r4, #1316]	@ 0x524
 2c8:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 2cc:	f8c4 3524 	str.w	r3, [r4, #1316]	@ 0x524
	GPIO_PORTD_DEN_R |= 0xFF;
 2d0:	f8d4 351c 	ldr.w	r3, [r4, #1308]	@ 0x51c
 2d4:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 2d8:	f8c4 351c 	str.w	r3, [r4, #1308]	@ 0x51c
	GPIO_PORTD_PCTL_R = (GPIO_PORTD_PCTL_R & ~(GPIO_PCTL_PD7_M | GPIO_PCTL_PD6_M)) | GPIO_PCTL_PD7_U2TX | GPIO_PCTL_PD6_U2RX;
 2dc:	f8d4 352c 	ldr.w	r3, [r4, #1324]	@ 0x52c
 2e0:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 2e4:	f043 5388 	orr.w	r3, r3, #285212672	@ 0x11000000
 2e8:	f8c4 352c 	str.w	r3, [r4, #1324]	@ 0x52c
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, LID_PINS, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 2ec:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 2f0:	6a2b      	ldr	r3, [r5, #32]
 2f2:	695e      	ldr	r6, [r3, #20]
 2f4:	2308      	movs	r3, #8
 2f6:	2266      	movs	r2, #102	@ 0x66
 2f8:	21c0      	movs	r1, #192	@ 0xc0
 2fa:	4620      	mov	r0, r4
 2fc:	47b0      	blx	r6
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, RX_PIN, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD_WPU);
 2fe:	6a2b      	ldr	r3, [r5, #32]
 300:	695e      	ldr	r6, [r3, #20]
 302:	230a      	movs	r3, #10
 304:	2266      	movs	r2, #102	@ 0x66
 306:	2140      	movs	r1, #64	@ 0x40
 308:	4620      	mov	r0, r4
 30a:	47b0      	blx	r6
	ROM_GPIODirModeSet(GPIO_PORTD_BASE, LID_PINS, GPIO_DIR_MODE_HW);
 30c:	6a2b      	ldr	r3, [r5, #32]
 30e:	685b      	ldr	r3, [r3, #4]
 310:	2202      	movs	r2, #2
 312:	21c0      	movs	r1, #192	@ 0xc0
 314:	4620      	mov	r0, r4
 316:	4798      	blx	r3
	//ROM_UARTClockSourceSet(LID_BASE, UART_CLOCK_SYSTEM);
	ROM_UARTConfigSetExpClk(LID_BASE, ROM_SysCtlClockGet(), LID_BAUD, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));
 318:	696b      	ldr	r3, [r5, #20]
 31a:	695c      	ldr	r4, [r3, #20]
 31c:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 31e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 320:	4798      	blx	r3
 322:	4601      	mov	r1, r0
 324:	2360      	movs	r3, #96	@ 0x60
 326:	f44f 3261 	mov.w	r2, #230400	@ 0x38400
 32a:	4805      	ldr	r0, [pc, #20]	@ (340 <setup_lidar_comms+0xac>)
 32c:	47a0      	blx	r4
	
}
 32e:	bd70      	pop	{r4, r5, r6, pc}
 330:	f0000803 	.word	0xf0000803
 334:	f0001802 	.word	0xf0001802
 338:	40007000 	.word	0x40007000
 33c:	4c4f434b 	.word	0x4c4f434b
 340:	4000e000 	.word	0x4000e000

00000344 <start_lidar_scan>:

void start_lidar_scan(void) {
 344:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, COMMAND_MAGIC);
 346:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 34a:	696b      	ldr	r3, [r5, #20]
 34c:	681b      	ldr	r3, [r3, #0]
 34e:	4c05      	ldr	r4, [pc, #20]	@ (364 <start_lidar_scan+0x20>)
 350:	21a5      	movs	r1, #165	@ 0xa5
 352:	4620      	mov	r0, r4
 354:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, COMMAND_START);
 356:	696b      	ldr	r3, [r5, #20]
 358:	681b      	ldr	r3, [r3, #0]
 35a:	2160      	movs	r1, #96	@ 0x60
 35c:	4620      	mov	r0, r4
 35e:	4798      	blx	r3
}
 360:	bd38      	pop	{r3, r4, r5, pc}
 362:	bf00      	nop
 364:	4000e000 	.word	0x4000e000

00000368 <stop_lidar_scan>:

void stop_lidar_scan(void) {
 368:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, COMMAND_MAGIC);
 36a:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 36e:	696b      	ldr	r3, [r5, #20]
 370:	681b      	ldr	r3, [r3, #0]
 372:	4c05      	ldr	r4, [pc, #20]	@ (388 <stop_lidar_scan+0x20>)
 374:	21a5      	movs	r1, #165	@ 0xa5
 376:	4620      	mov	r0, r4
 378:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, COMMAND_STOP);
 37a:	696b      	ldr	r3, [r5, #20]
 37c:	681b      	ldr	r3, [r3, #0]
 37e:	2165      	movs	r1, #101	@ 0x65
 380:	4620      	mov	r0, r4
 382:	4798      	blx	r3
}
 384:	bd38      	pop	{r3, r4, r5, pc}
 386:	bf00      	nop
 388:	4000e000 	.word	0x4000e000

0000038c <clear_lidar_IO>:

void clear_lidar_IO(void){
 38c:	b538      	push	{r3, r4, r5, lr}
	while(ROM_UARTCharsAvail(LID_BASE)){
 38e:	e00a      	b.n	3a6 <clear_lidar_IO+0x1a>
		ROM_UARTCharGet(LID_BASE);
 390:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 394:	696b      	ldr	r3, [r5, #20]
 396:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 398:	4c07      	ldr	r4, [pc, #28]	@ (3b8 <clear_lidar_IO+0x2c>)
 39a:	4620      	mov	r0, r4
 39c:	4798      	blx	r3
		ROM_UARTRxErrorClear(LID_BASE);
 39e:	696b      	ldr	r3, [r5, #20]
 3a0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 3a2:	4620      	mov	r0, r4
 3a4:	4798      	blx	r3
	while(ROM_UARTCharsAvail(LID_BASE)){
 3a6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 3aa:	695b      	ldr	r3, [r3, #20]
 3ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 3ae:	4802      	ldr	r0, [pc, #8]	@ (3b8 <clear_lidar_IO+0x2c>)
 3b0:	4798      	blx	r3
 3b2:	2800      	cmp	r0, #0
 3b4:	d1ec      	bne.n	390 <clear_lidar_IO+0x4>
	}
}
 3b6:	bd38      	pop	{r3, r4, r5, pc}
 3b8:	4000e000 	.word	0x4000e000

000003bc <map_to_degree>:

uint16_t map_to_degree(uint16_t start, uint16_t end, uint16_t num){
 3bc:	b508      	push	{r3, lr}
 3be:	ed2d 8b02 	vpush	{d8}
 3c2:	ee08 0a10 	vmov	s16, r0
 3c6:	ee07 1a90 	vmov	s15, r1
 3ca:	ee07 2a10 	vmov	s14, r2
	float delta = ((float)end)/64.0f - ((float)start)/64.0f;
 3ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 3d2:	eddf 6a13 	vldr	s13, [pc, #76]	@ 420 <map_to_degree+0x64>
 3d6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 3da:	eeb8 8a48 	vcvt.f32.u32	s16, s16
 3de:	ee68 6a26 	vmul.f32	s13, s16, s13
 3e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
	float degree = (float)start + (delta * num);
 3e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 3ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 3ee:	ee38 8a27 	vadd.f32	s16, s16, s15
	
	#ifdef DEBUG_LID
	if(degree < 0 || degree >360) printlf("BAD ANGLE?\n");
 3f2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 3f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 3fa:	d406      	bmi.n	40a <map_to_degree+0x4e>
 3fc:	eddf 7a09 	vldr	s15, [pc, #36]	@ 424 <map_to_degree+0x68>
 400:	eeb4 8ae7 	vcmpe.f32	s16, s15
 404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 408:	dd02      	ble.n	410 <map_to_degree+0x54>
 40a:	4807      	ldr	r0, [pc, #28]	@ (428 <map_to_degree+0x6c>)
 40c:	f000 fa6e 	bl	8ec <printlf>
	#endif
	return (uint16_t)degree;
 410:	eebc 8ac8 	vcvt.u32.f32	s16, s16
}
 414:	ee18 3a10 	vmov	r3, s16
 418:	b298      	uxth	r0, r3
 41a:	ecbd 8b02 	vpop	{d8}
 41e:	bd08      	pop	{r3, pc}
 420:	3c800000 	.word	0x3c800000
 424:	43b40000 	.word	0x43b40000
 428:	00000a38 	.word	0x00000a38

0000042c <convert_to_mm>:

uint16_t convert_to_mm(uint16_t point){
	return point >> 2; //divide by 4
}
 42c:	0880      	lsrs	r0, r0, #2
 42e:	4770      	bx	lr

00000430 <check_header>:

//Returns true if header fails checksum & other verification
bool check_header(ScanHeader *head) {
	if(head->header.start_code != SCAN_MAGIC) return true; //incorret start word
 430:	8802      	ldrh	r2, [r0, #0]
 432:	f245 53aa 	movw	r3, #21930	@ 0x55aa
 436:	429a      	cmp	r2, r3
 438:	d11c      	bne.n	474 <check_header+0x44>
	if(!(head->header.start_angle & 0x1)) return true; //incorrect angle data
 43a:	8883      	ldrh	r3, [r0, #4]
 43c:	f013 0f01 	tst.w	r3, #1
 440:	d01a      	beq.n	478 <check_header+0x48>
	if(!(head->header.end_angle & 0x1)) return true; //incorrect angle data
 442:	88c3      	ldrh	r3, [r0, #6]
 444:	f013 0f01 	tst.w	r3, #1
 448:	d018      	beq.n	47c <check_header+0x4c>
	
	uint16_t checksum = 0;
	//size minus 2 - don't include checksum word
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 44a:	2200      	movs	r2, #0
	uint16_t checksum = 0;
 44c:	4611      	mov	r1, r2
 44e:	e00a      	b.n	466 <check_header+0x36>
		uint8_t low = head->bytes[i++];
 450:	f102 0c01 	add.w	ip, r2, #1
 454:	5c83      	ldrb	r3, [r0, r2]
		uint8_t high = head->bytes[i++];
 456:	f810 c00c 	ldrb.w	ip, [r0, ip]
 45a:	3202      	adds	r2, #2
		checksum ^= (high << 8) | low;
 45c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 460:	b21b      	sxth	r3, r3
 462:	4059      	eors	r1, r3
 464:	b289      	uxth	r1, r1
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 466:	2a07      	cmp	r2, #7
 468:	d9f2      	bls.n	450 <check_header+0x20>
	}
	
	return (checksum != head->header.checksum);
 46a:	8900      	ldrh	r0, [r0, #8]
 46c:	1a40      	subs	r0, r0, r1
 46e:	bf18      	it	ne
 470:	2001      	movne	r0, #1
 472:	4770      	bx	lr
	if(head->header.start_code != SCAN_MAGIC) return true; //incorret start word
 474:	2001      	movs	r0, #1
 476:	4770      	bx	lr
	if(!(head->header.start_angle & 0x1)) return true; //incorrect angle data
 478:	2001      	movs	r0, #1
 47a:	4770      	bx	lr
	if(!(head->header.end_angle & 0x1)) return true; //incorrect angle data
 47c:	2001      	movs	r0, #1
}
 47e:	4770      	bx	lr

00000480 <process_packets>:

void process_packets(void) {
 480:	b570      	push	{r4, r5, r6, lr}
	static uint32_t current_byte = 0;
	static ScanHeader current_scan;
	static uint32_t current_point = 0;
	static uint16_t scan_points[360];
	
	while(ROM_UARTCharsAvail(LID_BASE)) {
 482:	e01d      	b.n	4c0 <process_packets+0x40>
		//Haven't started a data packet yet - look for magic header
			case WAITING_SCAN_HEADER:{
				//Is this the first, or second byte in the header magic number
				switch(current_byte++) {
					case 0:
						if(received != SCAN_MAGIC_0) goto reset;
 484:	2eaa      	cmp	r6, #170	@ 0xaa
 486:	d14b      	bne.n	520 <process_packets+0xa0>
						current_scan.bytes[0] = received;
 488:	4b44      	ldr	r3, [pc, #272]	@ (59c <process_packets+0x11c>)
 48a:	701e      	strb	r6, [r3, #0]
					break;
 48c:	e018      	b.n	4c0 <process_packets+0x40>
					break;
				}
			} break;
		
			case RECEIVING_SCAN_HEADER:{
				current_scan.bytes[current_byte++] = received;
 48e:	4944      	ldr	r1, [pc, #272]	@ (5a0 <process_packets+0x120>)
 490:	680a      	ldr	r2, [r1, #0]
 492:	1c53      	adds	r3, r2, #1
 494:	600b      	str	r3, [r1, #0]
 496:	4941      	ldr	r1, [pc, #260]	@ (59c <process_packets+0x11c>)
 498:	548e      	strb	r6, [r1, r2]
				
				//Still receiving the header
				if(current_byte < sizeof(current_scan)) continue;
 49a:	2b09      	cmp	r3, #9
 49c:	d910      	bls.n	4c0 <process_packets+0x40>
				
				if(check_header(&current_scan)) goto reset;
 49e:	4608      	mov	r0, r1
 4a0:	f7ff ffc6 	bl	430 <check_header>
 4a4:	2800      	cmp	r0, #0
 4a6:	d13b      	bne.n	520 <process_packets+0xa0>
				
				//Start of a new scan sequence - process the last, complete, scan sequence
				if(current_scan.header.type == START_PACKET) {
 4a8:	4b3c      	ldr	r3, [pc, #240]	@ (59c <process_packets+0x11c>)
 4aa:	789b      	ldrb	r3, [r3, #2]
 4ac:	2b01      	cmp	r3, #1
 4ae:	d034      	beq.n	51a <process_packets+0x9a>
					process_points(scan_points);
					goto reset;
				}
				
				//Header is good, read in the points
				current_byte = 0;
 4b0:	2300      	movs	r3, #0
 4b2:	4a3b      	ldr	r2, [pc, #236]	@ (5a0 <process_packets+0x120>)
 4b4:	6013      	str	r3, [r2, #0]
				current_point = 0;
 4b6:	4a3b      	ldr	r2, [pc, #236]	@ (5a4 <process_packets+0x124>)
 4b8:	6013      	str	r3, [r2, #0]
				comm_state = RECEIVING_SCAN_DATA;
 4ba:	4b3b      	ldr	r3, [pc, #236]	@ (5a8 <process_packets+0x128>)
 4bc:	2204      	movs	r2, #4
 4be:	701a      	strb	r2, [r3, #0]
	while(ROM_UARTCharsAvail(LID_BASE)) {
 4c0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 4c4:	695b      	ldr	r3, [r3, #20]
 4c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 4c8:	4838      	ldr	r0, [pc, #224]	@ (5ac <process_packets+0x12c>)
 4ca:	4798      	blx	r3
 4cc:	2800      	cmp	r0, #0
 4ce:	d038      	beq.n	542 <process_packets+0xc2>
		uint8_t received = ROM_UARTCharGet(LID_BASE);
 4d0:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 4d4:	696b      	ldr	r3, [r5, #20]
 4d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 4d8:	4c34      	ldr	r4, [pc, #208]	@ (5ac <process_packets+0x12c>)
 4da:	4620      	mov	r0, r4
 4dc:	4798      	blx	r3
 4de:	b2c6      	uxtb	r6, r0
		if(ROM_UARTRxErrorGet(UART2_BASE)) goto reset;
 4e0:	696b      	ldr	r3, [r5, #20]
 4e2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 4e4:	4620      	mov	r0, r4
 4e6:	4798      	blx	r3
 4e8:	b9d0      	cbnz	r0, 520 <process_packets+0xa0>
		switch(comm_state) {
 4ea:	4b2f      	ldr	r3, [pc, #188]	@ (5a8 <process_packets+0x128>)
 4ec:	781b      	ldrb	r3, [r3, #0]
 4ee:	2b03      	cmp	r3, #3
 4f0:	d0cd      	beq.n	48e <process_packets+0xe>
 4f2:	2b04      	cmp	r3, #4
 4f4:	d026      	beq.n	544 <process_packets+0xc4>
 4f6:	2b02      	cmp	r3, #2
 4f8:	d1e2      	bne.n	4c0 <process_packets+0x40>
				switch(current_byte++) {
 4fa:	4a29      	ldr	r2, [pc, #164]	@ (5a0 <process_packets+0x120>)
 4fc:	6813      	ldr	r3, [r2, #0]
 4fe:	1c59      	adds	r1, r3, #1
 500:	6011      	str	r1, [r2, #0]
 502:	2b00      	cmp	r3, #0
 504:	d0be      	beq.n	484 <process_packets+0x4>
 506:	2b01      	cmp	r3, #1
 508:	d1da      	bne.n	4c0 <process_packets+0x40>
						if(received != SCAN_MAGIC_1) goto reset;
 50a:	2e55      	cmp	r6, #85	@ 0x55
 50c:	d108      	bne.n	520 <process_packets+0xa0>
						current_scan.bytes[1] = received;
 50e:	4b23      	ldr	r3, [pc, #140]	@ (59c <process_packets+0x11c>)
 510:	705e      	strb	r6, [r3, #1]
						comm_state = RECEIVING_SCAN_HEADER;
 512:	4b25      	ldr	r3, [pc, #148]	@ (5a8 <process_packets+0x128>)
 514:	2203      	movs	r2, #3
 516:	701a      	strb	r2, [r3, #0]
					break;
 518:	e7d2      	b.n	4c0 <process_packets+0x40>
					process_points(scan_points);
 51a:	4825      	ldr	r0, [pc, #148]	@ (5b0 <process_packets+0x130>)
 51c:	f7ff fea6 	bl	26c <process_points>
	}
	return;
	
	//HOT TAKE: Exception handling is just goto in fancy clothes
	reset:
	ROM_UARTRxErrorClear(LID_BASE);
 520:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 524:	695b      	ldr	r3, [r3, #20]
 526:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 528:	4820      	ldr	r0, [pc, #128]	@ (5ac <process_packets+0x12c>)
 52a:	4798      	blx	r3
	current_byte = 0;
 52c:	2300      	movs	r3, #0
 52e:	4a1c      	ldr	r2, [pc, #112]	@ (5a0 <process_packets+0x120>)
 530:	6013      	str	r3, [r2, #0]
	current_point = 0;
 532:	4a1c      	ldr	r2, [pc, #112]	@ (5a4 <process_packets+0x124>)
 534:	6013      	str	r3, [r2, #0]
	comm_state = WAITING_SCAN_HEADER;
 536:	4b1c      	ldr	r3, [pc, #112]	@ (5a8 <process_packets+0x128>)
 538:	2202      	movs	r2, #2
 53a:	701a      	strb	r2, [r3, #0]
	#ifdef DEBUG_LID
	printlf("R");
 53c:	481d      	ldr	r0, [pc, #116]	@ (5b4 <process_packets+0x134>)
 53e:	f000 f9d5 	bl	8ec <printlf>
	#endif
}
 542:	bd70      	pop	{r4, r5, r6, pc}
				switch(current_byte){
 544:	4b16      	ldr	r3, [pc, #88]	@ (5a0 <process_packets+0x120>)
 546:	681b      	ldr	r3, [r3, #0]
 548:	b323      	cbz	r3, 594 <process_packets+0x114>
 54a:	2b01      	cmp	r3, #1
 54c:	d1b8      	bne.n	4c0 <process_packets+0x40>
						high = received;
 54e:	4b1a      	ldr	r3, [pc, #104]	@ (5b8 <process_packets+0x138>)
 550:	701e      	strb	r6, [r3, #0]
						uint16_t point = (high << 8) | low;
 552:	4b1a      	ldr	r3, [pc, #104]	@ (5bc <process_packets+0x13c>)
 554:	781d      	ldrb	r5, [r3, #0]
 556:	ea45 2506 	orr.w	r5, r5, r6, lsl #8
						uint16_t angle = map_to_degree(current_scan.header.start_angle>>1, current_scan.header.end_angle>>1, current_point);
 55a:	4b10      	ldr	r3, [pc, #64]	@ (59c <process_packets+0x11c>)
 55c:	8898      	ldrh	r0, [r3, #4]
 55e:	88d9      	ldrh	r1, [r3, #6]
 560:	4b10      	ldr	r3, [pc, #64]	@ (5a4 <process_packets+0x124>)
 562:	881a      	ldrh	r2, [r3, #0]
 564:	0849      	lsrs	r1, r1, #1
 566:	0840      	lsrs	r0, r0, #1
 568:	f7ff ff28 	bl	3bc <map_to_degree>
 56c:	4604      	mov	r4, r0
						if(!scan_points[angle]) scan_points[angle] = convert_to_mm(point);
 56e:	4b10      	ldr	r3, [pc, #64]	@ (5b0 <process_packets+0x130>)
 570:	f833 3010 	ldrh.w	r3, [r3, r0, lsl #1]
 574:	b92b      	cbnz	r3, 582 <process_packets+0x102>
 576:	4628      	mov	r0, r5
 578:	f7ff ff58 	bl	42c <convert_to_mm>
 57c:	4b0c      	ldr	r3, [pc, #48]	@ (5b0 <process_packets+0x130>)
 57e:	f823 0014 	strh.w	r0, [r3, r4, lsl #1]
						if(++current_point >= current_scan.header.sample_count) goto reset;
 582:	4a08      	ldr	r2, [pc, #32]	@ (5a4 <process_packets+0x124>)
 584:	6813      	ldr	r3, [r2, #0]
 586:	3301      	adds	r3, #1
 588:	6013      	str	r3, [r2, #0]
 58a:	4a04      	ldr	r2, [pc, #16]	@ (59c <process_packets+0x11c>)
 58c:	78d2      	ldrb	r2, [r2, #3]
 58e:	4293      	cmp	r3, r2
 590:	d396      	bcc.n	4c0 <process_packets+0x40>
 592:	e7c5      	b.n	520 <process_packets+0xa0>
						low = received;
 594:	4b09      	ldr	r3, [pc, #36]	@ (5bc <process_packets+0x13c>)
 596:	701e      	strb	r6, [r3, #0]
					break;
 598:	e792      	b.n	4c0 <process_packets+0x40>
 59a:	bf00      	nop
 59c:	200002e0 	.word	0x200002e0
 5a0:	200002ec 	.word	0x200002ec
 5a4:	2000000c 	.word	0x2000000c
 5a8:	20000000 	.word	0x20000000
 5ac:	4000e000 	.word	0x4000e000
 5b0:	20000010 	.word	0x20000010
 5b4:	00000a44 	.word	0x00000a44
 5b8:	20000008 	.word	0x20000008
 5bc:	20000009 	.word	0x20000009

000005c0 <main>:

#define Disable_Interrupts() __asm("CPSID I")
#define Enable_Interrupts() 


int main (void) {
 5c0:	b508      	push	{r3, lr}
	ROM_SysCtlClockSet(SYSCTL_SYSDIV_2_5 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);
 5c2:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 5c6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 5c8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 5ca:	4811      	ldr	r0, [pc, #68]	@ (610 <main+0x50>)
 5cc:	4798      	blx	r3
	
	setup_uart_printer();
 5ce:	f000 f85f 	bl	690 <setup_uart_printer>
	printlf("Init Lidar Comms\n");
 5d2:	4810      	ldr	r0, [pc, #64]	@ (614 <main+0x54>)
 5d4:	f000 f98a 	bl	8ec <printlf>
	setup_lidar_comms();
 5d8:	f7ff fe5c 	bl	294 <setup_lidar_comms>
	printlf("Stopping Lidar scan\n");
 5dc:	480e      	ldr	r0, [pc, #56]	@ (618 <main+0x58>)
 5de:	f000 f985 	bl	8ec <printlf>
	stop_lidar_scan();
 5e2:	f7ff fec1 	bl	368 <stop_lidar_scan>
	printlf("Flushing Lidar buffer\n");
 5e6:	480d      	ldr	r0, [pc, #52]	@ (61c <main+0x5c>)
 5e8:	f000 f980 	bl	8ec <printlf>
	ROM_SysCtlDelay(1000000);
 5ec:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 5ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 5f2:	480b      	ldr	r0, [pc, #44]	@ (620 <main+0x60>)
 5f4:	4798      	blx	r3
	clear_lidar_IO();
 5f6:	f7ff fec9 	bl	38c <clear_lidar_IO>
	printlf("Starting Scan\n");
 5fa:	480a      	ldr	r0, [pc, #40]	@ (624 <main+0x64>)
 5fc:	f000 f976 	bl	8ec <printlf>
	start_lidar_scan();
 600:	f7ff fea0 	bl	344 <start_lidar_scan>
	printlf("Looping\n");
 604:	4808      	ldr	r0, [pc, #32]	@ (628 <main+0x68>)
 606:	f000 f971 	bl	8ec <printlf>
	while(1) {
		process_packets();
 60a:	f7ff ff39 	bl	480 <process_packets>
	while(1) {
 60e:	e7fc      	b.n	60a <main+0x4a>
 610:	c1000540 	.word	0xc1000540
 614:	00000a48 	.word	0x00000a48
 618:	00000a5c 	.word	0x00000a5c
 61c:	00000a74 	.word	0x00000a74
 620:	000f4240 	.word	0x000f4240
 624:	00000a8c 	.word	0x00000a8c
 628:	00000a9c 	.word	0x00000a9c

0000062c <timeKeeperISR>:
}

void timeKeeperISR (void) {
 62c:	b410      	push	{r4}
	static char second_counter = 0;
	static char sonic_sensor_action_div = 0;
	
	TIMER1_IMR_R &= ~TIMER_IMR_TATOIM; //Disable Interrupt
 62e:	4b14      	ldr	r3, [pc, #80]	@ (680 <timeKeeperISR+0x54>)
 630:	699a      	ldr	r2, [r3, #24]
 632:	f022 0201 	bic.w	r2, r2, #1
 636:	619a      	str	r2, [r3, #24]
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 638:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 63a:	f042 0201 	orr.w	r2, r2, #1
 63e:	625a      	str	r2, [r3, #36]	@ 0x24
	
	timer1_overflow_count++;
 640:	4c10      	ldr	r4, [pc, #64]	@ (684 <timeKeeperISR+0x58>)
 642:	e9d4 2300 	ldrd	r2, r3, [r4]
 646:	1c50      	adds	r0, r2, #1
 648:	f143 0100 	adc.w	r1, r3, #0
 64c:	e9c4 0100 	strd	r0, r1, [r4]
	
	//Every second
	if(++second_counter == TIMER1_MULTIPLIER) {
 650:	4a0d      	ldr	r2, [pc, #52]	@ (688 <timeKeeperISR+0x5c>)
 652:	7813      	ldrb	r3, [r2, #0]
 654:	3301      	adds	r3, #1
 656:	b2db      	uxtb	r3, r3
 658:	7013      	strb	r3, [r2, #0]
 65a:	2b20      	cmp	r3, #32
 65c:	d007      	beq.n	66e <timeKeeperISR+0x42>
		uptime_seconds++;
		second_counter = 0;
	}
	
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
 65e:	4a08      	ldr	r2, [pc, #32]	@ (680 <timeKeeperISR+0x54>)
 660:	6993      	ldr	r3, [r2, #24]
 662:	f043 0301 	orr.w	r3, r3, #1
 666:	6193      	str	r3, [r2, #24]
}
 668:	f85d 4b04 	ldr.w	r4, [sp], #4
 66c:	4770      	bx	lr
		uptime_seconds++;
 66e:	4a07      	ldr	r2, [pc, #28]	@ (68c <timeKeeperISR+0x60>)
 670:	6813      	ldr	r3, [r2, #0]
 672:	3301      	adds	r3, #1
 674:	6013      	str	r3, [r2, #0]
		second_counter = 0;
 676:	4b04      	ldr	r3, [pc, #16]	@ (688 <timeKeeperISR+0x5c>)
 678:	2200      	movs	r2, #0
 67a:	701a      	strb	r2, [r3, #0]
 67c:	e7ef      	b.n	65e <timeKeeperISR+0x32>
 67e:	bf00      	nop
 680:	40031000 	.word	0x40031000
 684:	200002f8 	.word	0x200002f8
 688:	200002f0 	.word	0x200002f0
 68c:	20000300 	.word	0x20000300

00000690 <setup_uart_printer>:
#include <inc/hw_memmap.h>
#include <common/tm4c123gh6pm.h>

#define INFINITY 1.0f/0.f

void setup_uart_printer(void){
 690:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
 692:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 696:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 698:	699b      	ldr	r3, [r3, #24]
 69a:	4818      	ldr	r0, [pc, #96]	@ (6fc <setup_uart_printer+0x6c>)
 69c:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
 69e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 6a0:	699b      	ldr	r3, [r3, #24]
 6a2:	4817      	ldr	r0, [pc, #92]	@ (700 <setup_uart_printer+0x70>)
 6a4:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART0)){};
 6a6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 6aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 6ac:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 6b0:	4813      	ldr	r0, [pc, #76]	@ (700 <setup_uart_printer+0x70>)
 6b2:	4798      	blx	r3
 6b4:	2800      	cmp	r0, #0
 6b6:	d0f6      	beq.n	6a6 <setup_uart_printer+0x16>
	
	ROM_GPIOPadConfigSet(GPIO_PORTA_BASE, 3, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 6b8:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 6bc:	6a23      	ldr	r3, [r4, #32]
 6be:	695d      	ldr	r5, [r3, #20]
 6c0:	2308      	movs	r3, #8
 6c2:	2266      	movs	r2, #102	@ 0x66
 6c4:	2103      	movs	r1, #3
 6c6:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 6ca:	47a8      	blx	r5
	ROM_GPIODirModeSet(GPIO_PORTA_BASE, 3, GPIO_DIR_MODE_HW);
 6cc:	6a23      	ldr	r3, [r4, #32]
 6ce:	685b      	ldr	r3, [r3, #4]
 6d0:	2202      	movs	r2, #2
 6d2:	2103      	movs	r1, #3
 6d4:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 6d8:	4798      	blx	r3
	ROM_UARTClockSourceSet(UART0_BASE, UART_CLOCK_SYSTEM);
 6da:	6963      	ldr	r3, [r4, #20]
 6dc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 6de:	4d09      	ldr	r5, [pc, #36]	@ (704 <setup_uart_printer+0x74>)
 6e0:	2100      	movs	r1, #0
 6e2:	4628      	mov	r0, r5
 6e4:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(UART0_BASE, ROM_SysCtlClockGet(), 4000000,
 6e6:	6963      	ldr	r3, [r4, #20]
 6e8:	695e      	ldr	r6, [r3, #20]
 6ea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 6ec:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 6ee:	4798      	blx	r3
 6f0:	4601      	mov	r1, r0
 6f2:	2368      	movs	r3, #104	@ 0x68
 6f4:	4a04      	ldr	r2, [pc, #16]	@ (708 <setup_uart_printer+0x78>)
 6f6:	4628      	mov	r0, r5
 6f8:	47b0      	blx	r6
                            (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_TWO | UART_CONFIG_PAR_NONE));
}
 6fa:	bd70      	pop	{r4, r5, r6, pc}
 6fc:	f0000800 	.word	0xf0000800
 700:	f0001800 	.word	0xf0001800
 704:	4000c000 	.word	0x4000c000
 708:	003d0900 	.word	0x003d0900

0000070c <putchar>:

void putchar(char c) {
 70c:	b508      	push	{r3, lr}
 70e:	4601      	mov	r1, r0
	static int chars_sent_recently = 0;
	ROM_UARTCharPut(UART0_BASE, c);
 710:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 714:	695b      	ldr	r3, [r3, #20]
 716:	681b      	ldr	r3, [r3, #0]
 718:	480b      	ldr	r0, [pc, #44]	@ (748 <putchar+0x3c>)
 71a:	4798      	blx	r3
	while(ROM_UARTBusy(UART0_BASE)) {};
 71c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 720:	695b      	ldr	r3, [r3, #20]
 722:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 724:	4808      	ldr	r0, [pc, #32]	@ (748 <putchar+0x3c>)
 726:	4798      	blx	r3
 728:	2800      	cmp	r0, #0
 72a:	d1f7      	bne.n	71c <putchar+0x10>
	
	//Really dumb, but avoid overwhelming ICDI
	if(++chars_sent_recently > 7) {
 72c:	4a07      	ldr	r2, [pc, #28]	@ (74c <putchar+0x40>)
 72e:	6813      	ldr	r3, [r2, #0]
 730:	3301      	adds	r3, #1
 732:	6013      	str	r3, [r2, #0]
 734:	2b07      	cmp	r3, #7
 736:	dd06      	ble.n	746 <putchar+0x3a>
		chars_sent_recently = 0;
 738:	2300      	movs	r3, #0
 73a:	6013      	str	r3, [r2, #0]
		for(int i = 0; i < 180; i++) {
 73c:	e001      	b.n	742 <putchar+0x36>
			__asm("mov r1,r1\n");
 73e:	4609      	mov	r1, r1
		for(int i = 0; i < 180; i++) {
 740:	3301      	adds	r3, #1
 742:	2bb3      	cmp	r3, #179	@ 0xb3
 744:	ddfb      	ble.n	73e <putchar+0x32>
		}
	}
}
 746:	bd08      	pop	{r3, pc}
 748:	4000c000 	.word	0x4000c000
 74c:	20000304 	.word	0x20000304

00000750 <print_string>:

void print_string(const char * const str) {
 750:	b538      	push	{r3, r4, r5, lr}
 752:	4605      	mov	r5, r0
	for(int i = 0; str[i] != '\0'; i++) {
 754:	2400      	movs	r4, #0
 756:	e002      	b.n	75e <print_string+0xe>
		putchar( str[i]);
 758:	f7ff ffd8 	bl	70c <putchar>
	for(int i = 0; str[i] != '\0'; i++) {
 75c:	3401      	adds	r4, #1
 75e:	5d28      	ldrb	r0, [r5, r4]
 760:	2800      	cmp	r0, #0
 762:	d1f9      	bne.n	758 <print_string+0x8>
	}
}
 764:	bd38      	pop	{r3, r4, r5, pc}
	...

00000768 <print_unsigned_decimal>:

void print_unsigned_decimal(uint32_t num){
 768:	b510      	push	{r4, lr}
 76a:	b084      	sub	sp, #16
	
	char buf[11]; //Large enough to fit any value of num
	
	int places = 0;
 76c:	2400      	movs	r4, #0
	
	do {
		buf[places++] = (char)('0' + (num % 10));
 76e:	4b10      	ldr	r3, [pc, #64]	@ (7b0 <print_unsigned_decimal+0x48>)
 770:	fba3 2300 	umull	r2, r3, r3, r0
 774:	08db      	lsrs	r3, r3, #3
 776:	4619      	mov	r1, r3
 778:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 77c:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 780:	4622      	mov	r2, r4
 782:	3330      	adds	r3, #48	@ 0x30
 784:	3210      	adds	r2, #16
 786:	446a      	add	r2, sp
 788:	3401      	adds	r4, #1
 78a:	f802 3c0c 	strb.w	r3, [r2, #-12]
		num /= 10;
 78e:	4603      	mov	r3, r0
 790:	4608      	mov	r0, r1
	} while (num > 0);
 792:	2b09      	cmp	r3, #9
 794:	d8eb      	bhi.n	76e <print_unsigned_decimal+0x6>
 796:	e007      	b.n	7a8 <print_unsigned_decimal+0x40>
	
	for(; places; places--) {
		putchar( buf[places-1]);
 798:	3c01      	subs	r4, #1
 79a:	f104 0310 	add.w	r3, r4, #16
 79e:	446b      	add	r3, sp
 7a0:	f813 0c0c 	ldrb.w	r0, [r3, #-12]
 7a4:	f7ff ffb2 	bl	70c <putchar>
	for(; places; places--) {
 7a8:	2c00      	cmp	r4, #0
 7aa:	d1f5      	bne.n	798 <print_unsigned_decimal+0x30>
	}
}
 7ac:	b004      	add	sp, #16
 7ae:	bd10      	pop	{r4, pc}
 7b0:	cccccccd 	.word	0xcccccccd

000007b4 <print_decimal>:

void print_decimal(int32_t num){
 7b4:	b510      	push	{r4, lr}
	
	if (num < 0) {
 7b6:	1e04      	subs	r4, r0, #0
 7b8:	db03      	blt.n	7c2 <print_decimal+0xe>
		putchar( '-');
		num = 0 - num;
	}
	
	print_unsigned_decimal((uint32_t)num);
 7ba:	4620      	mov	r0, r4
 7bc:	f7ff ffd4 	bl	768 <print_unsigned_decimal>
}
 7c0:	bd10      	pop	{r4, pc}
		putchar( '-');
 7c2:	202d      	movs	r0, #45	@ 0x2d
 7c4:	f7ff ffa2 	bl	70c <putchar>
		num = 0 - num;
 7c8:	4264      	negs	r4, r4
 7ca:	e7f6      	b.n	7ba <print_decimal+0x6>

000007cc <print_float>:

void print_float(float number) {
 7cc:	b510      	push	{r4, lr}
 7ce:	ed2d 8b02 	vpush	{d8}
 7d2:	b084      	sub	sp, #16
	
	if(number != number) { //NaN is not equal to anything, including NaN
 7d4:	eeb4 0a40 	vcmp.f32	s0, s0
 7d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 7dc:	d137      	bne.n	84e <print_float+0x82>
		print_string("NaN");
		return;
	}
	
	if(number == INFINITY || number == -INFINITY) {
 7de:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 7e2:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ 8d0 <print_float+0x104>
 7e6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 7ea:	eef4 7a40 	vcmp.f32	s15, s0
 7ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 7f2:	d030      	beq.n	856 <print_float+0x8a>
 7f4:	eef1 7a67 	vneg.f32	s15, s15
 7f8:	eef4 7a40 	vcmp.f32	s15, s0
 7fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800:	d029      	beq.n	856 <print_float+0x8a>
		print_string("inf");
		return;
	}
	
	if(number > UINT32_MAX || (0-number) > UINT32_MAX) {
 802:	eddf 7a34 	vldr	s15, [pc, #208]	@ 8d4 <print_float+0x108>
 806:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80e:	dc29      	bgt.n	864 <print_float+0x98>
 810:	ed9f 8a2f 	vldr	s16, [pc, #188]	@ 8d0 <print_float+0x104>
 814:	ee38 8a40 	vsub.f32	s16, s16, s0
 818:	eeb4 8ae7 	vcmpe.f32	s16, s15
 81c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 820:	dc20      	bgt.n	864 <print_float+0x98>
		return;
	}
	
	char buf[15]; // large enough to fit any value
	
	if(number < 0) {
 822:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 82a:	d41f      	bmi.n	86c <print_float+0xa0>
		putchar( '-');
		number = 0 - number;
	}
	
	uint32_t integerPart = (uint32_t)number;
 82c:	eefc 7ac0 	vcvt.u32.f32	s15, s0
	uint32_t decimalPart = (uint32_t)((number - integerPart) * 1000);
 830:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 834:	ee30 0a47 	vsub.f32	s0, s0, s14
 838:	ed9f 7a27 	vldr	s14, [pc, #156]	@ 8d8 <print_float+0x10c>
 83c:	ee20 0a07 	vmul.f32	s0, s0, s14
 840:	eebc 7ac0 	vcvt.u32.f32	s14, s0
 844:	ee17 3a10 	vmov	r3, s14
	
	int places = 0;
	
	for(int i = 0; i < 3; i++) {
 848:	2000      	movs	r0, #0
	int places = 0;
 84a:	4601      	mov	r1, r0
	for(int i = 0; i < 3; i++) {
 84c:	e026      	b.n	89c <print_float+0xd0>
		print_string("NaN");
 84e:	4823      	ldr	r0, [pc, #140]	@ (8dc <print_float+0x110>)
 850:	f7ff ff7e 	bl	750 <print_string>
		return;
 854:	e002      	b.n	85c <print_float+0x90>
		print_string("inf");
 856:	4822      	ldr	r0, [pc, #136]	@ (8e0 <print_float+0x114>)
 858:	f7ff ff7a 	bl	750 <print_string>
	print_unsigned_decimal(integerPart);
	
	for(; places; places--) {
		putchar( buf[places-1]);
	}
}
 85c:	b004      	add	sp, #16
 85e:	ecbd 8b02 	vpop	{d8}
 862:	bd10      	pop	{r4, pc}
		print_string("[out of range]");
 864:	481f      	ldr	r0, [pc, #124]	@ (8e4 <print_float+0x118>)
 866:	f7ff ff73 	bl	750 <print_string>
		return;
 86a:	e7f7      	b.n	85c <print_float+0x90>
		putchar( '-');
 86c:	202d      	movs	r0, #45	@ 0x2d
 86e:	f7ff ff4d 	bl	70c <putchar>
		number = 0 - number;
 872:	eeb0 0a48 	vmov.f32	s0, s16
 876:	e7d9      	b.n	82c <print_float+0x60>
		buf[places++] = (char)('0' + decimalPart % 10);
 878:	4a1b      	ldr	r2, [pc, #108]	@ (8e8 <print_float+0x11c>)
 87a:	fba2 4203 	umull	r4, r2, r2, r3
 87e:	08d2      	lsrs	r2, r2, #3
 880:	4614      	mov	r4, r2
 882:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 886:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
 88a:	3230      	adds	r2, #48	@ 0x30
 88c:	f101 0310 	add.w	r3, r1, #16
 890:	446b      	add	r3, sp
 892:	f803 2c10 	strb.w	r2, [r3, #-16]
		decimalPart /= 10;
 896:	4623      	mov	r3, r4
	for(int i = 0; i < 3; i++) {
 898:	3001      	adds	r0, #1
		buf[places++] = (char)('0' + decimalPart % 10);
 89a:	3101      	adds	r1, #1
	for(int i = 0; i < 3; i++) {
 89c:	2802      	cmp	r0, #2
 89e:	ddeb      	ble.n	878 <print_float+0xac>
	buf[places++] = '.';
 8a0:	1c4c      	adds	r4, r1, #1
 8a2:	f101 0310 	add.w	r3, r1, #16
 8a6:	eb0d 0103 	add.w	r1, sp, r3
 8aa:	232e      	movs	r3, #46	@ 0x2e
 8ac:	f801 3c10 	strb.w	r3, [r1, #-16]
	print_unsigned_decimal(integerPart);
 8b0:	ee17 0a90 	vmov	r0, s15
 8b4:	f7ff ff58 	bl	768 <print_unsigned_decimal>
	for(; places; places--) {
 8b8:	e007      	b.n	8ca <print_float+0xfe>
		putchar( buf[places-1]);
 8ba:	3c01      	subs	r4, #1
 8bc:	f104 0310 	add.w	r3, r4, #16
 8c0:	446b      	add	r3, sp
 8c2:	f813 0c10 	ldrb.w	r0, [r3, #-16]
 8c6:	f7ff ff21 	bl	70c <putchar>
	for(; places; places--) {
 8ca:	2c00      	cmp	r4, #0
 8cc:	d1f5      	bne.n	8ba <print_float+0xee>
 8ce:	e7c5      	b.n	85c <print_float+0x90>
 8d0:	00000000 	.word	0x00000000
 8d4:	4f800000 	.word	0x4f800000
 8d8:	447a0000 	.word	0x447a0000
 8dc:	00000aa8 	.word	0x00000aa8
 8e0:	00000aac 	.word	0x00000aac
 8e4:	00000ab0 	.word	0x00000ab0
 8e8:	cccccccd 	.word	0xcccccccd

000008ec <printlf>:

void printlf(char format[], ...) {
 8ec:	b40f      	push	{r0, r1, r2, r3}
 8ee:	b570      	push	{r4, r5, r6, lr}
 8f0:	b082      	sub	sp, #8
 8f2:	ab06      	add	r3, sp, #24
 8f4:	f853 5b04 	ldr.w	r5, [r3], #4
	va_list args;
	va_start(args, format);
 8f8:	9301      	str	r3, [sp, #4]
	char *str;
	int32_t num;
	uint32_t numu;
	float *numf;
	
	for(int i=0; format[i] != '\0'; i++) {
 8fa:	2400      	movs	r4, #0
 8fc:	e030      	b.n	960 <printlf+0x74>
		switch(format[i]) {
			case '%' :
				i++;
				switch(format[i]) {
					case 'u': //unsigned decimal number
						numu = va_arg(args, uint32_t);
 8fe:	9b01      	ldr	r3, [sp, #4]
 900:	1d1a      	adds	r2, r3, #4
 902:	9201      	str	r2, [sp, #4]
						print_unsigned_decimal(numu);
 904:	6818      	ldr	r0, [r3, #0]
 906:	f7ff ff2f 	bl	768 <print_unsigned_decimal>
				i++;
 90a:	4634      	mov	r4, r6
					break;
 90c:	e027      	b.n	95e <printlf+0x72>
					
					case 'd': //signed decimal number
						num = va_arg(args, int32_t);
 90e:	9b01      	ldr	r3, [sp, #4]
 910:	1d1a      	adds	r2, r3, #4
 912:	9201      	str	r2, [sp, #4]
						print_decimal(num);
 914:	6818      	ldr	r0, [r3, #0]
 916:	f7ff ff4d 	bl	7b4 <print_decimal>
				i++;
 91a:	4634      	mov	r4, r6
					break;
 91c:	e01f      	b.n	95e <printlf+0x72>
					
					case '\0': // End of string
						putchar( '%');
 91e:	2025      	movs	r0, #37	@ 0x25
 920:	f7ff fef4 	bl	70c <putchar>
						i--; //let the for loop catch this
					break;
 924:	e01b      	b.n	95e <printlf+0x72>
					
					case 's': //string
						str = va_arg(args, char*);
 926:	9b01      	ldr	r3, [sp, #4]
 928:	1d1a      	adds	r2, r3, #4
 92a:	9201      	str	r2, [sp, #4]
						print_string(str);
 92c:	6818      	ldr	r0, [r3, #0]
 92e:	f7ff ff0f 	bl	750 <print_string>
				i++;
 932:	4634      	mov	r4, r6
					break;
 934:	e013      	b.n	95e <printlf+0x72>
					
					case 'f': //float
						numf = va_arg(args, float *);
 936:	9b01      	ldr	r3, [sp, #4]
 938:	1d1a      	adds	r2, r3, #4
 93a:	9201      	str	r2, [sp, #4]
 93c:	681b      	ldr	r3, [r3, #0]
						print_float(*numf);
 93e:	ed93 0a00 	vldr	s0, [r3]
 942:	f7ff ff43 	bl	7cc <print_float>
				i++;
 946:	4634      	mov	r4, r6
					break;
 948:	e009      	b.n	95e <printlf+0x72>
					
					default: //Not recognized
					putchar( '%');
 94a:	2025      	movs	r0, #37	@ 0x25
 94c:	f7ff fede 	bl	70c <putchar>
					putchar( format[i]);
 950:	5da8      	ldrb	r0, [r5, r6]
 952:	f7ff fedb 	bl	70c <putchar>
				i++;
 956:	4634      	mov	r4, r6
					break;
 958:	e001      	b.n	95e <printlf+0x72>
				}
			break;
				
			default:
				putchar( format[i]);
 95a:	f7ff fed7 	bl	70c <putchar>
	for(int i=0; format[i] != '\0'; i++) {
 95e:	3401      	adds	r4, #1
 960:	5d28      	ldrb	r0, [r5, r4]
 962:	b398      	cbz	r0, 9cc <printlf+0xe0>
		switch(format[i]) {
 964:	2825      	cmp	r0, #37	@ 0x25
 966:	d1f8      	bne.n	95a <printlf+0x6e>
				i++;
 968:	1c66      	adds	r6, r4, #1
				switch(format[i]) {
 96a:	5dab      	ldrb	r3, [r5, r6]
 96c:	2b00      	cmp	r3, #0
 96e:	d0d6      	beq.n	91e <printlf+0x32>
 970:	2b75      	cmp	r3, #117	@ 0x75
 972:	d8ea      	bhi.n	94a <printlf+0x5e>
 974:	2b64      	cmp	r3, #100	@ 0x64
 976:	d3e8      	bcc.n	94a <printlf+0x5e>
 978:	3b64      	subs	r3, #100	@ 0x64
 97a:	2b11      	cmp	r3, #17
 97c:	d8e5      	bhi.n	94a <printlf+0x5e>
 97e:	a201      	add	r2, pc, #4	@ (adr r2, 984 <printlf+0x98>)
 980:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 984:	0000090f 	.word	0x0000090f
 988:	0000094b 	.word	0x0000094b
 98c:	00000937 	.word	0x00000937
 990:	0000094b 	.word	0x0000094b
 994:	0000094b 	.word	0x0000094b
 998:	0000094b 	.word	0x0000094b
 99c:	0000094b 	.word	0x0000094b
 9a0:	0000094b 	.word	0x0000094b
 9a4:	0000094b 	.word	0x0000094b
 9a8:	0000094b 	.word	0x0000094b
 9ac:	0000094b 	.word	0x0000094b
 9b0:	0000094b 	.word	0x0000094b
 9b4:	0000094b 	.word	0x0000094b
 9b8:	0000094b 	.word	0x0000094b
 9bc:	0000094b 	.word	0x0000094b
 9c0:	00000927 	.word	0x00000927
 9c4:	0000094b 	.word	0x0000094b
 9c8:	000008ff 	.word	0x000008ff
			break;
		}
	}
	
	va_end(args);
}
 9cc:	b002      	add	sp, #8
 9ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 9d2:	b004      	add	sp, #16
 9d4:	4770      	bx	lr
 9d6:	bf00      	nop

000009d8 <NmiSR>:
NmiSR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 9d8:	e7fe      	b.n	9d8 <NmiSR>

000009da <FaultISR>:
FaultISR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 9da:	e7fe      	b.n	9da <FaultISR>

000009dc <IntDefaultHandler>:
IntDefaultHandler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
 9dc:	e7fe      	b.n	9dc <IntDefaultHandler>
	...

000009e0 <ResetISR>:
{
 9e0:	b508      	push	{r3, lr}
    for(pulDest = &_data; pulDest < &_edata; )
 9e2:	4b0e      	ldr	r3, [pc, #56]	@ (a1c <zero_loop+0x1e>)
    pulSrc = &_etext;
 9e4:	4a0e      	ldr	r2, [pc, #56]	@ (a20 <zero_loop+0x22>)
    for(pulDest = &_data; pulDest < &_edata; )
 9e6:	e003      	b.n	9f0 <ResetISR+0x10>
        *pulDest++ = *pulSrc++;
 9e8:	f852 1b04 	ldr.w	r1, [r2], #4
 9ec:	f843 1b04 	str.w	r1, [r3], #4
    for(pulDest = &_data; pulDest < &_edata; )
 9f0:	490c      	ldr	r1, [pc, #48]	@ (a24 <zero_loop+0x26>)
 9f2:	428b      	cmp	r3, r1
 9f4:	d3f8      	bcc.n	9e8 <ResetISR+0x8>
    __asm("    ldr     r0, =_bss\n"
 9f6:	480c      	ldr	r0, [pc, #48]	@ (a28 <zero_loop+0x2a>)
 9f8:	490c      	ldr	r1, [pc, #48]	@ (a2c <zero_loop+0x2e>)
 9fa:	f04f 0200 	mov.w	r2, #0

000009fe <zero_loop>:
 9fe:	4288      	cmp	r0, r1
 a00:	bfb8      	it	lt
 a02:	f840 2b04 	strlt.w	r2, [r0], #4
 a06:	dbfa      	blt.n	9fe <zero_loop>
    *((uint32_t *)0xE000ED88) = 0xFFFFFFFF; //SPM376e pg 133 - enable FPU
 a08:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 a0c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 a10:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
    main();
 a14:	f7ff fdd4 	bl	5c0 <main>
}
 a18:	bd08      	pop	{r3, pc}
 a1a:	bf00      	nop
 a1c:	20000000 	.word	0x20000000
 a20:	00000abf 	.word	0x00000abf
 a24:	20000001 	.word	0x20000001
 a28:	20000008 	.word	0x20000008
 a2c:	20000408 	.word	0x20000408
 a30:	253a6425 	.word	0x253a6425
 a34:	00000a64 	.word	0x00000a64
 a38:	20444142 	.word	0x20444142
 a3c:	4c474e41 	.word	0x4c474e41
 a40:	000a3f45 	.word	0x000a3f45
 a44:	00000052 	.word	0x00000052
 a48:	74696e49 	.word	0x74696e49
 a4c:	64694c20 	.word	0x64694c20
 a50:	43207261 	.word	0x43207261
 a54:	736d6d6f 	.word	0x736d6d6f
 a58:	0000000a 	.word	0x0000000a
 a5c:	706f7453 	.word	0x706f7453
 a60:	676e6970 	.word	0x676e6970
 a64:	64694c20 	.word	0x64694c20
 a68:	73207261 	.word	0x73207261
 a6c:	0a6e6163 	.word	0x0a6e6163
 a70:	00000000 	.word	0x00000000
 a74:	73756c46 	.word	0x73756c46
 a78:	676e6968 	.word	0x676e6968
 a7c:	64694c20 	.word	0x64694c20
 a80:	62207261 	.word	0x62207261
 a84:	65666675 	.word	0x65666675
 a88:	00000a72 	.word	0x00000a72
 a8c:	72617453 	.word	0x72617453
 a90:	676e6974 	.word	0x676e6974
 a94:	61635320 	.word	0x61635320
 a98:	00000a6e 	.word	0x00000a6e
 a9c:	706f6f4c 	.word	0x706f6f4c
 aa0:	0a676e69 	.word	0x0a676e69
 aa4:	00000000 	.word	0x00000000
 aa8:	004e614e 	.word	0x004e614e
 aac:	00666e69 	.word	0x00666e69
 ab0:	74756f5b 	.word	0x74756f5b
 ab4:	20666f20 	.word	0x20666f20
 ab8:	676e6172 	.word	0x676e6172
 abc:	5d65      	.short	0x5d65
	...
