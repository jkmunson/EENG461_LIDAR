
objs/lidar.axf:     file format elf32-littlearm

Contents of the .debug_info section:

  Compilation Unit @ offset 0:
   Length:        0x8d4 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0
   Pointer Size:  4
 <0><c>: Abbrev Number: 31 (DW_TAG_compile_unit)
    <d>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <11>   DW_AT_language    : 29	(C11)
    <12>   DW_AT_name        : (indirect string, offset: 0x190): src/lidar.c
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0x321): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1a>   DW_AT_ranges      : 0x4e
    <1e>   DW_AT_low_pc      : 0
    <22>   DW_AT_stmt_list   : 0
 <1><26>: Abbrev Number: 2 (DW_TAG_base_type)
    <27>   DW_AT_byte_size   : 8
    <28>   DW_AT_encoding    : 7	(unsigned)
    <29>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><2d>: Abbrev Number: 2 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 4
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><34>: Abbrev Number: 2 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 2
    <36>   DW_AT_encoding    : 7	(unsigned)
    <37>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><3b>: Abbrev Number: 2 (DW_TAG_base_type)
    <3c>   DW_AT_byte_size   : 4
    <3d>   DW_AT_encoding    : 4	(float)
    <3e>   DW_AT_name        : (indirect string, offset: 0x58e): float
 <1><42>: Abbrev Number: 32 (DW_TAG_base_type)
    <43>   DW_AT_byte_size   : 4
    <44>   DW_AT_encoding    : 5	(signed)
    <45>   DW_AT_name        : int
 <1><49>: Abbrev Number: 2 (DW_TAG_base_type)
    <4a>   DW_AT_byte_size   : 1
    <4b>   DW_AT_encoding    : 6	(signed char)
    <4c>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><50>: Abbrev Number: 4 (DW_TAG_typedef)
    <51>   DW_AT_name        : (indirect string, offset: 0x25): __uint8_t
    <55>   DW_AT_decl_file   : 2
    <56>   DW_AT_decl_line   : 43
    <57>   DW_AT_decl_column : 24
    <58>   DW_AT_type        : <0x5c>
 <1><5c>: Abbrev Number: 2 (DW_TAG_base_type)
    <5d>   DW_AT_byte_size   : 1
    <5e>   DW_AT_encoding    : 8	(unsigned char)
    <5f>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><63>: Abbrev Number: 2 (DW_TAG_base_type)
    <64>   DW_AT_byte_size   : 2
    <65>   DW_AT_encoding    : 5	(signed)
    <66>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><6a>: Abbrev Number: 4 (DW_TAG_typedef)
    <6b>   DW_AT_name        : (indirect string, offset: 0x2cc): __uint16_t
    <6f>   DW_AT_decl_file   : 2
    <70>   DW_AT_decl_line   : 57
    <71>   DW_AT_decl_column : 25
    <72>   DW_AT_type        : <0x34>
 <1><76>: Abbrev Number: 4 (DW_TAG_typedef)
    <77>   DW_AT_name        : (indirect string, offset: 0x2d7): __int32_t
    <7b>   DW_AT_decl_file   : 2
    <7c>   DW_AT_decl_line   : 77
    <7d>   DW_AT_decl_column : 24
    <7e>   DW_AT_type        : <0x82>
 <1><82>: Abbrev Number: 2 (DW_TAG_base_type)
    <83>   DW_AT_byte_size   : 4
    <84>   DW_AT_encoding    : 5	(signed)
    <85>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><89>: Abbrev Number: 4 (DW_TAG_typedef)
    <8a>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <8e>   DW_AT_decl_file   : 2
    <8f>   DW_AT_decl_line   : 79
    <90>   DW_AT_decl_column : 25
    <91>   DW_AT_type        : <0x95>
 <1><95>: Abbrev Number: 2 (DW_TAG_base_type)
    <96>   DW_AT_byte_size   : 4
    <97>   DW_AT_encoding    : 7	(unsigned)
    <98>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><9c>: Abbrev Number: 2 (DW_TAG_base_type)
    <9d>   DW_AT_byte_size   : 8
    <9e>   DW_AT_encoding    : 5	(signed)
    <9f>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><a3>: Abbrev Number: 4 (DW_TAG_typedef)
    <a4>   DW_AT_name        : (indirect string, offset: 0x27): uint8_t
    <a8>   DW_AT_decl_file   : 3
    <a9>   DW_AT_decl_line   : 24
    <aa>   DW_AT_decl_column : 19
    <ab>   DW_AT_type        : <0x50>
 <1><af>: Abbrev Number: 4 (DW_TAG_typedef)
    <b0>   DW_AT_name        : (indirect string, offset: 0x2ce): uint16_t
    <b4>   DW_AT_decl_file   : 3
    <b5>   DW_AT_decl_line   : 36
    <b6>   DW_AT_decl_column : 20
    <b7>   DW_AT_type        : <0x6a>
 <1><bb>: Abbrev Number: 4 (DW_TAG_typedef)
    <bc>   DW_AT_name        : (indirect string, offset: 0x2d9): int32_t
    <c0>   DW_AT_decl_file   : 3
    <c1>   DW_AT_decl_line   : 44
    <c2>   DW_AT_decl_column : 19
    <c3>   DW_AT_type        : <0x76>
 <1><c7>: Abbrev Number: 33 (DW_TAG_volatile_type)
    <c8>   DW_AT_type        : <0xbb>
 <1><cc>: Abbrev Number: 4 (DW_TAG_typedef)
    <cd>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <d1>   DW_AT_decl_file   : 3
    <d2>   DW_AT_decl_line   : 48
    <d3>   DW_AT_decl_column : 20
    <d4>   DW_AT_type        : <0x89>
 <1><d8>: Abbrev Number: 4 (DW_TAG_typedef)
    <d9>   DW_AT_name        : (indirect string, offset: 0x15): size_t
    <dd>   DW_AT_decl_file   : 4
    <de>   DW_AT_decl_line   : 214
    <df>   DW_AT_decl_column : 23
    <e0>   DW_AT_type        : <0x2d>
 <1><e4>: Abbrev Number: 2 (DW_TAG_base_type)
    <e5>   DW_AT_byte_size   : 8
    <e6>   DW_AT_encoding    : 4	(float)
    <e7>   DW_AT_name        : (indirect string, offset: 0x257): long double
 <1><eb>: Abbrev Number: 2 (DW_TAG_base_type)
    <ec>   DW_AT_byte_size   : 1
    <ed>   DW_AT_encoding    : 8	(unsigned char)
    <ee>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><f2>: Abbrev Number: 22 (DW_TAG_array_type)
    <f3>   DW_AT_type        : <0xaf>
    <f7>   DW_AT_sibling     : <0x103>
 <2><fb>: Abbrev Number: 34 (DW_TAG_subrange_type)
    <fc>   DW_AT_type        : <0x2d>
    <100>   DW_AT_upper_bound : 360
 <2><102>: Abbrev Number: 0
 <1><103>: Abbrev Number: 12 (DW_TAG_variable)
    <104>   DW_AT_name        : (indirect string, offset: 0x109): g_points
    <108>   DW_AT_decl_file   : 5
    <109>   DW_AT_decl_line   : 6
    <10a>   DW_AT_decl_column : 17
    <10b>   DW_AT_type        : <0xf2>
    <10f>   DW_AT_external    : 1
    <10f>   DW_AT_declaration : 1
 <1><10f>: Abbrev Number: 12 (DW_TAG_variable)
    <110>   DW_AT_name        : (indirect string, offset: 0x302): g_pt_buf
    <114>   DW_AT_decl_file   : 5
    <115>   DW_AT_decl_line   : 7
    <116>   DW_AT_decl_column : 17
    <117>   DW_AT_type        : <0xf2>
    <11b>   DW_AT_external    : 1
    <11b>   DW_AT_declaration : 1
 <1><11b>: Abbrev Number: 12 (DW_TAG_variable)
    <11c>   DW_AT_name        : (indirect string, offset: 0x350): g_conditioned_points
    <120>   DW_AT_decl_file   : 5
    <121>   DW_AT_decl_line   : 8
    <122>   DW_AT_decl_column : 17
    <123>   DW_AT_type        : <0xf2>
    <127>   DW_AT_external    : 1
    <127>   DW_AT_declaration : 1
 <1><127>: Abbrev Number: 23 (DW_TAG_enumeration_type)
    <128>   DW_AT_encoding    : 7	(unsigned)
    <128>   DW_AT_byte_size   : 1
    <128>   DW_AT_type        : <0x5c>
    <12c>   DW_AT_decl_file   : 5
    <12d>   DW_AT_decl_line   : 24
    <12e>   DW_AT_decl_column : 7
    <12f>   DW_AT_sibling     : <0x140>
 <2><133>: Abbrev Number: 7 (DW_TAG_enumerator)
    <134>   DW_AT_name        : (indirect string, offset: 0x126): START_PACKET
    <138>   DW_AT_const_value : 1
 <2><139>: Abbrev Number: 7 (DW_TAG_enumerator)
    <13a>   DW_AT_name        : (indirect string, offset: 0x3c1): DATA_PACKET
    <13e>   DW_AT_const_value : 0
 <2><13f>: Abbrev Number: 0
 <1><140>: Abbrev Number: 35 (DW_TAG_structure_type)
    <141>   DW_AT_name        : (indirect string, offset: 0x19c): ScanHeaderFields
    <145>   DW_AT_byte_size   : 10
    <146>   DW_AT_decl_file   : 5
    <147>   DW_AT_decl_line   : 22
    <148>   DW_AT_decl_column : 32
    <149>   DW_AT_sibling     : <0x198>
 <2><14d>: Abbrev Number: 9 (DW_TAG_member)
    <14e>   DW_AT_name        : (indirect string, offset: 0x146): start_code
    <152>   DW_AT_decl_file   : 5
    <152>   DW_AT_decl_line   : 23
    <153>   DW_AT_decl_column : 11
    <154>   DW_AT_type        : <0xaf>
    <158>   DW_AT_data_member_location: 0
 <2><159>: Abbrev Number: 36 (DW_TAG_member)
    <15a>   DW_AT_name        : (indirect string, offset: 0x2f): type
    <15e>   DW_AT_decl_file   : 5
    <15f>   DW_AT_decl_line   : 24
    <160>   DW_AT_decl_column : 45
    <161>   DW_AT_type        : <0x127>
    <165>   DW_AT_bit_size    : 8
    <166>   DW_AT_data_bit_offset: 16
 <2><167>: Abbrev Number: 9 (DW_TAG_member)
    <168>   DW_AT_name        : (indirect string, offset: 0x375): sample_count
    <16c>   DW_AT_decl_file   : 5
    <16c>   DW_AT_decl_line   : 25
    <16d>   DW_AT_decl_column : 10
    <16e>   DW_AT_type        : <0xa3>
    <172>   DW_AT_data_member_location: 3
 <2><173>: Abbrev Number: 9 (DW_TAG_member)
    <174>   DW_AT_name        : (indirect string, offset: 0x95): start_angle
    <178>   DW_AT_decl_file   : 5
    <178>   DW_AT_decl_line   : 26
    <179>   DW_AT_decl_column : 11
    <17a>   DW_AT_type        : <0xaf>
    <17e>   DW_AT_data_member_location: 4
 <2><17f>: Abbrev Number: 9 (DW_TAG_member)
    <180>   DW_AT_name        : (indirect string, offset: 0x24d): end_angle
    <184>   DW_AT_decl_file   : 5
    <184>   DW_AT_decl_line   : 27
    <185>   DW_AT_decl_column : 11
    <186>   DW_AT_type        : <0xaf>
    <18a>   DW_AT_data_member_location: 6
 <2><18b>: Abbrev Number: 9 (DW_TAG_member)
    <18c>   DW_AT_name        : (indirect string, offset: 0x1c): checksum
    <190>   DW_AT_decl_file   : 5
    <190>   DW_AT_decl_line   : 28
    <191>   DW_AT_decl_column : 11
    <192>   DW_AT_type        : <0xaf>
    <196>   DW_AT_data_member_location: 8
 <2><197>: Abbrev Number: 0
 <1><198>: Abbrev Number: 37 (DW_TAG_union_type)
    <199>   DW_AT_byte_size   : 10
    <19a>   DW_AT_decl_file   : 5
    <19b>   DW_AT_decl_line   : 30
    <19c>   DW_AT_decl_column : 9
    <19d>   DW_AT_sibling     : <0x1b8>
 <2><1a1>: Abbrev Number: 24 (DW_TAG_member)
    <1a2>   DW_AT_name        : (indirect string, offset: 0xbd): bytes
    <1a6>   DW_AT_decl_file   : 5
    <1a6>   DW_AT_decl_line   : 31
    <1a7>   DW_AT_decl_column : 10
    <1a8>   DW_AT_type        : <0x1b8>
 <2><1ac>: Abbrev Number: 24 (DW_TAG_member)
    <1ad>   DW_AT_name        : (indirect string, offset: 0x3a4): header
    <1b1>   DW_AT_decl_file   : 5
    <1b1>   DW_AT_decl_line   : 32
    <1b2>   DW_AT_decl_column : 26
    <1b3>   DW_AT_type        : <0x140>
 <2><1b7>: Abbrev Number: 0
 <1><1b8>: Abbrev Number: 22 (DW_TAG_array_type)
    <1b9>   DW_AT_type        : <0xa3>
    <1bd>   DW_AT_sibling     : <0x1c8>
 <2><1c1>: Abbrev Number: 38 (DW_TAG_subrange_type)
    <1c2>   DW_AT_type        : <0x2d>
    <1c6>   DW_AT_upper_bound : 9
 <2><1c7>: Abbrev Number: 0
 <1><1c8>: Abbrev Number: 4 (DW_TAG_typedef)
    <1c9>   DW_AT_name        : (indirect string, offset: 0xad): ScanHeader
    <1cd>   DW_AT_decl_file   : 5
    <1ce>   DW_AT_decl_line   : 33
    <1cf>   DW_AT_decl_column : 3
    <1d0>   DW_AT_type        : <0x198>
 <1><1d4>: Abbrev Number: 12 (DW_TAG_variable)
    <1d5>   DW_AT_name        : (indirect string, offset: 0x41): uptime_seconds
    <1d9>   DW_AT_decl_file   : 6
    <1da>   DW_AT_decl_line   : 4
    <1db>   DW_AT_decl_column : 25
    <1dc>   DW_AT_type        : <0xc7>
    <1e0>   DW_AT_external    : 1
    <1e0>   DW_AT_declaration : 1
 <1><1e0>: Abbrev Number: 18 (DW_TAG_variable)
    <1e1>   DW_AT_specification: <0x103>
    <1e5>   DW_AT_decl_file   : 1
    <1e5>   DW_AT_decl_line   : 38
    <1e6>   DW_AT_decl_column : 10
    <1e6>   DW_AT_location    : 5 byte block: 3 cc 5 0 20 	(DW_OP_addr: 200005cc)
 <1><1ec>: Abbrev Number: 18 (DW_TAG_variable)
    <1ed>   DW_AT_specification: <0x11b>
    <1f1>   DW_AT_decl_file   : 1
    <1f1>   DW_AT_decl_line   : 39
    <1f2>   DW_AT_decl_column : 10
    <1f2>   DW_AT_location    : 5 byte block: 3 f8 2 0 20 	(DW_OP_addr: 200002f8)
 <1><1f8>: Abbrev Number: 18 (DW_TAG_variable)
    <1f9>   DW_AT_specification: <0x10f>
    <1fd>   DW_AT_decl_file   : 1
    <1fd>   DW_AT_decl_line   : 40
    <1fe>   DW_AT_decl_column : 10
    <1fe>   DW_AT_location    : 5 byte block: 3 24 0 0 20 	(DW_OP_addr: 20000024)
 <1><204>: Abbrev Number: 13 (DW_TAG_subprogram)
    <205>   DW_AT_external    : 1
    <205>   DW_AT_name        : (indirect string, offset: 0x365): process_packets
    <209>   DW_AT_decl_file   : 1
    <209>   DW_AT_decl_line   : 167
    <20a>   DW_AT_decl_column : 6
    <20a>   DW_AT_prototyped  : 1
    <20a>   DW_AT_low_pc      : 0x5a8
    <20e>   DW_AT_high_pc     : 0x15c
    <212>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <214>   DW_AT_call_all_calls: 1
    <214>   DW_AT_sibling     : <0x3db>
 <2><218>: Abbrev Number: 23 (DW_TAG_enumeration_type)
    <219>   DW_AT_encoding    : 7	(unsigned)
    <219>   DW_AT_byte_size   : 1
    <219>   DW_AT_type        : <0x5c>
    <21d>   DW_AT_decl_file   : 1
    <21e>   DW_AT_decl_line   : 168
    <21f>   DW_AT_decl_column : 14
    <220>   DW_AT_sibling     : <0x249>
 <3><224>: Abbrev Number: 7 (DW_TAG_enumerator)
    <225>   DW_AT_name        : (indirect string, offset: 0x2e1): COMM_WAITING
    <229>   DW_AT_const_value : 0
 <3><22a>: Abbrev Number: 7 (DW_TAG_enumerator)
    <22b>   DW_AT_name        : (indirect string, offset: 0xe2): RECEIVING_HEADER
    <22f>   DW_AT_const_value : 1
 <3><230>: Abbrev Number: 7 (DW_TAG_enumerator)
    <231>   DW_AT_name        : (indirect string, offset: 0x112): WAITING_SCAN_HEADER
    <235>   DW_AT_const_value : 2
 <3><236>: Abbrev Number: 7 (DW_TAG_enumerator)
    <237>   DW_AT_name        : (indirect string, offset: 0xf3): RECEIVING_SCAN_HEADER
    <23b>   DW_AT_const_value : 3
 <3><23c>: Abbrev Number: 7 (DW_TAG_enumerator)
    <23d>   DW_AT_name        : (indirect string, offset: 0xc3): RECEIVING_SCAN_DATA
    <241>   DW_AT_const_value : 4
 <3><242>: Abbrev Number: 7 (DW_TAG_enumerator)
    <243>   DW_AT_name        : (indirect string, offset: 0x15b): RECEIVING_HEALTH_REPORT
    <247>   DW_AT_const_value : 5
 <3><248>: Abbrev Number: 0
 <2><249>: Abbrev Number: 8 (DW_TAG_variable)
    <24a>   DW_AT_name        : (indirect string, offset: 0x3b6): comm_state
    <24e>   DW_AT_decl_file   : 1
    <24e>   DW_AT_decl_line   : 168
    <24f>   DW_AT_decl_column : 137
    <250>   DW_AT_type        : <0x218>
    <254>   DW_AT_location    : 5 byte block: 3 0 0 0 20 	(DW_OP_addr: 20000000)
 <2><25a>: Abbrev Number: 8 (DW_TAG_variable)
    <25b>   DW_AT_name        : (indirect string, offset: 0x173): current_byte
    <25f>   DW_AT_decl_file   : 1
    <25f>   DW_AT_decl_line   : 169
    <260>   DW_AT_decl_column : 18
    <261>   DW_AT_type        : <0xcc>
    <265>   DW_AT_location    : 5 byte block: 3 1c 0 0 20 	(DW_OP_addr: 2000001c)
 <2><26b>: Abbrev Number: 8 (DW_TAG_variable)
    <26c>   DW_AT_name        : (indirect string, offset: 0x34): current_scan
    <270>   DW_AT_decl_file   : 1
    <270>   DW_AT_decl_line   : 170
    <271>   DW_AT_decl_column : 20
    <272>   DW_AT_type        : <0x1c8>
    <276>   DW_AT_location    : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <2><27c>: Abbrev Number: 8 (DW_TAG_variable)
    <27d>   DW_AT_name        : (indirect string, offset: 0x390): current_point
    <281>   DW_AT_decl_file   : 1
    <281>   DW_AT_decl_line   : 171
    <282>   DW_AT_decl_column : 18
    <283>   DW_AT_type        : <0xcc>
    <287>   DW_AT_location    : 5 byte block: 3 c 0 0 20 	(DW_OP_addr: 2000000c)
 <2><28d>: Abbrev Number: 8 (DW_TAG_variable)
    <28e>   DW_AT_name        : (indirect string, offset: 0x1c): checksum
    <292>   DW_AT_decl_file   : 1
    <292>   DW_AT_decl_line   : 172
    <293>   DW_AT_decl_column : 18
    <294>   DW_AT_type        : <0xaf>
    <298>   DW_AT_location    : 5 byte block: 3 a 0 0 20 	(DW_OP_addr: 2000000a)
 <2><29e>: Abbrev Number: 39 (DW_TAG_label)
    <29f>   DW_AT_name        : (indirect string, offset: 0xf): reset
    <2a3>   DW_AT_decl_file   : 1
    <2a4>   DW_AT_decl_line   : 261
    <2a6>   DW_AT_decl_column : 2
    <2a7>   DW_AT_low_pc      : 0x650
 <2><2ab>: Abbrev Number: 40 (DW_TAG_label)
    <2ac>   DW_AT_name        : (indirect string, offset: 0x2fd): skip
    <2b0>   DW_AT_decl_file   : 1
    <2b1>   DW_AT_decl_line   : 246
    <2b2>   DW_AT_decl_column : 7
    <2b3>   DW_AT_low_pc      : 0x6c0
 <2><2b7>: Abbrev Number: 25 (DW_TAG_lexical_block)
    <2b8>   DW_AT_ranges      : 0x3c
    <2bc>   DW_AT_sibling     : <0x3b8>
 <3><2c0>: Abbrev Number: 5 (DW_TAG_variable)
    <2c1>   DW_AT_name        : (indirect string, offset: 0x318): received
    <2c5>   DW_AT_decl_file   : 1
    <2c5>   DW_AT_decl_line   : 175
    <2c6>   DW_AT_decl_column : 11
    <2c7>   DW_AT_type        : <0xa3>
    <2cb>   DW_AT_location    : 0x12 (location list)
    <2cf>   DW_AT_GNU_locviews: 0xc
 <3><2d3>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <2d4>   DW_AT_low_pc      : 0x66e
    <2d8>   DW_AT_high_pc     : 0x96
    <2dc>   DW_AT_sibling     : <0x360>
 <4><2e0>: Abbrev Number: 41 (DW_TAG_variable)
    <2e1>   DW_AT_name        : low
    <2e5>   DW_AT_decl_file   : 1
    <2e6>   DW_AT_decl_line   : 225
    <2e7>   DW_AT_decl_column : 20
    <2e8>   DW_AT_type        : <0xa3>
    <2ec>   DW_AT_location    : 5 byte block: 3 9 0 0 20 	(DW_OP_addr: 20000009)
 <4><2f2>: Abbrev Number: 8 (DW_TAG_variable)
    <2f3>   DW_AT_name        : (indirect string, offset: 0x2ee): high
    <2f7>   DW_AT_decl_file   : 1
    <2f7>   DW_AT_decl_line   : 225
    <2f8>   DW_AT_decl_column : 25
    <2f9>   DW_AT_type        : <0xa3>
    <2fd>   DW_AT_location    : 5 byte block: 3 8 0 0 20 	(DW_OP_addr: 20000008)
 <4><303>: Abbrev Number: 26 (DW_TAG_lexical_block)
    <304>   DW_AT_low_pc      : 0x67a
    <308>   DW_AT_high_pc     : 0x8a
 <5><30c>: Abbrev Number: 5 (DW_TAG_variable)
    <30d>   DW_AT_name        : (indirect string, offset: 0x398): point
    <311>   DW_AT_decl_file   : 1
    <311>   DW_AT_decl_line   : 236
    <312>   DW_AT_decl_column : 16
    <313>   DW_AT_type        : <0xaf>
    <317>   DW_AT_location    : 0x2e (location list)
    <31b>   DW_AT_GNU_locviews: 0x2a
 <5><31f>: Abbrev Number: 5 (DW_TAG_variable)
    <320>   DW_AT_name        : (indirect string, offset: 0x251): angle
    <324>   DW_AT_decl_file   : 1
    <324>   DW_AT_decl_line   : 239
    <325>   DW_AT_decl_column : 16
    <326>   DW_AT_type        : <0xaf>
    <32a>   DW_AT_location    : 0x40 (location list)
    <32e>   DW_AT_GNU_locviews: 0x3e
 <5><332>: Abbrev Number: 6 (DW_TAG_variable)
    <333>   DW_AT_name        : tmp
    <337>   DW_AT_decl_file   : 1
    <337>   DW_AT_decl_line   : 242
    <338>   DW_AT_decl_column : 16
    <339>   DW_AT_type        : <0xaf>
    <33d>   DW_AT_location    : 0x4b (location list)
    <341>   DW_AT_GNU_locviews: 0x49
 <5><345>: Abbrev Number: 10 (DW_TAG_call_site)
    <346>   DW_AT_call_return_pc: 0x6b0
    <34a>   DW_AT_call_origin : <0x4c0>
 <5><34e>: Abbrev Number: 27 (DW_TAG_call_site)
    <34f>   DW_AT_call_return_pc: 0x6b8
    <353>   DW_AT_call_origin : <0x493>
 <6><357>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <358>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <35a>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <6><35d>: Abbrev Number: 0
 <5><35e>: Abbrev Number: 0
 <4><35f>: Abbrev Number: 0
 <3><360>: Abbrev Number: 15 (DW_TAG_call_site)
    <361>   DW_AT_call_return_pc: 0x5cc
    <365>   DW_AT_call_origin : <0x45f>
    <369>   DW_AT_sibling     : <0x377>
 <4><36d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <36e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <370>   DW_AT_call_value  : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <4><376>: Abbrev Number: 0
 <3><377>: Abbrev Number: 15 (DW_TAG_call_site)
    <378>   DW_AT_call_return_pc: 0x5e8
    <37c>   DW_AT_call_origin : <0x3db>
    <380>   DW_AT_sibling     : <0x38e>
 <4><384>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <385>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <387>   DW_AT_call_value  : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <4><38d>: Abbrev Number: 0
 <3><38e>: Abbrev Number: 3 (DW_TAG_call_site)
    <38f>   DW_AT_call_return_pc: 0x610
    <393>   DW_AT_sibling     : <0x39e>
 <4><397>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <398>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <39a>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><39d>: Abbrev Number: 0
 <3><39e>: Abbrev Number: 3 (DW_TAG_call_site)
    <39f>   DW_AT_call_return_pc: 0x61a
    <3a3>   DW_AT_sibling     : <0x3ae>
 <4><3a7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3a8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3aa>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><3ad>: Abbrev Number: 0
 <3><3ae>: Abbrev Number: 10 (DW_TAG_call_site)
    <3af>   DW_AT_call_return_pc: 0x650
    <3b3>   DW_AT_call_origin : <0x6d6>
 <3><3b7>: Abbrev Number: 0
 <2><3b8>: Abbrev Number: 3 (DW_TAG_call_site)
    <3b9>   DW_AT_call_return_pc: 0x5fe
    <3bd>   DW_AT_sibling     : <0x3cb>
 <3><3c1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3c2>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3c4>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><3ca>: Abbrev Number: 0
 <2><3cb>: Abbrev Number: 16 (DW_TAG_call_site)
    <3cc>   DW_AT_call_return_pc: 0x65c
 <3><3d0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3d1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3d3>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><3d9>: Abbrev Number: 0
 <2><3da>: Abbrev Number: 0
 <1><3db>: Abbrev Number: 17 (DW_TAG_subprogram)
    <3dc>   DW_AT_external    : 1
    <3dc>   DW_AT_name        : (indirect string, offset: 0x180): checksum_header
    <3e0>   DW_AT_decl_file   : 1
    <3e0>   DW_AT_decl_line   : 155
    <3e1>   DW_AT_decl_column : 10
    <3e2>   DW_AT_prototyped  : 1
    <3e2>   DW_AT_type        : <0xaf>
    <3e6>   DW_AT_low_pc      : 0x582
    <3ea>   DW_AT_high_pc     : 0x24
    <3ee>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <3f0>   DW_AT_call_all_calls: 1
    <3f0>   DW_AT_sibling     : <0x45a>
 <2><3f4>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <3f5>   DW_AT_name        : (indirect string, offset: 0x2b6): head
    <3f9>   DW_AT_decl_file   : 1
    <3f9>   DW_AT_decl_line   : 155
    <3fa>   DW_AT_decl_column : 38
    <3fb>   DW_AT_type        : <0x45a>
    <3ff>   DW_AT_location    : 0x58 (location list)
    <403>   DW_AT_GNU_locviews: 0x54
 <2><407>: Abbrev Number: 5 (DW_TAG_variable)
    <408>   DW_AT_name        : (indirect string, offset: 0x1c): checksum
    <40c>   DW_AT_decl_file   : 1
    <40c>   DW_AT_decl_line   : 156
    <40d>   DW_AT_decl_column : 11
    <40e>   DW_AT_type        : <0xaf>
    <412>   DW_AT_location    : 0x6e (location list)
    <416>   DW_AT_GNU_locviews: 0x68
 <2><41a>: Abbrev Number: 19 (DW_TAG_lexical_block)
    <41b>   DW_AT_ranges      : 0x30
 <3><41f>: Abbrev Number: 6 (DW_TAG_variable)
    <420>   DW_AT_name        : i
    <422>   DW_AT_decl_file   : 1
    <422>   DW_AT_decl_line   : 158
    <423>   DW_AT_decl_column : 13
    <424>   DW_AT_type        : <0xd8>
    <428>   DW_AT_location    : 0x8e (location list)
    <42c>   DW_AT_GNU_locviews: 0x84
 <3><430>: Abbrev Number: 26 (DW_TAG_lexical_block)
    <431>   DW_AT_low_pc      : 0x58a
    <435>   DW_AT_high_pc     : 0x16
 <4><439>: Abbrev Number: 6 (DW_TAG_variable)
    <43a>   DW_AT_name        : low
    <43e>   DW_AT_decl_file   : 1
    <43e>   DW_AT_decl_line   : 159
    <43f>   DW_AT_decl_column : 11
    <440>   DW_AT_type        : <0xa3>
    <444>   DW_AT_location    : 0xb4 (location list)
    <448>   DW_AT_GNU_locviews: 0xb0
 <4><44c>: Abbrev Number: 20 (DW_TAG_variable)
    <44d>   DW_AT_name        : (indirect string, offset: 0x2ee): high
    <451>   DW_AT_decl_file   : 1
    <451>   DW_AT_decl_line   : 160
    <452>   DW_AT_decl_column : 11
    <453>   DW_AT_type        : <0xa3>
 <4><457>: Abbrev Number: 0
 <3><458>: Abbrev Number: 0
 <2><459>: Abbrev Number: 0
 <1><45a>: Abbrev Number: 28 (DW_TAG_pointer_type)
    <45b>   DW_AT_byte_size   : 4
    <45b>   DW_AT_type        : <0x1c8>
 <1><45f>: Abbrev Number: 17 (DW_TAG_subprogram)
    <460>   DW_AT_external    : 1
    <460>   DW_AT_name        : (indirect string, offset: 0x39e): check_header
    <464>   DW_AT_decl_file   : 1
    <464>   DW_AT_decl_line   : 144
    <465>   DW_AT_decl_column : 6
    <466>   DW_AT_prototyped  : 1
    <466>   DW_AT_type        : <0x48c>
    <46a>   DW_AT_low_pc      : 0x558
    <46e>   DW_AT_high_pc     : 0x2a
    <472>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <474>   DW_AT_call_all_calls: 1
    <474>   DW_AT_sibling     : <0x48c>
 <2><478>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <479>   DW_AT_name        : (indirect string, offset: 0x2b6): head
    <47d>   DW_AT_decl_file   : 1
    <47d>   DW_AT_decl_line   : 144
    <47e>   DW_AT_decl_column : 31
    <47f>   DW_AT_type        : <0x45a>
    <483>   DW_AT_location    : 0xda (location list)
    <487>   DW_AT_GNU_locviews: 0xca
 <2><48b>: Abbrev Number: 0
 <1><48c>: Abbrev Number: 2 (DW_TAG_base_type)
    <48d>   DW_AT_byte_size   : 1
    <48e>   DW_AT_encoding    : 2	(boolean)
    <48f>   DW_AT_name        : (indirect string, offset: 0x27a): _Bool
 <1><493>: Abbrev Number: 17 (DW_TAG_subprogram)
    <494>   DW_AT_external    : 1
    <494>   DW_AT_name        : (indirect string, offset: 0x382): convert_to_mm
    <498>   DW_AT_decl_file   : 1
    <498>   DW_AT_decl_line   : 139
    <499>   DW_AT_decl_column : 10
    <49a>   DW_AT_prototyped  : 1
    <49a>   DW_AT_type        : <0xaf>
    <49e>   DW_AT_low_pc      : 0x554
    <4a2>   DW_AT_high_pc     : 0x4
    <4a6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4a8>   DW_AT_call_all_calls: 1
    <4a8>   DW_AT_sibling     : <0x4c0>
 <2><4ac>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <4ad>   DW_AT_name        : (indirect string, offset: 0x398): point
    <4b1>   DW_AT_decl_file   : 1
    <4b1>   DW_AT_decl_line   : 139
    <4b2>   DW_AT_decl_column : 33
    <4b3>   DW_AT_type        : <0xaf>
    <4b7>   DW_AT_location    : 0x130 (location list)
    <4bb>   DW_AT_GNU_locviews: 0x12c
 <2><4bf>: Abbrev Number: 0
 <1><4c0>: Abbrev Number: 17 (DW_TAG_subprogram)
    <4c1>   DW_AT_external    : 1
    <4c1>   DW_AT_name        : (indirect string, offset: 0x2a8): map_to_degree
    <4c5>   DW_AT_decl_file   : 1
    <4c5>   DW_AT_decl_line   : 132
    <4c6>   DW_AT_decl_column : 10
    <4c7>   DW_AT_prototyped  : 1
    <4c7>   DW_AT_type        : <0xaf>
    <4cb>   DW_AT_low_pc      : 0x4d0
    <4cf>   DW_AT_high_pc     : 0x84
    <4d3>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4d5>   DW_AT_call_all_calls: 1
    <4d5>   DW_AT_sibling     : <0x542>
 <2><4d9>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <4da>   DW_AT_name        : (indirect string, offset: 0x3ab): start
    <4de>   DW_AT_decl_file   : 1
    <4de>   DW_AT_decl_line   : 132
    <4df>   DW_AT_decl_column : 33
    <4e0>   DW_AT_type        : <0xaf>
    <4e4>   DW_AT_location    : 0x159 (location list)
    <4e8>   DW_AT_GNU_locviews: 0x149
 <2><4ec>: Abbrev Number: 42 (DW_TAG_formal_parameter)
    <4ed>   DW_AT_name        : end
    <4f1>   DW_AT_decl_file   : 1
    <4f2>   DW_AT_decl_line   : 132
    <4f3>   DW_AT_decl_column : 49
    <4f4>   DW_AT_type        : <0xaf>
    <4f8>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
 <2><4fa>: Abbrev Number: 43 (DW_TAG_formal_parameter)
    <4fb>   DW_AT_name        : (indirect string, offset: 0x37c): count
    <4ff>   DW_AT_decl_file   : 1
    <500>   DW_AT_decl_line   : 132
    <501>   DW_AT_decl_column : 63
    <502>   DW_AT_type        : <0xaf>
    <506>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
 <2><508>: Abbrev Number: 29 (DW_TAG_formal_parameter)
    <509>   DW_AT_name        : num
    <50d>   DW_AT_decl_file   : 1
    <50d>   DW_AT_decl_line   : 132
    <50e>   DW_AT_decl_column : 79
    <50f>   DW_AT_type        : <0xaf>
    <513>   DW_AT_location    : 0x1b2 (location list)
    <517>   DW_AT_GNU_locviews: 0x1ac
 <2><51b>: Abbrev Number: 5 (DW_TAG_variable)
    <51c>   DW_AT_name        : (indirect string, offset: 0x6c): delta
    <520>   DW_AT_decl_file   : 1
    <520>   DW_AT_decl_line   : 133
    <521>   DW_AT_decl_column : 8
    <522>   DW_AT_type        : <0x3b>
    <526>   DW_AT_location    : 0x1cb (location list)
    <52a>   DW_AT_GNU_locviews: 0x1c9
 <2><52e>: Abbrev Number: 5 (DW_TAG_variable)
    <52f>   DW_AT_name        : (indirect string, offset: 0x2af): degree
    <533>   DW_AT_decl_file   : 1
    <533>   DW_AT_decl_line   : 134
    <534>   DW_AT_decl_column : 8
    <535>   DW_AT_type        : <0x3b>
    <539>   DW_AT_location    : 0x1db (location list)
    <53d>   DW_AT_GNU_locviews: 0x1d5
 <2><541>: Abbrev Number: 0
 <1><542>: Abbrev Number: 13 (DW_TAG_subprogram)
    <543>   DW_AT_external    : 1
    <543>   DW_AT_name        : (indirect string, offset: 0x72): clear_lidar_IO
    <547>   DW_AT_decl_file   : 1
    <547>   DW_AT_decl_line   : 125
    <548>   DW_AT_decl_column : 6
    <548>   DW_AT_prototyped  : 1
    <548>   DW_AT_low_pc      : 0x4a0
    <54c>   DW_AT_high_pc     : 0x30
    <550>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <552>   DW_AT_call_all_calls: 1
    <552>   DW_AT_sibling     : <0x586>
 <2><556>: Abbrev Number: 3 (DW_TAG_call_site)
    <557>   DW_AT_call_return_pc: 0x4b2
    <55b>   DW_AT_sibling     : <0x566>
 <3><55f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <560>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <562>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><565>: Abbrev Number: 0
 <2><566>: Abbrev Number: 3 (DW_TAG_call_site)
    <567>   DW_AT_call_return_pc: 0x4ba
    <56b>   DW_AT_sibling     : <0x576>
 <3><56f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <570>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <572>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><575>: Abbrev Number: 0
 <2><576>: Abbrev Number: 16 (DW_TAG_call_site)
    <577>   DW_AT_call_return_pc: 0x4c6
 <3><57b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <57c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <57e>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><584>: Abbrev Number: 0
 <2><585>: Abbrev Number: 0
 <1><586>: Abbrev Number: 13 (DW_TAG_subprogram)
    <587>   DW_AT_external    : 1
    <587>   DW_AT_name        : (indirect string, offset: 0x298): stop_lidar_scan
    <58b>   DW_AT_decl_file   : 1
    <58b>   DW_AT_decl_line   : 120
    <58c>   DW_AT_decl_column : 6
    <58c>   DW_AT_prototyped  : 1
    <58c>   DW_AT_low_pc      : 0x47c
    <590>   DW_AT_high_pc     : 0x24
    <594>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <596>   DW_AT_call_all_calls: 1
    <596>   DW_AT_sibling     : <0x5c3>
 <2><59a>: Abbrev Number: 3 (DW_TAG_call_site)
    <59b>   DW_AT_call_return_pc: 0x48e
    <59f>   DW_AT_sibling     : <0x5b0>
 <3><5a3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5a4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5a6>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5a9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5aa>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5ac>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><5af>: Abbrev Number: 0
 <2><5b0>: Abbrev Number: 16 (DW_TAG_call_site)
    <5b1>   DW_AT_call_return_pc: 0x498
 <3><5b5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5b6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5b8>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5bb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5bc>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5be>   DW_AT_call_value  : 2 byte block: 8 65 	(DW_OP_const1u: 101)
 <3><5c1>: Abbrev Number: 0
 <2><5c2>: Abbrev Number: 0
 <1><5c3>: Abbrev Number: 13 (DW_TAG_subprogram)
    <5c4>   DW_AT_external    : 1
    <5c4>   DW_AT_name        : (indirect string, offset: 0x2bb): start_lidar_scan
    <5c8>   DW_AT_decl_file   : 1
    <5c8>   DW_AT_decl_line   : 115
    <5c9>   DW_AT_decl_column : 6
    <5c9>   DW_AT_prototyped  : 1
    <5c9>   DW_AT_low_pc      : 0x458
    <5cd>   DW_AT_high_pc     : 0x24
    <5d1>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <5d3>   DW_AT_call_all_calls: 1
    <5d3>   DW_AT_sibling     : <0x600>
 <2><5d7>: Abbrev Number: 3 (DW_TAG_call_site)
    <5d8>   DW_AT_call_return_pc: 0x46a
    <5dc>   DW_AT_sibling     : <0x5ed>
 <3><5e0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5e1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5e3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5e6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5e7>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5e9>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><5ec>: Abbrev Number: 0
 <2><5ed>: Abbrev Number: 16 (DW_TAG_call_site)
    <5ee>   DW_AT_call_return_pc: 0x474
 <3><5f2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5f3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5f5>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5f8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5f9>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5fb>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><5fe>: Abbrev Number: 0
 <2><5ff>: Abbrev Number: 0
 <1><600>: Abbrev Number: 44 (DW_TAG_subprogram)
    <601>   DW_AT_external    : 1
    <601>   DW_AT_name        : (indirect string, offset: 0x268): setup_lidar_comms
    <605>   DW_AT_decl_file   : 1
    <606>   DW_AT_decl_line   : 99
    <607>   DW_AT_decl_column : 6
    <608>   DW_AT_prototyped  : 1
    <608>   DW_AT_low_pc      : 0x3a8
    <60c>   DW_AT_high_pc     : 0xb0
    <610>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <612>   DW_AT_call_all_tail_calls: 1
    <612>   DW_AT_sibling     : <0x6d6>
 <2><616>: Abbrev Number: 3 (DW_TAG_call_site)
    <617>   DW_AT_call_return_pc: 0x3b6
    <61b>   DW_AT_sibling     : <0x62a>
 <3><61f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <620>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <622>   DW_AT_call_value  : 6 byte block: 11 83 90 80 80 7f 	(DW_OP_consts: -268433405)
 <3><629>: Abbrev Number: 0
 <2><62a>: Abbrev Number: 3 (DW_TAG_call_site)
    <62b>   DW_AT_call_return_pc: 0x3be
    <62f>   DW_AT_sibling     : <0x63e>
 <3><633>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <634>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <636>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><63d>: Abbrev Number: 0
 <2><63e>: Abbrev Number: 3 (DW_TAG_call_site)
    <63f>   DW_AT_call_return_pc: 0x3cc
    <643>   DW_AT_sibling     : <0x652>
 <3><647>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <648>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <64a>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><651>: Abbrev Number: 0
 <2><652>: Abbrev Number: 30 (DW_TAG_call_site)
    <653>   DW_AT_call_return_pc: 0x412
    <657>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <65a>   DW_AT_sibling     : <0x676>
 <3><65e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <65f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <661>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><664>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <665>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <667>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><66a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <66b>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <66d>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><670>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <671>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <673>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><675>: Abbrev Number: 0
 <2><676>: Abbrev Number: 30 (DW_TAG_call_site)
    <677>   DW_AT_call_return_pc: 0x420
    <67b>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <67e>   DW_AT_sibling     : <0x69a>
 <3><682>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <683>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <685>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><688>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <689>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <68b>   DW_AT_call_value  : 2 byte block: 8 40 	(DW_OP_const1u: 64)
 <3><68e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <68f>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <691>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><694>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <695>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <697>   DW_AT_call_value  : 1 byte block: 3a 	(DW_OP_lit10)
 <3><699>: Abbrev Number: 0
 <2><69a>: Abbrev Number: 3 (DW_TAG_call_site)
    <69b>   DW_AT_call_return_pc: 0x42c
    <69f>   DW_AT_sibling     : <0x6b5>
 <3><6a3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6a4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6a6>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6a9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6aa>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6ac>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><6af>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6b0>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <6b2>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><6b4>: Abbrev Number: 0
 <2><6b5>: Abbrev Number: 45 (DW_TAG_call_site)
    <6b6>   DW_AT_call_return_pc: 0x442
    <6ba>   DW_AT_call_target : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6bd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6be>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6c0>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><6c6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6c7>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <6c9>   DW_AT_call_value  : 4 byte block: 8 e1 3a 24 	(DW_OP_const1u: 225; DW_OP_lit10; DW_OP_shl)
 <3><6ce>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6cf>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <6d1>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><6d4>: Abbrev Number: 0
 <2><6d5>: Abbrev Number: 0
 <1><6d6>: Abbrev Number: 46 (DW_TAG_subprogram)
    <6d7>   DW_AT_external    : 1
    <6d7>   DW_AT_name        : (indirect string, offset: 0): process_points
    <6db>   DW_AT_decl_file   : 1
    <6dc>   DW_AT_decl_line   : 43
    <6dd>   DW_AT_decl_column : 6
    <6de>   DW_AT_low_pc      : 0x2d4
    <6e2>   DW_AT_high_pc     : 0xd4
    <6e6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6e8>   DW_AT_call_all_calls: 1
    <6e8>   DW_AT_sibling     : <0x8d2>
 <2><6ec>: Abbrev Number: 8 (DW_TAG_variable)
    <6ed>   DW_AT_name        : (indirect string, offset: 0x151): last_time
    <6f1>   DW_AT_decl_file   : 1
    <6f1>   DW_AT_decl_line   : 44
    <6f2>   DW_AT_decl_column : 17
    <6f3>   DW_AT_type        : <0xbb>
    <6f7>   DW_AT_location    : 5 byte block: 3 20 0 0 20 	(DW_OP_addr: 20000020)
 <2><6fd>: Abbrev Number: 21 (DW_TAG_subprogram)
    <6fe>   DW_AT_name        : (indirect string, offset: 0x2f3): has_holes
    <702>   DW_AT_decl_file   : 1
    <702>   DW_AT_decl_line   : 46
    <703>   DW_AT_decl_column : 7
    <704>   DW_AT_prototyped  : 1
    <704>   DW_AT_type        : <0x48c>
    <708>   DW_AT_low_pc      : 0x26c
    <70c>   DW_AT_high_pc     : 0x1a
    <710>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <712>   DW_AT_call_all_calls: 1
    <712>   DW_AT_sibling     : <0x741>
 <3><716>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <717>   DW_AT_name        : (indirect string, offset: 0x35e): points
    <71b>   DW_AT_decl_file   : 1
    <71b>   DW_AT_decl_line   : 46
    <71c>   DW_AT_decl_column : 27
    <71d>   DW_AT_type        : <0x8d2>
    <721>   DW_AT_location    : 0x21b (location list)
    <725>   DW_AT_GNU_locviews: 0x213
 <3><729>: Abbrev Number: 19 (DW_TAG_lexical_block)
    <72a>   DW_AT_ranges      : 0xc
 <4><72e>: Abbrev Number: 6 (DW_TAG_variable)
    <72f>   DW_AT_name        : i
    <731>   DW_AT_decl_file   : 1
    <731>   DW_AT_decl_line   : 47
    <732>   DW_AT_decl_column : 11
    <733>   DW_AT_type        : <0x42>
    <737>   DW_AT_location    : 0x24b (location list)
    <73b>   DW_AT_GNU_locviews: 0x247
 <4><73f>: Abbrev Number: 0
 <3><740>: Abbrev Number: 0
 <2><741>: Abbrev Number: 21 (DW_TAG_subprogram)
    <742>   DW_AT_name        : (indirect string, offset: 0x30b): count_points
    <746>   DW_AT_decl_file   : 1
    <746>   DW_AT_decl_line   : 51
    <747>   DW_AT_decl_column : 6
    <748>   DW_AT_prototyped  : 1
    <748>   DW_AT_type        : <0x42>
    <74c>   DW_AT_low_pc      : 0x288
    <750>   DW_AT_high_pc     : 0x24
    <754>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <756>   DW_AT_call_all_calls: 1
    <756>   DW_AT_sibling     : <0x785>
 <3><75a>: Abbrev Number: 5 (DW_TAG_variable)
    <75b>   DW_AT_name        : (indirect string, offset: 0x37c): count
    <75f>   DW_AT_decl_file   : 1
    <75f>   DW_AT_decl_line   : 52
    <760>   DW_AT_decl_column : 7
    <761>   DW_AT_type        : <0x42>
    <765>   DW_AT_location    : 0x260 (location list)
    <769>   DW_AT_GNU_locviews: 0x25c
 <3><76d>: Abbrev Number: 19 (DW_TAG_lexical_block)
    <76e>   DW_AT_ranges      : 0x18
 <4><772>: Abbrev Number: 6 (DW_TAG_variable)
    <773>   DW_AT_name        : i
    <775>   DW_AT_decl_file   : 1
    <775>   DW_AT_decl_line   : 53
    <776>   DW_AT_decl_column : 11
    <777>   DW_AT_type        : <0x42>
    <77b>   DW_AT_location    : 0x275 (location list)
    <77f>   DW_AT_GNU_locviews: 0x271
 <4><783>: Abbrev Number: 0
 <3><784>: Abbrev Number: 0
 <2><785>: Abbrev Number: 21 (DW_TAG_subprogram)
    <786>   DW_AT_name        : (indirect string, offset: 0xa1): bounded_idx
    <78a>   DW_AT_decl_file   : 1
    <78a>   DW_AT_decl_line   : 62
    <78b>   DW_AT_decl_column : 6
    <78c>   DW_AT_prototyped  : 1
    <78c>   DW_AT_type        : <0x42>
    <790>   DW_AT_low_pc      : 0x2ac
    <794>   DW_AT_high_pc     : 0x28
    <798>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <79a>   DW_AT_call_all_calls: 1
    <79a>   DW_AT_sibling     : <0x7b2>
 <3><79e>: Abbrev Number: 29 (DW_TAG_formal_parameter)
    <79f>   DW_AT_name        : idx
    <7a3>   DW_AT_decl_file   : 1
    <7a3>   DW_AT_decl_line   : 62
    <7a4>   DW_AT_decl_column : 22
    <7a5>   DW_AT_type        : <0x42>
    <7a9>   DW_AT_location    : 0x28a (location list)
    <7ad>   DW_AT_GNU_locviews: 0x286
 <3><7b1>: Abbrev Number: 0
 <2><7b2>: Abbrev Number: 20 (DW_TAG_variable)
    <7b3>   DW_AT_name        : (indirect string, offset: 0xb8): temp
    <7b7>   DW_AT_decl_file   : 1
    <7b7>   DW_AT_decl_line   : 78
    <7b8>   DW_AT_decl_column : 12
    <7b9>   DW_AT_type        : <0x8d2>
 <2><7bd>: Abbrev Number: 20 (DW_TAG_variable)
    <7be>   DW_AT_name        : (indirect string, offset: 0x263): iter
    <7c2>   DW_AT_decl_file   : 1
    <7c2>   DW_AT_decl_line   : 80
    <7c3>   DW_AT_decl_column : 6
    <7c4>   DW_AT_type        : <0x42>
 <2><7c8>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <7c9>   DW_AT_low_pc      : 0x2e2
    <7cd>   DW_AT_high_pc     : 0x14
    <7d1>   DW_AT_sibling     : <0x7e7>
 <3><7d5>: Abbrev Number: 6 (DW_TAG_variable)
    <7d6>   DW_AT_name        : j
    <7d8>   DW_AT_decl_file   : 1
    <7d8>   DW_AT_decl_line   : 70
    <7d9>   DW_AT_decl_column : 11
    <7da>   DW_AT_type        : <0x42>
    <7de>   DW_AT_location    : 0x29c (location list)
    <7e2>   DW_AT_GNU_locviews: 0x29a
 <3><7e6>: Abbrev Number: 0
 <2><7e7>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <7e8>   DW_AT_low_pc      : 0x306
    <7ec>   DW_AT_high_pc     : 0x1a
    <7f0>   DW_AT_sibling     : <0x806>
 <3><7f4>: Abbrev Number: 6 (DW_TAG_variable)
    <7f5>   DW_AT_name        : i
    <7f7>   DW_AT_decl_file   : 1
    <7f7>   DW_AT_decl_line   : 79
    <7f8>   DW_AT_decl_column : 10
    <7f9>   DW_AT_type        : <0x42>
    <7fd>   DW_AT_location    : 0x2a7 (location list)
    <801>   DW_AT_GNU_locviews: 0x2a5
 <3><805>: Abbrev Number: 0
 <2><806>: Abbrev Number: 25 (DW_TAG_lexical_block)
    <807>   DW_AT_ranges      : 0x24
    <80b>   DW_AT_sibling     : <0x896>
 <3><80f>: Abbrev Number: 5 (DW_TAG_variable)
    <810>   DW_AT_name        : (indirect string, offset: 0x3b1): left
    <814>   DW_AT_decl_file   : 1
    <814>   DW_AT_decl_line   : 82
    <815>   DW_AT_decl_column : 7
    <816>   DW_AT_type        : <0x42>
    <81a>   DW_AT_location    : 0x2ba (location list)
    <81e>   DW_AT_GNU_locviews: 0x2b0
 <3><822>: Abbrev Number: 5 (DW_TAG_variable)
    <823>   DW_AT_name        : (indirect string, offset: 0x81): right
    <827>   DW_AT_decl_file   : 1
    <827>   DW_AT_decl_line   : 82
    <828>   DW_AT_decl_column : 17
    <829>   DW_AT_type        : <0x42>
    <82d>   DW_AT_location    : 0x2e5 (location list)
    <831>   DW_AT_GNU_locviews: 0x2dd
 <3><835>: Abbrev Number: 6 (DW_TAG_variable)
    <836>   DW_AT_name        : mid
    <83a>   DW_AT_decl_file   : 1
    <83a>   DW_AT_decl_line   : 82
    <83b>   DW_AT_decl_column : 24
    <83c>   DW_AT_type        : <0x42>
    <840>   DW_AT_location    : 0x303 (location list)
    <844>   DW_AT_GNU_locviews: 0x301
 <3><848>: Abbrev Number: 5 (DW_TAG_variable)
    <849>   DW_AT_name        : (indirect string, offset: 0x67): diff
    <84d>   DW_AT_decl_file   : 1
    <84d>   DW_AT_decl_line   : 92
    <84e>   DW_AT_decl_column : 7
    <84f>   DW_AT_type        : <0x42>
    <853>   DW_AT_location    : 0x30e (location list)
    <857>   DW_AT_GNU_locviews: 0x30c
 <3><85b>: Abbrev Number: 15 (DW_TAG_call_site)
    <85c>   DW_AT_call_return_pc: 0x328
    <860>   DW_AT_call_origin : <0x785>
    <864>   DW_AT_sibling     : <0x86f>
 <4><868>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <869>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <86b>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><86e>: Abbrev Number: 0
 <3><86f>: Abbrev Number: 15 (DW_TAG_call_site)
    <870>   DW_AT_call_return_pc: 0x33c
    <874>   DW_AT_call_origin : <0x785>
    <878>   DW_AT_sibling     : <0x883>
 <4><87c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <87d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <87f>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><882>: Abbrev Number: 0
 <3><883>: Abbrev Number: 10 (DW_TAG_call_site)
    <884>   DW_AT_call_return_pc: 0x34c
    <888>   DW_AT_call_origin : <0x785>
 <3><88c>: Abbrev Number: 10 (DW_TAG_call_site)
    <88d>   DW_AT_call_return_pc: 0x358
    <891>   DW_AT_call_origin : <0x785>
 <3><895>: Abbrev Number: 0
 <2><896>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <897>   DW_AT_low_pc      : 0x37a
    <89b>   DW_AT_high_pc     : 0x18
    <89f>   DW_AT_sibling     : <0x8b5>
 <3><8a3>: Abbrev Number: 6 (DW_TAG_variable)
    <8a4>   DW_AT_name        : i
    <8a6>   DW_AT_decl_file   : 1
    <8a6>   DW_AT_decl_line   : 96
    <8a7>   DW_AT_decl_column : 10
    <8a8>   DW_AT_type        : <0x42>
    <8ac>   DW_AT_location    : 0x319 (location list)
    <8b0>   DW_AT_GNU_locviews: 0x317
 <3><8b4>: Abbrev Number: 0
 <2><8b5>: Abbrev Number: 10 (DW_TAG_call_site)
    <8b6>   DW_AT_call_return_pc: 0x302
    <8ba>   DW_AT_call_origin : <0x741>
 <2><8be>: Abbrev Number: 27 (DW_TAG_call_site)
    <8bf>   DW_AT_call_return_pc: 0x368
    <8c3>   DW_AT_call_origin : <0x6fd>
 <3><8c7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <8c8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <8ca>   DW_AT_call_value  : 5 byte block: 3 24 0 0 20 	(DW_OP_addr: 20000024)
 <3><8d0>: Abbrev Number: 0
 <2><8d1>: Abbrev Number: 0
 <1><8d2>: Abbrev Number: 28 (DW_TAG_pointer_type)
    <8d3>   DW_AT_byte_size   : 4
    <8d3>   DW_AT_type        : <0xaf>
 <1><8d7>: Abbrev Number: 0
  Compilation Unit @ offset 0x8d8:
   Length:        0x41d (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x2be
   Pointer Size:  4
 <0><8e4>: Abbrev Number: 13 (DW_TAG_compile_unit)
    <8e5>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <8e9>   DW_AT_language    : 29	(C11)
    <8ea>   DW_AT_name        : (indirect string, offset: 0x44d): src/main.c
    <8ee>   DW_AT_comp_dir    : (indirect string, offset: 0x321): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <8f2>   DW_AT_ranges      : 0xfd
    <8f6>   DW_AT_low_pc      : 0
    <8fa>   DW_AT_stmt_list   : 0x6c3
 <1><8fe>: Abbrev Number: 4 (DW_TAG_typedef)
    <8ff>   DW_AT_name        : (indirect string, offset: 0x3cd): __int8_t
    <903>   DW_AT_decl_file   : 2
    <904>   DW_AT_decl_line   : 41
    <905>   DW_AT_decl_column : 23
    <906>   DW_AT_type        : <0x90a>
 <1><90a>: Abbrev Number: 2 (DW_TAG_base_type)
    <90b>   DW_AT_byte_size   : 1
    <90c>   DW_AT_encoding    : 6	(signed char)
    <90d>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><911>: Abbrev Number: 2 (DW_TAG_base_type)
    <912>   DW_AT_byte_size   : 1
    <913>   DW_AT_encoding    : 8	(unsigned char)
    <914>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><918>: Abbrev Number: 2 (DW_TAG_base_type)
    <919>   DW_AT_byte_size   : 2
    <91a>   DW_AT_encoding    : 5	(signed)
    <91b>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><91f>: Abbrev Number: 4 (DW_TAG_typedef)
    <920>   DW_AT_name        : (indirect string, offset: 0x2cc): __uint16_t
    <924>   DW_AT_decl_file   : 2
    <925>   DW_AT_decl_line   : 57
    <926>   DW_AT_decl_column : 25
    <927>   DW_AT_type        : <0x92b>
 <1><92b>: Abbrev Number: 2 (DW_TAG_base_type)
    <92c>   DW_AT_byte_size   : 2
    <92d>   DW_AT_encoding    : 7	(unsigned)
    <92e>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><932>: Abbrev Number: 4 (DW_TAG_typedef)
    <933>   DW_AT_name        : (indirect string, offset: 0x2d7): __int32_t
    <937>   DW_AT_decl_file   : 2
    <938>   DW_AT_decl_line   : 77
    <939>   DW_AT_decl_column : 24
    <93a>   DW_AT_type        : <0x93e>
 <1><93e>: Abbrev Number: 2 (DW_TAG_base_type)
    <93f>   DW_AT_byte_size   : 4
    <940>   DW_AT_encoding    : 5	(signed)
    <941>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><945>: Abbrev Number: 4 (DW_TAG_typedef)
    <946>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <94a>   DW_AT_decl_file   : 2
    <94b>   DW_AT_decl_line   : 79
    <94c>   DW_AT_decl_column : 25
    <94d>   DW_AT_type        : <0x951>
 <1><951>: Abbrev Number: 2 (DW_TAG_base_type)
    <952>   DW_AT_byte_size   : 4
    <953>   DW_AT_encoding    : 7	(unsigned)
    <954>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><958>: Abbrev Number: 2 (DW_TAG_base_type)
    <959>   DW_AT_byte_size   : 8
    <95a>   DW_AT_encoding    : 5	(signed)
    <95b>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><95f>: Abbrev Number: 2 (DW_TAG_base_type)
    <960>   DW_AT_byte_size   : 8
    <961>   DW_AT_encoding    : 7	(unsigned)
    <962>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><966>: Abbrev Number: 14 (DW_TAG_base_type)
    <967>   DW_AT_byte_size   : 4
    <968>   DW_AT_encoding    : 5	(signed)
    <969>   DW_AT_name        : int
 <1><96d>: Abbrev Number: 2 (DW_TAG_base_type)
    <96e>   DW_AT_byte_size   : 4
    <96f>   DW_AT_encoding    : 7	(unsigned)
    <970>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><974>: Abbrev Number: 4 (DW_TAG_typedef)
    <975>   DW_AT_name        : (indirect string, offset: 0x3cf): int8_t
    <979>   DW_AT_decl_file   : 3
    <97a>   DW_AT_decl_line   : 20
    <97b>   DW_AT_decl_column : 18
    <97c>   DW_AT_type        : <0x8fe>
 <1><980>: Abbrev Number: 4 (DW_TAG_typedef)
    <981>   DW_AT_name        : (indirect string, offset: 0x2ce): uint16_t
    <985>   DW_AT_decl_file   : 3
    <986>   DW_AT_decl_line   : 36
    <987>   DW_AT_decl_column : 20
    <988>   DW_AT_type        : <0x91f>
 <1><98c>: Abbrev Number: 4 (DW_TAG_typedef)
    <98d>   DW_AT_name        : (indirect string, offset: 0x2d9): int32_t
    <991>   DW_AT_decl_file   : 3
    <992>   DW_AT_decl_line   : 44
    <993>   DW_AT_decl_column : 19
    <994>   DW_AT_type        : <0x932>
 <1><998>: Abbrev Number: 4 (DW_TAG_typedef)
    <999>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <99d>   DW_AT_decl_file   : 3
    <99e>   DW_AT_decl_line   : 48
    <99f>   DW_AT_decl_column : 20
    <9a0>   DW_AT_type        : <0x945>
 <1><9a4>: Abbrev Number: 2 (DW_TAG_base_type)
    <9a5>   DW_AT_byte_size   : 8
    <9a6>   DW_AT_encoding    : 4	(float)
    <9a7>   DW_AT_name        : (indirect string, offset: 0x257): long double
 <1><9ab>: Abbrev Number: 10 (DW_TAG_pointer_type)
    <9ac>   DW_AT_byte_size   : 4
    <9ac>   DW_AT_type        : <0x9b0>
 <1><9b0>: Abbrev Number: 2 (DW_TAG_base_type)
    <9b1>   DW_AT_byte_size   : 1
    <9b2>   DW_AT_encoding    : 8	(unsigned char)
    <9b3>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><9b7>: Abbrev Number: 15 (DW_TAG_array_type)
    <9b8>   DW_AT_type        : <0x980>
    <9bc>   DW_AT_sibling     : <0x9c8>
 <2><9c0>: Abbrev Number: 16 (DW_TAG_subrange_type)
    <9c1>   DW_AT_type        : <0x96d>
    <9c5>   DW_AT_upper_bound : 360
 <2><9c7>: Abbrev Number: 0
 <1><9c8>: Abbrev Number: 11 (DW_TAG_variable)
    <9c9>   DW_AT_name        : (indirect string, offset: 0x302): g_pt_buf
    <9cd>   DW_AT_decl_file   : 4
    <9cd>   DW_AT_decl_line   : 7
    <9ce>   DW_AT_decl_column : 17
    <9ce>   DW_AT_type        : <0x9b7>
    <9d2>   DW_AT_external    : 1
    <9d2>   DW_AT_declaration : 1
 <1><9d2>: Abbrev Number: 11 (DW_TAG_variable)
    <9d3>   DW_AT_name        : (indirect string, offset: 0x350): g_conditioned_points
    <9d7>   DW_AT_decl_file   : 4
    <9d7>   DW_AT_decl_line   : 8
    <9d8>   DW_AT_decl_column : 17
    <9d8>   DW_AT_type        : <0x9b7>
    <9dc>   DW_AT_external    : 1
    <9dc>   DW_AT_declaration : 1
 <1><9dc>: Abbrev Number: 7 (DW_TAG_subprogram)
    <9dd>   DW_AT_external    : 1
    <9dd>   DW_AT_name        : (indirect string, offset: 0x365): process_packets
    <9e1>   DW_AT_decl_file   : 4
    <9e2>   DW_AT_decl_line   : 39
    <9e3>   DW_AT_decl_column : 6
    <9e3>   DW_AT_prototyped  : 1
    <9e3>   DW_AT_declaration : 1
 <1><9e3>: Abbrev Number: 17 (DW_TAG_subprogram)
    <9e4>   DW_AT_external    : 1
    <9e4>   DW_AT_name        : (indirect string, offset: 0x487): printlf
    <9e8>   DW_AT_decl_file   : 5
    <9e9>   DW_AT_decl_line   : 10
    <9ea>   DW_AT_decl_column : 6
    <9eb>   DW_AT_prototyped  : 1
    <9eb>   DW_AT_declaration : 1
    <9eb>   DW_AT_sibling     : <0x9f6>
 <2><9ef>: Abbrev Number: 18 (DW_TAG_formal_parameter)
    <9f0>   DW_AT_type        : <0x9ab>
 <2><9f4>: Abbrev Number: 19 (DW_TAG_unspecified_parameters)
 <2><9f5>: Abbrev Number: 0
 <1><9f6>: Abbrev Number: 7 (DW_TAG_subprogram)
    <9f7>   DW_AT_external    : 1
    <9f7>   DW_AT_name        : (indirect string, offset: 0x2bb): start_lidar_scan
    <9fb>   DW_AT_decl_file   : 4
    <9fc>   DW_AT_decl_line   : 37
    <9fd>   DW_AT_decl_column : 6
    <9fd>   DW_AT_prototyped  : 1
    <9fd>   DW_AT_declaration : 1
 <1><9fd>: Abbrev Number: 7 (DW_TAG_subprogram)
    <9fe>   DW_AT_external    : 1
    <9fe>   DW_AT_name        : (indirect string, offset: 0x72): clear_lidar_IO
    <a02>   DW_AT_decl_file   : 4
    <a03>   DW_AT_decl_line   : 40
    <a04>   DW_AT_decl_column : 6
    <a04>   DW_AT_prototyped  : 1
    <a04>   DW_AT_declaration : 1
 <1><a04>: Abbrev Number: 7 (DW_TAG_subprogram)
    <a05>   DW_AT_external    : 1
    <a05>   DW_AT_name        : (indirect string, offset: 0x298): stop_lidar_scan
    <a09>   DW_AT_decl_file   : 4
    <a0a>   DW_AT_decl_line   : 38
    <a0b>   DW_AT_decl_column : 6
    <a0b>   DW_AT_prototyped  : 1
    <a0b>   DW_AT_declaration : 1
 <1><a0b>: Abbrev Number: 7 (DW_TAG_subprogram)
    <a0c>   DW_AT_external    : 1
    <a0c>   DW_AT_name        : (indirect string, offset: 0x268): setup_lidar_comms
    <a10>   DW_AT_decl_file   : 4
    <a11>   DW_AT_decl_line   : 36
    <a12>   DW_AT_decl_column : 6
    <a12>   DW_AT_prototyped  : 1
    <a12>   DW_AT_declaration : 1
 <1><a12>: Abbrev Number: 7 (DW_TAG_subprogram)
    <a13>   DW_AT_external    : 1
    <a13>   DW_AT_name        : (indirect string, offset: 0x406): setup_uart_printer
    <a17>   DW_AT_decl_file   : 5
    <a18>   DW_AT_decl_line   : 1
    <a19>   DW_AT_decl_column : 6
    <a19>   DW_AT_prototyped  : 1
    <a19>   DW_AT_declaration : 1
 <1><a19>: Abbrev Number: 7 (DW_TAG_subprogram)
    <a1a>   DW_AT_external    : 1
    <a1a>   DW_AT_name        : (indirect string, offset: 0x470): configureDebounceTimer
    <a1e>   DW_AT_decl_file   : 6
    <a1f>   DW_AT_decl_line   : 8
    <a20>   DW_AT_decl_column : 6
    <a20>   DW_AT_prototyped  : 1
    <a20>   DW_AT_declaration : 1
 <1><a20>: Abbrev Number: 20 (DW_TAG_subprogram)
    <a21>   DW_AT_external    : 1
    <a21>   DW_AT_name        : (indirect string, offset: 0x448): main
    <a25>   DW_AT_decl_file   : 1
    <a26>   DW_AT_decl_line   : 20
    <a27>   DW_AT_decl_column : 5
    <a28>   DW_AT_prototyped  : 1
    <a28>   DW_AT_type        : <0x966>
    <a2c>   DW_AT_low_pc      : 0x704
    <a30>   DW_AT_high_pc     : 0x1b0
    <a34>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <a36>   DW_AT_call_all_calls: 1
    <a36>   DW_AT_sibling     : <0xcec>
 <2><a3a>: Abbrev Number: 8 (DW_TAG_variable)
    <a3b>   DW_AT_name        : i
    <a3d>   DW_AT_decl_file   : 1
    <a3d>   DW_AT_decl_line   : 46
    <a3e>   DW_AT_decl_column : 6
    <a3f>   DW_AT_type        : <0x966>
    <a43>   DW_AT_location    : 0x336 (location list)
    <a47>   DW_AT_GNU_locviews: 0x32e
 <2><a4b>: Abbrev Number: 9 (DW_TAG_lexical_block)
    <a4c>   DW_AT_ranges      : 0xad
    <a50>   DW_AT_sibling     : <0xba6>
 <3><a54>: Abbrev Number: 5 (DW_TAG_variable)
    <a55>   DW_AT_name        : (indirect string, offset: 0x3fb): drive_okay
    <a59>   DW_AT_decl_file   : 1
    <a59>   DW_AT_decl_line   : 52
    <a5a>   DW_AT_decl_column : 9
    <a5b>   DW_AT_type        : <0xcec>
    <a5f>   DW_AT_location    : 0x35e (location list)
    <a63>   DW_AT_GNU_locviews: 0x358
 <3><a67>: Abbrev Number: 5 (DW_TAG_variable)
    <a68>   DW_AT_name        : (indirect string, offset: 0x419): avg_forward_distance
    <a6c>   DW_AT_decl_file   : 1
    <a6c>   DW_AT_decl_line   : 54
    <a6d>   DW_AT_decl_column : 12
    <a6e>   DW_AT_type        : <0x98c>
    <a72>   DW_AT_location    : 0x37a (location list)
    <a76>   DW_AT_GNU_locviews: 0x376
 <3><a7a>: Abbrev Number: 21 (DW_TAG_variable)
    <a7b>   DW_AT_name        : (indirect string, offset: 0x3eb): possible_angles
    <a7f>   DW_AT_decl_file   : 1
    <a80>   DW_AT_decl_line   : 62
    <a81>   DW_AT_decl_column : 14
    <a82>   DW_AT_type        : <0xcf3>
 <3><a86>: Abbrev Number: 8 (DW_TAG_variable)
    <a87>   DW_AT_name        : n
    <a89>   DW_AT_decl_file   : 1
    <a89>   DW_AT_decl_line   : 63
    <a8a>   DW_AT_decl_column : 8
    <a8b>   DW_AT_type        : <0x966>
    <a8f>   DW_AT_location    : 0x395 (location list)
    <a93>   DW_AT_GNU_locviews: 0x38f
 <3><a97>: Abbrev Number: 8 (DW_TAG_variable)
    <a98>   DW_AT_name        : top
    <a9c>   DW_AT_decl_file   : 1
    <a9c>   DW_AT_decl_line   : 69
    <a9d>   DW_AT_decl_column : 8
    <a9e>   DW_AT_type        : <0x966>
    <aa2>   DW_AT_location    : 0x3b0 (location list)
    <aa6>   DW_AT_GNU_locviews: 0x3ae
 <3><aaa>: Abbrev Number: 5 (DW_TAG_variable)
    <aab>   DW_AT_name        : (indirect string, offset: 0x3e3): mid_pos
    <aaf>   DW_AT_decl_file   : 1
    <aaf>   DW_AT_decl_line   : 70
    <ab0>   DW_AT_decl_column : 8
    <ab1>   DW_AT_type        : <0x966>
    <ab5>   DW_AT_location    : 0x3bd (location list)
    <ab9>   DW_AT_GNU_locviews: 0x3b9
 <3><abd>: Abbrev Number: 5 (DW_TAG_variable)
    <abe>   DW_AT_name        : (indirect string, offset: 0x465): best_angle
    <ac2>   DW_AT_decl_file   : 1
    <ac2>   DW_AT_decl_line   : 71
    <ac3>   DW_AT_decl_column : 8
    <ac4>   DW_AT_type        : <0x966>
    <ac8>   DW_AT_location    : 0x3db (location list)
    <acc>   DW_AT_GNU_locviews: 0x3cf
 <3><ad0>: Abbrev Number: 5 (DW_TAG_variable)
    <ad1>   DW_AT_name        : (indirect string, offset: 0x42e): best_value
    <ad5>   DW_AT_decl_file   : 1
    <ad5>   DW_AT_decl_line   : 72
    <ad6>   DW_AT_decl_column : 13
    <ad7>   DW_AT_type        : <0x980>
    <adb>   DW_AT_location    : 0x407 (location list)
    <adf>   DW_AT_GNU_locviews: 0x401
 <3><ae3>: Abbrev Number: 5 (DW_TAG_variable)
    <ae4>   DW_AT_name        : (indirect string, offset: 0x439): turn_direction
    <ae8>   DW_AT_decl_file   : 1
    <ae8>   DW_AT_decl_line   : 82
    <ae9>   DW_AT_decl_column : 8
    <aea>   DW_AT_type        : <0x966>
    <aee>   DW_AT_location    : 0x41f (location list)
    <af2>   DW_AT_GNU_locviews: 0x41d
 <3><af6>: Abbrev Number: 8 (DW_TAG_variable)
    <af7>   DW_AT_name        : mod
    <afb>   DW_AT_decl_file   : 1
    <afb>   DW_AT_decl_line   : 83
    <afc>   DW_AT_decl_column : 11
    <afd>   DW_AT_type        : <0x974>
    <b01>   DW_AT_location    : 0x42b (location list)
    <b05>   DW_AT_GNU_locviews: 0x429
 <3><b09>: Abbrev Number: 9 (DW_TAG_lexical_block)
    <b0a>   DW_AT_ranges      : 0xbc
    <b0e>   DW_AT_sibling     : <0xb24>
 <4><b12>: Abbrev Number: 8 (DW_TAG_variable)
    <b13>   DW_AT_name        : j
    <b15>   DW_AT_decl_file   : 1
    <b15>   DW_AT_decl_line   : 55
    <b16>   DW_AT_decl_column : 12
    <b17>   DW_AT_type        : <0x966>
    <b1b>   DW_AT_location    : 0x437 (location list)
    <b1f>   DW_AT_GNU_locviews: 0x435
 <4><b23>: Abbrev Number: 0
 <3><b24>: Abbrev Number: 9 (DW_TAG_lexical_block)
    <b25>   DW_AT_ranges      : 0xca
    <b29>   DW_AT_sibling     : <0xb6f>
 <4><b2d>: Abbrev Number: 8 (DW_TAG_variable)
    <b2e>   DW_AT_name        : j
    <b30>   DW_AT_decl_file   : 1
    <b30>   DW_AT_decl_line   : 64
    <b31>   DW_AT_decl_column : 12
    <b32>   DW_AT_type        : <0x966>
    <b36>   DW_AT_location    : 0x444 (location list)
    <b3a>   DW_AT_GNU_locviews: 0x440
 <4><b3e>: Abbrev Number: 12 (DW_TAG_lexical_block)
    <b3f>   DW_AT_ranges      : 0xd9
 <5><b43>: Abbrev Number: 5 (DW_TAG_variable)
    <b44>   DW_AT_name        : (indirect string, offset: 0x3d6): avg_distance
    <b48>   DW_AT_decl_file   : 1
    <b48>   DW_AT_decl_line   : 65
    <b49>   DW_AT_decl_column : 13
    <b4a>   DW_AT_type        : <0x98c>
    <b4e>   DW_AT_location    : 0x458 (location list)
    <b52>   DW_AT_GNU_locviews: 0x456
 <5><b56>: Abbrev Number: 12 (DW_TAG_lexical_block)
    <b57>   DW_AT_ranges      : 0xe5
 <6><b5b>: Abbrev Number: 8 (DW_TAG_variable)
    <b5c>   DW_AT_name        : k
    <b5e>   DW_AT_decl_file   : 1
    <b5e>   DW_AT_decl_line   : 66
    <b5f>   DW_AT_decl_column : 13
    <b60>   DW_AT_type        : <0x966>
    <b64>   DW_AT_location    : 0x463 (location list)
    <b68>   DW_AT_GNU_locviews: 0x461
 <6><b6c>: Abbrev Number: 0
 <5><b6d>: Abbrev Number: 0
 <4><b6e>: Abbrev Number: 0
 <3><b6f>: Abbrev Number: 9 (DW_TAG_lexical_block)
    <b70>   DW_AT_ranges      : 0xf1
    <b74>   DW_AT_sibling     : <0xb8c>
 <4><b78>: Abbrev Number: 5 (DW_TAG_variable)
    <b79>   DW_AT_name        : (indirect string, offset: 0x458): position_mod
    <b7d>   DW_AT_decl_file   : 1
    <b7d>   DW_AT_decl_line   : 74
    <b7e>   DW_AT_decl_column : 9
    <b7f>   DW_AT_type        : <0x966>
    <b83>   DW_AT_location    : 0x46e (location list)
    <b87>   DW_AT_GNU_locviews: 0x46c
 <4><b8b>: Abbrev Number: 0
 <3><b8c>: Abbrev Number: 22 (DW_TAG_call_site)
    <b8d>   DW_AT_call_return_pc: 0x852
    <b91>   DW_AT_call_origin : <0x9e3>
 <4><b95>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b96>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b98>   DW_AT_call_value  : 5 byte block: 3 40 d 0 0 	(DW_OP_addr: d40)
 <4><b9e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b9f>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <ba1>   DW_AT_call_value  : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <4><ba4>: Abbrev Number: 0
 <3><ba5>: Abbrev Number: 0
 <2><ba6>: Abbrev Number: 3 (DW_TAG_call_site)
    <ba7>   DW_AT_call_return_pc: 0x712
    <bab>   DW_AT_sibling     : <0xbba>
 <3><baf>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <bb0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <bb2>   DW_AT_call_value  : 6 byte block: 11 c0 8a 80 88 7c 	(DW_OP_consts: -1056963264)
 <3><bb9>: Abbrev Number: 0
 <2><bba>: Abbrev Number: 6 (DW_TAG_call_site)
    <bbb>   DW_AT_call_return_pc: 0x716
    <bbf>   DW_AT_call_origin : <0xa19>
 <2><bc3>: Abbrev Number: 6 (DW_TAG_call_site)
    <bc4>   DW_AT_call_return_pc: 0x71a
    <bc8>   DW_AT_call_origin : <0xa12>
 <2><bcc>: Abbrev Number: 6 (DW_TAG_call_site)
    <bcd>   DW_AT_call_return_pc: 0x71e
    <bd1>   DW_AT_call_origin : <0xa0b>
 <2><bd5>: Abbrev Number: 6 (DW_TAG_call_site)
    <bd6>   DW_AT_call_return_pc: 0x722
    <bda>   DW_AT_call_origin : <0xa04>
 <2><bde>: Abbrev Number: 3 (DW_TAG_call_site)
    <bdf>   DW_AT_call_return_pc: 0x72e
    <be3>   DW_AT_sibling     : <0xbee>
 <3><be7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <be8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <bea>   DW_AT_call_value  : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <3><bed>: Abbrev Number: 0
 <2><bee>: Abbrev Number: 6 (DW_TAG_call_site)
    <bef>   DW_AT_call_return_pc: 0x732
    <bf3>   DW_AT_call_origin : <0x9fd>
 <2><bf7>: Abbrev Number: 3 (DW_TAG_call_site)
    <bf8>   DW_AT_call_return_pc: 0x73e
    <bfc>   DW_AT_sibling     : <0xc0d>
 <3><c00>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c01>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c03>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c06>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c07>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c09>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><c0c>: Abbrev Number: 0
 <2><c0d>: Abbrev Number: 3 (DW_TAG_call_site)
    <c0e>   DW_AT_call_return_pc: 0x748
    <c12>   DW_AT_sibling     : <0xc22>
 <3><c16>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c17>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c19>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c1c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c1d>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c1f>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><c21>: Abbrev Number: 0
 <2><c22>: Abbrev Number: 3 (DW_TAG_call_site)
    <c23>   DW_AT_call_return_pc: 0x752
    <c27>   DW_AT_sibling     : <0xc38>
 <3><c2b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c2c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c2e>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c31>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c32>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c34>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><c37>: Abbrev Number: 0
 <2><c38>: Abbrev Number: 3 (DW_TAG_call_site)
    <c39>   DW_AT_call_return_pc: 0x75c
    <c3d>   DW_AT_sibling     : <0xc4d>
 <3><c41>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c42>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c44>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c47>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c48>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c4a>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><c4c>: Abbrev Number: 0
 <2><c4d>: Abbrev Number: 3 (DW_TAG_call_site)
    <c4e>   DW_AT_call_return_pc: 0x766
    <c52>   DW_AT_sibling     : <0xc63>
 <3><c56>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c57>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c59>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c5c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c5d>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c5f>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><c62>: Abbrev Number: 0
 <2><c63>: Abbrev Number: 3 (DW_TAG_call_site)
    <c64>   DW_AT_call_return_pc: 0x770
    <c68>   DW_AT_sibling     : <0xc78>
 <3><c6c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c6d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c6f>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c72>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c73>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c75>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><c77>: Abbrev Number: 0
 <2><c78>: Abbrev Number: 3 (DW_TAG_call_site)
    <c79>   DW_AT_call_return_pc: 0x77a
    <c7d>   DW_AT_sibling     : <0xc8e>
 <3><c81>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c82>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c84>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c87>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c88>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c8a>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><c8d>: Abbrev Number: 0
 <2><c8e>: Abbrev Number: 3 (DW_TAG_call_site)
    <c8f>   DW_AT_call_return_pc: 0x784
    <c93>   DW_AT_sibling     : <0xca3>
 <3><c97>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c98>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c9a>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><c9d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c9e>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <ca0>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><ca2>: Abbrev Number: 0
 <2><ca3>: Abbrev Number: 6 (DW_TAG_call_site)
    <ca4>   DW_AT_call_return_pc: 0x788
    <ca8>   DW_AT_call_origin : <0x9fd>
 <2><cac>: Abbrev Number: 3 (DW_TAG_call_site)
    <cad>   DW_AT_call_return_pc: 0x792
    <cb1>   DW_AT_sibling     : <0xcbc>
 <3><cb5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <cb6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <cb8>   DW_AT_call_value  : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <3><cbb>: Abbrev Number: 0
 <2><cbc>: Abbrev Number: 6 (DW_TAG_call_site)
    <cbd>   DW_AT_call_return_pc: 0x796
    <cc1>   DW_AT_call_origin : <0x9f6>
 <2><cc5>: Abbrev Number: 23 (DW_TAG_call_site)
    <cc6>   DW_AT_call_return_pc: 0x860
    <cca>   DW_AT_call_origin : <0x9e3>
    <cce>   DW_AT_sibling     : <0xce2>
 <3><cd2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <cd3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <cd5>   DW_AT_call_value  : 5 byte block: 3 38 d 0 0 	(DW_OP_addr: d38)
 <3><cdb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <cdc>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <cde>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><ce1>: Abbrev Number: 0
 <2><ce2>: Abbrev Number: 6 (DW_TAG_call_site)
    <ce3>   DW_AT_call_return_pc: 0x864
    <ce7>   DW_AT_call_origin : <0x9dc>
 <2><ceb>: Abbrev Number: 0
 <1><cec>: Abbrev Number: 2 (DW_TAG_base_type)
    <ced>   DW_AT_byte_size   : 1
    <cee>   DW_AT_encoding    : 2	(boolean)
    <cef>   DW_AT_name        : (indirect string, offset: 0x27a): _Bool
 <1><cf3>: Abbrev Number: 10 (DW_TAG_pointer_type)
    <cf4>   DW_AT_byte_size   : 4
    <cf4>   DW_AT_type        : <0x980>
 <1><cf8>: Abbrev Number: 0
  Compilation Unit @ offset 0xcf9:
   Length:        0x17a (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x3f2
   Pointer Size:  4
 <0><d05>: Abbrev Number: 4 (DW_TAG_compile_unit)
    <d06>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <d0a>   DW_AT_language    : 29	(C11)
    <d0b>   DW_AT_name        : (indirect string, offset: 0x4bb): src/timers.c
    <d0f>   DW_AT_comp_dir    : (indirect string, offset: 0x321): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <d13>   DW_AT_ranges      : 0x111
    <d17>   DW_AT_low_pc      : 0
    <d1b>   DW_AT_stmt_list   : 0x93c
 <1><d1f>: Abbrev Number: 1 (DW_TAG_base_type)
    <d20>   DW_AT_byte_size   : 1
    <d21>   DW_AT_encoding    : 6	(signed char)
    <d22>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><d26>: Abbrev Number: 1 (DW_TAG_base_type)
    <d27>   DW_AT_byte_size   : 1
    <d28>   DW_AT_encoding    : 8	(unsigned char)
    <d29>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><d2d>: Abbrev Number: 1 (DW_TAG_base_type)
    <d2e>   DW_AT_byte_size   : 2
    <d2f>   DW_AT_encoding    : 5	(signed)
    <d30>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><d34>: Abbrev Number: 1 (DW_TAG_base_type)
    <d35>   DW_AT_byte_size   : 2
    <d36>   DW_AT_encoding    : 7	(unsigned)
    <d37>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><d3b>: Abbrev Number: 2 (DW_TAG_typedef)
    <d3c>   DW_AT_name        : (indirect string, offset: 0x2d7): __int32_t
    <d40>   DW_AT_decl_file   : 2
    <d41>   DW_AT_decl_line   : 77
    <d42>   DW_AT_decl_column : 24
    <d43>   DW_AT_type        : <0xd47>
 <1><d47>: Abbrev Number: 1 (DW_TAG_base_type)
    <d48>   DW_AT_byte_size   : 4
    <d49>   DW_AT_encoding    : 5	(signed)
    <d4a>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><d4e>: Abbrev Number: 2 (DW_TAG_typedef)
    <d4f>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <d53>   DW_AT_decl_file   : 2
    <d54>   DW_AT_decl_line   : 79
    <d55>   DW_AT_decl_column : 25
    <d56>   DW_AT_type        : <0xd5a>
 <1><d5a>: Abbrev Number: 1 (DW_TAG_base_type)
    <d5b>   DW_AT_byte_size   : 4
    <d5c>   DW_AT_encoding    : 7	(unsigned)
    <d5d>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><d61>: Abbrev Number: 1 (DW_TAG_base_type)
    <d62>   DW_AT_byte_size   : 8
    <d63>   DW_AT_encoding    : 5	(signed)
    <d64>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><d68>: Abbrev Number: 2 (DW_TAG_typedef)
    <d69>   DW_AT_name        : (indirect string, offset: 0x4ff): __uint64_t
    <d6d>   DW_AT_decl_file   : 2
    <d6e>   DW_AT_decl_line   : 105
    <d6f>   DW_AT_decl_column : 25
    <d70>   DW_AT_type        : <0xd74>
 <1><d74>: Abbrev Number: 1 (DW_TAG_base_type)
    <d75>   DW_AT_byte_size   : 8
    <d76>   DW_AT_encoding    : 7	(unsigned)
    <d77>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><d7b>: Abbrev Number: 5 (DW_TAG_base_type)
    <d7c>   DW_AT_byte_size   : 4
    <d7d>   DW_AT_encoding    : 5	(signed)
    <d7e>   DW_AT_name        : int
 <1><d82>: Abbrev Number: 1 (DW_TAG_base_type)
    <d83>   DW_AT_byte_size   : 4
    <d84>   DW_AT_encoding    : 7	(unsigned)
    <d85>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><d89>: Abbrev Number: 2 (DW_TAG_typedef)
    <d8a>   DW_AT_name        : (indirect string, offset: 0x2d9): int32_t
    <d8e>   DW_AT_decl_file   : 3
    <d8f>   DW_AT_decl_line   : 44
    <d90>   DW_AT_decl_column : 19
    <d91>   DW_AT_type        : <0xd3b>
 <1><d95>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <d96>   DW_AT_type        : <0xd89>
 <1><d9a>: Abbrev Number: 2 (DW_TAG_typedef)
    <d9b>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <d9f>   DW_AT_decl_file   : 3
    <da0>   DW_AT_decl_line   : 48
    <da1>   DW_AT_decl_column : 20
    <da2>   DW_AT_type        : <0xd4e>
 <1><da6>: Abbrev Number: 2 (DW_TAG_typedef)
    <da7>   DW_AT_name        : (indirect string, offset: 0x501): uint64_t
    <dab>   DW_AT_decl_file   : 3
    <dac>   DW_AT_decl_line   : 60
    <dad>   DW_AT_decl_column : 20
    <dae>   DW_AT_type        : <0xd68>
 <1><db2>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <db3>   DW_AT_type        : <0xda6>
 <1><db7>: Abbrev Number: 6 (DW_TAG_variable)
    <db8>   DW_AT_name        : (indirect string, offset: 0x41): uptime_seconds
    <dbc>   DW_AT_decl_file   : 4
    <dbd>   DW_AT_decl_line   : 4
    <dbe>   DW_AT_decl_column : 25
    <dbf>   DW_AT_type        : <0xd95>
    <dc3>   DW_AT_external    : 1
    <dc3>   DW_AT_declaration : 1
 <1><dc3>: Abbrev Number: 7 (DW_TAG_variable)
    <dc4>   DW_AT_specification: <0xdb7>
    <dc8>   DW_AT_decl_file   : 1
    <dc9>   DW_AT_decl_line   : 11
    <dca>   DW_AT_decl_column : 18
    <dcb>   DW_AT_location    : 5 byte block: 3 a8 8 0 20 	(DW_OP_addr: 200008a8)
 <1><dd1>: Abbrev Number: 8 (DW_TAG_variable)
    <dd2>   DW_AT_name        : (indirect string, offset: 0x4c8): timer1_overflow_count
    <dd6>   DW_AT_decl_file   : 1
    <dd7>   DW_AT_decl_line   : 12
    <dd8>   DW_AT_decl_column : 19
    <dd9>   DW_AT_type        : <0xdb2>
    <ddd>   DW_AT_external    : 1
    <ddd>   DW_AT_location    : 5 byte block: 3 a0 8 0 20 	(DW_OP_addr: 200008a0)
 <1><de3>: Abbrev Number: 9 (DW_TAG_subprogram)
    <de4>   DW_AT_external    : 1
    <de4>   DW_AT_name        : (indirect string, offset: 0x49e): get_uptime_cycles
    <de8>   DW_AT_decl_file   : 1
    <de9>   DW_AT_decl_line   : 52
    <dea>   DW_AT_decl_column : 10
    <deb>   DW_AT_prototyped  : 1
    <deb>   DW_AT_type        : <0xda6>
    <def>   DW_AT_low_pc      : 0
    <df3>   DW_AT_high_pc     : 0x58
    <df7>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <df9>   DW_AT_call_all_tail_calls: 1
    <df9>   DW_AT_sibling     : <0xe27>
 <2><dfd>: Abbrev Number: 10 (DW_TAG_variable)
    <dfe>   DW_AT_name        : (indirect string, offset: 0x4ec): overflow_count_now
    <e02>   DW_AT_decl_file   : 1
    <e03>   DW_AT_decl_line   : 53
    <e04>   DW_AT_decl_column : 11
    <e05>   DW_AT_type        : <0xda6>
    <e09>   DW_AT_location    : 0x487 (location list)
    <e0d>   DW_AT_GNU_locviews: 0x483
 <2><e11>: Abbrev Number: 11 (DW_TAG_variable)
    <e12>   DW_AT_name        : (indirect string, offset: 0x4b0): cycles_now
    <e16>   DW_AT_decl_file   : 1
    <e17>   DW_AT_decl_line   : 54
    <e18>   DW_AT_decl_column : 11
    <e19>   DW_AT_type        : <0xda6>
 <2><e1d>: Abbrev Number: 12 (DW_TAG_call_site)
    <e1e>   DW_AT_call_return_pc: 0
    <e22>   DW_AT_call_origin : <0xe27>
 <2><e26>: Abbrev Number: 0
 <1><e27>: Abbrev Number: 13 (DW_TAG_subprogram)
    <e28>   DW_AT_external    : 1
    <e28>   DW_AT_name        : (indirect string, offset: 0x4de): timeKeeperISR
    <e2c>   DW_AT_decl_file   : 1
    <e2d>   DW_AT_decl_line   : 34
    <e2e>   DW_AT_decl_column : 6
    <e2f>   DW_AT_prototyped  : 1
    <e2f>   DW_AT_low_pc      : 0x930
    <e33>   DW_AT_high_pc     : 0x64
    <e37>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <e39>   DW_AT_call_all_calls: 1
    <e39>   DW_AT_sibling     : <0xe5d>
 <2><e3d>: Abbrev Number: 14 (DW_TAG_variable)
    <e3e>   DW_AT_name        : (indirect string, offset: 0x48f): second_counter
    <e42>   DW_AT_decl_file   : 1
    <e43>   DW_AT_decl_line   : 35
    <e44>   DW_AT_decl_column : 14
    <e45>   DW_AT_type        : <0xe5d>
    <e49>   DW_AT_location    : 5 byte block: 3 9e 8 0 20 	(DW_OP_addr: 2000089e)
 <2><e4f>: Abbrev Number: 15 (DW_TAG_variable)
    <e50>   DW_AT_name        : (indirect string, offset: 0x50a): sonic_sensor_action_div
    <e54>   DW_AT_decl_file   : 1
    <e55>   DW_AT_decl_line   : 36
    <e56>   DW_AT_decl_column : 14
    <e57>   DW_AT_type        : <0xe5d>
    <e5b>   DW_AT_const_value : 0
 <2><e5c>: Abbrev Number: 0
 <1><e5d>: Abbrev Number: 1 (DW_TAG_base_type)
    <e5e>   DW_AT_byte_size   : 1
    <e5f>   DW_AT_encoding    : 8	(unsigned char)
    <e60>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><e64>: Abbrev Number: 16 (DW_TAG_subprogram)
    <e65>   DW_AT_external    : 1
    <e65>   DW_AT_name        : (indirect string, offset: 0x470): configureDebounceTimer
    <e69>   DW_AT_decl_file   : 1
    <e6a>   DW_AT_decl_line   : 16
    <e6b>   DW_AT_decl_column : 6
    <e6c>   DW_AT_prototyped  : 1
    <e6c>   DW_AT_low_pc      : 0x8b4
    <e70>   DW_AT_high_pc     : 0x7c
    <e74>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <e76>   DW_AT_call_all_tail_calls: 1
 <1><e76>: Abbrev Number: 0
  Compilation Unit @ offset 0xe77:
   Length:        0x531 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x506
   Pointer Size:  4
 <0><e83>: Abbrev Number: 20 (DW_TAG_compile_unit)
    <e84>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <e88>   DW_AT_language    : 29	(C11)
    <e89>   DW_AT_name        : (indirect string, offset: 0x55b): src/uart_print.c
    <e8d>   DW_AT_comp_dir    : (indirect string, offset: 0x321): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <e91>   DW_AT_ranges      : 0x13f
    <e95>   DW_AT_low_pc      : 0
    <e99>   DW_AT_stmt_list   : 0xb30
 <1><e9d>: Abbrev Number: 2 (DW_TAG_base_type)
    <e9e>   DW_AT_byte_size   : 4
    <e9f>   DW_AT_encoding    : 4	(float)
    <ea0>   DW_AT_name        : (indirect string, offset: 0x58e): float
 <1><ea4>: Abbrev Number: 2 (DW_TAG_base_type)
    <ea5>   DW_AT_byte_size   : 8
    <ea6>   DW_AT_encoding    : 7	(unsigned)
    <ea7>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><eab>: Abbrev Number: 2 (DW_TAG_base_type)
    <eac>   DW_AT_byte_size   : 1
    <ead>   DW_AT_encoding    : 8	(unsigned char)
    <eae>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><eb2>: Abbrev Number: 5 (DW_TAG_typedef)
    <eb3>   DW_AT_name        : (indirect string, offset: 0x56c): __gnuc_va_list
    <eb7>   DW_AT_decl_file   : 2
    <eb8>   DW_AT_decl_line   : 40
    <eb9>   DW_AT_decl_column : 27
    <eba>   DW_AT_type        : <0xebe>
 <1><ebe>: Abbrev Number: 21 (DW_TAG_structure_type)
    <ebf>   DW_AT_name        : (indirect string, offset: 0x5d8): __va_list
    <ec3>   DW_AT_byte_size   : 4
    <ec4>   DW_AT_decl_file   : 5
    <ec5>   DW_AT_decl_line   : 0
    <ec6>   DW_AT_sibling     : <0xed5>
 <2><eca>: Abbrev Number: 22 (DW_TAG_member)
    <ecb>   DW_AT_name        : (indirect string, offset: 0x5c0): __ap
    <ecf>   DW_AT_type        : <0xed5>
    <ed3>   DW_AT_data_member_location: 0
    <ed4>   DW_AT_artificial  : 1
 <2><ed4>: Abbrev Number: 0
 <1><ed5>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <ed6>   DW_AT_byte_size   : 4
 <1><ed7>: Abbrev Number: 5 (DW_TAG_typedef)
    <ed8>   DW_AT_name        : (indirect string, offset: 0x5da): va_list
    <edc>   DW_AT_decl_file   : 2
    <edd>   DW_AT_decl_line   : 103
    <ede>   DW_AT_decl_column : 24
    <edf>   DW_AT_type        : <0xeb2>
 <1><ee3>: Abbrev Number: 2 (DW_TAG_base_type)
    <ee4>   DW_AT_byte_size   : 1
    <ee5>   DW_AT_encoding    : 6	(signed char)
    <ee6>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><eea>: Abbrev Number: 2 (DW_TAG_base_type)
    <eeb>   DW_AT_byte_size   : 2
    <eec>   DW_AT_encoding    : 5	(signed)
    <eed>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><ef1>: Abbrev Number: 2 (DW_TAG_base_type)
    <ef2>   DW_AT_byte_size   : 2
    <ef3>   DW_AT_encoding    : 7	(unsigned)
    <ef4>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><ef8>: Abbrev Number: 5 (DW_TAG_typedef)
    <ef9>   DW_AT_name        : (indirect string, offset: 0x2d7): __int32_t
    <efd>   DW_AT_decl_file   : 3
    <efe>   DW_AT_decl_line   : 77
    <eff>   DW_AT_decl_column : 24
    <f00>   DW_AT_type        : <0xf04>
 <1><f04>: Abbrev Number: 2 (DW_TAG_base_type)
    <f05>   DW_AT_byte_size   : 4
    <f06>   DW_AT_encoding    : 5	(signed)
    <f07>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><f0b>: Abbrev Number: 5 (DW_TAG_typedef)
    <f0c>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <f10>   DW_AT_decl_file   : 3
    <f11>   DW_AT_decl_line   : 79
    <f12>   DW_AT_decl_column : 25
    <f13>   DW_AT_type        : <0xf17>
 <1><f17>: Abbrev Number: 2 (DW_TAG_base_type)
    <f18>   DW_AT_byte_size   : 4
    <f19>   DW_AT_encoding    : 7	(unsigned)
    <f1a>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><f1e>: Abbrev Number: 2 (DW_TAG_base_type)
    <f1f>   DW_AT_byte_size   : 8
    <f20>   DW_AT_encoding    : 5	(signed)
    <f21>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><f25>: Abbrev Number: 24 (DW_TAG_base_type)
    <f26>   DW_AT_byte_size   : 4
    <f27>   DW_AT_encoding    : 5	(signed)
    <f28>   DW_AT_name        : int
 <1><f2c>: Abbrev Number: 2 (DW_TAG_base_type)
    <f2d>   DW_AT_byte_size   : 4
    <f2e>   DW_AT_encoding    : 7	(unsigned)
    <f2f>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><f33>: Abbrev Number: 5 (DW_TAG_typedef)
    <f34>   DW_AT_name        : (indirect string, offset: 0x2d9): int32_t
    <f38>   DW_AT_decl_file   : 4
    <f39>   DW_AT_decl_line   : 44
    <f3a>   DW_AT_decl_column : 19
    <f3b>   DW_AT_type        : <0xef8>
 <1><f3f>: Abbrev Number: 5 (DW_TAG_typedef)
    <f40>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <f44>   DW_AT_decl_file   : 4
    <f45>   DW_AT_decl_line   : 48
    <f46>   DW_AT_decl_column : 20
    <f47>   DW_AT_type        : <0xf0b>
 <1><f4b>: Abbrev Number: 6 (DW_TAG_subprogram)
    <f4c>   DW_AT_external    : 1
    <f4c>   DW_AT_name        : (indirect string, offset: 0x487): printlf
    <f50>   DW_AT_decl_file   : 1
    <f50>   DW_AT_decl_line   : 117
    <f51>   DW_AT_decl_column : 6
    <f51>   DW_AT_prototyped  : 1
    <f51>   DW_AT_low_pc      : 0xbf4
    <f55>   DW_AT_high_pc     : 0xea
    <f59>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <f5b>   DW_AT_call_all_calls: 1
    <f5b>   DW_AT_sibling     : <0x1026>
 <2><f5f>: Abbrev Number: 25 (DW_TAG_formal_parameter)
    <f60>   DW_AT_name        : (indirect string, offset: 0x594): format
    <f64>   DW_AT_decl_file   : 1
    <f65>   DW_AT_decl_line   : 117
    <f66>   DW_AT_decl_column : 19
    <f67>   DW_AT_type        : <0x1026>
    <f6b>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><f6e>: Abbrev Number: 26 (DW_TAG_unspecified_parameters)
 <2><f6f>: Abbrev Number: 11 (DW_TAG_variable)
    <f70>   DW_AT_name        : (indirect string, offset: 0x5e2): args
    <f74>   DW_AT_decl_file   : 1
    <f74>   DW_AT_decl_line   : 118
    <f75>   DW_AT_decl_column : 10
    <f76>   DW_AT_type        : <0xed7>
    <f7a>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><f7d>: Abbrev Number: 14 (DW_TAG_variable)
    <f7e>   DW_AT_name        : str
    <f82>   DW_AT_decl_file   : 1
    <f82>   DW_AT_decl_line   : 121
    <f83>   DW_AT_decl_column : 8
    <f84>   DW_AT_type        : <0x1026>
 <2><f88>: Abbrev Number: 14 (DW_TAG_variable)
    <f89>   DW_AT_name        : num
    <f8d>   DW_AT_decl_file   : 1
    <f8d>   DW_AT_decl_line   : 122
    <f8e>   DW_AT_decl_column : 10
    <f8f>   DW_AT_type        : <0xf33>
 <2><f93>: Abbrev Number: 27 (DW_TAG_variable)
    <f94>   DW_AT_name        : (indirect string, offset: 0x57b): numu
    <f98>   DW_AT_decl_file   : 1
    <f99>   DW_AT_decl_line   : 123
    <f9a>   DW_AT_decl_column : 11
    <f9b>   DW_AT_type        : <0xf3f>
 <2><f9f>: Abbrev Number: 11 (DW_TAG_variable)
    <fa0>   DW_AT_name        : (indirect string, offset: 0x5d3): numf
    <fa4>   DW_AT_decl_file   : 1
    <fa4>   DW_AT_decl_line   : 124
    <fa5>   DW_AT_decl_column : 9
    <fa6>   DW_AT_type        : <0x1037>
    <faa>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
 <2><fac>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <fad>   DW_AT_low_pc      : 0xc02
    <fb1>   DW_AT_high_pc     : 0xd2
 <3><fb5>: Abbrev Number: 8 (DW_TAG_variable)
    <fb6>   DW_AT_name        : i
    <fb8>   DW_AT_decl_file   : 1
    <fb8>   DW_AT_decl_line   : 126
    <fb9>   DW_AT_decl_column : 10
    <fba>   DW_AT_type        : <0xf25>
    <fbe>   DW_AT_location    : 0x4bb (location list)
    <fc2>   DW_AT_GNU_locviews: 0x4ad
 <3><fc6>: Abbrev Number: 3 (DW_TAG_call_site)
    <fc7>   DW_AT_call_return_pc: 0xc12
    <fcb>   DW_AT_call_origin : <0x119c>
 <3><fcf>: Abbrev Number: 3 (DW_TAG_call_site)
    <fd0>   DW_AT_call_return_pc: 0xc22
    <fd4>   DW_AT_call_origin : <0x1150>
 <3><fd8>: Abbrev Number: 4 (DW_TAG_call_site)
    <fd9>   DW_AT_call_return_pc: 0xc2c
    <fdd>   DW_AT_call_origin : <0x1261>
    <fe1>   DW_AT_sibling     : <0xfec>
 <4><fe5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <fe6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <fe8>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><feb>: Abbrev Number: 0
 <3><fec>: Abbrev Number: 3 (DW_TAG_call_site)
    <fed>   DW_AT_call_return_pc: 0xc3a
    <ff1>   DW_AT_call_origin : <0x120b>
 <3><ff5>: Abbrev Number: 3 (DW_TAG_call_site)
    <ff6>   DW_AT_call_return_pc: 0xc4e
    <ffa>   DW_AT_call_origin : <0x103c>
 <3><ffe>: Abbrev Number: 4 (DW_TAG_call_site)
    <fff>   DW_AT_call_return_pc: 0xc58
    <1003>   DW_AT_call_origin : <0x1261>
    <1007>   DW_AT_sibling     : <0x1012>
 <4><100b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <100c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <100e>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><1011>: Abbrev Number: 0
 <3><1012>: Abbrev Number: 3 (DW_TAG_call_site)
    <1013>   DW_AT_call_return_pc: 0xc5e
    <1017>   DW_AT_call_origin : <0x1261>
 <3><101b>: Abbrev Number: 3 (DW_TAG_call_site)
    <101c>   DW_AT_call_return_pc: 0xc66
    <1020>   DW_AT_call_origin : <0x1261>
 <3><1024>: Abbrev Number: 0
 <2><1025>: Abbrev Number: 0
 <1><1026>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <1027>   DW_AT_byte_size   : 4
    <1027>   DW_AT_type        : <0x102b>
 <1><102b>: Abbrev Number: 2 (DW_TAG_base_type)
    <102c>   DW_AT_byte_size   : 1
    <102d>   DW_AT_encoding    : 8	(unsigned char)
    <102e>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><1032>: Abbrev Number: 16 (DW_TAG_const_type)
    <1033>   DW_AT_type        : <0x102b>
 <1><1037>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <1038>   DW_AT_byte_size   : 4
    <1038>   DW_AT_type        : <0xe9d>
 <1><103c>: Abbrev Number: 6 (DW_TAG_subprogram)
    <103d>   DW_AT_external    : 1
    <103d>   DW_AT_name        : (indirect string, offset: 0x588): print_float
    <1041>   DW_AT_decl_file   : 1
    <1041>   DW_AT_decl_line   : 74
    <1042>   DW_AT_decl_column : 6
    <1042>   DW_AT_prototyped  : 1
    <1042>   DW_AT_low_pc      : 0xad4
    <1046>   DW_AT_high_pc     : 0x120
    <104a>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <104c>   DW_AT_call_all_calls: 1
    <104c>   DW_AT_sibling     : <0x1140>
 <2><1050>: Abbrev Number: 28 (DW_TAG_formal_parameter)
    <1051>   DW_AT_name        : (indirect string, offset: 0x5cc): number
    <1055>   DW_AT_decl_file   : 1
    <1056>   DW_AT_decl_line   : 74
    <1057>   DW_AT_decl_column : 24
    <1058>   DW_AT_type        : <0xe9d>
    <105c>   DW_AT_location    : 0x4fc (location list)
    <1060>   DW_AT_GNU_locviews: 0x4e8
 <2><1064>: Abbrev Number: 17 (DW_TAG_variable)
    <1065>   DW_AT_name        : buf
    <1069>   DW_AT_decl_file   : 1
    <1069>   DW_AT_decl_line   : 91
    <106a>   DW_AT_decl_column : 7
    <106a>   DW_AT_type        : <0x1140>
    <106e>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><1071>: Abbrev Number: 9 (DW_TAG_variable)
    <1072>   DW_AT_name        : (indirect string, offset: 0x522): integerPart
    <1076>   DW_AT_decl_file   : 1
    <1076>   DW_AT_decl_line   : 98
    <1077>   DW_AT_decl_column : 11
    <1078>   DW_AT_type        : <0xf3f>
    <107c>   DW_AT_location    : 0x564 (location list)
    <1080>   DW_AT_GNU_locviews: 0x560
 <2><1084>: Abbrev Number: 9 (DW_TAG_variable)
    <1085>   DW_AT_name        : (indirect string, offset: 0x54f): decimalPart
    <1089>   DW_AT_decl_file   : 1
    <1089>   DW_AT_decl_line   : 99
    <108a>   DW_AT_decl_column : 11
    <108b>   DW_AT_type        : <0xf3f>
    <108f>   DW_AT_location    : 0x57d (location list)
    <1093>   DW_AT_GNU_locviews: 0x577
 <2><1097>: Abbrev Number: 9 (DW_TAG_variable)
    <1098>   DW_AT_name        : (indirect string, offset: 0x5c5): places
    <109c>   DW_AT_decl_file   : 1
    <109c>   DW_AT_decl_line   : 101
    <109d>   DW_AT_decl_column : 6
    <109e>   DW_AT_type        : <0xf25>
    <10a2>   DW_AT_location    : 0x5a0 (location list)
    <10a6>   DW_AT_GNU_locviews: 0x592
 <2><10aa>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <10ab>   DW_AT_ranges      : 0x130
    <10af>   DW_AT_sibling     : <0x10c5>
 <3><10b3>: Abbrev Number: 8 (DW_TAG_variable)
    <10b4>   DW_AT_name        : i
    <10b6>   DW_AT_decl_file   : 1
    <10b6>   DW_AT_decl_line   : 103
    <10b7>   DW_AT_decl_column : 10
    <10b8>   DW_AT_type        : <0xf25>
    <10bc>   DW_AT_location    : 0x5d5 (location list)
    <10c0>   DW_AT_GNU_locviews: 0x5d1
 <3><10c4>: Abbrev Number: 0
 <2><10c5>: Abbrev Number: 4 (DW_TAG_call_site)
    <10c6>   DW_AT_call_return_pc: 0xb5c
    <10ca>   DW_AT_call_origin : <0x120b>
    <10ce>   DW_AT_sibling     : <0x10dc>
 <3><10d2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10d3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10d5>   DW_AT_call_value  : 5 byte block: 3 4c d 0 0 	(DW_OP_addr: d4c)
 <3><10db>: Abbrev Number: 0
 <2><10dc>: Abbrev Number: 4 (DW_TAG_call_site)
    <10dd>   DW_AT_call_return_pc: 0xb64
    <10e1>   DW_AT_call_origin : <0x120b>
    <10e5>   DW_AT_sibling     : <0x10f3>
 <3><10e9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10ea>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10ec>   DW_AT_call_value  : 5 byte block: 3 50 d 0 0 	(DW_OP_addr: d50)
 <3><10f2>: Abbrev Number: 0
 <2><10f3>: Abbrev Number: 4 (DW_TAG_call_site)
    <10f4>   DW_AT_call_return_pc: 0xb72
    <10f8>   DW_AT_call_origin : <0x120b>
    <10fc>   DW_AT_sibling     : <0x110a>
 <3><1100>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1101>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1103>   DW_AT_call_value  : 5 byte block: 3 54 d 0 0 	(DW_OP_addr: d54)
 <3><1109>: Abbrev Number: 0
 <2><110a>: Abbrev Number: 4 (DW_TAG_call_site)
    <110b>   DW_AT_call_return_pc: 0xb7a
    <110f>   DW_AT_call_origin : <0x1261>
    <1113>   DW_AT_sibling     : <0x111e>
 <3><1117>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1118>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <111a>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><111d>: Abbrev Number: 0
 <2><111e>: Abbrev Number: 3 (DW_TAG_call_site)
    <111f>   DW_AT_call_return_pc: 0xbc0
    <1123>   DW_AT_call_origin : <0x119c>
 <2><1127>: Abbrev Number: 13 (DW_TAG_call_site)
    <1128>   DW_AT_call_return_pc: 0xbd2
    <112c>   DW_AT_call_origin : <0x1261>
 <3><1130>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1131>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1133>   DW_AT_call_value  : 10 byte block: 91 0 74 0 22 8 20 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_const1u: 32; DW_OP_minus; DW_OP_deref_size: 1)
 <3><113e>: Abbrev Number: 0
 <2><113f>: Abbrev Number: 0
 <1><1140>: Abbrev Number: 18 (DW_TAG_array_type)
    <1141>   DW_AT_type        : <0x102b>
    <1145>   DW_AT_sibling     : <0x1150>
 <2><1149>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <114a>   DW_AT_type        : <0xf2c>
    <114e>   DW_AT_upper_bound : 14
 <2><114f>: Abbrev Number: 0
 <1><1150>: Abbrev Number: 6 (DW_TAG_subprogram)
    <1151>   DW_AT_external    : 1
    <1151>   DW_AT_name        : (indirect string, offset: 0x5b2): print_decimal
    <1155>   DW_AT_decl_file   : 1
    <1155>   DW_AT_decl_line   : 64
    <1156>   DW_AT_decl_column : 6
    <1156>   DW_AT_prototyped  : 1
    <1156>   DW_AT_low_pc      : 0xabc
    <115a>   DW_AT_high_pc     : 0x18
    <115e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1160>   DW_AT_call_all_calls: 1
    <1160>   DW_AT_sibling     : <0x119c>
 <2><1164>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <1165>   DW_AT_name        : num
    <1169>   DW_AT_decl_file   : 1
    <1169>   DW_AT_decl_line   : 64
    <116a>   DW_AT_decl_column : 28
    <116b>   DW_AT_type        : <0xf33>
    <116f>   DW_AT_location    : 0x5ee (location list)
    <1173>   DW_AT_GNU_locviews: 0x5e6
 <2><1177>: Abbrev Number: 4 (DW_TAG_call_site)
    <1178>   DW_AT_call_return_pc: 0xac8
    <117c>   DW_AT_call_origin : <0x119c>
    <1180>   DW_AT_sibling     : <0x118b>
 <3><1184>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1185>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1187>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><118a>: Abbrev Number: 0
 <2><118b>: Abbrev Number: 13 (DW_TAG_call_site)
    <118c>   DW_AT_call_return_pc: 0xad0
    <1190>   DW_AT_call_origin : <0x1261>
 <3><1194>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1195>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1197>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><119a>: Abbrev Number: 0
 <2><119b>: Abbrev Number: 0
 <1><119c>: Abbrev Number: 6 (DW_TAG_subprogram)
    <119d>   DW_AT_external    : 1
    <119d>   DW_AT_name        : (indirect string, offset: 0x59b): print_unsigned_decimal
    <11a1>   DW_AT_decl_file   : 1
    <11a1>   DW_AT_decl_line   : 48
    <11a2>   DW_AT_decl_column : 6
    <11a2>   DW_AT_prototyped  : 1
    <11a2>   DW_AT_low_pc      : 0xa70
    <11a6>   DW_AT_high_pc     : 0x4c
    <11aa>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <11ac>   DW_AT_call_all_calls: 1
    <11ac>   DW_AT_sibling     : <0x11fb>
 <2><11b0>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <11b1>   DW_AT_name        : num
    <11b5>   DW_AT_decl_file   : 1
    <11b5>   DW_AT_decl_line   : 48
    <11b6>   DW_AT_decl_column : 38
    <11b7>   DW_AT_type        : <0xf3f>
    <11bb>   DW_AT_location    : 0x60c (location list)
    <11bf>   DW_AT_GNU_locviews: 0x608
 <2><11c3>: Abbrev Number: 17 (DW_TAG_variable)
    <11c4>   DW_AT_name        : buf
    <11c8>   DW_AT_decl_file   : 1
    <11c8>   DW_AT_decl_line   : 50
    <11c9>   DW_AT_decl_column : 7
    <11c9>   DW_AT_type        : <0x11fb>
    <11cd>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><11d0>: Abbrev Number: 9 (DW_TAG_variable)
    <11d1>   DW_AT_name        : (indirect string, offset: 0x5c5): places
    <11d5>   DW_AT_decl_file   : 1
    <11d5>   DW_AT_decl_line   : 52
    <11d6>   DW_AT_decl_column : 6
    <11d7>   DW_AT_type        : <0xf25>
    <11db>   DW_AT_location    : 0x628 (location list)
    <11df>   DW_AT_GNU_locviews: 0x61c
 <2><11e3>: Abbrev Number: 13 (DW_TAG_call_site)
    <11e4>   DW_AT_call_return_pc: 0xab0
    <11e8>   DW_AT_call_origin : <0x1261>
 <3><11ec>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11ed>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <11ef>   DW_AT_call_value  : 9 byte block: 91 0 74 0 22 44 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_lit20; DW_OP_minus; DW_OP_deref_size: 1)
 <3><11f9>: Abbrev Number: 0
 <2><11fa>: Abbrev Number: 0
 <1><11fb>: Abbrev Number: 18 (DW_TAG_array_type)
    <11fc>   DW_AT_type        : <0x102b>
    <1200>   DW_AT_sibling     : <0x120b>
 <2><1204>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <1205>   DW_AT_type        : <0xf2c>
    <1209>   DW_AT_upper_bound : 10
 <2><120a>: Abbrev Number: 0
 <1><120b>: Abbrev Number: 6 (DW_TAG_subprogram)
    <120c>   DW_AT_external    : 1
    <120c>   DW_AT_name        : (indirect string, offset: 0x52e): print_string
    <1210>   DW_AT_decl_file   : 1
    <1210>   DW_AT_decl_line   : 42
    <1211>   DW_AT_decl_column : 6
    <1211>   DW_AT_prototyped  : 1
    <1211>   DW_AT_low_pc      : 0xa58
    <1215>   DW_AT_high_pc     : 0x16
    <1219>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <121b>   DW_AT_call_all_calls: 1
    <121b>   DW_AT_sibling     : <0x1257>
 <2><121f>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <1220>   DW_AT_name        : str
    <1224>   DW_AT_decl_file   : 1
    <1224>   DW_AT_decl_line   : 42
    <1225>   DW_AT_decl_column : 38
    <1226>   DW_AT_type        : <0x125c>
    <122a>   DW_AT_location    : 0x655 (location list)
    <122e>   DW_AT_GNU_locviews: 0x651
 <2><1232>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <1233>   DW_AT_low_pc      : 0xa5c
    <1237>   DW_AT_high_pc     : 0x10
 <3><123b>: Abbrev Number: 8 (DW_TAG_variable)
    <123c>   DW_AT_name        : i
    <123e>   DW_AT_decl_file   : 1
    <123e>   DW_AT_decl_line   : 43
    <123f>   DW_AT_decl_column : 10
    <1240>   DW_AT_type        : <0xf25>
    <1244>   DW_AT_location    : 0x669 (location list)
    <1248>   DW_AT_GNU_locviews: 0x665
 <3><124c>: Abbrev Number: 3 (DW_TAG_call_site)
    <124d>   DW_AT_call_return_pc: 0xa64
    <1251>   DW_AT_call_origin : <0x1261>
 <3><1255>: Abbrev Number: 0
 <2><1256>: Abbrev Number: 0
 <1><1257>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <1258>   DW_AT_byte_size   : 4
    <1258>   DW_AT_type        : <0x1032>
 <1><125c>: Abbrev Number: 16 (DW_TAG_const_type)
    <125d>   DW_AT_type        : <0x1257>
 <1><1261>: Abbrev Number: 6 (DW_TAG_subprogram)
    <1262>   DW_AT_external    : 1
    <1262>   DW_AT_name        : (indirect string, offset: 0x580): putchar
    <1266>   DW_AT_decl_file   : 1
    <1266>   DW_AT_decl_line   : 27
    <1267>   DW_AT_decl_column : 6
    <1267>   DW_AT_prototyped  : 1
    <1267>   DW_AT_low_pc      : 0xa10
    <126b>   DW_AT_high_pc     : 0x48
    <126f>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1271>   DW_AT_call_all_calls: 1
    <1271>   DW_AT_sibling     : <0x12e6>
 <2><1275>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <1276>   DW_AT_name        : c
    <1278>   DW_AT_decl_file   : 1
    <1278>   DW_AT_decl_line   : 27
    <1279>   DW_AT_decl_column : 19
    <127a>   DW_AT_type        : <0x102b>
    <127e>   DW_AT_location    : 0x680 (location list)
    <1282>   DW_AT_GNU_locviews: 0x67a
 <2><1286>: Abbrev Number: 11 (DW_TAG_variable)
    <1287>   DW_AT_name        : (indirect string, offset: 0x53b): chars_sent_recently
    <128b>   DW_AT_decl_file   : 1
    <128b>   DW_AT_decl_line   : 28
    <128c>   DW_AT_decl_column : 13
    <128d>   DW_AT_type        : <0xf25>
    <1291>   DW_AT_location    : 5 byte block: 3 ac 8 0 20 	(DW_OP_addr: 200008ac)
 <2><1297>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <1298>   DW_AT_low_pc      : 0xa40
    <129c>   DW_AT_high_pc     : 0xc
    <12a0>   DW_AT_sibling     : <0x12b6>
 <3><12a4>: Abbrev Number: 8 (DW_TAG_variable)
    <12a5>   DW_AT_name        : i
    <12a7>   DW_AT_decl_file   : 1
    <12a7>   DW_AT_decl_line   : 36
    <12a8>   DW_AT_decl_column : 11
    <12a9>   DW_AT_type        : <0xf25>
    <12ad>   DW_AT_location    : 0x6a2 (location list)
    <12b1>   DW_AT_GNU_locviews: 0x69e
 <3><12b5>: Abbrev Number: 0
 <2><12b6>: Abbrev Number: 7 (DW_TAG_call_site)
    <12b7>   DW_AT_call_return_pc: 0xa20
    <12bb>   DW_AT_sibling     : <0x12d6>
 <3><12bf>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12c0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <12c2>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><12c8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12c9>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <12cb>   DW_AT_call_value  : 9 byte block: a3 3 a5 0 2d a8 34 a8 0 	(DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xea4>); DW_OP_convert <0xeab>; DW_OP_convert <0>)
 <3><12d5>: Abbrev Number: 0
 <2><12d6>: Abbrev Number: 31 (DW_TAG_call_site)
    <12d7>   DW_AT_call_return_pc: 0xa2c
 <3><12db>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12dc>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <12de>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><12e4>: Abbrev Number: 0
 <2><12e5>: Abbrev Number: 0
 <1><12e6>: Abbrev Number: 32 (DW_TAG_subprogram)
    <12e7>   DW_AT_external    : 1
    <12e7>   DW_AT_name        : (indirect string, offset: 0x406): setup_uart_printer
    <12eb>   DW_AT_decl_file   : 1
    <12ec>   DW_AT_decl_line   : 15
    <12ed>   DW_AT_decl_column : 6
    <12ee>   DW_AT_prototyped  : 1
    <12ee>   DW_AT_low_pc      : 0x994
    <12f2>   DW_AT_high_pc     : 0x7c
    <12f6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <12f8>   DW_AT_call_all_tail_calls: 1
 <2><12f8>: Abbrev Number: 7 (DW_TAG_call_site)
    <12f9>   DW_AT_call_return_pc: 0x9a2
    <12fd>   DW_AT_sibling     : <0x130c>
 <3><1301>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1302>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1304>   DW_AT_call_value  : 6 byte block: 11 80 90 80 80 7f 	(DW_OP_consts: -268433408)
 <3><130b>: Abbrev Number: 0
 <2><130c>: Abbrev Number: 7 (DW_TAG_call_site)
    <130d>   DW_AT_call_return_pc: 0x9aa
    <1311>   DW_AT_sibling     : <0x1320>
 <3><1315>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1316>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1318>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><131f>: Abbrev Number: 0
 <2><1320>: Abbrev Number: 7 (DW_TAG_call_site)
    <1321>   DW_AT_call_return_pc: 0x9b8
    <1325>   DW_AT_sibling     : <0x1334>
 <3><1329>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <132a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <132c>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><1333>: Abbrev Number: 0
 <2><1334>: Abbrev Number: 33 (DW_TAG_call_site)
    <1335>   DW_AT_call_return_pc: 0x9d0
    <1339>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
    <133c>   DW_AT_sibling     : <0x135a>
 <3><1340>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1341>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1343>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><1349>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <134a>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <134c>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><134e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <134f>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <1351>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><1354>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1355>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <1357>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><1359>: Abbrev Number: 0
 <2><135a>: Abbrev Number: 7 (DW_TAG_call_site)
    <135b>   DW_AT_call_return_pc: 0x9de
    <135f>   DW_AT_sibling     : <0x1377>
 <3><1363>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1364>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1366>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><136c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <136d>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <136f>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><1371>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1372>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <1374>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><1376>: Abbrev Number: 0
 <2><1377>: Abbrev Number: 7 (DW_TAG_call_site)
    <1378>   DW_AT_call_return_pc: 0x9ea
    <137c>   DW_AT_sibling     : <0x138c>
 <3><1380>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1381>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1383>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><1386>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1387>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <1389>   DW_AT_call_value  : 1 byte block: 30 	(DW_OP_lit0)
 <3><138b>: Abbrev Number: 0
 <2><138c>: Abbrev Number: 34 (DW_TAG_call_site)
    <138d>   DW_AT_call_return_pc: 0x9fe
    <1391>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <3><1394>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1395>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1397>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><139a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <139b>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <139d>   DW_AT_call_value  : 5 byte block: c 0 9 3d 0 	(DW_OP_const4u: 4000000)
 <3><13a3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <13a4>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <13a6>   DW_AT_call_value  : 2 byte block: 8 68 	(DW_OP_const1u: 104)
 <3><13a9>: Abbrev Number: 0
 <2><13aa>: Abbrev Number: 0
 <1><13ab>: Abbrev Number: 0
  Compilation Unit @ offset 0x13ac:
   Length:        0x193 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x6d1
   Pointer Size:  4
 <0><13b8>: Abbrev Number: 10 (DW_TAG_compile_unit)
    <13b9>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <13bd>   DW_AT_language    : 29	(C11)
    <13be>   DW_AT_name        : (indirect string, offset: 0x61e): sys/startup_gcc.c
    <13c2>   DW_AT_comp_dir    : (indirect string, offset: 0x321): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <13c6>   DW_AT_ranges      : 0x178
    <13ca>   DW_AT_low_pc      : 0
    <13ce>   DW_AT_stmt_list   : 0xf55
 <1><13d2>: Abbrev Number: 1 (DW_TAG_base_type)
    <13d3>   DW_AT_byte_size   : 1
    <13d4>   DW_AT_encoding    : 6	(signed char)
    <13d5>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><13d9>: Abbrev Number: 1 (DW_TAG_base_type)
    <13da>   DW_AT_byte_size   : 1
    <13db>   DW_AT_encoding    : 8	(unsigned char)
    <13dc>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><13e0>: Abbrev Number: 1 (DW_TAG_base_type)
    <13e1>   DW_AT_byte_size   : 2
    <13e2>   DW_AT_encoding    : 5	(signed)
    <13e3>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><13e7>: Abbrev Number: 1 (DW_TAG_base_type)
    <13e8>   DW_AT_byte_size   : 2
    <13e9>   DW_AT_encoding    : 7	(unsigned)
    <13ea>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><13ee>: Abbrev Number: 1 (DW_TAG_base_type)
    <13ef>   DW_AT_byte_size   : 4
    <13f0>   DW_AT_encoding    : 5	(signed)
    <13f1>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><13f5>: Abbrev Number: 4 (DW_TAG_typedef)
    <13f6>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <13fa>   DW_AT_decl_file   : 2
    <13fb>   DW_AT_decl_line   : 79
    <13fc>   DW_AT_decl_column : 25
    <13fd>   DW_AT_type        : <0x1401>
 <1><1401>: Abbrev Number: 1 (DW_TAG_base_type)
    <1402>   DW_AT_byte_size   : 4
    <1403>   DW_AT_encoding    : 7	(unsigned)
    <1404>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><1408>: Abbrev Number: 1 (DW_TAG_base_type)
    <1409>   DW_AT_byte_size   : 8
    <140a>   DW_AT_encoding    : 5	(signed)
    <140b>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><140f>: Abbrev Number: 1 (DW_TAG_base_type)
    <1410>   DW_AT_byte_size   : 8
    <1411>   DW_AT_encoding    : 7	(unsigned)
    <1412>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><1416>: Abbrev Number: 11 (DW_TAG_base_type)
    <1417>   DW_AT_byte_size   : 4
    <1418>   DW_AT_encoding    : 5	(signed)
    <1419>   DW_AT_name        : int
 <1><141d>: Abbrev Number: 1 (DW_TAG_base_type)
    <141e>   DW_AT_byte_size   : 4
    <141f>   DW_AT_encoding    : 7	(unsigned)
    <1420>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><1424>: Abbrev Number: 4 (DW_TAG_typedef)
    <1425>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <1429>   DW_AT_decl_file   : 3
    <142a>   DW_AT_decl_line   : 48
    <142b>   DW_AT_decl_column : 20
    <142c>   DW_AT_type        : <0x13f5>
 <1><1430>: Abbrev Number: 1 (DW_TAG_base_type)
    <1431>   DW_AT_byte_size   : 8
    <1432>   DW_AT_encoding    : 4	(float)
    <1433>   DW_AT_name        : (indirect string, offset: 0x257): long double
 <1><1437>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <1438>   DW_AT_byte_size   : 4
    <1438>   DW_AT_type        : <0x1441>
 <1><143c>: Abbrev Number: 6 (DW_TAG_const_type)
    <143d>   DW_AT_type        : <0x1437>
 <1><1441>: Abbrev Number: 12 (DW_TAG_subroutine_type)
    <1442>   DW_AT_prototyped  : 1
 <1><1442>: Abbrev Number: 1 (DW_TAG_base_type)
    <1443>   DW_AT_byte_size   : 1
    <1444>   DW_AT_encoding    : 8	(unsigned char)
    <1445>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><1449>: Abbrev Number: 7 (DW_TAG_array_type)
    <144a>   DW_AT_type        : <0x1401>
    <144e>   DW_AT_sibling     : <0x1459>
 <2><1452>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <1453>   DW_AT_type        : <0x141d>
    <1457>   DW_AT_upper_bound : 63
 <2><1458>: Abbrev Number: 0
 <1><1459>: Abbrev Number: 13 (DW_TAG_variable)
    <145a>   DW_AT_name        : (indirect string, offset: 0x5ed): pulStack
    <145e>   DW_AT_decl_file   : 1
    <145f>   DW_AT_decl_line   : 33
    <1460>   DW_AT_decl_column : 22
    <1461>   DW_AT_type        : <0x1449>
    <1465>   DW_AT_location    : 5 byte block: 3 b0 8 0 20 	(DW_OP_addr: 200008b0)
 <1><146b>: Abbrev Number: 7 (DW_TAG_array_type)
    <146c>   DW_AT_type        : <0x143c>
    <1470>   DW_AT_sibling     : <0x147b>
 <2><1474>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <1475>   DW_AT_type        : <0x141d>
    <1479>   DW_AT_upper_bound : 154
 <2><147a>: Abbrev Number: 0
 <1><147b>: Abbrev Number: 6 (DW_TAG_const_type)
    <147c>   DW_AT_type        : <0x146b>
 <1><1480>: Abbrev Number: 14 (DW_TAG_variable)
    <1481>   DW_AT_name        : (indirect string, offset: 0x639): g_pfnVectors
    <1485>   DW_AT_decl_file   : 1
    <1486>   DW_AT_decl_line   : 42
    <1487>   DW_AT_decl_column : 15
    <1488>   DW_AT_type        : <0x147b>
    <148c>   DW_AT_external    : 1
    <148c>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <1><1492>: Abbrev Number: 2 (DW_TAG_variable)
    <1493>   DW_AT_name        : (indirect string, offset: 0x610): _etext
    <1497>   DW_AT_decl_file   : 1
    <1497>   DW_AT_decl_line   : 209
    <1498>   DW_AT_decl_column : 22
    <1498>   DW_AT_type        : <0x1401>
    <149c>   DW_AT_external    : 1
    <149c>   DW_AT_declaration : 1
 <1><149c>: Abbrev Number: 2 (DW_TAG_variable)
    <149d>   DW_AT_name        : (indirect string, offset: 0x5e7): _data
    <14a1>   DW_AT_decl_file   : 1
    <14a1>   DW_AT_decl_line   : 210
    <14a2>   DW_AT_decl_column : 22
    <14a2>   DW_AT_type        : <0x1401>
    <14a6>   DW_AT_external    : 1
    <14a6>   DW_AT_declaration : 1
 <1><14a6>: Abbrev Number: 2 (DW_TAG_variable)
    <14a7>   DW_AT_name        : (indirect string, offset: 0x617): _edata
    <14ab>   DW_AT_decl_file   : 1
    <14ab>   DW_AT_decl_line   : 211
    <14ac>   DW_AT_decl_column : 22
    <14ac>   DW_AT_type        : <0x1401>
    <14b0>   DW_AT_external    : 1
    <14b0>   DW_AT_declaration : 1
 <1><14b0>: Abbrev Number: 15 (DW_TAG_subprogram)
    <14b1>   DW_AT_external    : 1
    <14b1>   DW_AT_name        : (indirect string, offset: 0x448): main
    <14b5>   DW_AT_decl_file   : 1
    <14b6>   DW_AT_decl_line   : 26
    <14b7>   DW_AT_decl_column : 12
    <14b8>   DW_AT_prototyped  : 1
    <14b8>   DW_AT_type        : <0x1416>
    <14bc>   DW_AT_declaration : 1
 <1><14bc>: Abbrev Number: 16 (DW_TAG_subprogram)
    <14bd>   DW_AT_external    : 1
    <14bd>   DW_AT_name        : (indirect string, offset: 0x4de): timeKeeperISR
    <14c1>   DW_AT_decl_file   : 4
    <14c2>   DW_AT_decl_line   : 7
    <14c3>   DW_AT_decl_column : 6
    <14c4>   DW_AT_prototyped  : 1
    <14c4>   DW_AT_declaration : 1
 <1><14c4>: Abbrev Number: 3 (DW_TAG_subprogram)
    <14c5>   DW_AT_name        : (indirect string, offset: 0x5f6): IntDefaultHandler
    <14c9>   DW_AT_decl_file   : 1
    <14c9>   DW_AT_decl_line   : 304
    <14cb>   DW_AT_decl_column : 1
    <14cb>   DW_AT_prototyped  : 1
    <14cb>   DW_AT_low_pc      : 0xce4
    <14cf>   DW_AT_high_pc     : 0x2
    <14d3>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <14d5>   DW_AT_call_all_calls: 1
 <1><14d5>: Abbrev Number: 3 (DW_TAG_subprogram)
    <14d6>   DW_AT_name        : (indirect string, offset: 0x630): FaultISR
    <14da>   DW_AT_decl_file   : 1
    <14da>   DW_AT_decl_line   : 286
    <14dc>   DW_AT_decl_column : 1
    <14dc>   DW_AT_prototyped  : 1
    <14dc>   DW_AT_low_pc      : 0xce2
    <14e0>   DW_AT_high_pc     : 0x2
    <14e4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <14e6>   DW_AT_call_all_calls: 1
 <1><14e6>: Abbrev Number: 3 (DW_TAG_subprogram)
    <14e7>   DW_AT_name        : (indirect string, offset: 0x656): NmiSR
    <14eb>   DW_AT_decl_file   : 1
    <14eb>   DW_AT_decl_line   : 268
    <14ed>   DW_AT_decl_column : 1
    <14ed>   DW_AT_prototyped  : 1
    <14ed>   DW_AT_low_pc      : 0xce0
    <14f1>   DW_AT_high_pc     : 0x2
    <14f5>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <14f7>   DW_AT_call_all_calls: 1
 <1><14f7>: Abbrev Number: 17 (DW_TAG_subprogram)
    <14f8>   DW_AT_external    : 1
    <14f8>   DW_AT_name        : (indirect string, offset: 0x64d): ResetISR
    <14fc>   DW_AT_decl_file   : 1
    <14fd>   DW_AT_decl_line   : 226
    <14fe>   DW_AT_decl_column : 1
    <14ff>   DW_AT_prototyped  : 1
    <14ff>   DW_AT_low_pc      : 0xce8
    <1503>   DW_AT_high_pc     : 0x48
    <1507>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1509>   DW_AT_call_all_calls: 1
    <1509>   DW_AT_sibling     : <0x153d>
 <2><150d>: Abbrev Number: 9 (DW_TAG_variable)
    <150e>   DW_AT_name        : (indirect string, offset: 0x646): pulSrc
    <1512>   DW_AT_decl_file   : 1
    <1512>   DW_AT_decl_line   : 228
    <1513>   DW_AT_decl_column : 20
    <1514>   DW_AT_type        : <0x153d>
    <1518>   DW_AT_location    : 0x6c5 (location list)
    <151c>   DW_AT_GNU_locviews: 0x6bf
 <2><1520>: Abbrev Number: 9 (DW_TAG_variable)
    <1521>   DW_AT_name        : (indirect string, offset: 0x608): pulDest
    <1525>   DW_AT_decl_file   : 1
    <1525>   DW_AT_decl_line   : 228
    <1526>   DW_AT_decl_column : 29
    <1527>   DW_AT_type        : <0x153d>
    <152b>   DW_AT_location    : 0x6e2 (location list)
    <152f>   DW_AT_GNU_locviews: 0x6dc
 <2><1533>: Abbrev Number: 18 (DW_TAG_call_site)
    <1534>   DW_AT_call_return_pc: 0xd20
    <1538>   DW_AT_call_origin : <0x14b0>
 <2><153c>: Abbrev Number: 0
 <1><153d>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <153e>   DW_AT_byte_size   : 4
    <153e>   DW_AT_type        : <0x1401>
 <1><1542>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 5
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 10
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_subprogram    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_enumeration_type    [has children]
    DW_AT_encoding     DW_FORM_implicit_const: 7
    DW_AT_byte_size    DW_FORM_implicit_const: 1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 5
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   35      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   36      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_bit_size     DW_FORM_data1
    DW_AT_data_bit_offset DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   37      DW_TAG_union_type    [has children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   38      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   39      DW_TAG_label    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   40      DW_TAG_label    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   41      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   42      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   43      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   44      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   45      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   46      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x2be)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 17
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x3f2)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x506)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 7
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x6d1)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 22
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_implicit_const: 1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subroutine_type    [no children]
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_loclists section:

    Offset   Begin            End              Expression

    0000000c v0000000 v0000001 location view pair
    0000000e v0000000 v0000000 location view pair
    00000010 v0000000 v0000000 location view pair

    00000012 000005ac (base address)
    00000017 v0000000 v0000001 views at 0000000c for:
             000005ac 000005f2 (DW_OP_reg6 (r6))
    0000001c v0000000 v0000000 views at 0000000e for:
             00000612 0000066c (DW_OP_reg6 (r6))
    00000022 v0000000 v0000000 views at 00000010 for:
             0000066e 00000704 (DW_OP_reg6 (r6))
    00000029 <End of list>

    0000002a v0000000 v0000000 location view pair
    0000002c v0000000 v0000000 location view pair

    0000002e 0000068e (base address)
    00000033 v0000000 v0000000 views at 0000002a for:
             0000068e 000006a4 (DW_OP_reg3 (r3))
    00000038 v0000000 v0000000 views at 0000002c for:
             000006a4 000006d2 (DW_OP_reg4 (r4))
    0000003d <End of list>

    0000003e v0000000 v0000000 location view pair

    00000040 v0000000 v0000000 views at 0000003e for:
             000006b2 000006c0 (DW_OP_reg5 (r5))
    00000048 <End of list>

    00000049 v0000000 v0000000 location view pair

    0000004b v0000000 v0000000 views at 00000049 for:
             000006b8 000006c0 (DW_OP_reg0 (r0))
    00000053 <End of list>

    00000054 v0000000 v0000000 location view pair
    00000056 v0000000 v0000000 location view pair

    00000058 00000582 (base address)
    0000005d v0000000 v0000000 views at 00000054 for:
             00000582 00000588 (DW_OP_reg0 (r0))
    00000062 v0000000 v0000000 views at 00000056 for:
             00000588 000005a6 (DW_OP_reg12 (r12))
    00000067 <End of list>

    00000068 v0000001 v0000000 location view pair
    0000006a v0000000 v0000000 location view pair
    0000006c v0000000 v0000000 location view pair

    0000006e 00000584 (base address)
    00000073 v0000001 v0000000 views at 00000068 for:
             00000584 0000058a (DW_OP_lit0; DW_OP_stack_value)
    00000079 v0000000 v0000000 views at 0000006a for:
             0000058a 0000059e (DW_OP_reg0 (r0))
    0000007e v0000000 v0000000 views at 0000006c for:
             000005a0 000005a6 (DW_OP_reg0 (r0))
    00000083 <End of list>

    00000084 v0000003 v0000000 location view pair
    00000086 v0000000 v0000000 location view pair
    00000088 v0000001 v0000000 location view pair
    0000008a v0000000 v0000000 location view pair
    0000008c v0000000 v0000000 location view pair

    0000008e 00000584 (base address)
    00000093 v0000003 v0000000 views at 00000084 for:
             00000584 0000058a (DW_OP_lit0; DW_OP_stack_value)
    00000099 v0000000 v0000000 views at 00000086 for:
             0000058a 0000058c (DW_OP_reg2 (r2))
    0000009e v0000001 v0000000 views at 00000088 for:
             00000590 00000596 (DW_OP_reg2 (r2))
    000000a3 v0000000 v0000000 views at 0000008a for:
             00000596 000005a0 (DW_OP_breg2 (r2): -2; DW_OP_stack_value)
    000000aa v0000000 v0000000 views at 0000008c for:
             000005a0 000005a6 (DW_OP_reg2 (r2))
    000000af <End of list>

    000000b0 v0000000 v0000000 location view pair
    000000b2 v0000000 v0000000 location view pair

    000000b4 00000590 (base address)
    000000b9 v0000000 v0000000 views at 000000b0 for:
             00000590 0000059a (DW_OP_reg3 (r3))
    000000be v0000000 v0000000 views at 000000b2 for:
             0000059a 000005a0 (DW_OP_breg12 (r12): 0; DW_OP_breg2 (r2): 0; DW_OP_plus; DW_OP_lit2; DW_OP_minus)
    000000c9 <End of list>

    000000ca v0000000 v0000000 location view pair
    000000cc v0000000 v0000000 location view pair
    000000ce v0000000 v0000000 location view pair
    000000d0 v0000000 v0000000 location view pair
    000000d2 v0000000 v0000000 location view pair
    000000d4 v0000000 v0000000 location view pair
    000000d6 v0000000 v0000000 location view pair
    000000d8 v0000000 v0000000 location view pair

    000000da 00000558 (base address)
    000000df v0000000 v0000000 views at 000000ca for:
             00000558 00000574 (DW_OP_reg0 (r0))
    000000e4 v0000000 v0000000 views at 000000cc for:
             00000574 00000576 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000f2 v0000000 v0000000 views at 000000ce for:
             00000576 00000578 (DW_OP_reg0 (r0))
    000000f7 v0000000 v0000000 views at 000000d0 for:
             00000578 0000057a (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000105 v0000000 v0000000 views at 000000d2 for:
             0000057a 0000057c (DW_OP_reg0 (r0))
    0000010a v0000000 v0000000 views at 000000d4 for:
             0000057c 0000057e (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000118 v0000000 v0000000 views at 000000d6 for:
             0000057e 00000580 (DW_OP_reg0 (r0))
    0000011d v0000000 v0000000 views at 000000d8 for:
             00000580 00000582 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000012b <End of list>

    0000012c v0000000 v0000000 location view pair
    0000012e v0000000 v0000000 location view pair

    00000130 00000554 (base address)
    00000135 v0000000 v0000000 views at 0000012c for:
             00000554 00000556 (DW_OP_reg0 (r0))
    0000013a v0000000 v0000000 views at 0000012e for:
             00000556 00000558 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    00000148 <End of list>

    00000149 v0000000 v0000000 location view pair
    0000014b v0000000 v0000000 location view pair
    0000014d v0000000 v0000000 location view pair
    0000014f v0000000 v0000000 location view pair
    00000151 v0000000 v0000000 location view pair
    00000153 v0000000 v0000000 location view pair
    00000155 v0000000 v0000000 location view pair
    00000157 v0000000 v0000000 location view pair

    00000159 000004d0 (base address)
    0000015e v0000000 v0000000 views at 00000149 for:
             000004d0 00000538 (DW_OP_reg0 (r0))
    00000163 v0000000 v0000000 views at 0000014b for:
             00000538 0000053a (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    00000171 v0000000 v0000000 views at 0000014d for:
             0000053a 0000053e (DW_OP_reg0 (r0))
    00000176 v0000000 v0000000 views at 0000014f for:
             0000053e 00000540 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    00000184 v0000000 v0000000 views at 00000151 for:
             00000540 00000544 (DW_OP_reg0 (r0))
    00000189 v0000000 v0000000 views at 00000153 for:
             00000544 00000546 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    00000197 v0000000 v0000000 views at 00000155 for:
             00000546 0000054a (DW_OP_reg0 (r0))
    0000019c v0000000 v0000000 views at 00000157 for:
             0000054a 00000554 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    000001ab <End of list>

    000001ac v0000000 v0000000 location view pair
    000001ae v0000000 v0000000 location view pair
    000001b0 v0000000 v0000000 location view pair

    000001b2 000004d0 (base address)
    000001b7 v0000000 v0000000 views at 000001ac for:
             000004d0 00000536 (DW_OP_reg3 (r3))
    000001bc v0000000 v0000000 views at 000001ae for:
             00000536 0000053a (DW_OP_regx: 77 (r77))
    000001c2 v0000000 v0000000 views at 000001b0 for:
             0000053a 00000554 (DW_OP_reg3 (r3))
    000001c8 <End of list>

    000001c9 v0000000 v0000000 location view pair

    000001cb v0000000 v0000000 views at 000001c9 for:
             00000500 00000554 (DW_OP_regx: 75 (r75))
    000001d4 <End of list>

    000001d5 v0000000 v0000000 location view pair
    000001d7 v0000000 v0000000 location view pair
    000001d9 v0000000 v0000000 location view pair

    000001db 0000050c (base address)
    000001e0 v0000000 v0000000 views at 000001d5 for:
             0000050c 00000532 (DW_OP_regx: 79 (r79))
    000001e6 v0000000 v0000000 views at 000001d7 for:
             00000532 0000053a (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_convert <0x2d>; DW_OP_convert <0x3b>; DW_OP_const_type: <0x3b>  4 byte block: 0 0 80 3c ; DW_OP_mul; DW_OP_bregx: 77 (r77) 0; DW_OP_convert <0x42>; DW_OP_convert <0x3b>; DW_OP_regval_type: 75 (r75) <0x3b>; DW_OP_mul; DW_OP_plus; DW_OP_stack_value)
    0000020c v0000000 v0000000 views at 000001d9 for:
             0000053a 00000554 (DW_OP_regx: 79 (r79))
    00000212 <End of list>

    00000213 v0000000 v0000000 location view pair
    00000215 v0000000 v0000000 location view pair
    00000217 v0000000 v0000000 location view pair
    00000219 v0000000 v0000000 location view pair

    0000021b 0000026c (base address)
    00000220 v0000000 v0000000 views at 00000213 for:
             0000026c 00000280 (DW_OP_reg0 (r0))
    00000225 v0000000 v0000000 views at 00000215 for:
             00000280 00000282 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000233 v0000000 v0000000 views at 00000217 for:
             00000282 00000284 (DW_OP_reg0 (r0))
    00000238 v0000000 v0000000 views at 00000219 for:
             00000284 00000286 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000246 <End of list>

    00000247 v0000003 v0000000 location view pair
    00000249 v0000000 v0000000 location view pair

    0000024b 0000026c (base address)
    00000250 v0000003 v0000000 views at 00000247 for:
             0000026c 0000026e (DW_OP_lit0; DW_OP_stack_value)
    00000256 v0000000 v0000000 views at 00000249 for:
             0000026e 00000286 (DW_OP_reg3 (r3))
    0000025b <End of list>

    0000025c v0000002 v0000000 location view pair
    0000025e v0000000 v0000000 location view pair

    00000260 00000288 (base address)
    00000265 v0000002 v0000000 views at 0000025c for:
             00000288 0000028e (DW_OP_lit0; DW_OP_stack_value)
    0000026b v0000000 v0000000 views at 0000025e for:
             0000028e 000002ac (DW_OP_reg0 (r0))
    00000270 <End of list>

    00000271 v0000004 v0000000 location view pair
    00000273 v0000000 v0000000 location view pair

    00000275 00000288 (base address)
    0000027a v0000004 v0000000 views at 00000271 for:
             00000288 0000028e (DW_OP_lit0; DW_OP_stack_value)
    00000280 v0000000 v0000000 views at 00000273 for:
             0000028e 000002ac (DW_OP_reg3 (r3))
    00000285 <End of list>

    00000286 v0000000 v0000000 location view pair
    00000288 v0000000 v0000000 location view pair

    0000028a 000002ac (base address)
    0000028f v0000000 v0000000 views at 00000286 for:
             000002ac 000002b2 (DW_OP_reg0 (r0))
    00000294 v0000000 v0000000 views at 00000288 for:
             000002b2 000002cc (DW_OP_reg0 (r0))
    00000299 <End of list>

    0000029a v0000000 v0000000 location view pair

    0000029c v0000000 v0000000 views at 0000029a for:
             000002e6 000002f8 (DW_OP_reg3 (r3))
    000002a4 <End of list>

    000002a5 v0000000 v0000000 location view pair

    000002a7 v0000000 v0000000 views at 000002a5 for:
             0000030a 00000320 (DW_OP_reg3 (r3))
    000002af <End of list>

    000002b0 v0000002 v0000000 location view pair
    000002b2 v0000000 v0000000 location view pair
    000002b4 v0000002 v0000000 location view pair
    000002b6 v0000001 v0000000 location view pair
    000002b8 v0000000 v0000000 location view pair

    000002ba 00000320 (base address)
    000002bf v0000002 v0000000 views at 000002b0 for:
             00000320 00000322 (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    000002c6 v0000000 v0000000 views at 000002b2 for:
             00000322 00000334 (DW_OP_reg4 (r4))
    000002cb v0000002 v0000000 views at 000002b4 for:
             00000346 00000362 (DW_OP_reg5 (r5))
    000002d0 v0000001 v0000000 views at 000002b6 for:
             00000376 00000378 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000002d7 v0000000 v0000000 views at 000002b8 for:
             00000378 0000037a (DW_OP_reg4 (r4))
    000002dc <End of list>

    000002dd v0000000 v0000001 location view pair
    000002df v0000001 v0000000 location view pair
    000002e1 v0000000 v0000003 location view pair
    000002e3 v0000003 v0000000 location view pair

    000002e5 00000334 (base address)
    000002ea v0000000 v0000001 views at 000002dd for:
             00000334 00000334 (DW_OP_reg4 (r4))
    000002ef v0000001 v0000000 views at 000002df for:
             00000334 00000336 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000002f6 v0000000 v0000003 views at 000002e1 for:
             00000336 00000346 (DW_OP_reg4 (r4))
    000002fb v0000003 v0000000 views at 000002e3 for:
             00000346 00000348 (DW_OP_reg0 (r0))
    00000300 <End of list>

    00000301 v0000000 v0000000 location view pair

    00000303 v0000000 v0000000 views at 00000301 for:
             00000358 00000362 (DW_OP_reg0 (r0))
    0000030b <End of list>

    0000030c v0000000 v0000000 location view pair

    0000030e v0000000 v0000000 views at 0000030c for:
             0000034c 00000350 (DW_OP_reg0 (r0))
    00000316 <End of list>

    00000317 v0000000 v0000000 location view pair

    00000319 v0000000 v0000000 views at 00000317 for:
             0000037e 00000392 (DW_OP_reg3 (r3))
    00000321 <End of list>

    0000032e v0000001 v0000000 location view pair
    00000330 v0000000 v0000000 location view pair
    00000332 v0000000 v0000000 location view pair
    00000334 v0000000 v0000000 location view pair

    00000336 00000796 (base address)
    0000033b v0000001 v0000000 views at 0000032e for:
             00000796 0000079a (DW_OP_lit0; DW_OP_stack_value)
    00000341 v0000000 v0000000 views at 00000330 for:
             0000079a 00000870 (DW_OP_reg4 (r4))
    00000347 v0000000 v0000000 views at 00000332 for:
             00000870 0000087c (DW_OP_breg2 (r2): -1; DW_OP_stack_value)
    00000350 v0000000 v0000000 views at 00000334 for:
             0000087c 000008b4 (DW_OP_reg4 (r4))
    00000357 <End of list>

    00000358 v0000000 v0000000 location view pair
    0000035a v0000000 v0000000 location view pair
    0000035c v0000000 v0000000 location view pair

    0000035e 000007b0 (base address)
    00000363 v0000000 v0000000 views at 00000358 for:
             000007b0 000007b8 (DW_OP_reg6 (r6))
    00000368 v0000000 v0000000 views at 0000035a for:
             000007bc 00000852 (DW_OP_reg6 (r6))
    0000036e v0000000 v0000000 views at 0000035c for:
             00000886 000008b4 (DW_OP_reg6 (r6))
    00000375 <End of list>

    00000376 v0000000 v0000001 location view pair
    00000378 v0000001 v0000000 location view pair

    0000037a 0000079a (base address)
    0000037f v0000000 v0000001 views at 00000376 for:
             0000079a 000007a8 (DW_OP_reg2 (r2))
    00000384 v0000001 v0000000 views at 00000378 for:
             000007a8 000007bc (DW_OP_breg2 (r2): 0; DW_OP_const1u: 90; DW_OP_div; DW_OP_stack_value)
    0000038e <End of list>

    0000038f v0000002 v0000000 location view pair
    00000391 v0000000 v0000000 location view pair
    00000393 v0000000 v0000000 location view pair

    00000395 000007b0 (base address)
    0000039a v0000002 v0000000 views at 0000038f for:
             000007b0 000007b8 (DW_OP_lit0; DW_OP_stack_value)
    000003a0 v0000000 v0000000 views at 00000391 for:
             000007bc 00000852 (DW_OP_reg5 (r5))
    000003a6 v0000000 v0000000 views at 00000393 for:
             00000886 000008b4 (DW_OP_reg5 (r5))
    000003ad <End of list>

    000003ae v0000002 v0000000 location view pair

    000003b0 v0000002 v0000000 views at 000003ae for:
             000007fe 00000810 (DW_OP_reg5 (r5))
    000003b8 <End of list>

    000003b9 v0000000 v0000000 location view pair
    000003bb v0000000 v0000000 location view pair

    000003bd 00000804 (base address)
    000003c2 v0000000 v0000000 views at 000003b9 for:
             00000804 00000844 (DW_OP_reg1 (r1))
    000003c7 v0000000 v0000000 views at 000003bb for:
             00000886 00000888 (DW_OP_reg1 (r1))
    000003ce <End of list>

    000003cf v0000001 v0000000 location view pair
    000003d1 v0000000 v0000000 location view pair
    000003d3 v0000000 v0000000 location view pair
    000003d5 v0000000 v0000000 location view pair
    000003d7 v0000000 v0000000 location view pair
    000003d9 v0000000 v0000000 location view pair

    000003db 00000804 (base address)
    000003e0 v0000001 v0000000 views at 000003cf for:
             00000804 00000810 (DW_OP_reg1 (r1))
    000003e5 v0000000 v0000000 views at 000003d1 for:
             00000810 0000083a (DW_OP_reg12 (r12))
    000003ea v0000000 v0000000 views at 000003d3 for:
             0000083a 0000083e (DW_OP_reg5 (r5))
    000003ef v0000000 v0000000 views at 000003d5 for:
             0000083e 00000844 (DW_OP_reg12 (r12))
    000003f4 v0000000 v0000000 views at 000003d7 for:
             00000844 00000848 (DW_OP_reg1 (r1))
    000003f9 v0000000 v0000000 views at 000003d9 for:
             00000886 000008b4 (DW_OP_reg12 (r12))
    00000400 <End of list>

    00000401 v0000000 v0000000 location view pair
    00000403 v0000000 v0000000 location view pair
    00000405 v0000000 v0000000 location view pair

    00000407 0000080a (base address)
    0000040c v0000000 v0000000 views at 00000401 for:
             0000080a 00000810 (DW_OP_reg14 (r14))
    00000411 v0000000 v0000000 views at 00000403 for:
             00000810 00000851 (DW_OP_reg2 (r2))
    00000416 v0000000 v0000000 views at 00000405 for:
             00000886 000008b4 (DW_OP_reg2 (r2))
    0000041c <End of list>

    0000041d v0000001 v0000000 location view pair

    0000041f v0000001 v0000000 views at 0000041d for:
             00000844 00000852 (DW_OP_lit1; DW_OP_stack_value)
    00000428 <End of list>

    00000429 v0000002 v0000004 location view pair

    0000042b v0000002 v0000004 views at 00000429 for:
             00000844 00000844 (DW_OP_lit0; DW_OP_stack_value)
    00000434 <End of list>

    00000435 v0000000 v0000000 location view pair

    00000437 v0000000 v0000000 views at 00000435 for:
             0000079a 000007aa (DW_OP_reg3 (r3))
    0000043f <End of list>

    00000440 v0000004 v0000000 location view pair
    00000442 v0000000 v0000000 location view pair

    00000444 000007b0 (base address)
    00000449 v0000004 v0000000 views at 00000440 for:
             000007b0 000007b8 (DW_OP_const1u: 90; DW_OP_stack_value)
    00000450 v0000000 v0000000 views at 00000442 for:
             000007bc 0000080a (DW_OP_reg14 (r14))
    00000455 <End of list>

    00000456 v0000000 v0000000 location view pair

    00000458 v0000000 v0000000 views at 00000456 for:
             000007bc 000007e2 (DW_OP_reg12 (r12))
    00000460 <End of list>

    00000461 v0000000 v0000000 location view pair

    00000463 v0000000 v0000000 views at 00000461 for:
             000007bc 000007de (DW_OP_reg2 (r2))
    0000046b <End of list>

    0000046c v0000000 v0000000 location view pair

    0000046e v0000000 v0000000 views at 0000046c for:
             0000082a 00000834 (DW_OP_reg3 (r3))
    00000476 <End of list>

    00000483 v0000000 v0000000 location view pair
    00000485 v0000000 v0000000 location view pair

    00000487 00000000 (base address)
    0000048c v0000000 v0000000 views at 00000483 for:
             00000000 0000001a (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    00000496 v0000000 v0000000 views at 00000485 for:
             0000002a 00000046 (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    000004a0 <End of list>

    000004ad v0000006 v0000000 location view pair
    000004af v0000000 v0000001 location view pair
    000004b1 v0000001 v0000000 location view pair
    000004b3 v0000000 v0000000 location view pair
    000004b5 v0000000 v0000000 location view pair
    000004b7 v0000000 v0000000 location view pair
    000004b9 v0000000 v0000000 location view pair

    000004bb 00000c02 (base address)
    000004c0 v0000006 v0000000 views at 000004ad for:
             00000c02 00000c06 (DW_OP_lit0; DW_OP_stack_value)
    000004c6 v0000000 v0000001 views at 000004af for:
             00000c06 00000c2c (DW_OP_reg6 (r6))
    000004cb v0000001 v0000000 views at 000004b1 for:
             00000c2c 00000c2e (DW_OP_reg4 (r4))
    000004d0 v0000000 v0000000 views at 000004b3 for:
             00000c2e 00000c62 (DW_OP_reg6 (r6))
    000004d5 v0000000 v0000000 views at 000004b5 for:
             00000c62 00000c72 (DW_OP_reg4 (r4))
    000004da v0000000 v0000000 views at 000004b7 for:
             00000c72 00000cd4 (DW_OP_reg6 (r6))
    000004e0 v0000000 v0000000 views at 000004b9 for:
             00000cd4 00000cda (DW_OP_reg4 (r4))
    000004e7 <End of list>

    000004e8 v0000000 v0000000 location view pair
    000004ea v0000000 v0000000 location view pair
    000004ec v0000000 v0000000 location view pair
    000004ee v0000000 v0000000 location view pair
    000004f0 v0000000 v0000001 location view pair
    000004f2 v0000000 v0000000 location view pair
    000004f4 v0000000 v0000000 location view pair
    000004f6 v0000000 v0000000 location view pair
    000004f8 v0000000 v0000001 location view pair
    000004fa v0000001 v0000000 location view pair

    000004fc 00000ad4 (base address)
    00000501 v0000000 v0000000 views at 000004e8 for:
             00000ad4 00000b40 (DW_OP_regx: 64 (r64))
    00000507 v0000000 v0000000 views at 000004ea for:
             00000b56 00000b5b (DW_OP_regx: 64 (r64))
    0000050f v0000000 v0000000 views at 000004ec for:
             00000b5b 00000b5e (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xe9d>); DW_OP_stack_value)
    0000051b v0000000 v0000000 views at 000004ee for:
             00000b5e 00000b63 (DW_OP_regx: 64 (r64))
    00000523 v0000000 v0000001 views at 000004f0 for:
             00000b63 00000b64 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xe9d>); DW_OP_stack_value)
    0000052f v0000000 v0000000 views at 000004f2 for:
             00000b6c 00000b71 (DW_OP_regx: 64 (r64))
    00000537 v0000000 v0000000 views at 000004f4 for:
             00000b71 00000b74 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xe9d>); DW_OP_stack_value)
    00000543 v0000000 v0000000 views at 000004f6 for:
             00000b74 00000b79 (DW_OP_regx: 64 (r64))
    0000054b v0000000 v0000001 views at 000004f8 for:
             00000b79 00000b7a (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xe9d>); DW_OP_stack_value)
    00000557 v0000001 v0000000 views at 000004fa for:
             00000b7a 00000b80 (DW_OP_regx: 80 (r80))
    0000055f <End of list>

    00000560 v0000000 v0000000 location view pair
    00000562 v0000000 v0000000 location view pair

    00000564 00000b38 (base address)
    00000569 v0000000 v0000000 views at 00000560 for:
             00000b38 00000b56 (DW_OP_regx: 79 (r79))
    0000056f v0000000 v0000000 views at 00000562 for:
             00000b80 00000bbf (DW_OP_regx: 79 (r79))
    00000576 <End of list>

    00000577 v0000000 v0000000 location view pair
    00000579 v0000000 v0000000 location view pair
    0000057b v0000000 v0000000 location view pair

    0000057d 00000b50 (base address)
    00000582 v0000000 v0000000 views at 00000577 for:
             00000b50 00000b56 (DW_OP_reg3 (r3))
    00000587 v0000000 v0000000 views at 00000579 for:
             00000b80 00000b98 (DW_OP_reg3 (r3))
    0000058c v0000000 v0000000 views at 0000057b for:
             00000ba0 00000bae (DW_OP_reg3 (r3))
    00000591 <End of list>

    00000592 v0000001 v0000000 location view pair
    00000594 v0000000 v0000000 location view pair
    00000596 v0000000 v0000000 location view pair
    00000598 v0000000 v0000000 location view pair
    0000059a v0000000 v0000000 location view pair
    0000059c v0000000 v0000001 location view pair
    0000059e v0000001 v0000000 location view pair

    000005a0 00000b50 (base address)
    000005a5 v0000001 v0000000 views at 00000592 for:
             00000b50 00000b56 (DW_OP_lit0; DW_OP_stack_value)
    000005ab v0000000 v0000000 views at 00000594 for:
             00000b80 00000b92 (DW_OP_reg1 (r1))
    000005b0 v0000000 v0000000 views at 00000596 for:
             00000b92 00000ba4 (DW_OP_breg1 (r1): 1; DW_OP_stack_value)
    000005b7 v0000000 v0000000 views at 00000598 for:
             00000ba4 00000baa (DW_OP_reg1 (r1))
    000005bc v0000000 v0000000 views at 0000059a for:
             00000baa 00000bc4 (DW_OP_reg4 (r4))
    000005c1 v0000000 v0000001 views at 0000059c for:
             00000bc4 00000bd2 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000005c9 v0000001 v0000000 views at 0000059e for:
             00000bd2 00000bf4 (DW_OP_reg4 (r4))
    000005d0 <End of list>

    000005d1 v0000003 v0000000 location view pair
    000005d3 v0000000 v0000000 location view pair

    000005d5 00000b50 (base address)
    000005da v0000003 v0000000 views at 000005d1 for:
             00000b50 00000b56 (DW_OP_lit0; DW_OP_stack_value)
    000005e0 v0000000 v0000000 views at 000005d3 for:
             00000b80 00000bbc (DW_OP_reg0 (r0))
    000005e5 <End of list>

    000005e6 v0000000 v0000000 location view pair
    000005e8 v0000000 v0000000 location view pair
    000005ea v0000000 v0000000 location view pair
    000005ec v0000000 v0000000 location view pair

    000005ee 00000abc (base address)
    000005f3 v0000000 v0000000 views at 000005e6 for:
             00000abc 00000ac2 (DW_OP_reg0 (r0))
    000005f8 v0000000 v0000000 views at 000005e8 for:
             00000ac2 00000aca (DW_OP_reg4 (r4))
    000005fd v0000000 v0000000 views at 000005ea for:
             00000aca 00000acc (DW_OP_reg0 (r0))
    00000602 v0000000 v0000000 views at 000005ec for:
             00000acc 00000ad4 (DW_OP_reg4 (r4))
    00000607 <End of list>

    00000608 v0000000 v0000000 location view pair
    0000060a v0000000 v0000000 location view pair

    0000060c 00000a70 (base address)
    00000611 v0000000 v0000000 views at 00000608 for:
             00000a70 00000a76 (DW_OP_reg0 (r0))
    00000616 v0000000 v0000000 views at 0000060a for:
             00000a76 00000aa0 (DW_OP_reg0 (r0))
    0000061b <End of list>

    0000061c v0000002 v0000000 location view pair
    0000061e v0000000 v0000000 location view pair
    00000620 v0000000 v0000000 location view pair
    00000622 v0000000 v0000000 location view pair
    00000624 v0000000 v0000001 location view pair
    00000626 v0000001 v0000000 location view pair

    00000628 00000a74 (base address)
    0000062d v0000002 v0000000 views at 0000061c for:
             00000a74 00000a76 (DW_OP_lit0; DW_OP_stack_value)
    00000633 v0000000 v0000000 views at 0000061e for:
             00000a76 00000a92 (DW_OP_reg4 (r4))
    00000638 v0000000 v0000000 views at 00000620 for:
             00000a92 00000aa0 (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    0000063f v0000000 v0000000 views at 00000622 for:
             00000aa0 00000aa2 (DW_OP_reg4 (r4))
    00000644 v0000000 v0000001 views at 00000624 for:
             00000aa2 00000ab0 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    0000064b v0000001 v0000000 views at 00000626 for:
             00000ab0 00000ab8 (DW_OP_reg4 (r4))
    00000650 <End of list>

    00000651 v0000000 v0000000 location view pair
    00000653 v0000000 v0000000 location view pair

    00000655 00000a58 (base address)
    0000065a v0000000 v0000000 views at 00000651 for:
             00000a58 00000a60 (DW_OP_reg0 (r0))
    0000065f v0000000 v0000000 views at 00000653 for:
             00000a60 00000a6e (DW_OP_reg5 (r5))
    00000664 <End of list>

    00000665 v0000002 v0000000 location view pair
    00000667 v0000000 v0000000 location view pair

    00000669 00000a5c (base address)
    0000066e v0000002 v0000000 views at 00000665 for:
             00000a5c 00000a60 (DW_OP_lit0; DW_OP_stack_value)
    00000674 v0000000 v0000000 views at 00000667 for:
             00000a60 00000a6e (DW_OP_reg4 (r4))
    00000679 <End of list>

    0000067a v0000000 v0000000 location view pair
    0000067c v0000000 v0000000 location view pair
    0000067e v0000000 v0000000 location view pair

    00000680 00000a10 (base address)
    00000685 v0000000 v0000000 views at 0000067a for:
             00000a10 00000a1e (DW_OP_reg0 (r0))
    0000068a v0000000 v0000000 views at 0000067c for:
             00000a1e 00000a1f (DW_OP_reg1 (r1))
    0000068f v0000000 v0000000 views at 0000067e for:
             00000a1f 00000a58 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xea4>); DW_OP_convert <0xeab>; DW_OP_convert <0>; DW_OP_stack_value)
    0000069d <End of list>

    0000069e v0000002 v0000000 location view pair
    000006a0 v0000000 v0000000 location view pair

    000006a2 00000a40 (base address)
    000006a7 v0000002 v0000000 views at 0000069e for:
             00000a40 00000a42 (DW_OP_lit0; DW_OP_stack_value)
    000006ad v0000000 v0000000 views at 000006a0 for:
             00000a42 00000a4c (DW_OP_reg3 (r3))
    000006b2 <End of list>

    000006bf v0000000 v0000001 location view pair
    000006c1 v0000001 v0000000 location view pair
    000006c3 v0000000 v0000000 location view pair

    000006c5 00000cf0 (base address)
    000006ca v0000000 v0000001 views at 000006bf for:
             00000cf0 00000cf0 (DW_OP_reg2 (r2))
    000006cf v0000001 v0000000 views at 000006c1 for:
             00000cf0 00000cf4 (DW_OP_breg2 (r2): 4; DW_OP_stack_value)
    000006d6 v0000000 v0000000 views at 000006c3 for:
             00000cf4 00000d18 (DW_OP_reg2 (r2))
    000006db <End of list>

    000006dc v0000000 v0000001 location view pair
    000006de v0000001 v0000000 location view pair
    000006e0 v0000000 v0000000 location view pair

    000006e2 00000cf0 (base address)
    000006e7 v0000000 v0000001 views at 000006dc for:
             00000cf0 00000cf0 (DW_OP_reg3 (r3))
    000006ec v0000001 v0000000 views at 000006de for:
             00000cf0 00000cf8 (DW_OP_breg3 (r3): 4; DW_OP_stack_value)
    000006f3 v0000000 v0000000 views at 000006e0 for:
             00000cf8 00000d14 (DW_OP_reg3 (r3))
    000006f8 <End of list>

Contents of the .debug_aranges section:

  Length:                   124
  Version:                  2
  Offset into .debug_info:  0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000026c 0000001a
    00000288 00000024
    000002ac 00000028
    000002d4 000000d4
    000003a8 000000b0
    00000458 00000024
    0000047c 00000024
    000004a0 00000030
    000004d0 00000084
    00000554 00000004
    00000558 0000002a
    00000582 00000024
    000005a8 0000015c
    00000000 00000000
  Length:                   28
  Version:                  2
  Offset into .debug_info:  0x8d8
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000704 000001b0
    00000000 00000000
  Length:                   44
  Version:                  2
  Offset into .debug_info:  0xcf9
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000008b4 0000007c
    00000930 00000064
    00000000 00000058
    00000000 00000000
  Length:                   76
  Version:                  2
  Offset into .debug_info:  0xe77
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000994 0000007c
    00000a10 00000048
    00000a58 00000016
    00000a70 0000004c
    00000abc 00000018
    00000ad4 00000120
    00000bf4 000000ea
    00000000 00000000
  Length:                   52
  Version:                  2
  Offset into .debug_info:  0x13ac
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000ce0 00000002
    00000ce2 00000002
    00000ce4 00000002
    00000ce8 00000048
    00000000 00000000

Contents of the .debug_rnglists section:

 Table at Offset: 0:
  Length:          0x9d
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xc, Index: 0
    Offset   Begin    End
    0000000c 0000026c (base address)
    00000011 0000026c 0000027e 
    00000014 00000280 00000284 
    00000017 <End of list>

 Table at Offset: 0xa1:
  Length:          0x60
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xad, Index: 0
    Offset   Begin    End
    000000ad 0000079a (base address)
    000000b2 0000079a 00000852 
    000000b6 00000880 000008b4 
    000000bb <End of list>

 Table at Offset: 0x105:
  Length:          0x1b
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x111, Index: 0
    Offset   Begin    End
    00000111 000008b4 00000930 
    00000117 00000930 00000994 
    0000011d 00000000 00000058 
    00000123 <End of list>

 Table at Offset: 0x124:
  Length:          0x44
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x130, Index: 0
    Offset   Begin    End
    00000130 00000b50 (base address)
    00000135 00000b50 00000b52 
    00000138 00000b54 00000b56 
    0000013b 00000b80 00000ba8 
    0000013e <End of list>

 Table at Offset: 0x16c:
  Length:          0x21
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x178, Index: 0
    Offset   Begin    End
    00000178 00000ce0 00000ce2 
    0000017e 00000ce2 00000ce4 
    00000184 00000ce4 00000ce6 
    0000018a 00000ce8 00000d30 
    00000190 <End of list>

Raw dump of debug contents of section .debug_line:

  Offset:                      0
  Length:                      1727
  DWARF Version:               3
  Prologue Length:             210
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	/usr/lib/gcc/arm-none-eabi/13.2.0/include

 The File Name Table (offset 0x8c):
  Entry	Dir	Time	Size	Name
  1	1	0	0	lidar.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	stddef.h
  5	1	0	0	lidar.h
  6	1	0	0	timers.h

 Line Number Statements:
  [0x000000dc]  Set column to 35
  [0x000000de]  Extended opcode 2: set Address to 0x26c
  [0x000000e5]  Advance Line by 45 to 46
  [0x000000e7]  Copy
  [0x000000e8]  Set column to 3
  [0x000000ea]  Special opcode 6: advance Address by 0 to 0x26c and Line by 1 to 47 (view 1)
  [0x000000eb]  Set column to 7
  [0x000000ed]  Copy (view 2)
  [0x000000ee]  Set column to 11
  [0x000000f0]  Set is_stmt to 0
  [0x000000f1]  Copy (view 3)
  [0x000000f2]  Set column to 20
  [0x000000f4]  Extended opcode 4: set Discriminator to 4
  [0x000000f8]  Set is_stmt to 1
  [0x000000f9]  Special opcode 19: advance Address by 2 to 0x26e and Line by 0 to 47
  [0x000000fa]  Set column to 32
  [0x000000fc]  Extended opcode 4: set Discriminator to 5
  [0x00000100]  Special opcode 47: advance Address by 6 to 0x274 and Line by 0 to 47
  [0x00000101]  Set column to 42
  [0x00000103]  Extended opcode 4: set Discriminator to 5
  [0x00000107]  Set is_stmt to 0
  [0x00000108]  Copy (view 1)
  [0x00000109]  Set column to 34
  [0x0000010b]  Extended opcode 4: set Discriminator to 5
  [0x0000010f]  Special opcode 33: advance Address by 4 to 0x278 and Line by 0 to 47
  [0x00000110]  Set column to 28
  [0x00000112]  Extended opcode 4: set Discriminator to 3
  [0x00000116]  Set is_stmt to 1
  [0x00000117]  Special opcode 19: advance Address by 2 to 0x27a and Line by 0 to 47
  [0x00000118]  Extended opcode 4: set Discriminator to 3
  [0x0000011c]  Set is_stmt to 0
  [0x0000011d]  Special opcode 19: advance Address by 2 to 0x27c and Line by 0 to 47
  [0x0000011e]  Extended opcode 4: set Discriminator to 3
  [0x00000122]  Special opcode 19: advance Address by 2 to 0x27e and Line by 0 to 47
  [0x00000123]  Set column to 10
  [0x00000125]  Special opcode 6: advance Address by 0 to 0x27e and Line by 1 to 48 (view 1)
  [0x00000126]  Special opcode 19: advance Address by 2 to 0x280 and Line by 0 to 48
  [0x00000127]  Set column to 54
  [0x00000129]  Extended opcode 4: set Discriminator to 2
  [0x0000012d]  Special opcode 18: advance Address by 2 to 0x282 and Line by -1 to 47
  [0x0000012e]  Extended opcode 4: set Discriminator to 2
  [0x00000132]  Special opcode 19: advance Address by 2 to 0x284 and Line by 0 to 47
  [0x00000133]  Set column to 2
  [0x00000135]  Special opcode 7: advance Address by 0 to 0x284 and Line by 2 to 49 (view 1)
  [0x00000136]  Advance PC by 2 to 0x286
  [0x00000138]  Extended opcode 1: End of Sequence

  [0x0000013b]  Set column to 25
  [0x0000013d]  Extended opcode 2: set Address to 0x288
  [0x00000144]  Advance Line by 50 to 51
  [0x00000146]  Copy
  [0x00000147]  Set column to 3
  [0x00000149]  Special opcode 6: advance Address by 0 to 0x288 and Line by 1 to 52 (view 1)
  [0x0000014a]  Special opcode 6: advance Address by 0 to 0x288 and Line by 1 to 53 (view 2)
  [0x0000014b]  Set column to 7
  [0x0000014d]  Copy (view 3)
  [0x0000014e]  Set column to 11
  [0x00000150]  Set is_stmt to 0
  [0x00000151]  Copy (view 4)
  [0x00000152]  Set column to 7
  [0x00000154]  Special opcode 18: advance Address by 2 to 0x28a and Line by -1 to 52
  [0x00000155]  Set column to 3
  [0x00000157]  Special opcode 20: advance Address by 2 to 0x28c and Line by 1 to 53
  [0x00000158]  Set column to 28
  [0x0000015a]  Extended opcode 4: set Discriminator to 2
  [0x0000015e]  Set is_stmt to 1
  [0x0000015f]  Special opcode 19: advance Address by 2 to 0x28e and Line by 0 to 53
  [0x00000160]  Set column to 20
  [0x00000162]  Extended opcode 4: set Discriminator to 1
  [0x00000166]  Special opcode 19: advance Address by 2 to 0x290 and Line by 0 to 53
  [0x00000167]  Set column to 4
  [0x00000169]  Special opcode 48: advance Address by 6 to 0x296 and Line by 1 to 54
  [0x0000016a]  Set column to 15
  [0x0000016c]  Set is_stmt to 0
  [0x0000016d]  Copy (view 1)
  [0x0000016e]  Set column to 6
  [0x00000170]  Special opcode 47: advance Address by 6 to 0x29c and Line by 0 to 54
  [0x00000171]  Set column to 5
  [0x00000173]  Set is_stmt to 1
  [0x00000174]  Special opcode 34: advance Address by 4 to 0x2a0 and Line by 1 to 55
  [0x00000175]  Set column to 10
  [0x00000177]  Set is_stmt to 0
  [0x00000178]  Copy (view 1)
  [0x00000179]  Special opcode 19: advance Address by 2 to 0x2a2 and Line by 0 to 55
  [0x0000017a]  Special opcode 19: advance Address by 2 to 0x2a4 and Line by 0 to 55
  [0x0000017b]  Set column to 3
  [0x0000017d]  Set is_stmt to 1
  [0x0000017e]  Special opcode 8: advance Address by 0 to 0x2a4 and Line by 3 to 58 (view 1)
  [0x0000017f]  Set column to 2
  [0x00000181]  Set is_stmt to 0
  [0x00000182]  Special opcode 6: advance Address by 0 to 0x2a4 and Line by 1 to 59 (view 2)
  [0x00000183]  Advance PC by 8 to 0x2ac
  [0x00000185]  Extended opcode 1: End of Sequence

  [0x00000188]  Set column to 27
  [0x0000018a]  Extended opcode 2: set Address to 0x2ac
  [0x00000191]  Advance Line by 61 to 62
  [0x00000193]  Copy
  [0x00000194]  Set column to 3
  [0x00000196]  Special opcode 6: advance Address by 0 to 0x2ac and Line by 1 to 63 (view 1)
  [0x00000197]  Set column to 8
  [0x00000199]  Set is_stmt to 0
  [0x0000019a]  Copy (view 2)
  [0x0000019b]  Set column to 18
  [0x0000019d]  Extended opcode 4: set Discriminator to 2
  [0x000001a1]  Set is_stmt to 1
  [0x000001a2]  Special opcode 19: advance Address by 2 to 0x2ae and Line by 0 to 63
  [0x000001a3]  Set column to 22
  [0x000001a5]  Extended opcode 4: set Discriminator to 2
  [0x000001a9]  Set is_stmt to 0
  [0x000001aa]  Copy (view 1)
  [0x000001ab]  Set column to 13
  [0x000001ad]  Extended opcode 4: set Discriminator to 1
  [0x000001b1]  Set is_stmt to 1
  [0x000001b2]  Special opcode 33: advance Address by 4 to 0x2b2 and Line by 0 to 63
  [0x000001b3]  Set column to 3
  [0x000001b5]  Special opcode 34: advance Address by 4 to 0x2b6 and Line by 1 to 64
  [0x000001b6]  Set column to 14
  [0x000001b8]  Set is_stmt to 0
  [0x000001b9]  Copy (view 1)
  [0x000001ba]  Set column to 2
  [0x000001bc]  Special opcode 104: advance Address by 14 to 0x2c4 and Line by 1 to 65
  [0x000001bd]  Special opcode 61: advance Address by 8 to 0x2cc and Line by 0 to 65
  [0x000001be]  Advance PC by 8 to 0x2d4
  [0x000001c0]  Extended opcode 1: End of Sequence

  [0x000001c3]  Set column to 22
  [0x000001c5]  Extended opcode 2: set Address to 0x2d4
  [0x000001cc]  Advance Line by 42 to 43
  [0x000001ce]  Copy
  [0x000001cf]  Set column to 2
  [0x000001d1]  Special opcode 20: advance Address by 2 to 0x2d6 and Line by 1 to 44
  [0x000001d2]  Special opcode 7: advance Address by 0 to 0x2d6 and Line by 2 to 46 (view 1)
  [0x000001d3]  Special opcode 10: advance Address by 0 to 0x2d6 and Line by 5 to 51 (view 2)
  [0x000001d4]  Advance Line by 11 to 62
  [0x000001d6]  Copy (view 3)
  [0x000001d7]  Special opcode 11: advance Address by 0 to 0x2d6 and Line by 6 to 68 (view 4)
  [0x000001d8]  Set column to 15
  [0x000001da]  Set is_stmt to 0
  [0x000001db]  Copy (view 5)
  [0x000001dc]  Set column to 4
  [0x000001de]  Special opcode 61: advance Address by 8 to 0x2de and Line by 0 to 68
  [0x000001df]  Set column to 11
  [0x000001e1]  Special opcode 35: advance Address by 4 to 0x2e2 and Line by 2 to 70
  [0x000001e2]  Set column to 4
  [0x000001e4]  Set is_stmt to 1
  [0x000001e5]  Special opcode 34: advance Address by 4 to 0x2e6 and Line by 1 to 71
  [0x000001e6]  Set column to 16
  [0x000001e8]  Set is_stmt to 0
  [0x000001e9]  Copy (view 1)
  [0x000001ea]  Set column to 28
  [0x000001ec]  Extended opcode 4: set Discriminator to 3
  [0x000001f0]  Set is_stmt to 1
  [0x000001f1]  Special opcode 60: advance Address by 8 to 0x2ee and Line by -1 to 70
  [0x000001f2]  Set column to 20
  [0x000001f4]  Extended opcode 4: set Discriminator to 1
  [0x000001f8]  Special opcode 19: advance Address by 2 to 0x2f0 and Line by 0 to 70
  [0x000001f9]  Set column to 3
  [0x000001fb]  Special opcode 50: advance Address by 6 to 0x2f6 and Line by 3 to 73
  [0x000001fc]  Set column to 13
  [0x000001fe]  Set is_stmt to 0
  [0x000001ff]  Copy (view 1)
  [0x00000200]  Special opcode 19: advance Address by 2 to 0x2f8 and Line by 0 to 73
  [0x00000201]  Set column to 2
  [0x00000203]  Set is_stmt to 1
  [0x00000204]  Special opcode 50: advance Address by 6 to 0x2fe and Line by 3 to 76
  [0x00000205]  Set column to 5
  [0x00000207]  Set is_stmt to 0
  [0x00000208]  Copy (view 1)
  [0x00000209]  Set column to 4
  [0x0000020b]  Extended opcode 4: set Discriminator to 1
  [0x0000020f]  Special opcode 33: advance Address by 4 to 0x302 and Line by 0 to 76
  [0x00000210]  Set column to 10
  [0x00000212]  Special opcode 36: advance Address by 4 to 0x306 and Line by 3 to 79
  [0x00000213]  Set column to 31
  [0x00000215]  Extended opcode 4: set Discriminator to 3
  [0x00000219]  Set is_stmt to 1
  [0x0000021a]  Special opcode 33: advance Address by 4 to 0x30a and Line by 0 to 79
  [0x0000021b]  Set column to 49
  [0x0000021d]  Extended opcode 4: set Discriminator to 3
  [0x00000221]  Set is_stmt to 0
  [0x00000222]  Copy (view 1)
  [0x00000223]  Set column to 39
  [0x00000225]  Extended opcode 4: set Discriminator to 3
  [0x00000229]  Special opcode 47: advance Address by 6 to 0x310 and Line by 0 to 79
  [0x0000022a]  Set column to 27
  [0x0000022c]  Extended opcode 4: set Discriminator to 3
  [0x00000230]  Set is_stmt to 1
  [0x00000231]  Special opcode 47: advance Address by 6 to 0x316 and Line by 0 to 79
  [0x00000232]  Set column to 19
  [0x00000234]  Extended opcode 4: set Discriminator to 1
  [0x00000238]  Special opcode 19: advance Address by 2 to 0x318 and Line by 0 to 79
  [0x00000239]  Extended opcode 4: set Discriminator to 1
  [0x0000023d]  Set is_stmt to 0
  [0x0000023e]  Special opcode 61: advance Address by 8 to 0x320 and Line by 0 to 79
  [0x0000023f]  Set column to 9
  [0x00000241]  Extended opcode 4: set Discriminator to 1
  [0x00000245]  Set is_stmt to 1
  [0x00000246]  Special opcode 11: advance Address by 0 to 0x320 and Line by 6 to 85 (view 1)
  [0x00000247]  Set column to 15
  [0x00000249]  Extended opcode 4: set Discriminator to 1
  [0x0000024d]  Set is_stmt to 0
  [0x0000024e]  Copy (view 2)
  [0x0000024f]  Extended opcode 4: set Discriminator to 1
  [0x00000253]  Special opcode 19: advance Address by 2 to 0x322 and Line by 0 to 85
  [0x00000254]  Set column to 14
  [0x00000256]  Extended opcode 4: set Discriminator to 1
  [0x0000025a]  Special opcode 61: advance Address by 8 to 0x32a and Line by 0 to 85
  [0x0000025b]  Set column to 9
  [0x0000025d]  Extended opcode 4: set Discriminator to 1
  [0x00000261]  Special opcode 47: advance Address by 6 to 0x330 and Line by 0 to 85
  [0x00000262]  Extended opcode 4: set Discriminator to 1
  [0x00000266]  Set is_stmt to 1
  [0x00000267]  Special opcode 36: advance Address by 4 to 0x334 and Line by 3 to 88
  [0x00000268]  Set column to 15
  [0x0000026a]  Extended opcode 4: set Discriminator to 1
  [0x0000026e]  Set is_stmt to 0
  [0x0000026f]  Copy (view 1)
  [0x00000270]  Extended opcode 4: set Discriminator to 1
  [0x00000274]  Special opcode 19: advance Address by 2 to 0x336 and Line by 0 to 88
  [0x00000275]  Set column to 14
  [0x00000277]  Extended opcode 4: set Discriminator to 1
  [0x0000027b]  Special opcode 47: advance Address by 6 to 0x33c and Line by 0 to 88
  [0x0000027c]  Set column to 9
  [0x0000027e]  Extended opcode 4: set Discriminator to 1
  [0x00000282]  Special opcode 47: advance Address by 6 to 0x342 and Line by 0 to 88
  [0x00000283]  Set column to 3
  [0x00000285]  Set is_stmt to 1
  [0x00000286]  Special opcode 34: advance Address by 4 to 0x346 and Line by 1 to 89
  [0x00000287]  Special opcode 6: advance Address by 0 to 0x346 and Line by 1 to 90 (view 1)
  [0x00000288]  Special opcode 6: advance Address by 0 to 0x346 and Line by 1 to 91 (view 2)
  [0x00000289]  Special opcode 6: advance Address by 0 to 0x346 and Line by 1 to 92 (view 3)
  [0x0000028a]  Set column to 14
  [0x0000028c]  Set is_stmt to 0
  [0x0000028d]  Copy (view 4)
  [0x0000028e]  Special opcode 19: advance Address by 2 to 0x348 and Line by 0 to 92
  [0x0000028f]  Set column to 3
  [0x00000291]  Set is_stmt to 1
  [0x00000292]  Special opcode 34: advance Address by 4 to 0x34c and Line by 1 to 93
  [0x00000293]  Set column to 32
  [0x00000295]  Set is_stmt to 0
  [0x00000296]  Copy (view 1)
  [0x00000297]  Set column to 9
  [0x00000299]  Special opcode 33: advance Address by 4 to 0x350 and Line by 0 to 93
  [0x0000029a]  Set column to 3
  [0x0000029c]  Set is_stmt to 1
  [0x0000029d]  Special opcode 62: advance Address by 8 to 0x358 and Line by 1 to 94
  [0x0000029e]  Set column to 41
  [0x000002a0]  Set is_stmt to 0
  [0x000002a1]  Copy (view 1)
  [0x000002a2]  Set column to 7
  [0x000002a4]  Special opcode 33: advance Address by 4 to 0x35c and Line by 0 to 94
  [0x000002a5]  Set column to 13
  [0x000002a7]  Special opcode 19: advance Address by 2 to 0x35e and Line by 0 to 94
  [0x000002a8]  Special opcode 33: advance Address by 4 to 0x362 and Line by 0 to 94
  [0x000002a9]  Set column to 8
  [0x000002ab]  Set is_stmt to 1
  [0x000002ac]  Advance Line by -13 to 81
  [0x000002ae]  Copy (view 1)
  [0x000002af]  Extended opcode 4: set Discriminator to 1
  [0x000002b3]  Set is_stmt to 0
  [0x000002b4]  Special opcode 47: advance Address by 6 to 0x368 and Line by 0 to 81
  [0x000002b5]  Set column to 7
  [0x000002b7]  Special opcode 20: advance Address by 2 to 0x36a and Line by 1 to 82
  [0x000002b8]  Set column to 9
  [0x000002ba]  Extended opcode 4: set Discriminator to 1
  [0x000002be]  Set is_stmt to 1
  [0x000002bf]  Special opcode 21: advance Address by 2 to 0x36c and Line by 2 to 84
  [0x000002c0]  Set column to 13
  [0x000002c2]  Extended opcode 4: set Discriminator to 1
  [0x000002c6]  Set is_stmt to 0
  [0x000002c7]  Copy (view 1)
  [0x000002c8]  Set column to 9
  [0x000002ca]  Extended opcode 4: set Discriminator to 1
  [0x000002ce]  Special opcode 47: advance Address by 6 to 0x372 and Line by 0 to 84
  [0x000002cf]  Set column to 21
  [0x000002d1]  Extended opcode 4: set Discriminator to 2
  [0x000002d5]  Set is_stmt to 1
  [0x000002d6]  Special opcode 33: advance Address by 4 to 0x376 and Line by 0 to 84
  [0x000002d7]  Set column to 25
  [0x000002d9]  Extended opcode 4: set Discriminator to 2
  [0x000002dd]  Set is_stmt to 0
  [0x000002de]  Copy (view 1)
  [0x000002df]  Extended opcode 4: set Discriminator to 2
  [0x000002e3]  Special opcode 19: advance Address by 2 to 0x378 and Line by 0 to 84
  [0x000002e4]  Extended opcode 4: set Discriminator to 2
  [0x000002e8]  Special opcode 19: advance Address by 2 to 0x37a and Line by 0 to 84
  [0x000002e9]  Set column to 10
  [0x000002eb]  Advance Line by 12 to 96
  [0x000002ed]  Copy (view 1)
  [0x000002ee]  Set column to 31
  [0x000002f0]  Extended opcode 4: set Discriminator to 3
  [0x000002f4]  Set is_stmt to 1
  [0x000002f5]  Special opcode 33: advance Address by 4 to 0x37e and Line by 0 to 96
  [0x000002f6]  Set column to 61
  [0x000002f8]  Extended opcode 4: set Discriminator to 3
  [0x000002fc]  Set is_stmt to 0
  [0x000002fd]  Copy (view 1)
  [0x000002fe]  Set column to 55
  [0x00000300]  Extended opcode 4: set Discriminator to 3
  [0x00000304]  Special opcode 47: advance Address by 6 to 0x384 and Line by 0 to 96
  [0x00000305]  Set column to 27
  [0x00000307]  Extended opcode 4: set Discriminator to 3
  [0x0000030b]  Set is_stmt to 1
  [0x0000030c]  Special opcode 47: advance Address by 6 to 0x38a and Line by 0 to 96
  [0x0000030d]  Set column to 19
  [0x0000030f]  Extended opcode 4: set Discriminator to 1
  [0x00000313]  Special opcode 19: advance Address by 2 to 0x38c and Line by 0 to 96
  [0x00000314]  Extended opcode 4: set Discriminator to 1
  [0x00000318]  Set is_stmt to 0
  [0x00000319]  Special opcode 47: advance Address by 6 to 0x392 and Line by 0 to 96
  [0x0000031a]  Set column to 1
  [0x0000031c]  Special opcode 6: advance Address by 0 to 0x392 and Line by 1 to 97 (view 1)
  [0x0000031d]  Advance PC by 22 to 0x3a8
  [0x0000031f]  Extended opcode 1: End of Sequence

  [0x00000322]  Set column to 29
  [0x00000324]  Extended opcode 2: set Address to 0x3a8
  [0x0000032b]  Advance Line by 98 to 99
  [0x0000032e]  Copy
  [0x0000032f]  Set column to 2
  [0x00000331]  Special opcode 20: advance Address by 2 to 0x3aa and Line by 1 to 100
  [0x00000332]  Special opcode 90: advance Address by 12 to 0x3b6 and Line by 1 to 101
  [0x00000333]  Special opcode 62: advance Address by 8 to 0x3be and Line by 1 to 102
  [0x00000334]  Set column to 57
  [0x00000336]  Extended opcode 4: set Discriminator to 1
  [0x0000033a]  Copy (view 1)
  [0x0000033b]  Set column to 8
  [0x0000033d]  Extended opcode 4: set Discriminator to 1
  [0x00000341]  Copy (view 2)
  [0x00000342]  Set column to 9
  [0x00000344]  Extended opcode 4: set Discriminator to 1
  [0x00000348]  Set is_stmt to 0
  [0x00000349]  Copy (view 3)
  [0x0000034a]  Set column to 8
  [0x0000034c]  Extended opcode 4: set Discriminator to 1
  [0x00000350]  Special opcode 103: advance Address by 14 to 0x3cc and Line by 0 to 102
  [0x00000351]  Set column to 58
  [0x00000353]  Extended opcode 4: set Discriminator to 2
  [0x00000357]  Set is_stmt to 1
  [0x00000358]  Special opcode 33: advance Address by 4 to 0x3d0 and Line by 0 to 102
  [0x00000359]  Set column to 2
  [0x0000035b]  Special opcode 6: advance Address by 0 to 0x3d0 and Line by 1 to 103 (view 1)
  [0x0000035c]  Set column to 20
  [0x0000035e]  Set is_stmt to 0
  [0x0000035f]  Copy (view 2)
  [0x00000360]  Set column to 2
  [0x00000362]  Set is_stmt to 1
  [0x00000363]  Special opcode 62: advance Address by 8 to 0x3d8 and Line by 1 to 104
  [0x00000364]  Set column to 18
  [0x00000366]  Set is_stmt to 0
  [0x00000367]  Special opcode 33: advance Address by 4 to 0x3dc and Line by 0 to 104
  [0x00000368]  Set column to 2
  [0x0000036a]  Set is_stmt to 1
  [0x0000036b]  Special opcode 62: advance Address by 8 to 0x3e4 and Line by 1 to 105
  [0x0000036c]  Set column to 19
  [0x0000036e]  Set is_stmt to 0
  [0x0000036f]  Special opcode 33: advance Address by 4 to 0x3e8 and Line by 0 to 105
  [0x00000370]  Set column to 2
  [0x00000372]  Set is_stmt to 1
  [0x00000373]  Special opcode 62: advance Address by 8 to 0x3f0 and Line by 1 to 106
  [0x00000374]  Set column to 23
  [0x00000376]  Set is_stmt to 0
  [0x00000377]  Copy (view 1)
  [0x00000378]  Set column to 41
  [0x0000037a]  Special opcode 33: advance Address by 4 to 0x3f4 and Line by 0 to 106
  [0x0000037b]  Set column to 102
  [0x0000037d]  Special opcode 33: advance Address by 4 to 0x3f8 and Line by 0 to 106
  [0x0000037e]  Set column to 20
  [0x00000380]  Special opcode 33: advance Address by 4 to 0x3fc and Line by 0 to 106
  [0x00000381]  Set column to 2
  [0x00000383]  Set is_stmt to 1
  [0x00000384]  Special opcode 34: advance Address by 4 to 0x400 and Line by 1 to 107
  [0x00000385]  Special opcode 132: advance Address by 18 to 0x412 and Line by 1 to 108
  [0x00000386]  Special opcode 104: advance Address by 14 to 0x420 and Line by 1 to 109
  [0x00000387]  Special opcode 91: advance Address by 12 to 0x42c and Line by 2 to 111
  [0x00000388]  Set column to 36
  [0x0000038a]  Set is_stmt to 0
  [0x0000038b]  Special opcode 33: advance Address by 4 to 0x430 and Line by 0 to 111
  [0x0000038c]  Set column to 2
  [0x0000038e]  Special opcode 33: advance Address by 4 to 0x434 and Line by 0 to 111
  [0x0000038f]  Extended opcode 4: set Discriminator to 1
  [0x00000393]  Special opcode 33: advance Address by 4 to 0x438 and Line by 0 to 111
  [0x00000394]  Set column to 1
  [0x00000396]  Special opcode 77: advance Address by 10 to 0x442 and Line by 2 to 113
  [0x00000397]  Advance PC by 22 to 0x458
  [0x00000399]  Extended opcode 1: End of Sequence

  [0x0000039c]  Set column to 29
  [0x0000039e]  Extended opcode 2: set Address to 0x458
  [0x000003a5]  Advance Line by 114 to 115
  [0x000003a8]  Copy
  [0x000003a9]  Set column to 2
  [0x000003ab]  Special opcode 20: advance Address by 2 to 0x45a and Line by 1 to 116
  [0x000003ac]  Special opcode 118: advance Address by 16 to 0x46a and Line by 1 to 117
  [0x000003ad]  Set column to 1
  [0x000003af]  Set is_stmt to 0
  [0x000003b0]  Special opcode 76: advance Address by 10 to 0x474 and Line by 1 to 118
  [0x000003b1]  Advance PC by 8 to 0x47c
  [0x000003b3]  Extended opcode 1: End of Sequence

  [0x000003b6]  Set column to 28
  [0x000003b8]  Extended opcode 2: set Address to 0x47c
  [0x000003bf]  Advance Line by 119 to 120
  [0x000003c2]  Copy
  [0x000003c3]  Set column to 2
  [0x000003c5]  Special opcode 20: advance Address by 2 to 0x47e and Line by 1 to 121
  [0x000003c6]  Special opcode 118: advance Address by 16 to 0x48e and Line by 1 to 122
  [0x000003c7]  Set column to 1
  [0x000003c9]  Set is_stmt to 0
  [0x000003ca]  Special opcode 76: advance Address by 10 to 0x498 and Line by 1 to 123
  [0x000003cb]  Advance PC by 8 to 0x4a0
  [0x000003cd]  Extended opcode 1: End of Sequence

  [0x000003d0]  Set column to 26
  [0x000003d2]  Extended opcode 2: set Address to 0x4a0
  [0x000003d9]  Advance Line by 124 to 125
  [0x000003dc]  Copy
  [0x000003dd]  Set column to 2
  [0x000003df]  Special opcode 20: advance Address by 2 to 0x4a2 and Line by 1 to 126
  [0x000003e0]  Set column to 7
  [0x000003e2]  Set is_stmt to 0
  [0x000003e3]  Copy (view 1)
  [0x000003e4]  Set column to 3
  [0x000003e6]  Set is_stmt to 1
  [0x000003e7]  Special opcode 20: advance Address by 2 to 0x4a4 and Line by 1 to 127
  [0x000003e8]  Special opcode 104: advance Address by 14 to 0x4b2 and Line by 1 to 128
  [0x000003e9]  Set column to 8
  [0x000003eb]  Special opcode 59: advance Address by 8 to 0x4ba and Line by -2 to 126
  [0x000003ec]  Extended opcode 4: set Discriminator to 1
  [0x000003f0]  Set is_stmt to 0
  [0x000003f1]  Special opcode 89: advance Address by 12 to 0x4c6 and Line by 0 to 126
  [0x000003f2]  Set column to 1
  [0x000003f4]  Special opcode 37: advance Address by 4 to 0x4ca and Line by 4 to 130
  [0x000003f5]  Advance PC by 6 to 0x4d0
  [0x000003f7]  Extended opcode 1: End of Sequence

  [0x000003fa]  Set column to 83
  [0x000003fc]  Extended opcode 2: set Address to 0x4d0
  [0x00000403]  Advance Line by 131 to 132
  [0x00000406]  Copy
  [0x00000407]  Set is_stmt to 0
  [0x00000408]  Copy (view 1)
  [0x00000409]  Set column to 2
  [0x0000040b]  Set is_stmt to 1
  [0x0000040c]  Special opcode 118: advance Address by 16 to 0x4e0 and Line by 1 to 133
  [0x0000040d]  Set column to 18
  [0x0000040f]  Set is_stmt to 0
  [0x00000410]  Copy (view 1)
  [0x00000411]  Set column to 29
  [0x00000413]  Special opcode 33: advance Address by 4 to 0x4e4 and Line by 0 to 133
  [0x00000414]  Set column to 39
  [0x00000416]  Special opcode 61: advance Address by 8 to 0x4ec and Line by 0 to 133
  [0x00000417]  Set column to 52
  [0x00000419]  Special opcode 33: advance Address by 4 to 0x4f0 and Line by 0 to 133
  [0x0000041a]  Set column to 36
  [0x0000041c]  Special opcode 33: advance Address by 4 to 0x4f4 and Line by 0 to 133
  [0x0000041d]  Set column to 60
  [0x0000041f]  Special opcode 33: advance Address by 4 to 0x4f8 and Line by 0 to 133
  [0x00000420]  Set column to 8
  [0x00000422]  Special opcode 33: advance Address by 4 to 0x4fc and Line by 0 to 133
  [0x00000423]  Set column to 2
  [0x00000425]  Set is_stmt to 1
  [0x00000426]  Special opcode 34: advance Address by 4 to 0x500 and Line by 1 to 134
  [0x00000427]  Set column to 47
  [0x00000429]  Set is_stmt to 0
  [0x0000042a]  Copy (view 1)
  [0x0000042b]  Set column to 8
  [0x0000042d]  Special opcode 61: advance Address by 8 to 0x508 and Line by 0 to 134
  [0x0000042e]  Set column to 2
  [0x00000430]  Set is_stmt to 1
  [0x00000431]  Special opcode 34: advance Address by 4 to 0x50c and Line by 1 to 135
  [0x00000432]  Set column to 4
  [0x00000434]  Set is_stmt to 0
  [0x00000435]  Copy (view 1)
  [0x00000436]  Set column to 15
  [0x00000438]  Extended opcode 4: set Discriminator to 2
  [0x0000043c]  Special opcode 75: advance Address by 10 to 0x516 and Line by 0 to 135
  [0x0000043d]  Set column to 29
  [0x0000043f]  Extended opcode 4: set Discriminator to 4
  [0x00000443]  Special opcode 75: advance Address by 10 to 0x520 and Line by 0 to 135
  [0x00000444]  Set column to 2
  [0x00000446]  Set is_stmt to 1
  [0x00000447]  Special opcode 104: advance Address by 14 to 0x52e and Line by 1 to 136
  [0x00000448]  Set column to 9
  [0x0000044a]  Set is_stmt to 0
  [0x0000044b]  Copy (view 1)
  [0x0000044c]  Special opcode 33: advance Address by 4 to 0x532 and Line by 0 to 136
  [0x0000044d]  Special opcode 33: advance Address by 4 to 0x536 and Line by 0 to 136
  [0x0000044e]  Special opcode 19: advance Address by 2 to 0x538 and Line by 0 to 136
  [0x0000044f]  Set column to 53
  [0x00000451]  Extended opcode 4: set Discriminator to 5
  [0x00000455]  Special opcode 18: advance Address by 2 to 0x53a and Line by -1 to 135
  [0x00000456]  Extended opcode 4: set Discriminator to 5
  [0x0000045a]  Special opcode 33: advance Address by 4 to 0x53e and Line by 0 to 135
  [0x0000045b]  Extended opcode 4: set Discriminator to 5
  [0x0000045f]  Special opcode 19: advance Address by 2 to 0x540 and Line by 0 to 135
  [0x00000460]  Extended opcode 4: set Discriminator to 5
  [0x00000464]  Special opcode 33: advance Address by 4 to 0x544 and Line by 0 to 135
  [0x00000465]  Extended opcode 4: set Discriminator to 5
  [0x00000469]  Special opcode 19: advance Address by 2 to 0x546 and Line by 0 to 135
  [0x0000046a]  Set column to 1
  [0x0000046c]  Special opcode 35: advance Address by 4 to 0x54a and Line by 2 to 137
  [0x0000046d]  Advance PC by 10 to 0x554
  [0x0000046f]  Extended opcode 1: End of Sequence

  [0x00000472]  Set column to 39
  [0x00000474]  Extended opcode 2: set Address to 0x554
  [0x0000047b]  Advance Line by 138 to 139
  [0x0000047e]  Copy
  [0x0000047f]  Set column to 2
  [0x00000481]  Special opcode 6: advance Address by 0 to 0x554 and Line by 1 to 140 (view 1)
  [0x00000482]  Set column to 1
  [0x00000484]  Set is_stmt to 0
  [0x00000485]  Special opcode 6: advance Address by 0 to 0x554 and Line by 1 to 141 (view 2)
  [0x00000486]  Special opcode 19: advance Address by 2 to 0x556 and Line by 0 to 141
  [0x00000487]  Advance PC by 2 to 0x558
  [0x00000489]  Extended opcode 1: End of Sequence

  [0x0000048c]  Set column to 37
  [0x0000048e]  Extended opcode 2: set Address to 0x558
  [0x00000495]  Advance Line by 143 to 144
  [0x00000498]  Copy
  [0x00000499]  Set column to 2
  [0x0000049b]  Special opcode 7: advance Address by 0 to 0x558 and Line by 2 to 146 (view 1)
  [0x0000049c]  Set column to 17
  [0x0000049e]  Set is_stmt to 0
  [0x0000049f]  Copy (view 2)
  [0x000004a0]  Set column to 4
  [0x000004a2]  Special opcode 19: advance Address by 2 to 0x55a and Line by 0 to 146
  [0x000004a3]  Set column to 2
  [0x000004a5]  Set is_stmt to 1
  [0x000004a6]  Special opcode 63: advance Address by 8 to 0x562 and Line by 2 to 148
  [0x000004a7]  Set column to 19
  [0x000004a9]  Set is_stmt to 0
  [0x000004aa]  Copy (view 1)
  [0x000004ab]  Set column to 4
  [0x000004ad]  Special opcode 19: advance Address by 2 to 0x564 and Line by 0 to 148
  [0x000004ae]  Set column to 2
  [0x000004b0]  Set is_stmt to 1
  [0x000004b1]  Special opcode 49: advance Address by 6 to 0x56a and Line by 2 to 150
  [0x000004b2]  Set column to 19
  [0x000004b4]  Set is_stmt to 0
  [0x000004b5]  Copy (view 1)
  [0x000004b6]  Set column to 4
  [0x000004b8]  Special opcode 19: advance Address by 2 to 0x56c and Line by 0 to 150
  [0x000004b9]  Set column to 9
  [0x000004bb]  Special opcode 48: advance Address by 6 to 0x572 and Line by 1 to 151
  [0x000004bc]  Special opcode 19: advance Address by 2 to 0x574 and Line by 0 to 151
  [0x000004bd]  Set column to 51
  [0x000004bf]  Extended opcode 4: set Discriminator to 1
  [0x000004c3]  Special opcode 14: advance Address by 2 to 0x576 and Line by -5 to 146
  [0x000004c4]  Extended opcode 4: set Discriminator to 1
  [0x000004c8]  Special opcode 19: advance Address by 2 to 0x578 and Line by 0 to 146
  [0x000004c9]  Set column to 47
  [0x000004cb]  Extended opcode 4: set Discriminator to 1
  [0x000004cf]  Special opcode 21: advance Address by 2 to 0x57a and Line by 2 to 148
  [0x000004d0]  Extended opcode 4: set Discriminator to 1
  [0x000004d4]  Special opcode 19: advance Address by 2 to 0x57c and Line by 0 to 148
  [0x000004d5]  Set column to 45
  [0x000004d7]  Extended opcode 4: set Discriminator to 1
  [0x000004db]  Special opcode 21: advance Address by 2 to 0x57e and Line by 2 to 150
  [0x000004dc]  Set column to 1
  [0x000004de]  Special opcode 21: advance Address by 2 to 0x580 and Line by 2 to 152
  [0x000004df]  Advance PC by 2 to 0x582
  [0x000004e1]  Extended opcode 1: End of Sequence

  [0x000004e4]  Set column to 44
  [0x000004e6]  Extended opcode 2: set Address to 0x582
  [0x000004ed]  Advance Line by 154 to 155
  [0x000004f0]  Copy
  [0x000004f1]  Set is_stmt to 0
  [0x000004f2]  Copy (view 1)
  [0x000004f3]  Set column to 2
  [0x000004f5]  Set is_stmt to 1
  [0x000004f6]  Special opcode 20: advance Address by 2 to 0x584 and Line by 1 to 156
  [0x000004f7]  Special opcode 7: advance Address by 0 to 0x584 and Line by 2 to 158 (view 1)
  [0x000004f8]  Set column to 6
  [0x000004fa]  Copy (view 2)
  [0x000004fb]  Set column to 13
  [0x000004fd]  Set is_stmt to 0
  [0x000004fe]  Copy (view 3)
  [0x000004ff]  Set column to 11
  [0x00000501]  Special opcode 17: advance Address by 2 to 0x586 and Line by -2 to 156
  [0x00000502]  Set column to 2
  [0x00000504]  Special opcode 21: advance Address by 2 to 0x588 and Line by 2 to 158
  [0x00000505]  Set column to 3
  [0x00000507]  Set is_stmt to 1
  [0x00000508]  Special opcode 20: advance Address by 2 to 0x58a and Line by 1 to 159
  [0x00000509]  Set column to 30
  [0x0000050b]  Set is_stmt to 0
  [0x0000050c]  Copy (view 1)
  [0x0000050d]  Set column to 11
  [0x0000050f]  Special opcode 19: advance Address by 2 to 0x58c and Line by 0 to 159
  [0x00000510]  Set column to 3
  [0x00000512]  Set is_stmt to 1
  [0x00000513]  Special opcode 34: advance Address by 4 to 0x590 and Line by 1 to 160
  [0x00000514]  Set column to 11
  [0x00000516]  Set is_stmt to 0
  [0x00000517]  Copy (view 1)
  [0x00000518]  Set column to 3
  [0x0000051a]  Set is_stmt to 1
  [0x0000051b]  Special opcode 48: advance Address by 6 to 0x596 and Line by 1 to 161
  [0x0000051c]  Set column to 27
  [0x0000051e]  Set is_stmt to 0
  [0x0000051f]  Copy (view 1)
  [0x00000520]  Special opcode 33: advance Address by 4 to 0x59a and Line by 0 to 161
  [0x00000521]  Set column to 12
  [0x00000523]  Special opcode 19: advance Address by 2 to 0x59c and Line by 0 to 161
  [0x00000524]  Special opcode 19: advance Address by 2 to 0x59e and Line by 0 to 161
  [0x00000525]  Special opcode 19: advance Address by 2 to 0x5a0 and Line by 0 to 161
  [0x00000526]  Set column to 22
  [0x00000528]  Extended opcode 4: set Discriminator to 1
  [0x0000052c]  Set is_stmt to 1
  [0x0000052d]  Special opcode 2: advance Address by 0 to 0x5a0 and Line by -3 to 158 (view 1)
  [0x0000052e]  Set column to 2
  [0x00000530]  Special opcode 39: advance Address by 4 to 0x5a4 and Line by 6 to 164
  [0x00000531]  Set column to 1
  [0x00000533]  Set is_stmt to 0
  [0x00000534]  Special opcode 6: advance Address by 0 to 0x5a4 and Line by 1 to 165 (view 1)
  [0x00000535]  Advance PC by 2 to 0x5a6
  [0x00000537]  Extended opcode 1: End of Sequence

  [0x0000053a]  Set column to 28
  [0x0000053c]  Extended opcode 2: set Address to 0x5a8
  [0x00000543]  Advance Line by 166 to 167
  [0x00000546]  Copy
  [0x00000547]  Set column to 2
  [0x00000549]  Special opcode 20: advance Address by 2 to 0x5aa and Line by 1 to 168
  [0x0000054a]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 169 (view 1)
  [0x0000054b]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 170 (view 2)
  [0x0000054c]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 171 (view 3)
  [0x0000054d]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 172 (view 4)
  [0x0000054e]  Special opcode 7: advance Address by 0 to 0x5aa and Line by 2 to 174 (view 5)
  [0x0000054f]  Set column to 7
  [0x00000551]  Set is_stmt to 0
  [0x00000552]  Copy (view 6)
  [0x00000553]  Set is_stmt to 1
  [0x00000554]  Advance Line by 15 to 189
  [0x00000556]  Special opcode 19: advance Address by 2 to 0x5ac and Line by 0 to 189
  [0x00000557]  Set column to 9
  [0x00000559]  Set is_stmt to 0
  [0x0000055a]  Copy (view 1)
  [0x0000055b]  Set column to 7
  [0x0000055d]  Set is_stmt to 1
  [0x0000055e]  Special opcode 35: advance Address by 4 to 0x5b0 and Line by 2 to 191
  [0x0000055f]  Set column to 29
  [0x00000561]  Set is_stmt to 0
  [0x00000562]  Copy (view 1)
  [0x00000563]  Set column to 6
  [0x00000565]  Set is_stmt to 1
  [0x00000566]  Special opcode 34: advance Address by 4 to 0x5b4 and Line by 1 to 192
  [0x00000567]  Set column to 5
  [0x00000569]  Advance Line by 12 to 204
  [0x0000056b]  Special opcode 19: advance Address by 2 to 0x5b6 and Line by 0 to 204
  [0x0000056c]  Set column to 36
  [0x0000056e]  Set is_stmt to 0
  [0x0000056f]  Copy (view 1)
  [0x00000570]  Set column to 40
  [0x00000572]  Special opcode 61: advance Address by 8 to 0x5be and Line by 0 to 204
  [0x00000573]  Set column to 5
  [0x00000575]  Set is_stmt to 1
  [0x00000576]  Special opcode 36: advance Address by 4 to 0x5c2 and Line by 3 to 207
  [0x00000577]  Set column to 7
  [0x00000579]  Set is_stmt to 0
  [0x0000057a]  Copy (view 1)
  [0x0000057b]  Set column to 5
  [0x0000057d]  Set is_stmt to 1
  [0x0000057e]  Special opcode 35: advance Address by 4 to 0x5c6 and Line by 2 to 209
  [0x0000057f]  Set column to 8
  [0x00000581]  Set is_stmt to 0
  [0x00000582]  Copy (view 1)
  [0x00000583]  Set column to 7
  [0x00000585]  Extended opcode 4: set Discriminator to 1
  [0x00000589]  Special opcode 47: advance Address by 6 to 0x5cc and Line by 0 to 209
  [0x0000058a]  Set column to 5
  [0x0000058c]  Set is_stmt to 1
  [0x0000058d]  Special opcode 36: advance Address by 4 to 0x5d0 and Line by 3 to 212
  [0x0000058e]  Set column to 27
  [0x00000590]  Set is_stmt to 0
  [0x00000591]  Copy (view 1)
  [0x00000592]  Set column to 7
  [0x00000594]  Special opcode 33: advance Address by 4 to 0x5d4 and Line by 0 to 212
  [0x00000595]  Set column to 5
  [0x00000597]  Set is_stmt to 1
  [0x00000598]  Special opcode 39: advance Address by 4 to 0x5d8 and Line by 6 to 218
  [0x00000599]  Set column to 18
  [0x0000059b]  Set is_stmt to 0
  [0x0000059c]  Copy (view 1)
  [0x0000059d]  Set column to 5
  [0x0000059f]  Set is_stmt to 1
  [0x000005a0]  Special opcode 48: advance Address by 6 to 0x5de and Line by 1 to 219
  [0x000005a1]  Set column to 19
  [0x000005a3]  Set is_stmt to 0
  [0x000005a4]  Copy (view 1)
  [0x000005a5]  Set column to 5
  [0x000005a7]  Set is_stmt to 1
  [0x000005a8]  Special opcode 34: advance Address by 4 to 0x5e2 and Line by 1 to 220
  [0x000005a9]  Set column to 16
  [0x000005ab]  Set is_stmt to 0
  [0x000005ac]  Copy (view 1)
  [0x000005ad]  Set column to 14
  [0x000005af]  Extended opcode 4: set Discriminator to 1
  [0x000005b3]  Special opcode 47: advance Address by 6 to 0x5e8 and Line by 0 to 220
  [0x000005b4]  Set column to 5
  [0x000005b6]  Set is_stmt to 1
  [0x000005b7]  Special opcode 34: advance Address by 4 to 0x5ec and Line by 1 to 221
  [0x000005b8]  Set column to 16
  [0x000005ba]  Set is_stmt to 0
  [0x000005bb]  Copy (view 1)
  [0x000005bc]  Set column to 6
  [0x000005be]  Set is_stmt to 1
  [0x000005bf]  Special opcode 48: advance Address by 6 to 0x5f2 and Line by 1 to 222
  [0x000005c0]  Set is_stmt to 0
  [0x000005c1]  Copy (view 1)
  [0x000005c2]  Set column to 8
  [0x000005c4]  Set is_stmt to 1
  [0x000005c5]  Advance Line by -48 to 174
  [0x000005c7]  Copy (view 2)
  [0x000005c8]  Extended opcode 4: set Discriminator to 1
  [0x000005cc]  Set is_stmt to 0
  [0x000005cd]  Special opcode 89: advance Address by 12 to 0x5fe and Line by 0 to 174
  [0x000005ce]  Set column to 3
  [0x000005d0]  Set is_stmt to 1
  [0x000005d1]  Special opcode 34: advance Address by 4 to 0x602 and Line by 1 to 175
  [0x000005d2]  Set column to 22
  [0x000005d4]  Set is_stmt to 0
  [0x000005d5]  Copy (view 1)
  [0x000005d6]  Set column to 11
  [0x000005d8]  Extended opcode 4: set Discriminator to 1
  [0x000005dc]  Special opcode 103: advance Address by 14 to 0x610 and Line by 0 to 175
  [0x000005dd]  Set column to 3
  [0x000005df]  Set is_stmt to 1
  [0x000005e0]  Special opcode 20: advance Address by 2 to 0x612 and Line by 1 to 176
  [0x000005e1]  Set column to 6
  [0x000005e3]  Set is_stmt to 0
  [0x000005e4]  Copy (view 1)
  [0x000005e5]  Set column to 5
  [0x000005e7]  Extended opcode 4: set Discriminator to 1
  [0x000005eb]  Special opcode 61: advance Address by 8 to 0x61a and Line by 0 to 176
  [0x000005ec]  Set column to 3
  [0x000005ee]  Set is_stmt to 1
  [0x000005ef]  Special opcode 26: advance Address by 2 to 0x61c and Line by 7 to 183
  [0x000005f0]  Set column to 5
  [0x000005f2]  Special opcode 121: advance Address by 16 to 0x62c and Line by 4 to 187
  [0x000005f3]  Set column to 24
  [0x000005f5]  Set is_stmt to 0
  [0x000005f6]  Copy (view 1)
  [0x000005f7]  Set column to 7
  [0x000005f9]  Set is_stmt to 1
  [0x000005fa]  Special opcode 125: advance Address by 16 to 0x63c and Line by 8 to 195
  [0x000005fb]  Set column to 9
  [0x000005fd]  Set is_stmt to 0
  [0x000005fe]  Copy (view 1)
  [0x000005ff]  Set column to 7
  [0x00000601]  Set is_stmt to 1
  [0x00000602]  Special opcode 34: advance Address by 4 to 0x640 and Line by 1 to 196
  [0x00000603]  Set column to 29
  [0x00000605]  Set is_stmt to 0
  [0x00000606]  Copy (view 1)
  [0x00000607]  Set column to 7
  [0x00000609]  Set is_stmt to 1
  [0x0000060a]  Special opcode 34: advance Address by 4 to 0x644 and Line by 1 to 197
  [0x0000060b]  Set column to 18
  [0x0000060d]  Set is_stmt to 0
  [0x0000060e]  Copy (view 1)
  [0x0000060f]  Set column to 6
  [0x00000611]  Set is_stmt to 1
  [0x00000612]  Special opcode 49: advance Address by 6 to 0x64a and Line by 2 to 199
  [0x00000613]  Advance Line by 14 to 213
  [0x00000615]  Special opcode 19: advance Address by 2 to 0x64c and Line by 0 to 213
  [0x00000616]  Special opcode 34: advance Address by 4 to 0x650 and Line by 1 to 214
  [0x00000617]  Set is_stmt to 0
  [0x00000618]  Copy (view 1)
  [0x00000619]  Set column to 2
  [0x0000061b]  Set is_stmt to 1
  [0x0000061c]  Advance Line by 48 to 262
  [0x0000061e]  Copy (view 2)
  [0x0000061f]  Special opcode 90: advance Address by 12 to 0x65c and Line by 1 to 263
  [0x00000620]  Set column to 15
  [0x00000622]  Set is_stmt to 0
  [0x00000623]  Copy (view 1)
  [0x00000624]  Set column to 2
  [0x00000626]  Set is_stmt to 1
  [0x00000627]  Special opcode 48: advance Address by 6 to 0x662 and Line by 1 to 264
  [0x00000628]  Set column to 16
  [0x0000062a]  Set is_stmt to 0
  [0x0000062b]  Copy (view 1)
  [0x0000062c]  Set column to 2
  [0x0000062e]  Set is_stmt to 1
  [0x0000062f]  Special opcode 34: advance Address by 4 to 0x666 and Line by 1 to 265
  [0x00000630]  Set column to 13
  [0x00000632]  Set is_stmt to 0
  [0x00000633]  Copy (view 1)
  [0x00000634]  Set column to 1
  [0x00000636]  Special opcode 51: advance Address by 6 to 0x66c and Line by 4 to 269
  [0x00000637]  Set column to 5
  [0x00000639]  Set is_stmt to 1
  [0x0000063a]  Advance Line by -44 to 225
  [0x0000063c]  Special opcode 19: advance Address by 2 to 0x66e and Line by 0 to 225
  [0x0000063d]  Special opcode 7: advance Address by 0 to 0x66e and Line by 2 to 227 (view 1)
  [0x0000063e]  Set column to 7
  [0x00000640]  Special opcode 96: advance Address by 12 to 0x67a and Line by 7 to 234
  [0x00000641]  Set column to 20
  [0x00000643]  Set is_stmt to 0
  [0x00000644]  Copy (view 1)
  [0x00000645]  Set column to 7
  [0x00000647]  Set is_stmt to 1
  [0x00000648]  Special opcode 48: advance Address by 6 to 0x680 and Line by 1 to 235
  [0x00000649]  Set column to 12
  [0x0000064b]  Set is_stmt to 0
  [0x0000064c]  Copy (view 1)
  [0x0000064d]  Set column to 7
  [0x0000064f]  Set is_stmt to 1
  [0x00000650]  Special opcode 34: advance Address by 4 to 0x684 and Line by 1 to 236
  [0x00000651]  Set column to 43
  [0x00000653]  Set is_stmt to 0
  [0x00000654]  Copy (view 1)
  [0x00000655]  Set column to 16
  [0x00000657]  Special opcode 61: advance Address by 8 to 0x68c and Line by 0 to 236
  [0x00000658]  Set column to 7
  [0x0000065a]  Set is_stmt to 1
  [0x0000065b]  Special opcode 20: advance Address by 2 to 0x68e and Line by 1 to 237
  [0x0000065c]  Set column to 16
  [0x0000065e]  Set is_stmt to 0
  [0x0000065f]  Copy (view 1)
  [0x00000660]  Set column to 7
  [0x00000662]  Set is_stmt to 1
  [0x00000663]  Special opcode 62: advance Address by 8 to 0x696 and Line by 1 to 238
  [0x00000664]  Set column to 9
  [0x00000666]  Set is_stmt to 0
  [0x00000667]  Copy (view 1)
  [0x00000668]  Set column to 7
  [0x0000066a]  Set is_stmt to 1
  [0x0000066b]  Special opcode 48: advance Address by 6 to 0x69c and Line by 1 to 239
  [0x0000066c]  Set column to 57
  [0x0000066e]  Set is_stmt to 0
  [0x0000066f]  Copy (view 1)
  [0x00000670]  Set column to 93
  [0x00000672]  Special opcode 33: advance Address by 4 to 0x6a0 and Line by 0 to 239
  [0x00000673]  Set column to 24
  [0x00000675]  Special opcode 19: advance Address by 2 to 0x6a2 and Line by 0 to 239
  [0x00000676]  Special opcode 19: advance Address by 2 to 0x6a4 and Line by 0 to 239
  [0x00000677]  Set column to 7
  [0x00000679]  Set is_stmt to 1
  [0x0000067a]  Special opcode 106: advance Address by 14 to 0x6b2 and Line by 3 to 242
  [0x0000067b]  Set column to 22
  [0x0000067d]  Set is_stmt to 0
  [0x0000067e]  Copy (view 1)
  [0x0000067f]  Set column to 7
  [0x00000681]  Set is_stmt to 1
  [0x00000682]  Special opcode 50: advance Address by 6 to 0x6b8 and Line by 3 to 245
  [0x00000683]  Set column to 9
  [0x00000685]  Set is_stmt to 0
  [0x00000686]  Copy (view 1)
  [0x00000687]  Set column to 15
  [0x00000689]  Extended opcode 4: set Discriminator to 1
  [0x0000068d]  Set is_stmt to 1
  [0x0000068e]  Special opcode 19: advance Address by 2 to 0x6ba and Line by 0 to 245
  [0x0000068f]  Set column to 31
  [0x00000691]  Extended opcode 4: set Discriminator to 1
  [0x00000695]  Set is_stmt to 0
  [0x00000696]  Copy (view 1)
  [0x00000697]  Set column to 7
  [0x00000699]  Set is_stmt to 1
  [0x0000069a]  Special opcode 50: advance Address by 6 to 0x6c0 and Line by 3 to 248
  [0x0000069b]  Set column to 10
  [0x0000069d]  Set is_stmt to 0
  [0x0000069e]  Copy (view 1)
  [0x0000069f]  Set column to 9
  [0x000006a1]  Special opcode 47: advance Address by 6 to 0x6c6 and Line by 0 to 248
  [0x000006a2]  Set column to 48
  [0x000006a4]  Special opcode 19: advance Address by 2 to 0x6c8 and Line by 0 to 248
  [0x000006a5]  Set column to 9
  [0x000006a7]  Special opcode 33: advance Address by 4 to 0x6cc and Line by 0 to 248
  [0x000006a8]  Set column to 7
  [0x000006aa]  Set is_stmt to 1
  [0x000006ab]  Advance Line by -19 to 229
  [0x000006ad]  Special opcode 47: advance Address by 6 to 0x6d2 and Line by 0 to 229
  [0x000006ae]  Set column to 11
  [0x000006b0]  Set is_stmt to 0
  [0x000006b1]  Copy (view 1)
  [0x000006b2]  Set column to 7
  [0x000006b4]  Set is_stmt to 1
  [0x000006b5]  Special opcode 34: advance Address by 4 to 0x6d6 and Line by 1 to 230
  [0x000006b6]  Set column to 20
  [0x000006b8]  Set is_stmt to 0
  [0x000006b9]  Copy (view 1)
  [0x000006ba]  Set column to 6
  [0x000006bc]  Set is_stmt to 1
  [0x000006bd]  Special opcode 48: advance Address by 6 to 0x6dc and Line by 1 to 231
  [0x000006be]  Advance PC by 40 to 0x704
  [0x000006c0]  Extended opcode 1: End of Sequence


  Offset:                      0x6c3
  Length:                      629
  DWARF Version:               3
  Prologue Length:             171
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x6de):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x725):
  Entry	Dir	Time	Size	Name
  1	1	0	0	main.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h
  6	1	0	0	timers.h

 Line Number Statements:
  [0x00000778]  Set column to 17
  [0x0000077a]  Extended opcode 2: set Address to 0x704
  [0x00000781]  Advance Line by 19 to 20
  [0x00000783]  Copy
  [0x00000784]  Set column to 2
  [0x00000786]  Special opcode 20: advance Address by 2 to 0x706 and Line by 1 to 21
  [0x00000787]  Special opcode 90: advance Address by 12 to 0x712 and Line by 1 to 22
  [0x00000788]  Special opcode 34: advance Address by 4 to 0x716 and Line by 1 to 23
  [0x00000789]  Special opcode 35: advance Address by 4 to 0x71a and Line by 2 to 25
  [0x0000078a]  Special opcode 35: advance Address by 4 to 0x71e and Line by 2 to 27
  [0x0000078b]  Special opcode 35: advance Address by 4 to 0x722 and Line by 2 to 29
  [0x0000078c]  Special opcode 90: advance Address by 12 to 0x72e and Line by 1 to 30
  [0x0000078d]  Special opcode 36: advance Address by 4 to 0x732 and Line by 3 to 33
  [0x0000078e]  Special opcode 90: advance Address by 12 to 0x73e and Line by 1 to 34
  [0x0000078f]  Special opcode 76: advance Address by 10 to 0x748 and Line by 1 to 35
  [0x00000790]  Special opcode 76: advance Address by 10 to 0x752 and Line by 1 to 36
  [0x00000791]  Special opcode 76: advance Address by 10 to 0x75c and Line by 1 to 37
  [0x00000792]  Special opcode 76: advance Address by 10 to 0x766 and Line by 1 to 38
  [0x00000793]  Special opcode 76: advance Address by 10 to 0x770 and Line by 1 to 39
  [0x00000794]  Special opcode 76: advance Address by 10 to 0x77a and Line by 1 to 40
  [0x00000795]  Special opcode 76: advance Address by 10 to 0x784 and Line by 1 to 41
  [0x00000796]  Special opcode 34: advance Address by 4 to 0x788 and Line by 1 to 42
  [0x00000797]  Special opcode 77: advance Address by 10 to 0x792 and Line by 2 to 44
  [0x00000798]  Special opcode 35: advance Address by 4 to 0x796 and Line by 2 to 46
  [0x00000799]  Set column to 6
  [0x0000079b]  Set is_stmt to 0
  [0x0000079c]  Copy (view 1)
  [0x0000079d]  Set column to 5
  [0x0000079f]  Set is_stmt to 1
  [0x000007a0]  Advance Line by 10 to 56
  [0x000007a2]  Special opcode 33: advance Address by 4 to 0x79a and Line by 0 to 56
  [0x000007a3]  Set column to 49
  [0x000007a5]  Set is_stmt to 0
  [0x000007a6]  Copy (view 1)
  [0x000007a7]  Set column to 26
  [0x000007a9]  Special opcode 47: advance Address by 6 to 0x7a0 and Line by 0 to 56
  [0x000007aa]  Set column to 31
  [0x000007ac]  Extended opcode 4: set Discriminator to 3
  [0x000007b0]  Set is_stmt to 1
  [0x000007b1]  Special opcode 18: advance Address by 2 to 0x7a2 and Line by -1 to 55
  [0x000007b2]  Set column to 23
  [0x000007b4]  Extended opcode 4: set Discriminator to 1
  [0x000007b8]  Special opcode 19: advance Address by 2 to 0x7a4 and Line by 0 to 55
  [0x000007b9]  Set column to 4
  [0x000007bb]  Special opcode 36: advance Address by 4 to 0x7a8 and Line by 3 to 58
  [0x000007bc]  Special opcode 6: advance Address by 0 to 0x7a8 and Line by 1 to 59 (view 1)
  [0x000007bd]  Set column to 6
  [0x000007bf]  Set is_stmt to 0
  [0x000007c0]  Copy (view 2)
  [0x000007c1]  Special opcode 19: advance Address by 2 to 0x7aa and Line by 0 to 59
  [0x000007c2]  Set column to 9
  [0x000007c4]  Advance Line by -7 to 52
  [0x000007c6]  Special opcode 33: advance Address by 4 to 0x7ae and Line by 0 to 52
  [0x000007c7]  Set column to 4
  [0x000007c9]  Set is_stmt to 1
  [0x000007ca]  Advance Line by 10 to 62
  [0x000007cc]  Special opcode 19: advance Address by 2 to 0x7b0 and Line by 0 to 62
  [0x000007cd]  Special opcode 6: advance Address by 0 to 0x7b0 and Line by 1 to 63 (view 1)
  [0x000007ce]  Special opcode 6: advance Address by 0 to 0x7b0 and Line by 1 to 64 (view 2)
  [0x000007cf]  Set column to 8
  [0x000007d1]  Copy (view 3)
  [0x000007d2]  Set is_stmt to 0
  [0x000007d3]  Copy (view 4)
  [0x000007d4]  Special opcode 4: advance Address by 0 to 0x7b0 and Line by -1 to 63 (view 5)
  [0x000007d5]  Set column to 12
  [0x000007d7]  Special opcode 20: advance Address by 2 to 0x7b2 and Line by 1 to 64
  [0x000007d8]  Set column to 4
  [0x000007da]  Special opcode 33: advance Address by 4 to 0x7b6 and Line by 0 to 64
  [0x000007db]  Special opcode 19: advance Address by 2 to 0x7b8 and Line by 0 to 64
  [0x000007dc]  Set column to 47
  [0x000007de]  Extended opcode 4: set Discriminator to 1
  [0x000007e2]  Special opcode 0: advance Address by 0 to 0x7b8 and Line by -5 to 59 (view 1)
  [0x000007e3]  Set column to 33
  [0x000007e5]  Extended opcode 4: set Discriminator to 3
  [0x000007e9]  Set is_stmt to 1
  [0x000007ea]  Special opcode 40: advance Address by 4 to 0x7bc and Line by 7 to 66
  [0x000007eb]  Set column to 71
  [0x000007ed]  Extended opcode 4: set Discriminator to 3
  [0x000007f1]  Set is_stmt to 0
  [0x000007f2]  Copy (view 1)
  [0x000007f3]  Set column to 69
  [0x000007f5]  Extended opcode 4: set Discriminator to 3
  [0x000007f9]  Special opcode 33: advance Address by 4 to 0x7c0 and Line by 0 to 66
  [0x000007fa]  Set column to 99
  [0x000007fc]  Extended opcode 4: set Discriminator to 3
  [0x00000800]  Special opcode 47: advance Address by 6 to 0x7c6 and Line by 0 to 66
  [0x00000801]  Set column to 97
  [0x00000803]  Extended opcode 4: set Discriminator to 3
  [0x00000807]  Special opcode 33: advance Address by 4 to 0x7ca and Line by 0 to 66
  [0x00000808]  Set column to 75
  [0x0000080a]  Extended opcode 4: set Discriminator to 3
  [0x0000080e]  Special opcode 33: advance Address by 4 to 0x7ce and Line by 0 to 66
  [0x0000080f]  Set column to 46
  [0x00000811]  Extended opcode 4: set Discriminator to 3
  [0x00000815]  Special opcode 19: advance Address by 2 to 0x7d0 and Line by 0 to 66
  [0x00000816]  Set column to 29
  [0x00000818]  Extended opcode 4: set Discriminator to 3
  [0x0000081c]  Set is_stmt to 1
  [0x0000081d]  Special opcode 19: advance Address by 2 to 0x7d2 and Line by 0 to 66
  [0x0000081e]  Set column to 22
  [0x00000820]  Extended opcode 4: set Discriminator to 1
  [0x00000824]  Special opcode 19: advance Address by 2 to 0x7d4 and Line by 0 to 66
  [0x00000825]  Set column to 5
  [0x00000827]  Special opcode 34: advance Address by 4 to 0x7d8 and Line by 1 to 67
  [0x00000828]  Set column to 38
  [0x0000082a]  Set is_stmt to 0
  [0x0000082b]  Copy (view 1)
  [0x0000082c]  Special opcode 47: advance Address by 6 to 0x7de and Line by 0 to 67
  [0x0000082d]  Special opcode 33: advance Address by 4 to 0x7e2 and Line by 0 to 67
  [0x0000082e]  Set column to 20
  [0x00000830]  Special opcode 33: advance Address by 4 to 0x7e6 and Line by 0 to 67
  [0x00000831]  Set column to 24
  [0x00000833]  Special opcode 19: advance Address by 2 to 0x7e8 and Line by 0 to 67
  [0x00000834]  Set column to 34
  [0x00000836]  Extended opcode 4: set Discriminator to 2
  [0x0000083a]  Set is_stmt to 1
  [0x0000083b]  Special opcode 30: advance Address by 4 to 0x7ec and Line by -3 to 64
  [0x0000083c]  Set column to 30
  [0x0000083e]  Extended opcode 4: set Discriminator to 2
  [0x00000842]  Set is_stmt to 0
  [0x00000843]  Copy (view 1)
  [0x00000844]  Set column to 37
  [0x00000846]  Extended opcode 4: set Discriminator to 2
  [0x0000084a]  Special opcode 33: advance Address by 4 to 0x7f0 and Line by 0 to 64
  [0x0000084b]  Set column to 22
  [0x0000084d]  Extended opcode 4: set Discriminator to 1
  [0x00000851]  Set is_stmt to 1
  [0x00000852]  Special opcode 19: advance Address by 2 to 0x7f2 and Line by 0 to 64
  [0x00000853]  Set column to 13
  [0x00000855]  Set is_stmt to 0
  [0x00000856]  Special opcode 49: advance Address by 6 to 0x7f8 and Line by 2 to 66
  [0x00000857]  Special opcode 18: advance Address by 2 to 0x7fa and Line by -1 to 65
  [0x00000858]  Special opcode 33: advance Address by 4 to 0x7fe and Line by 0 to 65
  [0x00000859]  Set column to 4
  [0x0000085b]  Set is_stmt to 1
  [0x0000085c]  Special opcode 9: advance Address by 0 to 0x7fe and Line by 4 to 69 (view 1)
  [0x0000085d]  Special opcode 6: advance Address by 0 to 0x7fe and Line by 1 to 70 (view 2)
  [0x0000085e]  Set column to 8
  [0x00000860]  Set is_stmt to 0
  [0x00000861]  Copy (view 3)
  [0x00000862]  Set column to 4
  [0x00000864]  Set is_stmt to 1
  [0x00000865]  Special opcode 48: advance Address by 6 to 0x804 and Line by 1 to 71
  [0x00000866]  Special opcode 6: advance Address by 0 to 0x804 and Line by 1 to 72 (view 1)
  [0x00000867]  Set column to 41
  [0x00000869]  Set is_stmt to 0
  [0x0000086a]  Copy (view 2)
  [0x0000086b]  Set column to 13
  [0x0000086d]  Special opcode 19: advance Address by 2 to 0x806 and Line by 0 to 72
  [0x0000086e]  Set column to 4
  [0x00000870]  Set is_stmt to 1
  [0x00000871]  Special opcode 34: advance Address by 4 to 0x80a and Line by 1 to 73
  [0x00000872]  Set column to 13
  [0x00000874]  Set is_stmt to 0
  [0x00000875]  Special opcode 4: advance Address by 0 to 0x80a and Line by -1 to 72 (view 1)
  [0x00000876]  Set column to 8
  [0x00000878]  Special opcode 18: advance Address by 2 to 0x80c and Line by -1 to 71
  [0x00000879]  Set column to 4
  [0x0000087b]  Special opcode 21: advance Address by 2 to 0x80e and Line by 2 to 73
  [0x0000087c]  Set column to 66
  [0x0000087e]  Extended opcode 4: set Discriminator to 2
  [0x00000882]  Special opcode 20: advance Address by 2 to 0x810 and Line by 1 to 74
  [0x00000883]  Set column to 56
  [0x00000885]  Extended opcode 4: set Discriminator to 2
  [0x00000889]  Special opcode 19: advance Address by 2 to 0x812 and Line by 0 to 74
  [0x0000088a]  Extended opcode 4: set Discriminator to 2
  [0x0000088e]  Special opcode 61: advance Address by 8 to 0x81a and Line by 0 to 74
  [0x0000088f]  Set column to 11
  [0x00000891]  Set is_stmt to 1
  [0x00000892]  Special opcode 4: advance Address by 0 to 0x81a and Line by -1 to 73 (view 1)
  [0x00000893]  Set column to 9
  [0x00000895]  Extended opcode 4: set Discriminator to 1
  [0x00000899]  Special opcode 19: advance Address by 2 to 0x81c and Line by 0 to 73
  [0x0000089a]  Set column to 5
  [0x0000089c]  Special opcode 20: advance Address by 2 to 0x81e and Line by 1 to 74
  [0x0000089d]  Set column to 26
  [0x0000089f]  Set is_stmt to 0
  [0x000008a0]  Copy (view 1)
  [0x000008a1]  Set column to 56
  [0x000008a3]  Special opcode 19: advance Address by 2 to 0x820 and Line by 0 to 74
  [0x000008a4]  Extended opcode 4: set Discriminator to 1
  [0x000008a8]  Special opcode 33: advance Address by 4 to 0x824 and Line by 0 to 74
  [0x000008a9]  Set column to 5
  [0x000008ab]  Set is_stmt to 1
  [0x000008ac]  Special opcode 49: advance Address by 6 to 0x82a and Line by 2 to 76
  [0x000008ad]  Set column to 23
  [0x000008af]  Set is_stmt to 0
  [0x000008b0]  Copy (view 1)
  [0x000008b1]  Set column to 26
  [0x000008b3]  Special opcode 47: advance Address by 6 to 0x830 and Line by 0 to 76
  [0x000008b4]  Set column to 7
  [0x000008b6]  Special opcode 33: advance Address by 4 to 0x834 and Line by 0 to 76
  [0x000008b7]  Set column to 54
  [0x000008b9]  Extended opcode 4: set Discriminator to 1
  [0x000008bd]  Set is_stmt to 1
  [0x000008be]  Special opcode 33: advance Address by 4 to 0x838 and Line by 0 to 76
  [0x000008bf]  Set column to 65
  [0x000008c1]  Extended opcode 4: set Discriminator to 1
  [0x000008c5]  Set is_stmt to 0
  [0x000008c6]  Copy (view 1)
  [0x000008c7]  Set column to 111
  [0x000008c9]  Extended opcode 4: set Discriminator to 1
  [0x000008cd]  Special opcode 19: advance Address by 2 to 0x83a and Line by 0 to 76
  [0x000008ce]  Extended opcode 4: set Discriminator to 1
  [0x000008d2]  Special opcode 33: advance Address by 4 to 0x83e and Line by 0 to 76
  [0x000008d3]  Set column to 4
  [0x000008d5]  Set is_stmt to 1
  [0x000008d6]  Special opcode 8: advance Address by 0 to 0x83e and Line by 3 to 79 (view 1)
  [0x000008d7]  Set column to 6
  [0x000008d9]  Set is_stmt to 0
  [0x000008da]  Copy (view 2)
  [0x000008db]  Set column to 4
  [0x000008dd]  Set is_stmt to 1
  [0x000008de]  Special opcode 50: advance Address by 6 to 0x844 and Line by 3 to 82
  [0x000008df]  Special opcode 6: advance Address by 0 to 0x844 and Line by 1 to 83 (view 1)
  [0x000008e0]  Special opcode 7: advance Address by 0 to 0x844 and Line by 2 to 85 (view 2)
  [0x000008e1]  Set column to 35
  [0x000008e3]  Extended opcode 4: set Discriminator to 1
  [0x000008e7]  Copy (view 3)
  [0x000008e8]  Set column to 4
  [0x000008ea]  Special opcode 6: advance Address by 0 to 0x844 and Line by 1 to 86 (view 4)
  [0x000008eb]  Set column to 38
  [0x000008ed]  Extended opcode 4: set Discriminator to 1
  [0x000008f1]  Copy (view 5)
  [0x000008f2]  Set column to 4
  [0x000008f4]  Special opcode 6: advance Address by 0 to 0x844 and Line by 1 to 87 (view 6)
  [0x000008f5]  Set column to 44
  [0x000008f7]  Extended opcode 4: set Discriminator to 1
  [0x000008fb]  Copy (view 7)
  [0x000008fc]  Set column to 4
  [0x000008fe]  Special opcode 6: advance Address by 0 to 0x844 and Line by 1 to 88 (view 8)
  [0x000008ff]  Set column to 47
  [0x00000901]  Extended opcode 4: set Discriminator to 1
  [0x00000905]  Copy (view 9)
  [0x00000906]  Set column to 4
  [0x00000908]  Special opcode 7: advance Address by 0 to 0x844 and Line by 2 to 90 (view 10)
  [0x00000909]  Set column to 38
  [0x0000090b]  Set is_stmt to 0
  [0x0000090c]  Copy (view 11)
  [0x0000090d]  Set column to 4
  [0x0000090f]  Special opcode 33: advance Address by 4 to 0x848 and Line by 0 to 90
  [0x00000910]  Special opcode 75: advance Address by 10 to 0x852 and Line by 0 to 90
  [0x00000911]  Set column to 2
  [0x00000913]  Set is_stmt to 1
  [0x00000914]  Advance Line by -43 to 47
  [0x00000916]  Copy (view 1)
  [0x00000917]  Set column to 3
  [0x00000919]  Special opcode 6: advance Address by 0 to 0x852 and Line by 1 to 48 (view 2)
  [0x0000091a]  Special opcode 104: advance Address by 14 to 0x860 and Line by 1 to 49
  [0x0000091b]  Special opcode 34: advance Address by 4 to 0x864 and Line by 1 to 50
  [0x0000091c]  Set column to 9
  [0x0000091e]  Set is_stmt to 0
  [0x0000091f]  Copy (view 1)
  [0x00000920]  Set column to 5
  [0x00000922]  Special opcode 19: advance Address by 2 to 0x866 and Line by 0 to 50
  [0x00000923]  Special opcode 75: advance Address by 10 to 0x870 and Line by 0 to 50
  [0x00000924]  Set column to 3
  [0x00000926]  Set is_stmt to 1
  [0x00000927]  Special opcode 90: advance Address by 12 to 0x87c and Line by 1 to 51
  [0x00000928]  Set column to 5
  [0x0000092a]  Set is_stmt to 0
  [0x0000092b]  Copy (view 1)
  [0x0000092c]  Set column to 12
  [0x0000092e]  Special opcode 36: advance Address by 4 to 0x880 and Line by 3 to 54
  [0x0000092f]  Special opcode 20: advance Address by 2 to 0x882 and Line by 1 to 55
  [0x00000930]  Special opcode 33: advance Address by 4 to 0x886 and Line by 0 to 55
  [0x00000931]  Set column to 6
  [0x00000933]  Advance Line by 24 to 79
  [0x00000935]  Copy (view 1)
  [0x00000936]  Special opcode 19: advance Address by 2 to 0x888 and Line by 0 to 79
  [0x00000937]  Advance PC by 44 to 0x8b4
  [0x00000939]  Extended opcode 1: End of Sequence


  Offset:                      0x93c
  Length:                      496
  DWARF Version:               3
  Prologue Length:             146
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x957):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x99e):
  Entry	Dir	Time	Size	Name
  1	1	0	0	timers.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	timers.h

 Line Number Statements:
  [0x000009d8]  Set column to 35
  [0x000009da]  Extended opcode 2: set Address to 0x8b4
  [0x000009e1]  Advance Line by 15 to 16
  [0x000009e3]  Copy
  [0x000009e4]  Set column to 2
  [0x000009e6]  Special opcode 21: advance Address by 2 to 0x8b6 and Line by 2 to 18
  [0x000009e7]  Set column to 21
  [0x000009e9]  Set is_stmt to 0
  [0x000009ea]  Special opcode 47: advance Address by 6 to 0x8bc and Line by 0 to 18
  [0x000009eb]  Set column to 2
  [0x000009ed]  Set is_stmt to 1
  [0x000009ee]  Special opcode 63: advance Address by 8 to 0x8c4 and Line by 2 to 20
  [0x000009ef]  Set column to 53
  [0x000009f1]  Extended opcode 4: set Discriminator to 1
  [0x000009f5]  Copy (view 1)
  [0x000009f6]  Set column to 9
  [0x000009f8]  Extended opcode 4: set Discriminator to 1
  [0x000009fc]  Copy (view 2)
  [0x000009fd]  Set column to 11
  [0x000009ff]  Extended opcode 4: set Discriminator to 1
  [0x00000a03]  Set is_stmt to 0
  [0x00000a04]  Copy (view 3)
  [0x00000a05]  Set column to 9
  [0x00000a07]  Extended opcode 4: set Discriminator to 1
  [0x00000a0b]  Special opcode 47: advance Address by 6 to 0x8ca and Line by 0 to 20
  [0x00000a0c]  Set column to 2
  [0x00000a0e]  Set is_stmt to 1
  [0x00000a0f]  Special opcode 49: advance Address by 6 to 0x8d0 and Line by 2 to 22
  [0x00000a10]  Set column to 15
  [0x00000a12]  Set is_stmt to 0
  [0x00000a13]  Special opcode 33: advance Address by 4 to 0x8d4 and Line by 0 to 22
  [0x00000a14]  Set column to 2
  [0x00000a16]  Set is_stmt to 1
  [0x00000a17]  Special opcode 48: advance Address by 6 to 0x8da and Line by 1 to 23
  [0x00000a18]  Set column to 15
  [0x00000a1a]  Set is_stmt to 0
  [0x00000a1b]  Special opcode 19: advance Address by 2 to 0x8dc and Line by 0 to 23
  [0x00000a1c]  Set column to 2
  [0x00000a1e]  Set is_stmt to 1
  [0x00000a1f]  Special opcode 48: advance Address by 6 to 0x8e2 and Line by 1 to 24
  [0x00000a20]  Set column to 15
  [0x00000a22]  Set is_stmt to 0
  [0x00000a23]  Copy (view 1)
  [0x00000a24]  Set column to 2
  [0x00000a26]  Set is_stmt to 1
  [0x00000a27]  Special opcode 34: advance Address by 4 to 0x8e6 and Line by 1 to 25
  [0x00000a28]  Set column to 16
  [0x00000a2a]  Set is_stmt to 0
  [0x00000a2b]  Special opcode 19: advance Address by 2 to 0x8e8 and Line by 0 to 25
  [0x00000a2c]  Set column to 2
  [0x00000a2e]  Set is_stmt to 1
  [0x00000a2f]  Special opcode 48: advance Address by 6 to 0x8ee and Line by 1 to 26
  [0x00000a30]  Set column to 19
  [0x00000a32]  Set is_stmt to 0
  [0x00000a33]  Copy (view 1)
  [0x00000a34]  Extended opcode 4: set Discriminator to 1
  [0x00000a38]  Special opcode 75: advance Address by 10 to 0x8f8 and Line by 0 to 26
  [0x00000a39]  Set column to 31
  [0x00000a3b]  Extended opcode 4: set Discriminator to 1
  [0x00000a3f]  Special opcode 19: advance Address by 2 to 0x8fa and Line by 0 to 26
  [0x00000a40]  Set column to 17
  [0x00000a42]  Extended opcode 4: set Discriminator to 1
  [0x00000a46]  Special opcode 19: advance Address by 2 to 0x8fc and Line by 0 to 26
  [0x00000a47]  Set column to 2
  [0x00000a49]  Set is_stmt to 1
  [0x00000a4a]  Special opcode 20: advance Address by 2 to 0x8fe and Line by 1 to 27
  [0x00000a4b]  Set column to 16
  [0x00000a4d]  Set is_stmt to 0
  [0x00000a4e]  Copy (view 1)
  [0x00000a4f]  Set column to 2
  [0x00000a51]  Set is_stmt to 1
  [0x00000a52]  Special opcode 20: advance Address by 2 to 0x900 and Line by 1 to 28
  [0x00000a53]  Set column to 15
  [0x00000a55]  Set is_stmt to 0
  [0x00000a56]  Special opcode 19: advance Address by 2 to 0x902 and Line by 0 to 28
  [0x00000a57]  Set column to 2
  [0x00000a59]  Set is_stmt to 1
  [0x00000a5a]  Special opcode 48: advance Address by 6 to 0x908 and Line by 1 to 29
  [0x00000a5b]  Set column to 15
  [0x00000a5d]  Set is_stmt to 0
  [0x00000a5e]  Special opcode 19: advance Address by 2 to 0x90a and Line by 0 to 29
  [0x00000a5f]  Set column to 2
  [0x00000a61]  Set is_stmt to 1
  [0x00000a62]  Special opcode 48: advance Address by 6 to 0x910 and Line by 1 to 30
  [0x00000a63]  Set column to 13
  [0x00000a65]  Set is_stmt to 0
  [0x00000a66]  Copy (view 1)
  [0x00000a67]  Set column to 2
  [0x00000a69]  Set is_stmt to 1
  [0x00000a6a]  Special opcode 90: advance Address by 12 to 0x91c and Line by 1 to 31
  [0x00000a6b]  Set column to 15
  [0x00000a6d]  Set is_stmt to 0
  [0x00000a6e]  Special opcode 19: advance Address by 2 to 0x91e and Line by 0 to 31
  [0x00000a6f]  Set column to 1
  [0x00000a71]  Special opcode 48: advance Address by 6 to 0x924 and Line by 1 to 32
  [0x00000a72]  Advance PC by 12 to 0x930
  [0x00000a74]  Extended opcode 1: End of Sequence

  [0x00000a77]  Set column to 27
  [0x00000a79]  Extended opcode 2: set Address to 0x930
  [0x00000a80]  Advance Line by 33 to 34
  [0x00000a82]  Copy
  [0x00000a83]  Set column to 2
  [0x00000a85]  Special opcode 20: advance Address by 2 to 0x932 and Line by 1 to 35
  [0x00000a86]  Special opcode 6: advance Address by 0 to 0x932 and Line by 1 to 36 (view 1)
  [0x00000a87]  Special opcode 7: advance Address by 0 to 0x932 and Line by 2 to 38 (view 2)
  [0x00000a88]  Set column to 15
  [0x00000a8a]  Set is_stmt to 0
  [0x00000a8b]  Special opcode 33: advance Address by 4 to 0x936 and Line by 0 to 38
  [0x00000a8c]  Set column to 2
  [0x00000a8e]  Set is_stmt to 1
  [0x00000a8f]  Special opcode 48: advance Address by 6 to 0x93c and Line by 1 to 39
  [0x00000a90]  Set column to 15
  [0x00000a92]  Set is_stmt to 0
  [0x00000a93]  Special opcode 19: advance Address by 2 to 0x93e and Line by 0 to 39
  [0x00000a94]  Set column to 2
  [0x00000a96]  Set is_stmt to 1
  [0x00000a97]  Special opcode 49: advance Address by 6 to 0x944 and Line by 2 to 41
  [0x00000a98]  Set column to 23
  [0x00000a9a]  Set is_stmt to 0
  [0x00000a9b]  Copy (view 1)
  [0x00000a9c]  Set column to 2
  [0x00000a9e]  Set is_stmt to 1
  [0x00000a9f]  Special opcode 120: advance Address by 16 to 0x954 and Line by 3 to 44
  [0x00000aa0]  Set column to 5
  [0x00000aa2]  Set is_stmt to 0
  [0x00000aa3]  Copy (view 1)
  [0x00000aa4]  Set column to 4
  [0x00000aa6]  Special opcode 61: advance Address by 8 to 0x95c and Line by 0 to 44
  [0x00000aa7]  Set column to 2
  [0x00000aa9]  Set is_stmt to 1
  [0x00000aaa]  Special opcode 52: advance Address by 6 to 0x962 and Line by 5 to 49
  [0x00000aab]  Set column to 15
  [0x00000aad]  Set is_stmt to 0
  [0x00000aae]  Special opcode 33: advance Address by 4 to 0x966 and Line by 0 to 49
  [0x00000aaf]  Set column to 1
  [0x00000ab1]  Special opcode 48: advance Address by 6 to 0x96c and Line by 1 to 50
  [0x00000ab2]  Set column to 3
  [0x00000ab4]  Set is_stmt to 1
  [0x00000ab5]  Special opcode 42: advance Address by 6 to 0x972 and Line by -5 to 45
  [0x00000ab6]  Set column to 17
  [0x00000ab8]  Set is_stmt to 0
  [0x00000ab9]  Copy (view 1)
  [0x00000aba]  Set column to 3
  [0x00000abc]  Set is_stmt to 1
  [0x00000abd]  Special opcode 62: advance Address by 8 to 0x97a and Line by 1 to 46
  [0x00000abe]  Set column to 18
  [0x00000ac0]  Set is_stmt to 0
  [0x00000ac1]  Copy (view 1)
  [0x00000ac2]  Advance PC by 26 to 0x994
  [0x00000ac4]  Extended opcode 1: End of Sequence

  [0x00000ac7]  Set column to 34
  [0x00000ac9]  Extended opcode 2: set Address to 0
  [0x00000ad0]  Advance Line by 51 to 52
  [0x00000ad2]  Copy
  [0x00000ad3]  Set column to 3
  [0x00000ad5]  Special opcode 39: advance Address by 4 to 0x4 and Line by 6 to 58
  [0x00000ad6]  Set column to 22
  [0x00000ad8]  Set is_stmt to 0
  [0x00000ad9]  Copy (view 1)
  [0x00000ada]  Set column to 3
  [0x00000adc]  Set is_stmt to 1
  [0x00000add]  Special opcode 48: advance Address by 6 to 0xa and Line by 1 to 59
  [0x00000ade]  Set column to 16
  [0x00000ae0]  Set is_stmt to 0
  [0x00000ae1]  Copy (view 1)
  [0x00000ae2]  Set column to 31
  [0x00000ae4]  Extended opcode 4: set Discriminator to 1
  [0x00000ae8]  Special opcode 75: advance Address by 10 to 0x14 and Line by 0 to 59
  [0x00000ae9]  Set column to 14
  [0x00000aeb]  Extended opcode 4: set Discriminator to 1
  [0x00000aef]  Special opcode 33: advance Address by 4 to 0x18 and Line by 0 to 59
  [0x00000af0]  Set column to 11
  [0x00000af2]  Set is_stmt to 1
  [0x00000af3]  Special opcode 35: advance Address by 4 to 0x1c and Line by 2 to 61
  [0x00000af4]  Set column to 2
  [0x00000af6]  Advance Line by -8 to 53
  [0x00000af8]  Special opcode 61: advance Address by 8 to 0x24 and Line by 0 to 53
  [0x00000af9]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 54 (view 1)
  [0x00000afa]  Special opcode 7: advance Address by 0 to 0x24 and Line by 2 to 56 (view 2)
  [0x00000afb]  Set column to 3
  [0x00000afd]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 57 (view 3)
  [0x00000afe]  Set column to 6
  [0x00000b00]  Set is_stmt to 0
  [0x00000b01]  Copy (view 4)
  [0x00000b02]  Set column to 5
  [0x00000b04]  Special opcode 33: advance Address by 4 to 0x28 and Line by 0 to 57
  [0x00000b05]  Set column to 28
  [0x00000b07]  Extended opcode 4: set Discriminator to 1
  [0x00000b0b]  Set is_stmt to 1
  [0x00000b0c]  Special opcode 47: advance Address by 6 to 0x2e and Line by 0 to 57
  [0x00000b0d]  Set column to 2
  [0x00000b0f]  Special opcode 53: advance Address by 6 to 0x34 and Line by 6 to 63
  [0x00000b10]  Set column to 10
  [0x00000b12]  Set is_stmt to 0
  [0x00000b13]  Copy (view 1)
  [0x00000b14]  Extended opcode 4: set Discriminator to 1
  [0x00000b18]  Special opcode 75: advance Address by 10 to 0x3e and Line by 0 to 63
  [0x00000b19]  Set column to 23
  [0x00000b1b]  Extended opcode 4: set Discriminator to 1
  [0x00000b1f]  Special opcode 19: advance Address by 2 to 0x40 and Line by 0 to 63
  [0x00000b20]  Set column to 45
  [0x00000b22]  Extended opcode 4: set Discriminator to 1
  [0x00000b26]  Special opcode 61: advance Address by 8 to 0x48 and Line by 0 to 63
  [0x00000b27]  Set column to 1
  [0x00000b29]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 64
  [0x00000b2a]  Special opcode 47: advance Address by 6 to 0x50 and Line by 0 to 64
  [0x00000b2b]  Advance PC by 8 to 0x58
  [0x00000b2d]  Extended opcode 1: End of Sequence


  Offset:                      0xb30
  Length:                      1057
  DWARF Version:               3
  Prologue Length:             206
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0xb4b):
  1	src
  2	/usr/lib/gcc/arm-none-eabi/13.2.0/include
  3	/usr/arm-none-eabi/include/machine
  4	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0xbbc):
  Entry	Dir	Time	Size	Name
  1	1	0	0	uart_print.c
  2	2	0	0	stdarg.h
  3	3	0	0	_default_types.h
  4	4	0	0	_stdint.h
  5	0	0	0	<built-in>

 Line Number Statements:
  [0x00000c08]  Set column to 30
  [0x00000c0a]  Extended opcode 2: set Address to 0x994
  [0x00000c11]  Advance Line by 14 to 15
  [0x00000c13]  Copy
  [0x00000c14]  Set column to 2
  [0x00000c16]  Special opcode 20: advance Address by 2 to 0x996 and Line by 1 to 16
  [0x00000c17]  Special opcode 90: advance Address by 12 to 0x9a2 and Line by 1 to 17
  [0x00000c18]  Special opcode 62: advance Address by 8 to 0x9aa and Line by 1 to 18
  [0x00000c19]  Set column to 57
  [0x00000c1b]  Extended opcode 4: set Discriminator to 1
  [0x00000c1f]  Copy (view 1)
  [0x00000c20]  Set column to 8
  [0x00000c22]  Extended opcode 4: set Discriminator to 1
  [0x00000c26]  Copy (view 2)
  [0x00000c27]  Set column to 9
  [0x00000c29]  Extended opcode 4: set Discriminator to 1
  [0x00000c2d]  Set is_stmt to 0
  [0x00000c2e]  Copy (view 3)
  [0x00000c2f]  Set column to 8
  [0x00000c31]  Extended opcode 4: set Discriminator to 1
  [0x00000c35]  Special opcode 103: advance Address by 14 to 0x9b8 and Line by 0 to 18
  [0x00000c36]  Set column to 58
  [0x00000c38]  Extended opcode 4: set Discriminator to 2
  [0x00000c3c]  Set is_stmt to 1
  [0x00000c3d]  Special opcode 33: advance Address by 4 to 0x9bc and Line by 0 to 18
  [0x00000c3e]  Set column to 2
  [0x00000c40]  Special opcode 7: advance Address by 0 to 0x9bc and Line by 2 to 20 (view 1)
  [0x00000c41]  Special opcode 146: advance Address by 20 to 0x9d0 and Line by 1 to 21
  [0x00000c42]  Special opcode 104: advance Address by 14 to 0x9de and Line by 1 to 22
  [0x00000c43]  Special opcode 90: advance Address by 12 to 0x9ea and Line by 1 to 23
  [0x00000c44]  Set column to 38
  [0x00000c46]  Set is_stmt to 0
  [0x00000c47]  Special opcode 33: advance Address by 4 to 0x9ee and Line by 0 to 23
  [0x00000c48]  Set column to 2
  [0x00000c4a]  Special opcode 33: advance Address by 4 to 0x9f2 and Line by 0 to 23
  [0x00000c4b]  Extended opcode 4: set Discriminator to 1
  [0x00000c4f]  Special opcode 33: advance Address by 4 to 0x9f6 and Line by 0 to 23
  [0x00000c50]  Set column to 1
  [0x00000c52]  Special opcode 63: advance Address by 8 to 0x9fe and Line by 2 to 25
  [0x00000c53]  Advance PC by 18 to 0xa10
  [0x00000c55]  Extended opcode 1: End of Sequence

  [0x00000c58]  Set column to 22
  [0x00000c5a]  Extended opcode 2: set Address to 0xa10
  [0x00000c61]  Advance Line by 26 to 27
  [0x00000c63]  Copy
  [0x00000c64]  Set is_stmt to 0
  [0x00000c65]  Copy (view 1)
  [0x00000c66]  Set column to 2
  [0x00000c68]  Set is_stmt to 1
  [0x00000c69]  Special opcode 34: advance Address by 4 to 0xa14 and Line by 1 to 28
  [0x00000c6a]  Special opcode 6: advance Address by 0 to 0xa14 and Line by 1 to 29 (view 1)
  [0x00000c6b]  Set is_stmt to 0
  [0x00000c6c]  Special opcode 75: advance Address by 10 to 0xa1e and Line by 0 to 29
  [0x00000c6d]  Set is_stmt to 1
  [0x00000c6e]  Special opcode 20: advance Address by 2 to 0xa20 and Line by 1 to 30
  [0x00000c6f]  Set column to 35
  [0x00000c71]  Extended opcode 4: set Discriminator to 1
  [0x00000c75]  Copy (view 1)
  [0x00000c76]  Set column to 8
  [0x00000c78]  Extended opcode 4: set Discriminator to 1
  [0x00000c7c]  Copy (view 2)
  [0x00000c7d]  Set column to 36
  [0x00000c7f]  Extended opcode 4: set Discriminator to 2
  [0x00000c83]  Special opcode 117: advance Address by 16 to 0xa30 and Line by 0 to 30
  [0x00000c84]  Set column to 2
  [0x00000c86]  Special opcode 8: advance Address by 0 to 0xa30 and Line by 3 to 33 (view 1)
  [0x00000c87]  Set column to 5
  [0x00000c89]  Set is_stmt to 0
  [0x00000c8a]  Copy (view 2)
  [0x00000c8b]  Set column to 4
  [0x00000c8d]  Special opcode 47: advance Address by 6 to 0xa36 and Line by 0 to 33
  [0x00000c8e]  Set column to 3
  [0x00000c90]  Set is_stmt to 1
  [0x00000c91]  Special opcode 48: advance Address by 6 to 0xa3c and Line by 1 to 34
  [0x00000c92]  Set column to 23
  [0x00000c94]  Set is_stmt to 0
  [0x00000c95]  Copy (view 1)
  [0x00000c96]  Set column to 3
  [0x00000c98]  Set is_stmt to 1
  [0x00000c99]  Special opcode 35: advance Address by 4 to 0xa40 and Line by 2 to 36
  [0x00000c9a]  Set column to 7
  [0x00000c9c]  Copy (view 1)
  [0x00000c9d]  Set column to 3
  [0x00000c9f]  Set is_stmt to 0
  [0x00000ca0]  Copy (view 2)
  [0x00000ca1]  Set column to 4
  [0x00000ca3]  Set is_stmt to 1
  [0x00000ca4]  Special opcode 20: advance Address by 2 to 0xa42 and Line by 1 to 37
  [0x00000ca5]  Set column to 28
  [0x00000ca7]  Extended opcode 4: set Discriminator to 3
  [0x00000cab]  Special opcode 18: advance Address by 2 to 0xa44 and Line by -1 to 36
  [0x00000cac]  Set column to 20
  [0x00000cae]  Extended opcode 4: set Discriminator to 1
  [0x00000cb2]  Special opcode 19: advance Address by 2 to 0xa46 and Line by 0 to 36
  [0x00000cb3]  Extended opcode 4: set Discriminator to 1
  [0x00000cb7]  Set is_stmt to 0
  [0x00000cb8]  Special opcode 47: advance Address by 6 to 0xa4c and Line by 0 to 36
  [0x00000cb9]  Set column to 1
  [0x00000cbb]  Special opcode 9: advance Address by 0 to 0xa4c and Line by 4 to 40 (view 1)
  [0x00000cbc]  Advance PC by 12 to 0xa58
  [0x00000cbe]  Extended opcode 1: End of Sequence

  [0x00000cc1]  Set column to 43
  [0x00000cc3]  Extended opcode 2: set Address to 0xa58
  [0x00000cca]  Advance Line by 41 to 42
  [0x00000ccc]  Copy
  [0x00000ccd]  Set is_stmt to 0
  [0x00000cce]  Copy (view 1)
  [0x00000ccf]  Set column to 2
  [0x00000cd1]  Set is_stmt to 1
  [0x00000cd2]  Special opcode 34: advance Address by 4 to 0xa5c and Line by 1 to 43
  [0x00000cd3]  Set column to 6
  [0x00000cd5]  Copy (view 1)
  [0x00000cd6]  Set column to 10
  [0x00000cd8]  Set is_stmt to 0
  [0x00000cd9]  Copy (view 2)
  [0x00000cda]  Set column to 2
  [0x00000cdc]  Special opcode 19: advance Address by 2 to 0xa5e and Line by 0 to 43
  [0x00000cdd]  Set column to 3
  [0x00000cdf]  Set is_stmt to 1
  [0x00000ce0]  Special opcode 20: advance Address by 2 to 0xa60 and Line by 1 to 44
  [0x00000ce1]  Set column to 34
  [0x00000ce3]  Extended opcode 4: set Discriminator to 3
  [0x00000ce7]  Special opcode 32: advance Address by 4 to 0xa64 and Line by -1 to 43
  [0x00000ce8]  Set column to 24
  [0x00000cea]  Extended opcode 4: set Discriminator to 1
  [0x00000cee]  Special opcode 19: advance Address by 2 to 0xa66 and Line by 0 to 43
  [0x00000cef]  Set column to 20
  [0x00000cf1]  Extended opcode 4: set Discriminator to 1
  [0x00000cf5]  Set is_stmt to 0
  [0x00000cf6]  Copy (view 1)
  [0x00000cf7]  Set column to 24
  [0x00000cf9]  Extended opcode 4: set Discriminator to 1
  [0x00000cfd]  Special opcode 19: advance Address by 2 to 0xa68 and Line by 0 to 43
  [0x00000cfe]  Set column to 1
  [0x00000d00]  Special opcode 36: advance Address by 4 to 0xa6c and Line by 3 to 46
  [0x00000d01]  Special opcode 19: advance Address by 2 to 0xa6e and Line by 0 to 46
  [0x00000d02]  Extended opcode 1: End of Sequence

  [0x00000d05]  Set column to 42
  [0x00000d07]  Extended opcode 2: set Address to 0xa70
  [0x00000d0e]  Advance Line by 47 to 48
  [0x00000d10]  Copy
  [0x00000d11]  Set is_stmt to 0
  [0x00000d12]  Copy (view 1)
  [0x00000d13]  Set column to 2
  [0x00000d15]  Set is_stmt to 1
  [0x00000d16]  Special opcode 35: advance Address by 4 to 0xa74 and Line by 2 to 50
  [0x00000d17]  Special opcode 7: advance Address by 0 to 0xa74 and Line by 2 to 52 (view 1)
  [0x00000d18]  Set column to 6
  [0x00000d1a]  Set is_stmt to 0
  [0x00000d1b]  Copy (view 2)
  [0x00000d1c]  Set column to 2
  [0x00000d1e]  Set is_stmt to 1
  [0x00000d1f]  Special opcode 21: advance Address by 2 to 0xa76 and Line by 2 to 54
  [0x00000d20]  Set column to 3
  [0x00000d22]  Special opcode 6: advance Address by 0 to 0xa76 and Line by 1 to 55 (view 1)
  [0x00000d23]  Set column to 37
  [0x00000d25]  Set is_stmt to 0
  [0x00000d26]  Copy (view 2)
  [0x00000d27]  Set column to 19
  [0x00000d29]  Special opcode 145: advance Address by 20 to 0xa8a and Line by 0 to 55
  [0x00000d2a]  Set column to 17
  [0x00000d2c]  Special opcode 19: advance Address by 2 to 0xa8c and Line by 0 to 55
  [0x00000d2d]  Special opcode 47: advance Address by 6 to 0xa92 and Line by 0 to 55
  [0x00000d2e]  Set column to 3
  [0x00000d30]  Set is_stmt to 1
  [0x00000d31]  Special opcode 34: advance Address by 4 to 0xa96 and Line by 1 to 56
  [0x00000d32]  Set column to 7
  [0x00000d34]  Set is_stmt to 0
  [0x00000d35]  Special opcode 19: advance Address by 2 to 0xa98 and Line by 0 to 56
  [0x00000d36]  Set column to 15
  [0x00000d38]  Extended opcode 4: set Discriminator to 1
  [0x00000d3c]  Set is_stmt to 1
  [0x00000d3d]  Special opcode 20: advance Address by 2 to 0xa9a and Line by 1 to 57
  [0x00000d3e]  Set column to 3
  [0x00000d40]  Special opcode 50: advance Address by 6 to 0xaa0 and Line by 3 to 60
  [0x00000d41]  Set column to 22
  [0x00000d43]  Set is_stmt to 0
  [0x00000d44]  Copy (view 1)
  [0x00000d45]  Set column to 3
  [0x00000d47]  Special opcode 19: advance Address by 2 to 0xaa2 and Line by 0 to 60
  [0x00000d48]  Set column to 22
  [0x00000d4a]  Extended opcode 4: set Discriminator to 2
  [0x00000d4e]  Set is_stmt to 1
  [0x00000d4f]  Special opcode 102: advance Address by 14 to 0xab0 and Line by -1 to 59
  [0x00000d50]  Set column to 8
  [0x00000d52]  Extended opcode 4: set Discriminator to 1
  [0x00000d56]  Copy (view 1)
  [0x00000d57]  Set column to 1
  [0x00000d59]  Set is_stmt to 0
  [0x00000d5a]  Special opcode 36: advance Address by 4 to 0xab4 and Line by 3 to 62
  [0x00000d5b]  Special opcode 33: advance Address by 4 to 0xab8 and Line by 0 to 62
  [0x00000d5c]  Advance PC by 4 to 0xabc
  [0x00000d5e]  Extended opcode 1: End of Sequence

  [0x00000d61]  Set column to 32
  [0x00000d63]  Extended opcode 2: set Address to 0xabc
  [0x00000d6a]  Advance Line by 63 to 64
  [0x00000d6c]  Copy
  [0x00000d6d]  Set is_stmt to 0
  [0x00000d6e]  Copy (view 1)
  [0x00000d6f]  Set column to 2
  [0x00000d71]  Set is_stmt to 1
  [0x00000d72]  Special opcode 21: advance Address by 2 to 0xabe and Line by 2 to 66
  [0x00000d73]  Set column to 5
  [0x00000d75]  Set is_stmt to 0
  [0x00000d76]  Copy (view 1)
  [0x00000d77]  Set column to 2
  [0x00000d79]  Set is_stmt to 1
  [0x00000d7a]  Special opcode 38: advance Address by 4 to 0xac2 and Line by 5 to 71
  [0x00000d7b]  Set column to 1
  [0x00000d7d]  Set is_stmt to 0
  [0x00000d7e]  Special opcode 48: advance Address by 6 to 0xac8 and Line by 1 to 72
  [0x00000d7f]  Set column to 3
  [0x00000d81]  Set is_stmt to 1
  [0x00000d82]  Special opcode 14: advance Address by 2 to 0xaca and Line by -5 to 67
  [0x00000d83]  Set is_stmt to 0
  [0x00000d84]  Special opcode 19: advance Address by 2 to 0xacc and Line by 0 to 67
  [0x00000d85]  Set is_stmt to 1
  [0x00000d86]  Special opcode 34: advance Address by 4 to 0xad0 and Line by 1 to 68
  [0x00000d87]  Set column to 7
  [0x00000d89]  Set is_stmt to 0
  [0x00000d8a]  Copy (view 1)
  [0x00000d8b]  Special opcode 19: advance Address by 2 to 0xad2 and Line by 0 to 68
  [0x00000d8c]  Advance PC by 2 to 0xad4
  [0x00000d8e]  Extended opcode 1: End of Sequence

  [0x00000d91]  Set column to 32
  [0x00000d93]  Extended opcode 2: set Address to 0xad4
  [0x00000d9a]  Advance Line by 73 to 74
  [0x00000d9d]  Copy
  [0x00000d9e]  Set is_stmt to 0
  [0x00000d9f]  Copy (view 1)
  [0x00000da0]  Set column to 2
  [0x00000da2]  Set is_stmt to 1
  [0x00000da3]  Special opcode 63: advance Address by 8 to 0xadc and Line by 2 to 76
  [0x00000da4]  Set column to 4
  [0x00000da6]  Set is_stmt to 0
  [0x00000da7]  Copy (view 1)
  [0x00000da8]  Set column to 2
  [0x00000daa]  Set is_stmt to 1
  [0x00000dab]  Special opcode 80: advance Address by 10 to 0xae6 and Line by 5 to 81
  [0x00000dac]  Set column to 15
  [0x00000dae]  Set is_stmt to 0
  [0x00000daf]  Copy (view 1)
  [0x00000db0]  Set column to 4
  [0x00000db2]  Special opcode 89: advance Address by 12 to 0xaf2 and Line by 0 to 81
  [0x00000db3]  Set column to 24
  [0x00000db5]  Extended opcode 4: set Discriminator to 1
  [0x00000db9]  Special opcode 75: advance Address by 10 to 0xafc and Line by 0 to 81
  [0x00000dba]  Set column to 2
  [0x00000dbc]  Set is_stmt to 1
  [0x00000dbd]  Special opcode 108: advance Address by 14 to 0xb0a and Line by 5 to 86
  [0x00000dbe]  Set column to 4
  [0x00000dc0]  Set is_stmt to 0
  [0x00000dc1]  Copy (view 1)
  [0x00000dc2]  Set column to 30
  [0x00000dc4]  Extended opcode 4: set Discriminator to 1
  [0x00000dc8]  Special opcode 103: advance Address by 14 to 0xb18 and Line by 0 to 86
  [0x00000dc9]  Set column to 25
  [0x00000dcb]  Extended opcode 4: set Discriminator to 1
  [0x00000dcf]  Special opcode 61: advance Address by 8 to 0xb20 and Line by 0 to 86
  [0x00000dd0]  Set column to 2
  [0x00000dd2]  Set is_stmt to 1
  [0x00000dd3]  Special opcode 80: advance Address by 10 to 0xb2a and Line by 5 to 91
  [0x00000dd4]  Special opcode 7: advance Address by 0 to 0xb2a and Line by 2 to 93 (view 1)
  [0x00000dd5]  Set column to 4
  [0x00000dd7]  Set is_stmt to 0
  [0x00000dd8]  Copy (view 2)
  [0x00000dd9]  Set column to 2
  [0x00000ddb]  Set is_stmt to 1
  [0x00000ddc]  Special opcode 80: advance Address by 10 to 0xb34 and Line by 5 to 98
  [0x00000ddd]  Set column to 11
  [0x00000ddf]  Set is_stmt to 0
  [0x00000de0]  Copy (view 1)
  [0x00000de1]  Set column to 2
  [0x00000de3]  Set is_stmt to 1
  [0x00000de4]  Special opcode 34: advance Address by 4 to 0xb38 and Line by 1 to 99
  [0x00000de5]  Set column to 44
  [0x00000de7]  Set is_stmt to 0
  [0x00000de8]  Copy (view 1)
  [0x00000de9]  Set column to 59
  [0x00000deb]  Special opcode 61: advance Address by 8 to 0xb40 and Line by 0 to 99
  [0x00000dec]  Set column to 11
  [0x00000dee]  Special opcode 61: advance Address by 8 to 0xb48 and Line by 0 to 99
  [0x00000def]  Set column to 2
  [0x00000df1]  Set is_stmt to 1
  [0x00000df2]  Special opcode 63: advance Address by 8 to 0xb50 and Line by 2 to 101
  [0x00000df3]  Special opcode 7: advance Address by 0 to 0xb50 and Line by 2 to 103 (view 1)
  [0x00000df4]  Set column to 6
  [0x00000df6]  Copy (view 2)
  [0x00000df7]  Set column to 10
  [0x00000df9]  Set is_stmt to 0
  [0x00000dfa]  Copy (view 3)
  [0x00000dfb]  Set column to 6
  [0x00000dfd]  Special opcode 17: advance Address by 2 to 0xb52 and Line by -2 to 101
  [0x00000dfe]  Set column to 2
  [0x00000e00]  Special opcode 21: advance Address by 2 to 0xb54 and Line by 2 to 103
  [0x00000e01]  Special opcode 19: advance Address by 2 to 0xb56 and Line by 0 to 103
  [0x00000e02]  Set column to 3
  [0x00000e04]  Set is_stmt to 1
  [0x00000e05]  Advance Line by -26 to 77
  [0x00000e07]  Copy (view 1)
  [0x00000e08]  Special opcode 48: advance Address by 6 to 0xb5c and Line by 1 to 78
  [0x00000e09]  Special opcode 23: advance Address by 2 to 0xb5e and Line by 4 to 82
  [0x00000e0a]  Special opcode 48: advance Address by 6 to 0xb64 and Line by 1 to 83
  [0x00000e0b]  Set column to 1
  [0x00000e0d]  Set is_stmt to 0
  [0x00000e0e]  Advance Line by 32 to 115
  [0x00000e10]  Copy (view 1)
  [0x00000e11]  Set column to 3
  [0x00000e13]  Set is_stmt to 1
  [0x00000e14]  Advance Line by -28 to 87
  [0x00000e16]  Special opcode 61: advance Address by 8 to 0xb6c and Line by 0 to 87
  [0x00000e17]  Special opcode 48: advance Address by 6 to 0xb72 and Line by 1 to 88
  [0x00000e18]  Special opcode 25: advance Address by 2 to 0xb74 and Line by 6 to 94
  [0x00000e19]  Special opcode 48: advance Address by 6 to 0xb7a and Line by 1 to 95
  [0x00000e1a]  Set column to 10
  [0x00000e1c]  Set is_stmt to 0
  [0x00000e1d]  Copy (view 1)
  [0x00000e1e]  Set column to 3
  [0x00000e20]  Set is_stmt to 1
  [0x00000e21]  Advance Line by 9 to 104
  [0x00000e23]  Special opcode 47: advance Address by 6 to 0xb80 and Line by 0 to 104
  [0x00000e24]  Set column to 44
  [0x00000e26]  Set is_stmt to 0
  [0x00000e27]  Copy (view 1)
  [0x00000e28]  Set column to 19
  [0x00000e2a]  Special opcode 131: advance Address by 18 to 0xb92 and Line by 0 to 104
  [0x00000e2b]  Set column to 17
  [0x00000e2d]  Special opcode 19: advance Address by 2 to 0xb94 and Line by 0 to 104
  [0x00000e2e]  Special opcode 33: advance Address by 4 to 0xb98 and Line by 0 to 104
  [0x00000e2f]  Set column to 3
  [0x00000e31]  Set is_stmt to 1
  [0x00000e32]  Special opcode 48: advance Address by 6 to 0xb9e and Line by 1 to 105
  [0x00000e33]  Set column to 15
  [0x00000e35]  Set is_stmt to 0
  [0x00000e36]  Copy (view 1)
  [0x00000e37]  Set column to 25
  [0x00000e39]  Extended opcode 4: set Discriminator to 3
  [0x00000e3d]  Set is_stmt to 1
  [0x00000e3e]  Special opcode 17: advance Address by 2 to 0xba0 and Line by -2 to 103
  [0x00000e3f]  Set column to 13
  [0x00000e41]  Set is_stmt to 0
  [0x00000e42]  Special opcode 20: advance Address by 2 to 0xba2 and Line by 1 to 104
  [0x00000e43]  Set column to 19
  [0x00000e45]  Extended opcode 4: set Discriminator to 1
  [0x00000e49]  Set is_stmt to 1
  [0x00000e4a]  Special opcode 18: advance Address by 2 to 0xba4 and Line by -1 to 103
  [0x00000e4b]  Set column to 3
  [0x00000e4d]  Special opcode 36: advance Address by 4 to 0xba8 and Line by 3 to 106
  [0x00000e4e]  Set column to 2
  [0x00000e50]  Special opcode 7: advance Address by 0 to 0xba8 and Line by 2 to 108 (view 1)
  [0x00000e51]  Set column to 12
  [0x00000e53]  Set is_stmt to 0
  [0x00000e54]  Copy (view 2)
  [0x00000e55]  Set column to 16
  [0x00000e57]  Special opcode 19: advance Address by 2 to 0xbaa and Line by 0 to 108
  [0x00000e58]  Special opcode 33: advance Address by 4 to 0xbae and Line by 0 to 108
  [0x00000e59]  Set column to 2
  [0x00000e5b]  Set is_stmt to 1
  [0x00000e5c]  Special opcode 77: advance Address by 10 to 0xbb8 and Line by 2 to 110
  [0x00000e5d]  Set is_stmt to 0
  [0x00000e5e]  Special opcode 33: advance Address by 4 to 0xbbc and Line by 0 to 110
  [0x00000e5f]  Set is_stmt to 1
  [0x00000e60]  Special opcode 35: advance Address by 4 to 0xbc0 and Line by 2 to 112
  [0x00000e61]  Set column to 3
  [0x00000e63]  Special opcode 20: advance Address by 2 to 0xbc2 and Line by 1 to 113
  [0x00000e64]  Set column to 22
  [0x00000e66]  Set is_stmt to 0
  [0x00000e67]  Copy (view 1)
  [0x00000e68]  Set column to 3
  [0x00000e6a]  Special opcode 19: advance Address by 2 to 0xbc4 and Line by 0 to 113
  [0x00000e6b]  Set column to 22
  [0x00000e6d]  Extended opcode 4: set Discriminator to 2
  [0x00000e71]  Set is_stmt to 1
  [0x00000e72]  Special opcode 102: advance Address by 14 to 0xbd2 and Line by -1 to 112
  [0x00000e73]  Set column to 8
  [0x00000e75]  Extended opcode 4: set Discriminator to 1
  [0x00000e79]  Copy (view 1)
  [0x00000e7a]  Extended opcode 4: set Discriminator to 1
  [0x00000e7e]  Set is_stmt to 0
  [0x00000e7f]  Special opcode 33: advance Address by 4 to 0xbd6 and Line by 0 to 112
  [0x00000e80]  Advance PC by 30 to 0xbf4
  [0x00000e82]  Extended opcode 1: End of Sequence

  [0x00000e85]  Set column to 34
  [0x00000e87]  Extended opcode 2: set Address to 0xbf4
  [0x00000e8e]  Advance Line by 116 to 117
  [0x00000e91]  Copy
  [0x00000e92]  Set is_stmt to 0
  [0x00000e93]  Copy (view 1)
  [0x00000e94]  Set column to 2
  [0x00000e96]  Set is_stmt to 1
  [0x00000e97]  Special opcode 90: advance Address by 12 to 0xc00 and Line by 1 to 118
  [0x00000e98]  Special opcode 6: advance Address by 0 to 0xc00 and Line by 1 to 119 (view 1)
  [0x00000e99]  Special opcode 21: advance Address by 2 to 0xc02 and Line by 2 to 121
  [0x00000e9a]  Special opcode 6: advance Address by 0 to 0xc02 and Line by 1 to 122 (view 1)
  [0x00000e9b]  Special opcode 6: advance Address by 0 to 0xc02 and Line by 1 to 123 (view 2)
  [0x00000e9c]  Special opcode 6: advance Address by 0 to 0xc02 and Line by 1 to 124 (view 3)
  [0x00000e9d]  Special opcode 7: advance Address by 0 to 0xc02 and Line by 2 to 126 (view 4)
  [0x00000e9e]  Set column to 6
  [0x00000ea0]  Copy (view 5)
  [0x00000ea1]  Set column to 10
  [0x00000ea3]  Set is_stmt to 0
  [0x00000ea4]  Copy (view 6)
  [0x00000ea5]  Set column to 2
  [0x00000ea7]  Special opcode 19: advance Address by 2 to 0xc04 and Line by 0 to 126
  [0x00000ea8]  Set column to 7
  [0x00000eaa]  Set is_stmt to 1
  [0x00000eab]  Special opcode 25: advance Address by 2 to 0xc06 and Line by 6 to 132
  [0x00000eac]  Set column to 12
  [0x00000eae]  Set is_stmt to 0
  [0x00000eaf]  Copy (view 1)
  [0x00000eb0]  Set column to 7
  [0x00000eb2]  Set is_stmt to 1
  [0x00000eb3]  Special opcode 48: advance Address by 6 to 0xc0c and Line by 1 to 133
  [0x00000eb4]  Set column to 6
  [0x00000eb6]  Special opcode 48: advance Address by 6 to 0xc12 and Line by 1 to 134
  [0x00000eb7]  Set is_stmt to 0
  [0x00000eb8]  Special opcode 0: advance Address by 0 to 0xc12 and Line by -5 to 129 (view 1)
  [0x00000eb9]  Special opcode 24: advance Address by 2 to 0xc14 and Line by 5 to 134
  [0x00000eba]  Set column to 7
  [0x00000ebc]  Set is_stmt to 1
  [0x00000ebd]  Special opcode 22: advance Address by 2 to 0xc16 and Line by 3 to 137
  [0x00000ebe]  Set column to 11
  [0x00000ec0]  Set is_stmt to 0
  [0x00000ec1]  Copy (view 1)
  [0x00000ec2]  Set column to 7
  [0x00000ec4]  Set is_stmt to 1
  [0x00000ec5]  Special opcode 48: advance Address by 6 to 0xc1c and Line by 1 to 138
  [0x00000ec6]  Set column to 6
  [0x00000ec8]  Special opcode 48: advance Address by 6 to 0xc22 and Line by 1 to 139
  [0x00000ec9]  Set is_stmt to 0
  [0x00000eca]  Advance Line by -10 to 129
  [0x00000ecc]  Copy (view 1)
  [0x00000ecd]  Advance Line by 10 to 139
  [0x00000ecf]  Special opcode 19: advance Address by 2 to 0xc24 and Line by 0 to 139
  [0x00000ed0]  Set column to 7
  [0x00000ed2]  Set is_stmt to 1
  [0x00000ed3]  Special opcode 22: advance Address by 2 to 0xc26 and Line by 3 to 142
  [0x00000ed4]  Special opcode 48: advance Address by 6 to 0xc2c and Line by 1 to 143
  [0x00000ed5]  Set column to 6
  [0x00000ed7]  Special opcode 6: advance Address by 0 to 0xc2c and Line by 1 to 144 (view 1)
  [0x00000ed8]  Set column to 7
  [0x00000eda]  Special opcode 22: advance Address by 2 to 0xc2e and Line by 3 to 147
  [0x00000edb]  Set column to 11
  [0x00000edd]  Set is_stmt to 0
  [0x00000ede]  Copy (view 1)
  [0x00000edf]  Set column to 7
  [0x00000ee1]  Set is_stmt to 1
  [0x00000ee2]  Special opcode 48: advance Address by 6 to 0xc34 and Line by 1 to 148
  [0x00000ee3]  Set column to 6
  [0x00000ee5]  Special opcode 48: advance Address by 6 to 0xc3a and Line by 1 to 149
  [0x00000ee6]  Set is_stmt to 0
  [0x00000ee7]  Advance Line by -20 to 129
  [0x00000ee9]  Copy (view 1)
  [0x00000eea]  Advance Line by 20 to 149
  [0x00000eec]  Special opcode 19: advance Address by 2 to 0xc3c and Line by 0 to 149
  [0x00000eed]  Set column to 7
  [0x00000eef]  Set is_stmt to 1
  [0x00000ef0]  Special opcode 22: advance Address by 2 to 0xc3e and Line by 3 to 152
  [0x00000ef1]  Set column to 12
  [0x00000ef3]  Set is_stmt to 0
  [0x00000ef4]  Copy (view 1)
  [0x00000ef5]  Set column to 7
  [0x00000ef7]  Set is_stmt to 1
  [0x00000ef8]  Special opcode 62: advance Address by 8 to 0xc46 and Line by 1 to 153
  [0x00000ef9]  Set column to 6
  [0x00000efb]  Special opcode 62: advance Address by 8 to 0xc4e and Line by 1 to 154
  [0x00000efc]  Set is_stmt to 0
  [0x00000efd]  Advance Line by -25 to 129
  [0x00000eff]  Copy (view 1)
  [0x00000f00]  Advance Line by 25 to 154
  [0x00000f02]  Special opcode 19: advance Address by 2 to 0xc50 and Line by 0 to 154
  [0x00000f03]  Set is_stmt to 1
  [0x00000f04]  Special opcode 22: advance Address by 2 to 0xc52 and Line by 3 to 157
  [0x00000f05]  Special opcode 48: advance Address by 6 to 0xc58 and Line by 1 to 158
  [0x00000f06]  Special opcode 48: advance Address by 6 to 0xc5e and Line by 1 to 159
  [0x00000f07]  Set is_stmt to 0
  [0x00000f08]  Advance Line by -30 to 129
  [0x00000f0a]  Copy (view 1)
  [0x00000f0b]  Advance Line by 30 to 159
  [0x00000f0d]  Special opcode 19: advance Address by 2 to 0xc60 and Line by 0 to 159
  [0x00000f0e]  Set column to 5
  [0x00000f10]  Set is_stmt to 1
  [0x00000f11]  Special opcode 24: advance Address by 2 to 0xc62 and Line by 5 to 164
  [0x00000f12]  Set column to 4
  [0x00000f14]  Special opcode 34: advance Address by 4 to 0xc66 and Line by 1 to 165
  [0x00000f15]  Set column to 35
  [0x00000f17]  Extended opcode 4: set Discriminator to 2
  [0x00000f1b]  Advance Line by -39 to 126
  [0x00000f1d]  Copy (view 1)
  [0x00000f1e]  Set column to 25
  [0x00000f20]  Extended opcode 4: set Discriminator to 1
  [0x00000f24]  Special opcode 19: advance Address by 2 to 0xc68 and Line by 0 to 126
  [0x00000f25]  Set column to 21
  [0x00000f27]  Extended opcode 4: set Discriminator to 1
  [0x00000f2b]  Set is_stmt to 0
  [0x00000f2c]  Copy (view 1)
  [0x00000f2d]  Set column to 25
  [0x00000f2f]  Extended opcode 4: set Discriminator to 1
  [0x00000f33]  Special opcode 19: advance Address by 2 to 0xc6a and Line by 0 to 126
  [0x00000f34]  Set column to 3
  [0x00000f36]  Set is_stmt to 1
  [0x00000f37]  Special opcode 20: advance Address by 2 to 0xc6c and Line by 1 to 127
  [0x00000f38]  Set column to 5
  [0x00000f3a]  Special opcode 35: advance Address by 4 to 0xc70 and Line by 2 to 129
  [0x00000f3b]  Set column to 6
  [0x00000f3d]  Set is_stmt to 0
  [0x00000f3e]  Copy (view 1)
  [0x00000f3f]  Set column to 5
  [0x00000f41]  Set is_stmt to 1
  [0x00000f42]  Special opcode 20: advance Address by 2 to 0xc72 and Line by 1 to 130
  [0x00000f43]  Set column to 18
  [0x00000f45]  Set is_stmt to 0
  [0x00000f46]  Copy (view 1)
  [0x00000f47]  Advance PC by 98 to 0xcd4
  [0x00000f49]  Special opcode 5: advance Address by 0 to 0xcd4 and Line by 0 to 130
  [0x00000f4a]  Set column to 1
  [0x00000f4c]  Advance Line by 40 to 170
  [0x00000f4e]  Copy (view 1)
  [0x00000f4f]  Special opcode 47: advance Address by 6 to 0xcda and Line by 0 to 170
  [0x00000f50]  Advance PC by 4 to 0xcde
  [0x00000f52]  Extended opcode 1: End of Sequence


  Offset:                      0xf55
  Length:                      308
  DWARF Version:               3
  Prologue Length:             155
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0xf70):
  1	sys
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	src

 The File Name Table (offset 0xfbb):
  Entry	Dir	Time	Size	Name
  1	1	0	0	startup_gcc.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	timers.h

 Line Number Statements:
  [0x00000ffa]  Set column to 1
  [0x00000ffc]  Extended opcode 2: set Address to 0xce0
  [0x00001003]  Advance Line by 268 to 269
  [0x00001006]  Copy
  [0x00001007]  Set column to 5
  [0x00001009]  Special opcode 9: advance Address by 0 to 0xce0 and Line by 4 to 273 (view 1)
  [0x0000100a]  Special opcode 7: advance Address by 0 to 0xce0 and Line by 2 to 275 (view 2)
  [0x0000100b]  Set column to 10
  [0x0000100d]  Special opcode 3: advance Address by 0 to 0xce0 and Line by -2 to 273 (view 3)
  [0x0000100e]  Advance PC by 2 to 0xce2
  [0x00001010]  Extended opcode 1: End of Sequence

  [0x00001013]  Set column to 1
  [0x00001015]  Extended opcode 2: set Address to 0xce2
  [0x0000101c]  Advance Line by 286 to 287
  [0x0000101f]  Copy
  [0x00001020]  Set column to 5
  [0x00001022]  Special opcode 9: advance Address by 0 to 0xce2 and Line by 4 to 291 (view 1)
  [0x00001023]  Special opcode 7: advance Address by 0 to 0xce2 and Line by 2 to 293 (view 2)
  [0x00001024]  Set column to 10
  [0x00001026]  Special opcode 3: advance Address by 0 to 0xce2 and Line by -2 to 291 (view 3)
  [0x00001027]  Advance PC by 2 to 0xce4
  [0x00001029]  Extended opcode 1: End of Sequence

  [0x0000102c]  Set column to 1
  [0x0000102e]  Extended opcode 2: set Address to 0xce4
  [0x00001035]  Advance Line by 304 to 305
  [0x00001038]  Copy
  [0x00001039]  Set column to 5
  [0x0000103b]  Special opcode 9: advance Address by 0 to 0xce4 and Line by 4 to 309 (view 1)
  [0x0000103c]  Special opcode 7: advance Address by 0 to 0xce4 and Line by 2 to 311 (view 2)
  [0x0000103d]  Set column to 10
  [0x0000103f]  Special opcode 3: advance Address by 0 to 0xce4 and Line by -2 to 309 (view 3)
  [0x00001040]  Advance PC by 2 to 0xce6
  [0x00001042]  Extended opcode 1: End of Sequence

  [0x00001045]  Set column to 1
  [0x00001047]  Extended opcode 2: set Address to 0xce8
  [0x0000104e]  Advance Line by 226 to 227
  [0x00001051]  Copy
  [0x00001052]  Set column to 5
  [0x00001054]  Special opcode 20: advance Address by 2 to 0xcea and Line by 1 to 228
  [0x00001055]  Special opcode 10: advance Address by 0 to 0xcea and Line by 5 to 233 (view 1)
  [0x00001056]  Special opcode 6: advance Address by 0 to 0xcea and Line by 1 to 234 (view 2)
  [0x00001057]  Set column to 17
  [0x00001059]  Set is_stmt to 0
  [0x0000105a]  Copy (view 3)
  [0x0000105b]  Set column to 12
  [0x0000105d]  Special opcode 18: advance Address by 2 to 0xcec and Line by -1 to 233
  [0x0000105e]  Set column to 5
  [0x00001060]  Special opcode 20: advance Address by 2 to 0xcee and Line by 1 to 234
  [0x00001061]  Set column to 9
  [0x00001063]  Set is_stmt to 1
  [0x00001064]  Special opcode 21: advance Address by 2 to 0xcf0 and Line by 2 to 236
  [0x00001065]  Set column to 22
  [0x00001067]  Set is_stmt to 0
  [0x00001068]  Copy (view 1)
  [0x00001069]  Set column to 20
  [0x0000106b]  Special opcode 33: advance Address by 4 to 0xcf4 and Line by 0 to 236
  [0x0000106c]  Set column to 35
  [0x0000106e]  Extended opcode 4: set Discriminator to 1
  [0x00001072]  Set is_stmt to 1
  [0x00001073]  Special opcode 31: advance Address by 4 to 0xcf8 and Line by -2 to 234
  [0x00001074]  Set column to 5
  [0x00001076]  Special opcode 55: advance Address by 6 to 0xcfe and Line by 8 to 242
  [0x00001077]  Advance Line by 14 to 256
  [0x00001079]  Special opcode 131: advance Address by 18 to 0xd10 and Line by 0 to 256
  [0x0000107a]  Set column to 31
  [0x0000107c]  Set is_stmt to 0
  [0x0000107d]  Copy (view 1)
  [0x0000107e]  Special opcode 33: advance Address by 4 to 0xd14 and Line by 0 to 256
  [0x0000107f]  Special opcode 33: advance Address by 4 to 0xd18 and Line by 0 to 256
  [0x00001080]  Set column to 5
  [0x00001082]  Set is_stmt to 1
  [0x00001083]  Special opcode 34: advance Address by 4 to 0xd1c and Line by 1 to 257
  [0x00001084]  Set column to 1
  [0x00001086]  Set is_stmt to 0
  [0x00001087]  Special opcode 34: advance Address by 4 to 0xd20 and Line by 1 to 258
  [0x00001088]  Advance PC by 24 to 0xd38
  [0x0000108a]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 70726f63 6573735f 706f696e 74730072 process_points.r
  0x00000010 65736574 0073697a 655f7400 63686563 eset.size_t.chec
  0x00000020 6b73756d 005f5f75 696e7438 5f740074 ksum.__uint8_t.t
  0x00000030 79706500 63757272 656e745f 7363616e ype.current_scan
  0x00000040 00757074 696d655f 7365636f 6e647300 .uptime_seconds.
  0x00000050 6c6f6e67 206c6f6e 6720756e 7369676e long long unsign
  0x00000060 65642069 6e740064 69666600 64656c74 ed int.diff.delt
  0x00000070 6100636c 6561725f 6c696461 725f494f a.clear_lidar_IO
  0x00000080 00726967 6874006c 6f6e6720 6c6f6e67 .right.long long
  0x00000090 20696e74 00737461 72745f61 6e676c65  int.start_angle
  0x000000a0 00626f75 6e646564 5f696478 00536361 .bounded_idx.Sca
  0x000000b0 6e486561 64657200 74656d70 00627974 nHeader.temp.byt
  0x000000c0 65730052 45434549 56494e47 5f534341 es.RECEIVING_SCA
  0x000000d0 4e5f4441 5441005f 5f75696e 7433325f N_DATA.__uint32_
  0x000000e0 74005245 43454956 494e475f 48454144 t.RECEIVING_HEAD
  0x000000f0 45520052 45434549 56494e47 5f534341 ER.RECEIVING_SCA
  0x00000100 4e5f4845 41444552 00675f70 6f696e74 N_HEADER.g_point
  0x00000110 73005741 4954494e 475f5343 414e5f48 s.WAITING_SCAN_H
  0x00000120 45414445 52005354 4152545f 5041434b EADER.START_PACK
  0x00000130 45540073 686f7274 20756e73 69676e65 ET.short unsigne
  0x00000140 6420696e 74007374 6172745f 636f6465 d int.start_code
  0x00000150 006c6173 745f7469 6d650052 45434549 .last_time.RECEI
  0x00000160 56494e47 5f484541 4c54485f 5245504f VING_HEALTH_REPO
  0x00000170 52540063 75727265 6e745f62 79746500 RT.current_byte.
  0x00000180 63686563 6b73756d 5f686561 64657200 checksum_header.
  0x00000190 7372632f 6c696461 722e6300 5363616e src/lidar.c.Scan
  0x000001a0 48656164 65724669 656c6473 00474e55 HeaderFields.GNU
  0x000001b0 20433137 2031332e 322e3020 2d6d7468  C17 13.2.0 -mth
  0x000001c0 756d6220 2d6d6370 753d636f 72746578 umb -mcpu=cortex
  0x000001d0 2d6d3420 2d6d6670 753d6670 76342d73 -m4 -mfpu=fpv4-s
  0x000001e0 702d6431 36202d6d 666c6f61 742d6162 p-d16 -mfloat-ab
  0x000001f0 693d6861 7264202d 6d617263 683d6172 i=hard -march=ar
  0x00000200 6d763765 2d6d2b66 70202d67 202d4f67 mv7e-m+fp -g -Og
  0x00000210 202d7374 643d676e 75313720 2d666675  -std=gnu17 -ffu
  0x00000220 6e637469 6f6e2d73 65637469 6f6e7320 nction-sections 
  0x00000230 2d666e6f 2d627569 6c74696e 202d6664 -fno-builtin -fd
  0x00000240 6174612d 73656374 696f6e73 00656e64 ata-sections.end
  0x00000250 5f616e67 6c65006c 6f6e6720 646f7562 _angle.long doub
  0x00000260 6c650069 74657200 73657475 705f6c69 le.iter.setup_li
  0x00000270 6461725f 636f6d6d 73005f42 6f6f6c00 dar_comms._Bool.
  0x00000280 756e7369 676e6564 20636861 72007368 unsigned char.sh
  0x00000290 6f727420 696e7400 73746f70 5f6c6964 ort int.stop_lid
  0x000002a0 61725f73 63616e00 6d61705f 746f5f64 ar_scan.map_to_d
  0x000002b0 65677265 65006865 61640073 74617274 egree.head.start
  0x000002c0 5f6c6964 61725f73 63616e00 5f5f7569 _lidar_scan.__ui
  0x000002d0 6e743136 5f74005f 5f696e74 33325f74 nt16_t.__int32_t
  0x000002e0 00434f4d 4d5f5741 4954494e 47006869 .COMM_WAITING.hi
  0x000002f0 67680068 61735f68 6f6c6573 00736b69 gh.has_holes.ski
  0x00000300 7000675f 70745f62 75660063 6f756e74 p.g_pt_buf.count
  0x00000310 5f706f69 6e747300 72656365 69766564 _points.received
  0x00000320 002f686f 6d652f6a 6b6d756e 736f6e2f ./home/jkmunson/
  0x00000330 776f726b 73706163 652f4545 4e473436 workspace/EENG46
  0x00000340 312f4545 4e473436 315f4c49 44415200 1/EENG461_LIDAR.
  0x00000350 675f636f 6e646974 696f6e65 645f706f g_conditioned_po
  0x00000360 696e7473 0070726f 63657373 5f706163 ints.process_pac
  0x00000370 6b657473 0073616d 706c655f 636f756e kets.sample_coun
  0x00000380 7400636f 6e766572 745f746f 5f6d6d00 t.convert_to_mm.
  0x00000390 63757272 656e745f 706f696e 74006368 current_point.ch
  0x000003a0 65636b5f 68656164 65720073 74617274 eck_header.start
  0x000003b0 006c6566 7400636f 6d6d5f73 74617465 .left.comm_state
  0x000003c0 00444154 415f5041 434b4554 005f5f69 .DATA_PACKET.__i
  0x000003d0 6e74385f 74006176 675f6469 7374616e nt8_t.avg_distan
  0x000003e0 6365006d 69645f70 6f730070 6f737369 ce.mid_pos.possi
  0x000003f0 626c655f 616e676c 65730064 72697665 ble_angles.drive
  0x00000400 5f6f6b61 79007365 7475705f 75617274 _okay.setup_uart
  0x00000410 5f707269 6e746572 00617667 5f666f72 _printer.avg_for
  0x00000420 77617264 5f646973 74616e63 65006265 ward_distance.be
  0x00000430 73745f76 616c7565 00747572 6e5f6469 st_value.turn_di
  0x00000440 72656374 696f6e00 6d61696e 00737263 rection.main.src
  0x00000450 2f6d6169 6e2e6300 706f7369 74696f6e /main.c.position
  0x00000460 5f6d6f64 00626573 745f616e 676c6500 _mod.best_angle.
  0x00000470 636f6e66 69677572 65446562 6f756e63 configureDebounc
  0x00000480 6554696d 65720070 72696e74 6c660073 eTimer.printlf.s
  0x00000490 65636f6e 645f636f 756e7465 72006765 econd_counter.ge
  0x000004a0 745f7570 74696d65 5f637963 6c657300 t_uptime_cycles.
  0x000004b0 6379636c 65735f6e 6f770073 72632f74 cycles_now.src/t
  0x000004c0 696d6572 732e6300 74696d65 72315f6f imers.c.timer1_o
  0x000004d0 76657266 6c6f775f 636f756e 74007469 verflow_count.ti
  0x000004e0 6d654b65 65706572 49535200 6f766572 meKeeperISR.over
  0x000004f0 666c6f77 5f636f75 6e745f6e 6f77005f flow_count_now._
  0x00000500 5f75696e 7436345f 7400736f 6e69635f _uint64_t.sonic_
  0x00000510 73656e73 6f725f61 6374696f 6e5f6469 sensor_action_di
  0x00000520 7600696e 74656765 72506172 74007072 v.integerPart.pr
  0x00000530 696e745f 73747269 6e670063 68617273 int_string.chars
  0x00000540 5f73656e 745f7265 63656e74 6c790064 _sent_recently.d
  0x00000550 6563696d 616c5061 72740073 72632f75 ecimalPart.src/u
  0x00000560 6172745f 7072696e 742e6300 5f5f676e art_print.c.__gn
  0x00000570 75635f76 615f6c69 7374006e 756d7500 uc_va_list.numu.
  0x00000580 70757463 68617200 7072696e 745f666c putchar.print_fl
  0x00000590 6f617400 666f726d 61740070 72696e74 oat.format.print
  0x000005a0 5f756e73 69676e65 645f6465 63696d61 _unsigned_decima
  0x000005b0 6c007072 696e745f 64656369 6d616c00 l.print_decimal.
  0x000005c0 5f5f6170 00706c61 63657300 6e756d62 __ap.places.numb
  0x000005d0 6572006e 756d6600 5f5f7661 5f6c6973 er.numf.__va_lis
  0x000005e0 74006172 6773005f 64617461 0070756c t.args._data.pul
  0x000005f0 53746163 6b00496e 74446566 61756c74 Stack.IntDefault
  0x00000600 48616e64 6c657200 70756c44 65737400 Handler.pulDest.
  0x00000610 5f657465 7874005f 65646174 61007379 _etext._edata.sy
  0x00000620 732f7374 61727475 705f6763 632e6300 s/startup_gcc.c.
  0x00000630 4661756c 74495352 00675f70 666e5665 FaultISR.g_pfnVe
  0x00000640 63746f72 73007075 6c537263 00526573 ctors.pulSrc.Res
  0x00000650 65744953 52004e6d 69535200          etISR.NmiSR.

Contents of the .debug_frame section:


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 0000000c 00000000 FDE cie=00000000 pc=0000026c..00000286

00000020 0000000c 00000000 FDE cie=00000000 pc=00000288..000002ac

00000030 0000000c 00000000 FDE cie=00000000 pc=000002ac..000002d4

00000040 0000001c 00000000 FDE cie=00000000 pc=000002d4..000003a8
  DW_CFA_advance_loc: 2 to 000002d6
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r3 at cfa-24
  DW_CFA_offset: r4 at cfa-20
  DW_CFA_offset: r5 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000060 00000018 00000000 FDE cie=00000000 pc=000003a8..00000458
  DW_CFA_advance_loc: 2 to 000003aa
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000007c 00000018 00000000 FDE cie=00000000 pc=00000458..0000047c
  DW_CFA_advance_loc: 2 to 0000045a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000098 00000018 00000000 FDE cie=00000000 pc=0000047c..000004a0
  DW_CFA_advance_loc: 2 to 0000047e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000b4 00000018 00000000 FDE cie=00000000 pc=000004a0..000004d0
  DW_CFA_advance_loc: 2 to 000004a2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000d0 0000000c 00000000 FDE cie=00000000 pc=000004d0..00000554

000000e0 0000000c 00000000 FDE cie=00000000 pc=00000554..00000558

000000f0 0000000c 00000000 FDE cie=00000000 pc=00000558..00000582

00000100 0000000c 00000000 FDE cie=00000000 pc=00000582..000005a6

00000110 00000018 00000000 FDE cie=00000000 pc=000005a8..00000704
  DW_CFA_advance_loc: 2 to 000005aa
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000012c 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

0000013c 00000018 0000012c FDE cie=0000012c pc=00000704..000008b4
  DW_CFA_advance_loc: 2 to 00000706
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000158 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000168 00000018 00000158 FDE cie=00000158 pc=000008b4..00000930
  DW_CFA_advance_loc: 2 to 000008b6
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000184 00000018 00000158 FDE cie=00000158 pc=00000930..00000994
  DW_CFA_advance_loc: 2 to 00000932
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r4 at cfa-4
  DW_CFA_advance_loc: 62 to 00000970
  DW_CFA_remember_state
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 0
  DW_CFA_advance_loc: 2 to 00000972
  DW_CFA_restore_state

000001a0 00000018 00000158 FDE cie=00000158 pc=00000000..00000058
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001bc 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000001cc 00000018 000001bc FDE cie=000001bc pc=00000994..00000a10
  DW_CFA_advance_loc: 2 to 00000996
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001e8 00000014 000001bc FDE cie=000001bc pc=00000a10..00000a58
  DW_CFA_advance_loc: 2 to 00000a12
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000200 00000018 000001bc FDE cie=000001bc pc=00000a58..00000a6e
  DW_CFA_advance_loc: 2 to 00000a5a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000021c 0000001c 000001bc FDE cie=000001bc pc=00000a70..00000abc
  DW_CFA_advance_loc: 2 to 00000a72
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 00000a74
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 66 to 00000ab6
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000023c 00000014 000001bc FDE cie=000001bc pc=00000abc..00000ad4
  DW_CFA_advance_loc: 2 to 00000abe
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000254 00000030 000001bc FDE cie=000001bc pc=00000ad4..00000bf4
  DW_CFA_advance_loc: 2 to 00000ad6
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 00000ada
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset_extended: r80 at cfa-16
  DW_CFA_offset_extended: r81 at cfa-12
  DW_CFA_advance_loc: 2 to 00000adc
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc1: 138 to 00000b66
  DW_CFA_remember_state
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 4 to 00000b6a
  DW_CFA_restore_extended: r80
  DW_CFA_restore_extended: r81
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000b6c
  DW_CFA_restore_state
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000288 00000038 000001bc FDE cie=000001bc pc=00000bf4..00000cde
  DW_CFA_advance_loc: 2 to 00000bf6
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r0 at cfa-16
  DW_CFA_offset: r1 at cfa-12
  DW_CFA_offset: r2 at cfa-8
  DW_CFA_offset: r3 at cfa-4
  DW_CFA_advance_loc: 2 to 00000bf8
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r4 at cfa-32
  DW_CFA_offset: r5 at cfa-28
  DW_CFA_offset: r6 at cfa-24
  DW_CFA_offset: r14 at cfa-20
  DW_CFA_advance_loc: 2 to 00000bfa
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc1: 220 to 00000cd6
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 4 to 00000cda
  DW_CFA_restore: r14
  DW_CFA_restore: r6
  DW_CFA_restore: r5
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000cdc
  DW_CFA_restore: r3
  DW_CFA_restore: r2
  DW_CFA_restore: r1
  DW_CFA_restore: r0
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

000002c4 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000002d4 0000000c 000002c4 FDE cie=000002c4 pc=00000ce0..00000ce2

000002e4 0000000c 000002c4 FDE cie=000002c4 pc=00000ce2..00000ce4

000002f4 0000000c 000002c4 FDE cie=000002c4 pc=00000ce4..00000ce6

00000304 00000014 000002c4 FDE cie=000002c4 pc=00000ce8..00000d30
  DW_CFA_advance_loc: 2 to 00000cea
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop


Disassembly of section .text:

00000000 <g_pfnVectors>:
	}
	
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
}

uint64_t get_uptime_cycles(void) {
   0:	b0 09 00 20 e9 0c 00 00 e1 0c 00 00 e3 0c 00 00     ... ............
	uint64_t cycles_now;
	
	do {
		if(TIMER_ISR_IS_PENDING) timeKeeperISR();
		overflow_count_now = timer1_overflow_count;
		cycles_now = TIMER_CYCLES - TIMER1_TAR_R;
  10:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 00 00 00 00     ................
	...
		if(TIMER_ISR_IS_PENDING) timeKeeperISR();
  2c:	e5 0c 00 00 e5 0c 00 00 00 00 00 00 e5 0c 00 00     ................
	// If the counter overflowed during this code block, then our reads of uptime and cycles are invalid. Re-do them.
	} while (TIMER_ISR_IS_PENDING); 
	
	return (TIMER_CYCLES * overflow_count_now) + cycles_now;
  3c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
}
  4c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  5c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  6c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  7c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  8c:	e5 0c 00 00 e5 0c 00 00 31 09 00 00 e5 0c 00 00     ........1.......
  9c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  ac:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  bc:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  cc:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  dc:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  ec:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
  fc:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 10c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 11c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 12c:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 13c:	e5 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
 14c:	00 00 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 15c:	e5 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
 1b0:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 1c0:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 1d0:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 1e0:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 1f0:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 200:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 00 00 00 00     ................
 210:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 220:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 230:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 240:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 250:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00 e5 0c 00 00     ................
 260:	e5 0c 00 00 e5 0c 00 00 e5 0c 00 00                 ............

0000026c <has_holes.2>:
//VERY IMPORTANT: This function has a time budget of 40000 cycles, to avoid losing data in the fifo
void process_points(){
	static int32_t last_time = 0;
	//#### GNU extension: nested helper functions
	bool has_holes(uint16_t *points) {
		for(int i = 0; i < 360; i++) if(!points[i]) return true;
 26c:	2300      	movs	r3, #0
 26e:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 272:	da04      	bge.n	27e <has_holes.2+0x12>
 274:	f830 2013 	ldrh.w	r2, [r0, r3, lsl #1]
 278:	b11a      	cbz	r2, 282 <has_holes.2+0x16>
 27a:	3301      	adds	r3, #1
 27c:	e7f7      	b.n	26e <has_holes.2+0x2>
		return false;
 27e:	2000      	movs	r0, #0
 280:	4770      	bx	lr
		for(int i = 0; i < 360; i++) if(!points[i]) return true;
 282:	2001      	movs	r0, #1
	}
 284:	4770      	bx	lr
	...

00000288 <count_points.0>:
	
	int count_points(void) {
		int count = 0;
		for(int i = 0; i < 360; i++) {
 288:	2300      	movs	r3, #0
		int count = 0;
 28a:	4618      	mov	r0, r3
		for(int i = 0; i < 360; i++) {
 28c:	e000      	b.n	290 <count_points.0+0x8>
 28e:	3301      	adds	r3, #1
 290:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 294:	da06      	bge.n	2a4 <count_points.0+0x1c>
			if(g_points[i]) {
 296:	4a04      	ldr	r2, [pc, #16]	@ (2a8 <count_points.0+0x20>)
 298:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 29c:	2a00      	cmp	r2, #0
 29e:	d0f6      	beq.n	28e <count_points.0+0x6>
				count++;
 2a0:	3001      	adds	r0, #1
 2a2:	e7f4      	b.n	28e <count_points.0+0x6>
			}
		}
		return count;
	}
 2a4:	4770      	bx	lr
 2a6:	bf00      	nop
 2a8:	200005cc 	.word	0x200005cc

000002ac <bounded_idx.1>:
	
	//reminder, c does not have a modulo operator. It has a remainder operator.
	int bounded_idx(int idx) {
		while(idx < 0) idx += 360;
 2ac:	e001      	b.n	2b2 <bounded_idx.1+0x6>
 2ae:	f500 70b4 	add.w	r0, r0, #360	@ 0x168
 2b2:	2800      	cmp	r0, #0
 2b4:	dbfb      	blt.n	2ae <bounded_idx.1+0x2>
		return idx % 360;
 2b6:	4b06      	ldr	r3, [pc, #24]	@ (2d0 <bounded_idx.1+0x24>)
 2b8:	fb83 2300 	smull	r2, r3, r3, r0
 2bc:	4403      	add	r3, r0
 2be:	17c2      	asrs	r2, r0, #31
 2c0:	ebc2 2323 	rsb	r3, r2, r3, asr #8
	}
 2c4:	f44f 72b4 	mov.w	r2, #360	@ 0x168
 2c8:	fb02 0013 	mls	r0, r2, r3, r0
 2cc:	4770      	bx	lr
 2ce:	bf00      	nop
 2d0:	b60b60b7 	.word	0xb60b60b7

000002d4 <process_points>:
void process_points(){
 2d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	
	//Wipe the point buffer every second - prevent overly stale points accumulating
	if(last_time != uptime_seconds){
 2d6:	4b2f      	ldr	r3, [pc, #188]	@ (394 <process_points+0xc0>)
 2d8:	681a      	ldr	r2, [r3, #0]
 2da:	4b2f      	ldr	r3, [pc, #188]	@ (398 <process_points+0xc4>)
 2dc:	681b      	ldr	r3, [r3, #0]
 2de:	429a      	cmp	r2, r3
 2e0:	d00d      	beq.n	2fe <process_points+0x2a>
		//printlf("Wiping buffer\n");
		for(int j = 0; j < 360; j++) {
 2e2:	2300      	movs	r3, #0
 2e4:	e004      	b.n	2f0 <process_points+0x1c>
			g_points[j] = 0;
 2e6:	4a2d      	ldr	r2, [pc, #180]	@ (39c <process_points+0xc8>)
 2e8:	2100      	movs	r1, #0
 2ea:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for(int j = 0; j < 360; j++) {
 2ee:	3301      	adds	r3, #1
 2f0:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 2f4:	dbf7      	blt.n	2e6 <process_points+0x12>
		}
		last_time = uptime_seconds;
 2f6:	4b28      	ldr	r3, [pc, #160]	@ (398 <process_points+0xc4>)
 2f8:	681a      	ldr	r2, [r3, #0]
 2fa:	4b26      	ldr	r3, [pc, #152]	@ (394 <process_points+0xc0>)
 2fc:	601a      	str	r2, [r3, #0]
	}
	
	if(count_points() < 180) return; //Want at least this many points before we process this
 2fe:	f7ff ffc3 	bl	288 <count_points.0>
 302:	28b3      	cmp	r0, #179	@ 0xb3
 304:	dd45      	ble.n	392 <process_points+0xbe>

	uint16_t *temp = g_pt_buf;
	for(int i = 0; i < 360; i++) temp[i] = g_points[i];
 306:	2300      	movs	r3, #0
 308:	e006      	b.n	318 <process_points+0x44>
 30a:	4a24      	ldr	r2, [pc, #144]	@ (39c <process_points+0xc8>)
 30c:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 310:	4a23      	ldr	r2, [pc, #140]	@ (3a0 <process_points+0xcc>)
 312:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 316:	3301      	adds	r3, #1
 318:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 31c:	dbf5      	blt.n	30a <process_points+0x36>
 31e:	e020      	b.n	362 <process_points+0x8e>
	int iter = 0;
	while(has_holes(temp)) {
		int left = 0, right, mid; //indexes of start and end of a gap
		// find a point that is missing
		while(temp[left]) left++;
		while(!temp[bounded_idx(left-1)]) left--;
 320:	3c01      	subs	r4, #1
 322:	4620      	mov	r0, r4
 324:	f7ff ffc2 	bl	2ac <bounded_idx.1>
 328:	4605      	mov	r5, r0
 32a:	4b1d      	ldr	r3, [pc, #116]	@ (3a0 <process_points+0xcc>)
 32c:	f833 6010 	ldrh.w	r6, [r3, r0, lsl #1]
 330:	2e00      	cmp	r6, #0
 332:	d0f5      	beq.n	320 <process_points+0x4c>
		left -= 1;
		right = left;
		while(!temp[bounded_idx(right+1)]) right++; // walk to right, find last empty point
 334:	3401      	adds	r4, #1
 336:	4620      	mov	r0, r4
 338:	f7ff ffb8 	bl	2ac <bounded_idx.1>
 33c:	4b18      	ldr	r3, [pc, #96]	@ (3a0 <process_points+0xcc>)
 33e:	f833 7010 	ldrh.w	r7, [r3, r0, lsl #1]
 342:	2f00      	cmp	r7, #0
 344:	d0f6      	beq.n	334 <process_points+0x60>
		right += 1;
		left = bounded_idx(left);
		right = bounded_idx(right);
		int diff = bounded_idx(right - left);
 346:	1b40      	subs	r0, r0, r5
 348:	f7ff ffb0 	bl	2ac <bounded_idx.1>
		mid = bounded_idx(left + diff/2);
 34c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 350:	eb05 0060 	add.w	r0, r5, r0, asr #1
 354:	f7ff ffaa 	bl	2ac <bounded_idx.1>
		temp[mid] = (temp[left] + temp[right])/2;
 358:	443e      	add	r6, r7
 35a:	1076      	asrs	r6, r6, #1
 35c:	4b10      	ldr	r3, [pc, #64]	@ (3a0 <process_points+0xcc>)
 35e:	f823 6010 	strh.w	r6, [r3, r0, lsl #1]
	while(has_holes(temp)) {
 362:	480f      	ldr	r0, [pc, #60]	@ (3a0 <process_points+0xcc>)
 364:	f7ff ff82 	bl	26c <has_holes.2>
 368:	b138      	cbz	r0, 37a <process_points+0xa6>
		int left = 0, right, mid; //indexes of start and end of a gap
 36a:	2400      	movs	r4, #0
		while(temp[left]) left++;
 36c:	4b0c      	ldr	r3, [pc, #48]	@ (3a0 <process_points+0xcc>)
 36e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 372:	2b00      	cmp	r3, #0
 374:	d0d4      	beq.n	320 <process_points+0x4c>
 376:	3401      	adds	r4, #1
 378:	e7f8      	b.n	36c <process_points+0x98>
	}
	for(int i = 0; i < 360; i++) g_conditioned_points[i] = temp[i];
 37a:	2300      	movs	r3, #0
 37c:	e006      	b.n	38c <process_points+0xb8>
 37e:	4a08      	ldr	r2, [pc, #32]	@ (3a0 <process_points+0xcc>)
 380:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 384:	4a07      	ldr	r2, [pc, #28]	@ (3a4 <process_points+0xd0>)
 386:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 38a:	3301      	adds	r3, #1
 38c:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 390:	dbf5      	blt.n	37e <process_points+0xaa>
}
 392:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 394:	20000020 	.word	0x20000020
 398:	200008a8 	.word	0x200008a8
 39c:	200005cc 	.word	0x200005cc
 3a0:	20000024 	.word	0x20000024
 3a4:	200002f8 	.word	0x200002f8

000003a8 <setup_lidar_comms>:

void setup_lidar_comms(void){
 3a8:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
 3aa:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 3ae:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 3b0:	699b      	ldr	r3, [r3, #24]
 3b2:	4824      	ldr	r0, [pc, #144]	@ (444 <setup_lidar_comms+0x9c>)
 3b4:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART2);
 3b6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 3b8:	699b      	ldr	r3, [r3, #24]
 3ba:	4823      	ldr	r0, [pc, #140]	@ (448 <setup_lidar_comms+0xa0>)
 3bc:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART2)){};
 3be:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 3c2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 3c4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 3c8:	481f      	ldr	r0, [pc, #124]	@ (448 <setup_lidar_comms+0xa0>)
 3ca:	4798      	blx	r3
 3cc:	2800      	cmp	r0, #0
 3ce:	d0f6      	beq.n	3be <setup_lidar_comms+0x16>
	GPIO_PORTD_LOCK_R = 0x4C4F434B;
 3d0:	4c1e      	ldr	r4, [pc, #120]	@ (44c <setup_lidar_comms+0xa4>)
 3d2:	4b1f      	ldr	r3, [pc, #124]	@ (450 <setup_lidar_comms+0xa8>)
 3d4:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
	GPIO_PORTD_CR_R |= 0xFF;
 3d8:	f8d4 3524 	ldr.w	r3, [r4, #1316]	@ 0x524
 3dc:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 3e0:	f8c4 3524 	str.w	r3, [r4, #1316]	@ 0x524
	GPIO_PORTD_DEN_R |= 0xFF;
 3e4:	f8d4 351c 	ldr.w	r3, [r4, #1308]	@ 0x51c
 3e8:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 3ec:	f8c4 351c 	str.w	r3, [r4, #1308]	@ 0x51c
	GPIO_PORTD_PCTL_R = (GPIO_PORTD_PCTL_R & ~(GPIO_PCTL_PD7_M | GPIO_PCTL_PD6_M)) | GPIO_PCTL_PD7_U2TX | GPIO_PCTL_PD6_U2RX;
 3f0:	f8d4 352c 	ldr.w	r3, [r4, #1324]	@ 0x52c
 3f4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 3f8:	f043 5388 	orr.w	r3, r3, #285212672	@ 0x11000000
 3fc:	f8c4 352c 	str.w	r3, [r4, #1324]	@ 0x52c
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, LID_PINS, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 400:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 404:	6a2b      	ldr	r3, [r5, #32]
 406:	695e      	ldr	r6, [r3, #20]
 408:	2308      	movs	r3, #8
 40a:	2266      	movs	r2, #102	@ 0x66
 40c:	21c0      	movs	r1, #192	@ 0xc0
 40e:	4620      	mov	r0, r4
 410:	47b0      	blx	r6
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, RX_PIN, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD_WPU);
 412:	6a2b      	ldr	r3, [r5, #32]
 414:	695e      	ldr	r6, [r3, #20]
 416:	230a      	movs	r3, #10
 418:	2266      	movs	r2, #102	@ 0x66
 41a:	2140      	movs	r1, #64	@ 0x40
 41c:	4620      	mov	r0, r4
 41e:	47b0      	blx	r6
	ROM_GPIODirModeSet(GPIO_PORTD_BASE, LID_PINS, GPIO_DIR_MODE_HW);
 420:	6a2b      	ldr	r3, [r5, #32]
 422:	685b      	ldr	r3, [r3, #4]
 424:	2202      	movs	r2, #2
 426:	21c0      	movs	r1, #192	@ 0xc0
 428:	4620      	mov	r0, r4
 42a:	4798      	blx	r3
	//ROM_UARTClockSourceSet(LID_BASE, UART_CLOCK_SYSTEM);
	ROM_UARTConfigSetExpClk(LID_BASE, ROM_SysCtlClockGet(), LID_BAUD, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));
 42c:	696b      	ldr	r3, [r5, #20]
 42e:	695c      	ldr	r4, [r3, #20]
 430:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 432:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 434:	4798      	blx	r3
 436:	4601      	mov	r1, r0
 438:	2360      	movs	r3, #96	@ 0x60
 43a:	f44f 3261 	mov.w	r2, #230400	@ 0x38400
 43e:	4805      	ldr	r0, [pc, #20]	@ (454 <setup_lidar_comms+0xac>)
 440:	47a0      	blx	r4
	
}
 442:	bd70      	pop	{r4, r5, r6, pc}
 444:	f0000803 	.word	0xf0000803
 448:	f0001802 	.word	0xf0001802
 44c:	40007000 	.word	0x40007000
 450:	4c4f434b 	.word	0x4c4f434b
 454:	4000e000 	.word	0x4000e000

00000458 <start_lidar_scan>:

void start_lidar_scan(void) {
 458:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, COMMAND_MAGIC);
 45a:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 45e:	696b      	ldr	r3, [r5, #20]
 460:	681b      	ldr	r3, [r3, #0]
 462:	4c05      	ldr	r4, [pc, #20]	@ (478 <start_lidar_scan+0x20>)
 464:	21a5      	movs	r1, #165	@ 0xa5
 466:	4620      	mov	r0, r4
 468:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, COMMAND_START);
 46a:	696b      	ldr	r3, [r5, #20]
 46c:	681b      	ldr	r3, [r3, #0]
 46e:	2160      	movs	r1, #96	@ 0x60
 470:	4620      	mov	r0, r4
 472:	4798      	blx	r3
}
 474:	bd38      	pop	{r3, r4, r5, pc}
 476:	bf00      	nop
 478:	4000e000 	.word	0x4000e000

0000047c <stop_lidar_scan>:

void stop_lidar_scan(void) {
 47c:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, COMMAND_MAGIC);
 47e:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 482:	696b      	ldr	r3, [r5, #20]
 484:	681b      	ldr	r3, [r3, #0]
 486:	4c05      	ldr	r4, [pc, #20]	@ (49c <stop_lidar_scan+0x20>)
 488:	21a5      	movs	r1, #165	@ 0xa5
 48a:	4620      	mov	r0, r4
 48c:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, COMMAND_STOP);
 48e:	696b      	ldr	r3, [r5, #20]
 490:	681b      	ldr	r3, [r3, #0]
 492:	2165      	movs	r1, #101	@ 0x65
 494:	4620      	mov	r0, r4
 496:	4798      	blx	r3
}
 498:	bd38      	pop	{r3, r4, r5, pc}
 49a:	bf00      	nop
 49c:	4000e000 	.word	0x4000e000

000004a0 <clear_lidar_IO>:

void clear_lidar_IO(void){
 4a0:	b538      	push	{r3, r4, r5, lr}
	while(ROM_UARTCharsAvail(LID_BASE)){
 4a2:	e00a      	b.n	4ba <clear_lidar_IO+0x1a>
		ROM_UARTCharGet(LID_BASE);
 4a4:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 4a8:	696b      	ldr	r3, [r5, #20]
 4aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 4ac:	4c07      	ldr	r4, [pc, #28]	@ (4cc <clear_lidar_IO+0x2c>)
 4ae:	4620      	mov	r0, r4
 4b0:	4798      	blx	r3
		ROM_UARTRxErrorClear(LID_BASE);
 4b2:	696b      	ldr	r3, [r5, #20]
 4b4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 4b6:	4620      	mov	r0, r4
 4b8:	4798      	blx	r3
	while(ROM_UARTCharsAvail(LID_BASE)){
 4ba:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 4be:	695b      	ldr	r3, [r3, #20]
 4c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 4c2:	4802      	ldr	r0, [pc, #8]	@ (4cc <clear_lidar_IO+0x2c>)
 4c4:	4798      	blx	r3
 4c6:	2800      	cmp	r0, #0
 4c8:	d1ec      	bne.n	4a4 <clear_lidar_IO+0x4>
	}
}
 4ca:	bd38      	pop	{r3, r4, r5, pc}
 4cc:	4000e000 	.word	0x4000e000

000004d0 <map_to_degree>:

uint16_t map_to_degree(uint16_t start, uint16_t end, uint16_t count, uint16_t num){
 4d0:	ee07 0a90 	vmov	s15, r0
 4d4:	ee07 1a10 	vmov	s14, r1
 4d8:	ee06 2a10 	vmov	s12, r2
 4dc:	ee06 3a90 	vmov	s13, r3
	float delta = (((float)end)/64.0f - ((float)start)/64.0f)/(float)count;
 4e0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 4e4:	eddf 5a19 	vldr	s11, [pc, #100]	@ 54c <map_to_degree+0x7c>
 4e8:	ee27 7a25 	vmul.f32	s14, s14, s11
 4ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
 4f0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 4f4:	ee37 7a67 	vsub.f32	s14, s14, s15
 4f8:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 4fc:	eec7 5a06 	vdiv.f32	s11, s14, s12
	float degree = ((float)start)/64.0f + (delta * num);
 500:	eeb8 7ae6 	vcvt.f32.s32	s14, s13
 504:	ee27 7a25 	vmul.f32	s14, s14, s11
 508:	ee77 7a87 	vadd.f32	s15, s15, s14
	if(delta < 0 || degree < 0 || degree > 359) return 360; // 360 is a safe, do nothing location to write points that have angles that don't make sense.
 50c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 514:	d411      	bmi.n	53a <map_to_degree+0x6a>
 516:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 51a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 51e:	d40f      	bmi.n	540 <map_to_degree+0x70>
 520:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 550 <map_to_degree+0x80>
 524:	eef4 7ac7 	vcmpe.f32	s15, s14
 528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 52c:	dc0b      	bgt.n	546 <map_to_degree+0x76>
	return (uint16_t)degree;
 52e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 532:	ee17 3a90 	vmov	r3, s15
 536:	b298      	uxth	r0, r3
 538:	4770      	bx	lr
	if(delta < 0 || degree < 0 || degree > 359) return 360; // 360 is a safe, do nothing location to write points that have angles that don't make sense.
 53a:	f44f 70b4 	mov.w	r0, #360	@ 0x168
 53e:	4770      	bx	lr
 540:	f44f 70b4 	mov.w	r0, #360	@ 0x168
 544:	4770      	bx	lr
 546:	f44f 70b4 	mov.w	r0, #360	@ 0x168
}
 54a:	4770      	bx	lr
 54c:	3c800000 	.word	0x3c800000
 550:	43b38000 	.word	0x43b38000

00000554 <convert_to_mm>:

uint16_t convert_to_mm(uint16_t point){
	return point >> 2; //divide by 4
}
 554:	0880      	lsrs	r0, r0, #2
 556:	4770      	bx	lr

00000558 <check_header>:

//Returns true if header fails verification
bool check_header(ScanHeader *head) {
	//printlf("Magic\n");
	if(head->header.start_code != SCAN_MAGIC) return true; //incorret start word
 558:	8802      	ldrh	r2, [r0, #0]
 55a:	f245 53aa 	movw	r3, #21930	@ 0x55aa
 55e:	429a      	cmp	r2, r3
 560:	d109      	bne.n	576 <check_header+0x1e>
	//printlf("Start A\n");
	if(!(head->header.start_angle & 0x1)) return true; //incorrect angle data
 562:	8883      	ldrh	r3, [r0, #4]
 564:	f013 0f01 	tst.w	r3, #1
 568:	d007      	beq.n	57a <check_header+0x22>
	//printlf("End A\n");
	if(!(head->header.end_angle & 0x1)) return true; //incorrect angle data
 56a:	88c3      	ldrh	r3, [r0, #6]
 56c:	f013 0f01 	tst.w	r3, #1
 570:	d005      	beq.n	57e <check_header+0x26>
	return false;
 572:	2000      	movs	r0, #0
 574:	4770      	bx	lr
	if(head->header.start_code != SCAN_MAGIC) return true; //incorret start word
 576:	2001      	movs	r0, #1
 578:	4770      	bx	lr
	if(!(head->header.start_angle & 0x1)) return true; //incorrect angle data
 57a:	2001      	movs	r0, #1
 57c:	4770      	bx	lr
	if(!(head->header.end_angle & 0x1)) return true; //incorrect angle data
 57e:	2001      	movs	r0, #1
}
 580:	4770      	bx	lr

00000582 <checksum_header>:

//calculates checksum of header
uint16_t checksum_header(ScanHeader *head) {
 582:	4684      	mov	ip, r0
	uint16_t checksum = 0;
	//size minus 2 - don't include checksum word
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 584:	2200      	movs	r2, #0
	uint16_t checksum = 0;
 586:	4610      	mov	r0, r2
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 588:	e00a      	b.n	5a0 <checksum_header+0x1e>
		uint8_t low = head->bytes[i++];
 58a:	1c51      	adds	r1, r2, #1
 58c:	f81c 3002 	ldrb.w	r3, [ip, r2]
		uint8_t high = head->bytes[i++];
 590:	f81c 1001 	ldrb.w	r1, [ip, r1]
 594:	3202      	adds	r2, #2
		checksum ^= (high << 8) | low;
 596:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 59a:	b21b      	sxth	r3, r3
 59c:	4058      	eors	r0, r3
 59e:	b280      	uxth	r0, r0
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 5a0:	2a07      	cmp	r2, #7
 5a2:	d9f2      	bls.n	58a <checksum_header+0x8>
	}

	return checksum;
}
 5a4:	4770      	bx	lr
	...

000005a8 <process_packets>:

void process_packets(void) {
 5a8:	b570      	push	{r4, r5, r6, lr}
	static uint32_t current_byte = 0;
	static ScanHeader current_scan;
	static uint32_t current_point = 0;
	static uint16_t checksum = 0;
	
	while(ROM_UARTCharsAvail(LID_BASE)) {
 5aa:	e022      	b.n	5f2 <process_packets+0x4a>
		//Haven't started a data packet yet - look for magic header
			case WAITING_SCAN_HEADER:{
				//Is this the first, or second byte in the header magic number
				switch(current_byte++) {
					case 0:
						if(received != SCAN_MAGIC_0) goto reset;
 5ac:	2eaa      	cmp	r6, #170	@ 0xaa
 5ae:	d14f      	bne.n	650 <process_packets+0xa8>
						//printlf("B0\n");
						current_scan.bytes[0] = received;
 5b0:	4b4b      	ldr	r3, [pc, #300]	@ (6e0 <process_packets+0x138>)
 5b2:	701e      	strb	r6, [r3, #0]
					break;
 5b4:	e01d      	b.n	5f2 <process_packets+0x4a>
					break;
				}
			} break;
		
			case RECEIVING_SCAN_HEADER:{
				current_scan.bytes[current_byte++] = received;
 5b6:	494b      	ldr	r1, [pc, #300]	@ (6e4 <process_packets+0x13c>)
 5b8:	680a      	ldr	r2, [r1, #0]
 5ba:	1c53      	adds	r3, r2, #1
 5bc:	600b      	str	r3, [r1, #0]
 5be:	4948      	ldr	r1, [pc, #288]	@ (6e0 <process_packets+0x138>)
 5c0:	548e      	strb	r6, [r1, r2]
				//printlf("h%d\n",current_byte);
				//Still receiving the header
				if(current_byte < sizeof(current_scan)) continue;
 5c2:	2b09      	cmp	r3, #9
 5c4:	d915      	bls.n	5f2 <process_packets+0x4a>
				
				if(check_header(&current_scan)) goto reset;
 5c6:	4608      	mov	r0, r1
 5c8:	f7ff ffc6 	bl	558 <check_header>
 5cc:	2800      	cmp	r0, #0
 5ce:	d13f      	bne.n	650 <process_packets+0xa8>
				
				//Start of a new scan sequence - process the last, complete, scan sequence
				if(current_scan.header.type == START_PACKET) {
 5d0:	4b43      	ldr	r3, [pc, #268]	@ (6e0 <process_packets+0x138>)
 5d2:	789b      	ldrb	r3, [r3, #2]
 5d4:	2b01      	cmp	r3, #1
 5d6:	d039      	beq.n	64c <process_packets+0xa4>
					process_points();
					goto reset;
				}
				
				//Header is good, read in the points
				current_byte = 0;
 5d8:	2300      	movs	r3, #0
 5da:	4a42      	ldr	r2, [pc, #264]	@ (6e4 <process_packets+0x13c>)
 5dc:	6013      	str	r3, [r2, #0]
				current_point = 0;
 5de:	4a42      	ldr	r2, [pc, #264]	@ (6e8 <process_packets+0x140>)
 5e0:	6013      	str	r3, [r2, #0]
				checksum = checksum_header(&current_scan);
 5e2:	483f      	ldr	r0, [pc, #252]	@ (6e0 <process_packets+0x138>)
 5e4:	f7ff ffcd 	bl	582 <checksum_header>
 5e8:	4b40      	ldr	r3, [pc, #256]	@ (6ec <process_packets+0x144>)
 5ea:	8018      	strh	r0, [r3, #0]
				comm_state = RECEIVING_SCAN_DATA;
 5ec:	4b40      	ldr	r3, [pc, #256]	@ (6f0 <process_packets+0x148>)
 5ee:	2204      	movs	r2, #4
 5f0:	701a      	strb	r2, [r3, #0]
	while(ROM_UARTCharsAvail(LID_BASE)) {
 5f2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 5f6:	695b      	ldr	r3, [r3, #20]
 5f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 5fa:	483e      	ldr	r0, [pc, #248]	@ (6f4 <process_packets+0x14c>)
 5fc:	4798      	blx	r3
 5fe:	2800      	cmp	r0, #0
 600:	d034      	beq.n	66c <process_packets+0xc4>
		uint8_t received = ROM_UARTCharGet(LID_BASE);
 602:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 606:	696b      	ldr	r3, [r5, #20]
 608:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 60a:	4c3a      	ldr	r4, [pc, #232]	@ (6f4 <process_packets+0x14c>)
 60c:	4620      	mov	r0, r4
 60e:	4798      	blx	r3
 610:	b2c6      	uxtb	r6, r0
		if(ROM_UARTRxErrorGet(UART2_BASE)) {
 612:	696b      	ldr	r3, [r5, #20]
 614:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 616:	4620      	mov	r0, r4
 618:	4798      	blx	r3
 61a:	b9c8      	cbnz	r0, 650 <process_packets+0xa8>
		switch(comm_state) {
 61c:	4b34      	ldr	r3, [pc, #208]	@ (6f0 <process_packets+0x148>)
 61e:	781b      	ldrb	r3, [r3, #0]
 620:	2b03      	cmp	r3, #3
 622:	d0c8      	beq.n	5b6 <process_packets+0xe>
 624:	2b04      	cmp	r3, #4
 626:	d022      	beq.n	66e <process_packets+0xc6>
 628:	2b02      	cmp	r3, #2
 62a:	d1e2      	bne.n	5f2 <process_packets+0x4a>
				switch(current_byte++) {
 62c:	4a2d      	ldr	r2, [pc, #180]	@ (6e4 <process_packets+0x13c>)
 62e:	6813      	ldr	r3, [r2, #0]
 630:	1c59      	adds	r1, r3, #1
 632:	6011      	str	r1, [r2, #0]
 634:	2b00      	cmp	r3, #0
 636:	d0b9      	beq.n	5ac <process_packets+0x4>
 638:	2b01      	cmp	r3, #1
 63a:	d1da      	bne.n	5f2 <process_packets+0x4a>
						if(received != SCAN_MAGIC_1) goto reset;
 63c:	2e55      	cmp	r6, #85	@ 0x55
 63e:	d107      	bne.n	650 <process_packets+0xa8>
						current_scan.bytes[1] = received;
 640:	4b27      	ldr	r3, [pc, #156]	@ (6e0 <process_packets+0x138>)
 642:	705e      	strb	r6, [r3, #1]
						comm_state = RECEIVING_SCAN_HEADER;
 644:	4b2a      	ldr	r3, [pc, #168]	@ (6f0 <process_packets+0x148>)
 646:	2203      	movs	r2, #3
 648:	701a      	strb	r2, [r3, #0]
					break;
 64a:	e7d2      	b.n	5f2 <process_packets+0x4a>
					process_points();
 64c:	f7ff fe42 	bl	2d4 <process_points>
	}
	return;
	
	//HOT TAKE: Exception handling is just goto in fancy clothes
	reset:
	ROM_UARTRxErrorClear(LID_BASE);
 650:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 654:	695b      	ldr	r3, [r3, #20]
 656:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 658:	4826      	ldr	r0, [pc, #152]	@ (6f4 <process_packets+0x14c>)
 65a:	4798      	blx	r3
	current_byte = 0;
 65c:	2300      	movs	r3, #0
 65e:	4a21      	ldr	r2, [pc, #132]	@ (6e4 <process_packets+0x13c>)
 660:	6013      	str	r3, [r2, #0]
	current_point = 0;
 662:	4a21      	ldr	r2, [pc, #132]	@ (6e8 <process_packets+0x140>)
 664:	6013      	str	r3, [r2, #0]
	comm_state = WAITING_SCAN_HEADER;
 666:	4b22      	ldr	r3, [pc, #136]	@ (6f0 <process_packets+0x148>)
 668:	2202      	movs	r2, #2
 66a:	701a      	strb	r2, [r3, #0]
	#ifdef DEBUG_LID
	//printlf("R\n");
	#endif
}
 66c:	bd70      	pop	{r4, r5, r6, pc}
				switch(current_byte){
 66e:	4b1d      	ldr	r3, [pc, #116]	@ (6e4 <process_packets+0x13c>)
 670:	681b      	ldr	r3, [r3, #0]
 672:	2b00      	cmp	r3, #0
 674:	d02d      	beq.n	6d2 <process_packets+0x12a>
 676:	2b01      	cmp	r3, #1
 678:	d1bb      	bne.n	5f2 <process_packets+0x4a>
						current_byte = 0;
 67a:	4b1a      	ldr	r3, [pc, #104]	@ (6e4 <process_packets+0x13c>)
 67c:	2200      	movs	r2, #0
 67e:	601a      	str	r2, [r3, #0]
						high = received;
 680:	4b1d      	ldr	r3, [pc, #116]	@ (6f8 <process_packets+0x150>)
 682:	701e      	strb	r6, [r3, #0]
						uint16_t point = ((high&0xff) << 8) | low; //High is actually the 7 leftmost bits.
 684:	4b1d      	ldr	r3, [pc, #116]	@ (6fc <process_packets+0x154>)
 686:	781b      	ldrb	r3, [r3, #0]
 688:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
 68c:	461c      	mov	r4, r3
						checksum ^= point;
 68e:	4917      	ldr	r1, [pc, #92]	@ (6ec <process_packets+0x144>)
 690:	880a      	ldrh	r2, [r1, #0]
 692:	405a      	eors	r2, r3
 694:	800a      	strh	r2, [r1, #0]
						if(!(point & 0x80)) goto skip;
 696:	f013 0f80 	tst.w	r3, #128	@ 0x80
 69a:	d011      	beq.n	6c0 <process_packets+0x118>
						uint16_t angle = map_to_degree(current_scan.header.start_angle>>1, current_scan.header.end_angle>>1, current_scan.header.sample_count, current_point);
 69c:	4a10      	ldr	r2, [pc, #64]	@ (6e0 <process_packets+0x138>)
 69e:	8890      	ldrh	r0, [r2, #4]
 6a0:	88d1      	ldrh	r1, [r2, #6]
 6a2:	4b11      	ldr	r3, [pc, #68]	@ (6e8 <process_packets+0x140>)
 6a4:	881b      	ldrh	r3, [r3, #0]
 6a6:	78d2      	ldrb	r2, [r2, #3]
 6a8:	0849      	lsrs	r1, r1, #1
 6aa:	0840      	lsrs	r0, r0, #1
 6ac:	f7ff ff10 	bl	4d0 <map_to_degree>
 6b0:	4605      	mov	r5, r0
						uint16_t tmp = convert_to_mm(point);
 6b2:	4620      	mov	r0, r4
 6b4:	f7ff ff4e 	bl	554 <convert_to_mm>
						if(tmp) g_points[angle] = tmp;
 6b8:	b110      	cbz	r0, 6c0 <process_packets+0x118>
 6ba:	4a11      	ldr	r2, [pc, #68]	@ (700 <process_packets+0x158>)
 6bc:	f822 0015 	strh.w	r0, [r2, r5, lsl #1]
						if(++current_point >= current_scan.header.sample_count) {
 6c0:	4a09      	ldr	r2, [pc, #36]	@ (6e8 <process_packets+0x140>)
 6c2:	6813      	ldr	r3, [r2, #0]
 6c4:	3301      	adds	r3, #1
 6c6:	6013      	str	r3, [r2, #0]
 6c8:	4a05      	ldr	r2, [pc, #20]	@ (6e0 <process_packets+0x138>)
 6ca:	78d2      	ldrb	r2, [r2, #3]
 6cc:	4293      	cmp	r3, r2
 6ce:	d390      	bcc.n	5f2 <process_packets+0x4a>
 6d0:	e7be      	b.n	650 <process_packets+0xa8>
						low = received;
 6d2:	4b0a      	ldr	r3, [pc, #40]	@ (6fc <process_packets+0x154>)
 6d4:	701e      	strb	r6, [r3, #0]
						current_byte = 1;
 6d6:	4b03      	ldr	r3, [pc, #12]	@ (6e4 <process_packets+0x13c>)
 6d8:	2201      	movs	r2, #1
 6da:	601a      	str	r2, [r3, #0]
					break;
 6dc:	e789      	b.n	5f2 <process_packets+0x4a>
 6de:	bf00      	nop
 6e0:	20000010 	.word	0x20000010
 6e4:	2000001c 	.word	0x2000001c
 6e8:	2000000c 	.word	0x2000000c
 6ec:	2000000a 	.word	0x2000000a
 6f0:	20000000 	.word	0x20000000
 6f4:	4000e000 	.word	0x4000e000
 6f8:	20000008 	.word	0x20000008
 6fc:	20000009 	.word	0x20000009
 700:	200005cc 	.word	0x200005cc

00000704 <main>:

#define Disable_Interrupts() __asm("CPSID I")
#define Enable_Interrupts() 


int main (void) {
 704:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlClockSet(SYSCTL_SYSDIV_2_5 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);
 706:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 70a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 70c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 70e:	485f      	ldr	r0, [pc, #380]	@ (88c <main+0x188>)
 710:	4798      	blx	r3
	configureDebounceTimer();
 712:	f000 f8cf 	bl	8b4 <configureDebounceTimer>
	setup_uart_printer();
 716:	f000 f93d 	bl	994 <setup_uart_printer>
	//printlf("Init Lidar Comms\n");
	setup_lidar_comms();
 71a:	f7ff fe45 	bl	3a8 <setup_lidar_comms>
	//printlf("Stopping Lidar scan\n");
	stop_lidar_scan();
 71e:	f7ff fead 	bl	47c <stop_lidar_scan>
	//printlf("Flushing Lidar buffer\n");
	ROM_SysCtlDelay(1000000);
 722:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 724:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 728:	4e59      	ldr	r6, [pc, #356]	@ (890 <main+0x18c>)
 72a:	4630      	mov	r0, r6
 72c:	4798      	blx	r3
	clear_lidar_IO();
 72e:	f7ff feb7 	bl	4a0 <clear_lidar_IO>
	
	//Speed the lidar up to max
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 732:	6963      	ldr	r3, [r4, #20]
 734:	681b      	ldr	r3, [r3, #0]
 736:	4d57      	ldr	r5, [pc, #348]	@ (894 <main+0x190>)
 738:	21a5      	movs	r1, #165	@ 0xa5
 73a:	4628      	mov	r0, r5
 73c:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 73e:	6963      	ldr	r3, [r4, #20]
 740:	681b      	ldr	r3, [r3, #0]
 742:	210b      	movs	r1, #11
 744:	4628      	mov	r0, r5
 746:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 748:	6963      	ldr	r3, [r4, #20]
 74a:	681b      	ldr	r3, [r3, #0]
 74c:	21a5      	movs	r1, #165	@ 0xa5
 74e:	4628      	mov	r0, r5
 750:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 752:	6963      	ldr	r3, [r4, #20]
 754:	681b      	ldr	r3, [r3, #0]
 756:	210b      	movs	r1, #11
 758:	4628      	mov	r0, r5
 75a:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 75c:	6963      	ldr	r3, [r4, #20]
 75e:	681b      	ldr	r3, [r3, #0]
 760:	21a5      	movs	r1, #165	@ 0xa5
 762:	4628      	mov	r0, r5
 764:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 766:	6963      	ldr	r3, [r4, #20]
 768:	681b      	ldr	r3, [r3, #0]
 76a:	210b      	movs	r1, #11
 76c:	4628      	mov	r0, r5
 76e:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 770:	6963      	ldr	r3, [r4, #20]
 772:	681b      	ldr	r3, [r3, #0]
 774:	21a5      	movs	r1, #165	@ 0xa5
 776:	4628      	mov	r0, r5
 778:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 77a:	6963      	ldr	r3, [r4, #20]
 77c:	681b      	ldr	r3, [r3, #0]
 77e:	210b      	movs	r1, #11
 780:	4628      	mov	r0, r5
 782:	4798      	blx	r3
	clear_lidar_IO();
 784:	f7ff fe8c 	bl	4a0 <clear_lidar_IO>
	ROM_SysCtlDelay(1000000);
 788:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 78a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 78e:	4630      	mov	r0, r6
 790:	4798      	blx	r3
	//printlf("Starting Scan\n");
	start_lidar_scan();
 792:	f7ff fe61 	bl	458 <start_lidar_scan>
	//printlf("Looping\n");
	int i = 0;
 796:	2400      	movs	r4, #0
 798:	e05b      	b.n	852 <main+0x14e>
		if(!i) {
			bool drive_okay = false;
			//Check if good to drive - Average distance in cone of 90 deg in front must be > 1m
			int32_t avg_forward_distance = 0;
			for(int j = 135; j < 225; j++){
				avg_forward_distance += g_conditioned_points[j];
 79a:	493f      	ldr	r1, [pc, #252]	@ (898 <main+0x194>)
 79c:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
 7a0:	440a      	add	r2, r1
			for(int j = 135; j < 225; j++){
 7a2:	3301      	adds	r3, #1
 7a4:	2be0      	cmp	r3, #224	@ 0xe0
 7a6:	ddf8      	ble.n	79a <main+0x96>
			}
			avg_forward_distance = avg_forward_distance / 90;
			if(avg_forward_distance > 1500) drive_okay = true;
 7a8:	4b3c      	ldr	r3, [pc, #240]	@ (89c <main+0x198>)
 7aa:	429a      	cmp	r2, r3
 7ac:	dc04      	bgt.n	7b8 <main+0xb4>
			bool drive_okay = false;
 7ae:	2600      	movs	r6, #0
			
			//Calculate best forward angle
			uint16_t *possible_angles = g_pt_buf; //Re-using this global buffer
			int n = 0;
 7b0:	4625      	mov	r5, r4
			for(int j = 90; j < 270; j+= 5, n++){
 7b2:	f04f 0e5a 	mov.w	lr, #90	@ 0x5a
 7b6:	e01c      	b.n	7f2 <main+0xee>
			if(avg_forward_distance > 1500) drive_okay = true;
 7b8:	2601      	movs	r6, #1
 7ba:	e7f9      	b.n	7b0 <main+0xac>
				int32_t avg_distance = 0;
				for(int k = 0; k < 10; k++) avg_distance += g_conditioned_points[j+k] + g_conditioned_points[j-k];
 7bc:	eb0e 0102 	add.w	r1, lr, r2
 7c0:	4835      	ldr	r0, [pc, #212]	@ (898 <main+0x194>)
 7c2:	f830 1011 	ldrh.w	r1, [r0, r1, lsl #1]
 7c6:	ebae 0302 	sub.w	r3, lr, r2
 7ca:	f830 0013 	ldrh.w	r0, [r0, r3, lsl #1]
 7ce:	4401      	add	r1, r0
 7d0:	448c      	add	ip, r1
 7d2:	3201      	adds	r2, #1
 7d4:	2a09      	cmp	r2, #9
 7d6:	ddf1      	ble.n	7bc <main+0xb8>
				possible_angles[n] = avg_distance/20;
 7d8:	4b31      	ldr	r3, [pc, #196]	@ (8a0 <main+0x19c>)
 7da:	fb83 230c 	smull	r2, r3, r3, ip
 7de:	ea4f 7cec 	mov.w	ip, ip, asr #31
 7e2:	ebcc 0ce3 	rsb	ip, ip, r3, asr #3
 7e6:	4b2f      	ldr	r3, [pc, #188]	@ (8a4 <main+0x1a0>)
 7e8:	f823 c015 	strh.w	ip, [r3, r5, lsl #1]
			for(int j = 90; j < 270; j+= 5, n++){
 7ec:	f10e 0e05 	add.w	lr, lr, #5
 7f0:	3501      	adds	r5, #1
 7f2:	f5be 7f87 	cmp.w	lr, #270	@ 0x10e
 7f6:	da02      	bge.n	7fe <main+0xfa>
				for(int k = 0; k < 10; k++) avg_distance += g_conditioned_points[j+k] + g_conditioned_points[j-k];
 7f8:	4622      	mov	r2, r4
				int32_t avg_distance = 0;
 7fa:	46a4      	mov	ip, r4
 7fc:	e7ea      	b.n	7d4 <main+0xd0>
			}
			int top = n;
			int mid_pos = n/2;
 7fe:	eb05 71d5 	add.w	r1, r5, r5, lsr #31
 802:	1049      	asrs	r1, r1, #1
			int best_angle = mid_pos;
			uint16_t best_value = possible_angles[mid_pos];
 804:	4b27      	ldr	r3, [pc, #156]	@ (8a4 <main+0x1a0>)
 806:	f833 e011 	ldrh.w	lr, [r3, r1, lsl #1]
 80a:	4672      	mov	r2, lr
			int best_angle = mid_pos;
 80c:	468c      	mov	ip, r1
			for(;n;--n) {
 80e:	e005      	b.n	81c <main+0x118>
				int position_mod = (n-mid_pos) > 0 ? (n-mid_pos)/2 : (mid_pos-n)/2;
 810:	1b4b      	subs	r3, r1, r5
 812:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 816:	105b      	asrs	r3, r3, #1
 818:	e007      	b.n	82a <main+0x126>
			for(;n;--n) {
 81a:	3d01      	subs	r5, #1
 81c:	b17d      	cbz	r5, 83e <main+0x13a>
				int position_mod = (n-mid_pos) > 0 ? (n-mid_pos)/2 : (mid_pos-n)/2;
 81e:	1a6b      	subs	r3, r5, r1
 820:	2b00      	cmp	r3, #0
 822:	ddf5      	ble.n	810 <main+0x10c>
 824:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 828:	105b      	asrs	r3, r3, #1
				//printlf("%d/", position_mod);
				if(possible_angles[n]/position_mod > best_value) best_value = possible_angles[n]/position_mod, best_angle = n;
 82a:	481e      	ldr	r0, [pc, #120]	@ (8a4 <main+0x1a0>)
 82c:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 830:	fb90 f3f3 	sdiv	r3, r0, r3
 834:	4293      	cmp	r3, r2
 836:	ddf0      	ble.n	81a <main+0x116>
 838:	b29a      	uxth	r2, r3
 83a:	46ac      	mov	ip, r5
 83c:	e7ed      	b.n	81a <main+0x116>
			}
			
			if(possible_angles[mid_pos] > 8000) best_angle = mid_pos;
 83e:	f5be 5ffa 	cmp.w	lr, #8000	@ 0x1f40
 842:	d920      	bls.n	886 <main+0x182>
			if (possible_angles[0] < 500 ) mod += 30;
			if (possible_angles[top-1] < 500) mod += -30;
			if (possible_angles[(top-1)/4] < 1000 ) mod += 20;
			if (possible_angles[((top-1)*3)/4] < 1000) mod += -20;
			//ROM_UARTCharPut(UART0_BASE, drive_okay ? (int8_t)((best_angle*5)-90) + mod : 120*turn_direction + mod);
			printlf("*%d|%d|%d\n", (best_angle*5)-90, (uint32_t) best_value, (int32_t)drive_okay);
 844:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 848:	4633      	mov	r3, r6
 84a:	395a      	subs	r1, #90	@ 0x5a
 84c:	4816      	ldr	r0, [pc, #88]	@ (8a8 <main+0x1a4>)
 84e:	f000 f9d1 	bl	bf4 <printlf>
		printlf("%d:%d\n", i, g_conditioned_points[i]);
 852:	4b11      	ldr	r3, [pc, #68]	@ (898 <main+0x194>)
 854:	f833 2014 	ldrh.w	r2, [r3, r4, lsl #1]
 858:	4621      	mov	r1, r4
 85a:	4814      	ldr	r0, [pc, #80]	@ (8ac <main+0x1a8>)
 85c:	f000 f9ca 	bl	bf4 <printlf>
		process_packets();
 860:	f7ff fea2 	bl	5a8 <process_packets>
		i = (i+1)%360;
 864:	1c62      	adds	r2, r4, #1
 866:	4b12      	ldr	r3, [pc, #72]	@ (8b0 <main+0x1ac>)
 868:	fb83 1302 	smull	r1, r3, r3, r2
 86c:	4413      	add	r3, r2
 86e:	17d4      	asrs	r4, r2, #31
 870:	ebc4 2423 	rsb	r4, r4, r3, asr #8
 874:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 878:	fb03 2414 	mls	r4, r3, r4, r2
		if(!i) {
 87c:	2c00      	cmp	r4, #0
 87e:	d1e8      	bne.n	852 <main+0x14e>
			int32_t avg_forward_distance = 0;
 880:	4622      	mov	r2, r4
			for(int j = 135; j < 225; j++){
 882:	2387      	movs	r3, #135	@ 0x87
 884:	e78e      	b.n	7a4 <main+0xa0>
			if(possible_angles[mid_pos] > 8000) best_angle = mid_pos;
 886:	4661      	mov	r1, ip
 888:	e7dc      	b.n	844 <main+0x140>
 88a:	bf00      	nop
 88c:	c1000540 	.word	0xc1000540
 890:	000f4240 	.word	0x000f4240
 894:	4000e000 	.word	0x4000e000
 898:	200002f8 	.word	0x200002f8
 89c:	00020fb1 	.word	0x00020fb1
 8a0:	66666667 	.word	0x66666667
 8a4:	20000024 	.word	0x20000024
 8a8:	00000d40 	.word	0x00000d40
 8ac:	00000d38 	.word	0x00000d38
 8b0:	b60b60b7 	.word	0xb60b60b7

000008b4 <configureDebounceTimer>:
void configureDebounceTimer(void) {
 8b4:	b538      	push	{r3, r4, r5, lr}
	SYSCTL_RCGCTIMER_R |= SYSCTL_RCGCTIMER_R1; //Enable Run Mode Clock Gating Control for Timer 0
 8b6:	4a1c      	ldr	r2, [pc, #112]	@ (928 <configureDebounceTimer+0x74>)
 8b8:	f8d2 3604 	ldr.w	r3, [r2, #1540]	@ 0x604
 8bc:	f043 0302 	orr.w	r3, r3, #2
 8c0:	f8c2 3604 	str.w	r3, [r2, #1540]	@ 0x604
	while (!(SYSCTL_PRTIMER_R & SYSCTL_RCGCTIMER_R1)) {}
 8c4:	4b18      	ldr	r3, [pc, #96]	@ (928 <configureDebounceTimer+0x74>)
 8c6:	f8d3 3a04 	ldr.w	r3, [r3, #2564]	@ 0xa04
 8ca:	f013 0f02 	tst.w	r3, #2
 8ce:	d0f9      	beq.n	8c4 <configureDebounceTimer+0x10>
	TIMER1_CTL_R &= ~TIMER_CTL_TAEN; //Disable Timer
 8d0:	4c16      	ldr	r4, [pc, #88]	@ (92c <configureDebounceTimer+0x78>)
 8d2:	68e3      	ldr	r3, [r4, #12]
 8d4:	f023 0301 	bic.w	r3, r3, #1
 8d8:	60e3      	str	r3, [r4, #12]
	TIMER1_CTL_R |= TIMER_CTL_TASTALL; //Stall for debug
 8da:	68e3      	ldr	r3, [r4, #12]
 8dc:	f043 0302 	orr.w	r3, r3, #2
 8e0:	60e3      	str	r3, [r4, #12]
	TIMER1_CFG_R = TIMER_CFG_32_BIT_TIMER;
 8e2:	2500      	movs	r5, #0
 8e4:	6025      	str	r5, [r4, #0]
	TIMER1_TAMR_R |= TIMER_TAMR_TAMR_PERIOD; //Set Timer to count down periodically
 8e6:	6863      	ldr	r3, [r4, #4]
 8e8:	f043 0302 	orr.w	r3, r3, #2
 8ec:	6063      	str	r3, [r4, #4]
	TIMER1_TAILR_R = TIMER_CYCLES-1;
 8ee:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8f2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8f4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8f6:	4798      	blx	r3
 8f8:	0940      	lsrs	r0, r0, #5
 8fa:	3801      	subs	r0, #1
 8fc:	62a0      	str	r0, [r4, #40]	@ 0x28
	TIMER1_TAPR_R = 0;
 8fe:	63a5      	str	r5, [r4, #56]	@ 0x38
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 900:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 902:	f043 0301 	orr.w	r3, r3, #1
 906:	6263      	str	r3, [r4, #36]	@ 0x24
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt as Timeout
 908:	69a3      	ldr	r3, [r4, #24]
 90a:	f043 0301 	orr.w	r3, r3, #1
 90e:	61a3      	str	r3, [r4, #24]
	NVIC_EN0_R = 1 << (INT_TIMER1A - 16);
 910:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 914:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 918:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
	TIMER1_CTL_R |= TIMER_CTL_TAEN; //Enable Timer
 91c:	68e3      	ldr	r3, [r4, #12]
 91e:	f043 0301 	orr.w	r3, r3, #1
 922:	60e3      	str	r3, [r4, #12]
}
 924:	bd38      	pop	{r3, r4, r5, pc}
 926:	bf00      	nop
 928:	400fe000 	.word	0x400fe000
 92c:	40031000 	.word	0x40031000

00000930 <timeKeeperISR>:
void timeKeeperISR (void) {
 930:	b410      	push	{r4}
	TIMER1_IMR_R &= ~TIMER_IMR_TATOIM; //Disable Interrupt
 932:	4b14      	ldr	r3, [pc, #80]	@ (984 <timeKeeperISR+0x54>)
 934:	699a      	ldr	r2, [r3, #24]
 936:	f022 0201 	bic.w	r2, r2, #1
 93a:	619a      	str	r2, [r3, #24]
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 93c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 93e:	f042 0201 	orr.w	r2, r2, #1
 942:	625a      	str	r2, [r3, #36]	@ 0x24
	timer1_overflow_count++;
 944:	4c10      	ldr	r4, [pc, #64]	@ (988 <timeKeeperISR+0x58>)
 946:	e9d4 2300 	ldrd	r2, r3, [r4]
 94a:	1c50      	adds	r0, r2, #1
 94c:	f143 0100 	adc.w	r1, r3, #0
 950:	e9c4 0100 	strd	r0, r1, [r4]
	if(++second_counter == TIMER1_MULTIPLIER) {
 954:	4a0d      	ldr	r2, [pc, #52]	@ (98c <timeKeeperISR+0x5c>)
 956:	7813      	ldrb	r3, [r2, #0]
 958:	3301      	adds	r3, #1
 95a:	b2db      	uxtb	r3, r3
 95c:	7013      	strb	r3, [r2, #0]
 95e:	2b20      	cmp	r3, #32
 960:	d007      	beq.n	972 <timeKeeperISR+0x42>
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
 962:	4a08      	ldr	r2, [pc, #32]	@ (984 <timeKeeperISR+0x54>)
 964:	6993      	ldr	r3, [r2, #24]
 966:	f043 0301 	orr.w	r3, r3, #1
 96a:	6193      	str	r3, [r2, #24]
}
 96c:	f85d 4b04 	ldr.w	r4, [sp], #4
 970:	4770      	bx	lr
		uptime_seconds++;
 972:	4a07      	ldr	r2, [pc, #28]	@ (990 <timeKeeperISR+0x60>)
 974:	6813      	ldr	r3, [r2, #0]
 976:	3301      	adds	r3, #1
 978:	6013      	str	r3, [r2, #0]
		second_counter = 0;
 97a:	4b04      	ldr	r3, [pc, #16]	@ (98c <timeKeeperISR+0x5c>)
 97c:	2200      	movs	r2, #0
 97e:	701a      	strb	r2, [r3, #0]
 980:	e7ef      	b.n	962 <timeKeeperISR+0x32>
 982:	bf00      	nop
 984:	40031000 	.word	0x40031000
 988:	200008a0 	.word	0x200008a0
 98c:	2000089e 	.word	0x2000089e
 990:	200008a8 	.word	0x200008a8

00000994 <setup_uart_printer>:
#include <inc/hw_memmap.h>
#include <common/tm4c123gh6pm.h>

#define INFINITY 1.0f/0.f

void setup_uart_printer(void){
 994:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
 996:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 99a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 99c:	699b      	ldr	r3, [r3, #24]
 99e:	4818      	ldr	r0, [pc, #96]	@ (a00 <setup_uart_printer+0x6c>)
 9a0:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
 9a2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 9a4:	699b      	ldr	r3, [r3, #24]
 9a6:	4817      	ldr	r0, [pc, #92]	@ (a04 <setup_uart_printer+0x70>)
 9a8:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART0)){};
 9aa:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 9ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 9b0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 9b4:	4813      	ldr	r0, [pc, #76]	@ (a04 <setup_uart_printer+0x70>)
 9b6:	4798      	blx	r3
 9b8:	2800      	cmp	r0, #0
 9ba:	d0f6      	beq.n	9aa <setup_uart_printer+0x16>
	
	ROM_GPIOPadConfigSet(GPIO_PORTA_BASE, 3, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 9bc:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 9c0:	6a23      	ldr	r3, [r4, #32]
 9c2:	695d      	ldr	r5, [r3, #20]
 9c4:	2308      	movs	r3, #8
 9c6:	2266      	movs	r2, #102	@ 0x66
 9c8:	2103      	movs	r1, #3
 9ca:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 9ce:	47a8      	blx	r5
	ROM_GPIODirModeSet(GPIO_PORTA_BASE, 3, GPIO_DIR_MODE_HW);
 9d0:	6a23      	ldr	r3, [r4, #32]
 9d2:	685b      	ldr	r3, [r3, #4]
 9d4:	2202      	movs	r2, #2
 9d6:	2103      	movs	r1, #3
 9d8:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 9dc:	4798      	blx	r3
	ROM_UARTClockSourceSet(UART0_BASE, UART_CLOCK_SYSTEM);
 9de:	6963      	ldr	r3, [r4, #20]
 9e0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 9e2:	4d09      	ldr	r5, [pc, #36]	@ (a08 <setup_uart_printer+0x74>)
 9e4:	2100      	movs	r1, #0
 9e6:	4628      	mov	r0, r5
 9e8:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(UART0_BASE, ROM_SysCtlClockGet(), 4000000,
 9ea:	6963      	ldr	r3, [r4, #20]
 9ec:	695e      	ldr	r6, [r3, #20]
 9ee:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 9f0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 9f2:	4798      	blx	r3
 9f4:	4601      	mov	r1, r0
 9f6:	2368      	movs	r3, #104	@ 0x68
 9f8:	4a04      	ldr	r2, [pc, #16]	@ (a0c <setup_uart_printer+0x78>)
 9fa:	4628      	mov	r0, r5
 9fc:	47b0      	blx	r6
                            (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_TWO | UART_CONFIG_PAR_NONE));
}
 9fe:	bd70      	pop	{r4, r5, r6, pc}
 a00:	f0000800 	.word	0xf0000800
 a04:	f0001800 	.word	0xf0001800
 a08:	4000c000 	.word	0x4000c000
 a0c:	003d0900 	.word	0x003d0900

00000a10 <putchar>:

void putchar(char c) {
 a10:	b508      	push	{r3, lr}
 a12:	4601      	mov	r1, r0
	static int chars_sent_recently = 0;
	ROM_UARTCharPut(UART0_BASE, c);
 a14:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 a18:	695b      	ldr	r3, [r3, #20]
 a1a:	681b      	ldr	r3, [r3, #0]
 a1c:	480c      	ldr	r0, [pc, #48]	@ (a50 <putchar+0x40>)
 a1e:	4798      	blx	r3
	while(ROM_UARTBusy(UART0_BASE)) {};
 a20:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 a24:	695b      	ldr	r3, [r3, #20]
 a26:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 a28:	4809      	ldr	r0, [pc, #36]	@ (a50 <putchar+0x40>)
 a2a:	4798      	blx	r3
 a2c:	2800      	cmp	r0, #0
 a2e:	d1f7      	bne.n	a20 <putchar+0x10>
	
	//Really dumb, but avoid overwhelming ICDI
	if(++chars_sent_recently > 7) {
 a30:	4a08      	ldr	r2, [pc, #32]	@ (a54 <putchar+0x44>)
 a32:	6813      	ldr	r3, [r2, #0]
 a34:	3301      	adds	r3, #1
 a36:	6013      	str	r3, [r2, #0]
 a38:	2b07      	cmp	r3, #7
 a3a:	dd07      	ble.n	a4c <putchar+0x3c>
		chars_sent_recently = 0;
 a3c:	2300      	movs	r3, #0
 a3e:	6013      	str	r3, [r2, #0]
		//Yes, the delay has to be this long
		for(int i = 0; i < 280; i++) {
 a40:	e001      	b.n	a46 <putchar+0x36>
			__asm("mov r1,r1\n");
 a42:	4609      	mov	r1, r1
		for(int i = 0; i < 280; i++) {
 a44:	3301      	adds	r3, #1
 a46:	f5b3 7f8c 	cmp.w	r3, #280	@ 0x118
 a4a:	dbfa      	blt.n	a42 <putchar+0x32>
		}
	}
}
 a4c:	bd08      	pop	{r3, pc}
 a4e:	bf00      	nop
 a50:	4000c000 	.word	0x4000c000
 a54:	200008ac 	.word	0x200008ac

00000a58 <print_string>:

void print_string(const char * const str) {
 a58:	b538      	push	{r3, r4, r5, lr}
 a5a:	4605      	mov	r5, r0
	for(int i = 0; str[i] != '\0'; i++) {
 a5c:	2400      	movs	r4, #0
 a5e:	e002      	b.n	a66 <print_string+0xe>
		putchar( str[i]);
 a60:	f7ff ffd6 	bl	a10 <putchar>
	for(int i = 0; str[i] != '\0'; i++) {
 a64:	3401      	adds	r4, #1
 a66:	5d28      	ldrb	r0, [r5, r4]
 a68:	2800      	cmp	r0, #0
 a6a:	d1f9      	bne.n	a60 <print_string+0x8>
	}
}
 a6c:	bd38      	pop	{r3, r4, r5, pc}
	...

00000a70 <print_unsigned_decimal>:

void print_unsigned_decimal(uint32_t num){
 a70:	b510      	push	{r4, lr}
 a72:	b084      	sub	sp, #16
	
	char buf[11]; //Large enough to fit any value of num
	
	int places = 0;
 a74:	2400      	movs	r4, #0
	
	do {
		buf[places++] = (char)('0' + (num % 10));
 a76:	4b10      	ldr	r3, [pc, #64]	@ (ab8 <print_unsigned_decimal+0x48>)
 a78:	fba3 2300 	umull	r2, r3, r3, r0
 a7c:	08db      	lsrs	r3, r3, #3
 a7e:	4619      	mov	r1, r3
 a80:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 a84:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 a88:	4622      	mov	r2, r4
 a8a:	3330      	adds	r3, #48	@ 0x30
 a8c:	3210      	adds	r2, #16
 a8e:	446a      	add	r2, sp
 a90:	3401      	adds	r4, #1
 a92:	f802 3c0c 	strb.w	r3, [r2, #-12]
		num /= 10;
 a96:	4603      	mov	r3, r0
 a98:	4608      	mov	r0, r1
	} while (num > 0);
 a9a:	2b09      	cmp	r3, #9
 a9c:	d8eb      	bhi.n	a76 <print_unsigned_decimal+0x6>
 a9e:	e007      	b.n	ab0 <print_unsigned_decimal+0x40>
	
	for(; places; places--) {
		putchar( buf[places-1]);
 aa0:	3c01      	subs	r4, #1
 aa2:	f104 0310 	add.w	r3, r4, #16
 aa6:	446b      	add	r3, sp
 aa8:	f813 0c0c 	ldrb.w	r0, [r3, #-12]
 aac:	f7ff ffb0 	bl	a10 <putchar>
	for(; places; places--) {
 ab0:	2c00      	cmp	r4, #0
 ab2:	d1f5      	bne.n	aa0 <print_unsigned_decimal+0x30>
	}
}
 ab4:	b004      	add	sp, #16
 ab6:	bd10      	pop	{r4, pc}
 ab8:	cccccccd 	.word	0xcccccccd

00000abc <print_decimal>:

void print_decimal(int32_t num){
 abc:	b510      	push	{r4, lr}
	
	if (num < 0) {
 abe:	1e04      	subs	r4, r0, #0
 ac0:	db03      	blt.n	aca <print_decimal+0xe>
		putchar( '-');
		num = 0 - num;
	}
	
	print_unsigned_decimal((uint32_t)num);
 ac2:	4620      	mov	r0, r4
 ac4:	f7ff ffd4 	bl	a70 <print_unsigned_decimal>
}
 ac8:	bd10      	pop	{r4, pc}
		putchar( '-');
 aca:	202d      	movs	r0, #45	@ 0x2d
 acc:	f7ff ffa0 	bl	a10 <putchar>
		num = 0 - num;
 ad0:	4264      	negs	r4, r4
 ad2:	e7f6      	b.n	ac2 <print_decimal+0x6>

00000ad4 <print_float>:

void print_float(float number) {
 ad4:	b510      	push	{r4, lr}
 ad6:	ed2d 8b02 	vpush	{d8}
 ada:	b084      	sub	sp, #16
	
	if(number != number) { //NaN is not equal to anything, including NaN
 adc:	eeb4 0a40 	vcmp.f32	s0, s0
 ae0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 ae4:	d137      	bne.n	b56 <print_float+0x82>
		print_string("NaN");
		return;
	}
	
	if(number == INFINITY || number == -INFINITY) {
 ae6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 aea:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ bd8 <print_float+0x104>
 aee:	eec6 7a87 	vdiv.f32	s15, s13, s14
 af2:	eef4 7a40 	vcmp.f32	s15, s0
 af6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 afa:	d030      	beq.n	b5e <print_float+0x8a>
 afc:	eef1 7a67 	vneg.f32	s15, s15
 b00:	eef4 7a40 	vcmp.f32	s15, s0
 b04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 b08:	d029      	beq.n	b5e <print_float+0x8a>
		print_string("inf");
		return;
	}
	
	if(number > UINT32_MAX || (0-number) > UINT32_MAX) {
 b0a:	eddf 7a34 	vldr	s15, [pc, #208]	@ bdc <print_float+0x108>
 b0e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 b12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 b16:	dc29      	bgt.n	b6c <print_float+0x98>
 b18:	ed9f 8a2f 	vldr	s16, [pc, #188]	@ bd8 <print_float+0x104>
 b1c:	ee38 8a40 	vsub.f32	s16, s16, s0
 b20:	eeb4 8ae7 	vcmpe.f32	s16, s15
 b24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 b28:	dc20      	bgt.n	b6c <print_float+0x98>
		return;
	}
	
	char buf[15]; // large enough to fit any value
	
	if(number < 0) {
 b2a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 b2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 b32:	d41f      	bmi.n	b74 <print_float+0xa0>
		putchar( '-');
		number = 0 - number;
	}
	
	uint32_t integerPart = (uint32_t)number;
 b34:	eefc 7ac0 	vcvt.u32.f32	s15, s0
	uint32_t decimalPart = (uint32_t)((number - integerPart) * 1000);
 b38:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 b3c:	ee30 0a47 	vsub.f32	s0, s0, s14
 b40:	ed9f 7a27 	vldr	s14, [pc, #156]	@ be0 <print_float+0x10c>
 b44:	ee20 0a07 	vmul.f32	s0, s0, s14
 b48:	eebc 7ac0 	vcvt.u32.f32	s14, s0
 b4c:	ee17 3a10 	vmov	r3, s14
	
	int places = 0;
	
	for(int i = 0; i < 3; i++) {
 b50:	2000      	movs	r0, #0
	int places = 0;
 b52:	4601      	mov	r1, r0
	for(int i = 0; i < 3; i++) {
 b54:	e026      	b.n	ba4 <print_float+0xd0>
		print_string("NaN");
 b56:	4823      	ldr	r0, [pc, #140]	@ (be4 <print_float+0x110>)
 b58:	f7ff ff7e 	bl	a58 <print_string>
		return;
 b5c:	e002      	b.n	b64 <print_float+0x90>
		print_string("inf");
 b5e:	4822      	ldr	r0, [pc, #136]	@ (be8 <print_float+0x114>)
 b60:	f7ff ff7a 	bl	a58 <print_string>
	print_unsigned_decimal(integerPart);
	
	for(; places; places--) {
		putchar( buf[places-1]);
	}
}
 b64:	b004      	add	sp, #16
 b66:	ecbd 8b02 	vpop	{d8}
 b6a:	bd10      	pop	{r4, pc}
		print_string("[out of range]");
 b6c:	481f      	ldr	r0, [pc, #124]	@ (bec <print_float+0x118>)
 b6e:	f7ff ff73 	bl	a58 <print_string>
		return;
 b72:	e7f7      	b.n	b64 <print_float+0x90>
		putchar( '-');
 b74:	202d      	movs	r0, #45	@ 0x2d
 b76:	f7ff ff4b 	bl	a10 <putchar>
		number = 0 - number;
 b7a:	eeb0 0a48 	vmov.f32	s0, s16
 b7e:	e7d9      	b.n	b34 <print_float+0x60>
		buf[places++] = (char)('0' + decimalPart % 10);
 b80:	4a1b      	ldr	r2, [pc, #108]	@ (bf0 <print_float+0x11c>)
 b82:	fba2 4203 	umull	r4, r2, r2, r3
 b86:	08d2      	lsrs	r2, r2, #3
 b88:	4614      	mov	r4, r2
 b8a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 b8e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
 b92:	3230      	adds	r2, #48	@ 0x30
 b94:	f101 0310 	add.w	r3, r1, #16
 b98:	446b      	add	r3, sp
 b9a:	f803 2c10 	strb.w	r2, [r3, #-16]
		decimalPart /= 10;
 b9e:	4623      	mov	r3, r4
	for(int i = 0; i < 3; i++) {
 ba0:	3001      	adds	r0, #1
		buf[places++] = (char)('0' + decimalPart % 10);
 ba2:	3101      	adds	r1, #1
	for(int i = 0; i < 3; i++) {
 ba4:	2802      	cmp	r0, #2
 ba6:	ddeb      	ble.n	b80 <print_float+0xac>
	buf[places++] = '.';
 ba8:	1c4c      	adds	r4, r1, #1
 baa:	f101 0310 	add.w	r3, r1, #16
 bae:	eb0d 0103 	add.w	r1, sp, r3
 bb2:	232e      	movs	r3, #46	@ 0x2e
 bb4:	f801 3c10 	strb.w	r3, [r1, #-16]
	print_unsigned_decimal(integerPart);
 bb8:	ee17 0a90 	vmov	r0, s15
 bbc:	f7ff ff58 	bl	a70 <print_unsigned_decimal>
	for(; places; places--) {
 bc0:	e007      	b.n	bd2 <print_float+0xfe>
		putchar( buf[places-1]);
 bc2:	3c01      	subs	r4, #1
 bc4:	f104 0310 	add.w	r3, r4, #16
 bc8:	446b      	add	r3, sp
 bca:	f813 0c10 	ldrb.w	r0, [r3, #-16]
 bce:	f7ff ff1f 	bl	a10 <putchar>
	for(; places; places--) {
 bd2:	2c00      	cmp	r4, #0
 bd4:	d1f5      	bne.n	bc2 <print_float+0xee>
 bd6:	e7c5      	b.n	b64 <print_float+0x90>
 bd8:	00000000 	.word	0x00000000
 bdc:	4f800000 	.word	0x4f800000
 be0:	447a0000 	.word	0x447a0000
 be4:	00000d4c 	.word	0x00000d4c
 be8:	00000d50 	.word	0x00000d50
 bec:	00000d54 	.word	0x00000d54
 bf0:	cccccccd 	.word	0xcccccccd

00000bf4 <printlf>:

void printlf(char format[], ...) {
 bf4:	b40f      	push	{r0, r1, r2, r3}
 bf6:	b570      	push	{r4, r5, r6, lr}
 bf8:	b082      	sub	sp, #8
 bfa:	ab06      	add	r3, sp, #24
 bfc:	f853 5b04 	ldr.w	r5, [r3], #4
	va_list args;
	va_start(args, format);
 c00:	9301      	str	r3, [sp, #4]
	char *str;
	int32_t num;
	uint32_t numu;
	float *numf;
	
	for(int i=0; format[i] != '\0'; i++) {
 c02:	2400      	movs	r4, #0
 c04:	e030      	b.n	c68 <printlf+0x74>
		switch(format[i]) {
			case '%' :
				i++;
				switch(format[i]) {
					case 'u': //unsigned decimal number
						numu = va_arg(args, uint32_t);
 c06:	9b01      	ldr	r3, [sp, #4]
 c08:	1d1a      	adds	r2, r3, #4
 c0a:	9201      	str	r2, [sp, #4]
						print_unsigned_decimal(numu);
 c0c:	6818      	ldr	r0, [r3, #0]
 c0e:	f7ff ff2f 	bl	a70 <print_unsigned_decimal>
				i++;
 c12:	4634      	mov	r4, r6
					break;
 c14:	e027      	b.n	c66 <printlf+0x72>
					
					case 'd': //signed decimal number
						num = va_arg(args, int32_t);
 c16:	9b01      	ldr	r3, [sp, #4]
 c18:	1d1a      	adds	r2, r3, #4
 c1a:	9201      	str	r2, [sp, #4]
						print_decimal(num);
 c1c:	6818      	ldr	r0, [r3, #0]
 c1e:	f7ff ff4d 	bl	abc <print_decimal>
				i++;
 c22:	4634      	mov	r4, r6
					break;
 c24:	e01f      	b.n	c66 <printlf+0x72>
					
					case '\0': // End of string
						putchar( '%');
 c26:	2025      	movs	r0, #37	@ 0x25
 c28:	f7ff fef2 	bl	a10 <putchar>
						i--; //let the for loop catch this
					break;
 c2c:	e01b      	b.n	c66 <printlf+0x72>
					
					case 's': //string
						str = va_arg(args, char*);
 c2e:	9b01      	ldr	r3, [sp, #4]
 c30:	1d1a      	adds	r2, r3, #4
 c32:	9201      	str	r2, [sp, #4]
						print_string(str);
 c34:	6818      	ldr	r0, [r3, #0]
 c36:	f7ff ff0f 	bl	a58 <print_string>
				i++;
 c3a:	4634      	mov	r4, r6
					break;
 c3c:	e013      	b.n	c66 <printlf+0x72>
					
					case 'f': //float
						numf = va_arg(args, float *);
 c3e:	9b01      	ldr	r3, [sp, #4]
 c40:	1d1a      	adds	r2, r3, #4
 c42:	9201      	str	r2, [sp, #4]
 c44:	681b      	ldr	r3, [r3, #0]
						print_float(*numf);
 c46:	ed93 0a00 	vldr	s0, [r3]
 c4a:	f7ff ff43 	bl	ad4 <print_float>
				i++;
 c4e:	4634      	mov	r4, r6
					break;
 c50:	e009      	b.n	c66 <printlf+0x72>
					
					default: //Not recognized
					putchar( '%');
 c52:	2025      	movs	r0, #37	@ 0x25
 c54:	f7ff fedc 	bl	a10 <putchar>
					putchar( format[i]);
 c58:	5da8      	ldrb	r0, [r5, r6]
 c5a:	f7ff fed9 	bl	a10 <putchar>
				i++;
 c5e:	4634      	mov	r4, r6
					break;
 c60:	e001      	b.n	c66 <printlf+0x72>
				}
			break;
				
			default:
				putchar( format[i]);
 c62:	f7ff fed5 	bl	a10 <putchar>
	for(int i=0; format[i] != '\0'; i++) {
 c66:	3401      	adds	r4, #1
 c68:	5d28      	ldrb	r0, [r5, r4]
 c6a:	b398      	cbz	r0, cd4 <printlf+0xe0>
		switch(format[i]) {
 c6c:	2825      	cmp	r0, #37	@ 0x25
 c6e:	d1f8      	bne.n	c62 <printlf+0x6e>
				i++;
 c70:	1c66      	adds	r6, r4, #1
				switch(format[i]) {
 c72:	5dab      	ldrb	r3, [r5, r6]
 c74:	2b00      	cmp	r3, #0
 c76:	d0d6      	beq.n	c26 <printlf+0x32>
 c78:	2b75      	cmp	r3, #117	@ 0x75
 c7a:	d8ea      	bhi.n	c52 <printlf+0x5e>
 c7c:	2b64      	cmp	r3, #100	@ 0x64
 c7e:	d3e8      	bcc.n	c52 <printlf+0x5e>
 c80:	3b64      	subs	r3, #100	@ 0x64
 c82:	2b11      	cmp	r3, #17
 c84:	d8e5      	bhi.n	c52 <printlf+0x5e>
 c86:	a201      	add	r2, pc, #4	@ (adr r2, c8c <printlf+0x98>)
 c88:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 c8c:	00000c17 	.word	0x00000c17
 c90:	00000c53 	.word	0x00000c53
 c94:	00000c3f 	.word	0x00000c3f
 c98:	00000c53 	.word	0x00000c53
 c9c:	00000c53 	.word	0x00000c53
 ca0:	00000c53 	.word	0x00000c53
 ca4:	00000c53 	.word	0x00000c53
 ca8:	00000c53 	.word	0x00000c53
 cac:	00000c53 	.word	0x00000c53
 cb0:	00000c53 	.word	0x00000c53
 cb4:	00000c53 	.word	0x00000c53
 cb8:	00000c53 	.word	0x00000c53
 cbc:	00000c53 	.word	0x00000c53
 cc0:	00000c53 	.word	0x00000c53
 cc4:	00000c53 	.word	0x00000c53
 cc8:	00000c2f 	.word	0x00000c2f
 ccc:	00000c53 	.word	0x00000c53
 cd0:	00000c07 	.word	0x00000c07
			break;
		}
	}
	
	va_end(args);
}
 cd4:	b002      	add	sp, #8
 cd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 cda:	b004      	add	sp, #16
 cdc:	4770      	bx	lr
 cde:	bf00      	nop

00000ce0 <NmiSR>:
NmiSR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 ce0:	e7fe      	b.n	ce0 <NmiSR>

00000ce2 <FaultISR>:
FaultISR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 ce2:	e7fe      	b.n	ce2 <FaultISR>

00000ce4 <IntDefaultHandler>:
IntDefaultHandler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
 ce4:	e7fe      	b.n	ce4 <IntDefaultHandler>
	...

00000ce8 <ResetISR>:
{
 ce8:	b508      	push	{r3, lr}
    for(pulDest = &_data; pulDest < &_edata; )
 cea:	4b0e      	ldr	r3, [pc, #56]	@ (d24 <zero_loop+0x1e>)
    pulSrc = &_etext;
 cec:	4a0e      	ldr	r2, [pc, #56]	@ (d28 <zero_loop+0x22>)
    for(pulDest = &_data; pulDest < &_edata; )
 cee:	e003      	b.n	cf8 <ResetISR+0x10>
        *pulDest++ = *pulSrc++;
 cf0:	f852 1b04 	ldr.w	r1, [r2], #4
 cf4:	f843 1b04 	str.w	r1, [r3], #4
    for(pulDest = &_data; pulDest < &_edata; )
 cf8:	490c      	ldr	r1, [pc, #48]	@ (d2c <zero_loop+0x26>)
 cfa:	428b      	cmp	r3, r1
 cfc:	d3f8      	bcc.n	cf0 <ResetISR+0x8>
    __asm("    ldr     r0, =_bss\n"
 cfe:	480c      	ldr	r0, [pc, #48]	@ (d30 <zero_loop+0x2a>)
 d00:	490c      	ldr	r1, [pc, #48]	@ (d34 <zero_loop+0x2e>)
 d02:	f04f 0200 	mov.w	r2, #0

00000d06 <zero_loop>:
 d06:	4288      	cmp	r0, r1
 d08:	bfb8      	it	lt
 d0a:	f840 2b04 	strlt.w	r2, [r0], #4
 d0e:	dbfa      	blt.n	d06 <zero_loop>
    *((uint32_t *)0xE000ED88) = 0xFFFFFFFF; //SPM376e pg 133 - enable FPU
 d10:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 d14:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 d18:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
    main();
 d1c:	f7ff fcf2 	bl	704 <main>
}
 d20:	bd08      	pop	{r3, pc}
 d22:	bf00      	nop
 d24:	20000000 	.word	0x20000000
 d28:	00000d63 	.word	0x00000d63
 d2c:	20000001 	.word	0x20000001
 d30:	20000008 	.word	0x20000008
 d34:	200009b0 	.word	0x200009b0
 d38:	253a6425 	.word	0x253a6425
 d3c:	00000a64 	.word	0x00000a64
 d40:	7c64252a 	.word	0x7c64252a
 d44:	257c6425 	.word	0x257c6425
 d48:	00000a64 	.word	0x00000a64
 d4c:	004e614e 	.word	0x004e614e
 d50:	00666e69 	.word	0x00666e69
 d54:	74756f5b 	.word	0x74756f5b
 d58:	20666f20 	.word	0x20666f20
 d5c:	676e6172 	.word	0x676e6172
 d60:	5d65      	.short	0x5d65
	...
