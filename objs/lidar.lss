
objs/lidar.axf:     file format elf32-littlearm

Contents of the .debug_info section:

  Compilation Unit @ offset 0:
   Length:        0x8f0 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0
   Pointer Size:  4
 <0><c>: Abbrev Number: 29 (DW_TAG_compile_unit)
    <d>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <11>   DW_AT_language    : 29	(C11)
    <12>   DW_AT_name        : (indirect string, offset: 0x3b): src/lidar.c
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1a>   DW_AT_ranges      : 0x18
    <1e>   DW_AT_low_pc      : 0
    <22>   DW_AT_stmt_list   : 0
 <1><26>: Abbrev Number: 5 (DW_TAG_base_type)
    <27>   DW_AT_byte_size   : 8
    <28>   DW_AT_encoding    : 7	(unsigned)
    <29>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><2d>: Abbrev Number: 5 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 4
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><34>: Abbrev Number: 5 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 1
    <36>   DW_AT_encoding    : 6	(signed char)
    <37>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><3b>: Abbrev Number: 6 (DW_TAG_typedef)
    <3c>   DW_AT_name        : (indirect string, offset: 0x3eb): __uint8_t
    <40>   DW_AT_decl_file   : 2
    <41>   DW_AT_decl_line   : 43
    <42>   DW_AT_decl_column : 24
    <43>   DW_AT_type        : <0x47>
 <1><47>: Abbrev Number: 5 (DW_TAG_base_type)
    <48>   DW_AT_byte_size   : 1
    <49>   DW_AT_encoding    : 8	(unsigned char)
    <4a>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><4e>: Abbrev Number: 5 (DW_TAG_base_type)
    <4f>   DW_AT_byte_size   : 2
    <50>   DW_AT_encoding    : 5	(signed)
    <51>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><55>: Abbrev Number: 6 (DW_TAG_typedef)
    <56>   DW_AT_name        : (indirect string, offset: 0x93): __uint16_t
    <5a>   DW_AT_decl_file   : 2
    <5b>   DW_AT_decl_line   : 57
    <5c>   DW_AT_decl_column : 25
    <5d>   DW_AT_type        : <0x61>
 <1><61>: Abbrev Number: 5 (DW_TAG_base_type)
    <62>   DW_AT_byte_size   : 2
    <63>   DW_AT_encoding    : 7	(unsigned)
    <64>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><68>: Abbrev Number: 6 (DW_TAG_typedef)
    <69>   DW_AT_name        : (indirect string, offset: 0x340): __int32_t
    <6d>   DW_AT_decl_file   : 2
    <6e>   DW_AT_decl_line   : 77
    <6f>   DW_AT_decl_column : 24
    <70>   DW_AT_type        : <0x74>
 <1><74>: Abbrev Number: 5 (DW_TAG_base_type)
    <75>   DW_AT_byte_size   : 4
    <76>   DW_AT_encoding    : 5	(signed)
    <77>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><7b>: Abbrev Number: 6 (DW_TAG_typedef)
    <7c>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <80>   DW_AT_decl_file   : 2
    <81>   DW_AT_decl_line   : 79
    <82>   DW_AT_decl_column : 25
    <83>   DW_AT_type        : <0x87>
 <1><87>: Abbrev Number: 5 (DW_TAG_base_type)
    <88>   DW_AT_byte_size   : 4
    <89>   DW_AT_encoding    : 7	(unsigned)
    <8a>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><8e>: Abbrev Number: 5 (DW_TAG_base_type)
    <8f>   DW_AT_byte_size   : 8
    <90>   DW_AT_encoding    : 5	(signed)
    <91>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><95>: Abbrev Number: 30 (DW_TAG_base_type)
    <96>   DW_AT_byte_size   : 4
    <97>   DW_AT_encoding    : 5	(signed)
    <98>   DW_AT_name        : int
 <1><9c>: Abbrev Number: 6 (DW_TAG_typedef)
    <9d>   DW_AT_name        : (indirect string, offset: 0x3ed): uint8_t
    <a1>   DW_AT_decl_file   : 3
    <a2>   DW_AT_decl_line   : 24
    <a3>   DW_AT_decl_column : 19
    <a4>   DW_AT_type        : <0x3b>
 <1><a8>: Abbrev Number: 6 (DW_TAG_typedef)
    <a9>   DW_AT_name        : (indirect string, offset: 0x95): uint16_t
    <ad>   DW_AT_decl_file   : 3
    <ae>   DW_AT_decl_line   : 36
    <af>   DW_AT_decl_column : 20
    <b0>   DW_AT_type        : <0x55>
 <1><b4>: Abbrev Number: 6 (DW_TAG_typedef)
    <b5>   DW_AT_name        : (indirect string, offset: 0x342): int32_t
    <b9>   DW_AT_decl_file   : 3
    <ba>   DW_AT_decl_line   : 44
    <bb>   DW_AT_decl_column : 19
    <bc>   DW_AT_type        : <0x68>
 <1><c0>: Abbrev Number: 31 (DW_TAG_const_type)
    <c1>   DW_AT_type        : <0xb4>
 <1><c5>: Abbrev Number: 6 (DW_TAG_typedef)
    <c6>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <ca>   DW_AT_decl_file   : 3
    <cb>   DW_AT_decl_line   : 48
    <cc>   DW_AT_decl_column : 20
    <cd>   DW_AT_type        : <0x7b>
 <1><d1>: Abbrev Number: 32 (DW_TAG_variable)
    <d2>   DW_AT_name        : (indirect string, offset: 0x10d): active_point_buffer
    <d6>   DW_AT_decl_file   : 4
    <d7>   DW_AT_decl_line   : 5
    <d8>   DW_AT_decl_column : 18
    <d9>   DW_AT_type        : <0xdd>
    <dd>   DW_AT_external    : 1
    <dd>   DW_AT_declaration : 1
 <1><dd>: Abbrev Number: 24 (DW_TAG_pointer_type)
    <de>   DW_AT_byte_size   : 4
    <de>   DW_AT_type        : <0xc5>
 <1><e2>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <e3>   DW_AT_encoding    : 7	(unsigned)
    <e3>   DW_AT_byte_size   : 1
    <e3>   DW_AT_type        : <0x47>
    <e7>   DW_AT_decl_file   : 4
    <e8>   DW_AT_decl_line   : 10
    <e9>   DW_AT_decl_column : 7
    <ea>   DW_AT_sibling     : <0xfb>
 <2><ee>: Abbrev Number: 4 (DW_TAG_enumerator)
    <ef>   DW_AT_name        : (indirect string, offset: 0x2e8): MODE_SINGLE
    <f3>   DW_AT_const_value : 0
 <2><f4>: Abbrev Number: 4 (DW_TAG_enumerator)
    <f5>   DW_AT_name        : (indirect string, offset: 0x200): MODE_CONTINUOUS
    <f9>   DW_AT_const_value : 1
 <2><fa>: Abbrev Number: 0
 <1><fb>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <fc>   DW_AT_encoding    : 7	(unsigned)
    <fc>   DW_AT_byte_size   : 1
    <fc>   DW_AT_type        : <0x47>
    <100>   DW_AT_decl_file   : 4
    <101>   DW_AT_decl_line   : 11
    <102>   DW_AT_decl_column : 7
    <103>   DW_AT_sibling     : <0x114>
 <2><107>: Abbrev Number: 4 (DW_TAG_enumerator)
    <108>   DW_AT_name        : (indirect string, offset: 0x36e): TYPE_SCAN
    <10c>   DW_AT_const_value : 129
 <2><10d>: Abbrev Number: 4 (DW_TAG_enumerator)
    <10e>   DW_AT_name        : (indirect string, offset: 0x210): TYPE_HEALTH_STATUS
    <112>   DW_AT_const_value : 6
 <2><113>: Abbrev Number: 0
 <1><114>: Abbrev Number: 25 (DW_TAG_structure_type)
    <115>   DW_AT_name        : (indirect string, offset: 0xb): HeaderFields
    <119>   DW_AT_byte_size   : 7
    <11a>   DW_AT_decl_file   : 4
    <11a>   DW_AT_decl_line   : 7
    <11b>   DW_AT_decl_column : 32
    <11b>   DW_AT_sibling     : <0x153>
 <2><11f>: Abbrev Number: 9 (DW_TAG_member)
    <120>   DW_AT_name        : (indirect string, offset: 0x9e): start_code
    <124>   DW_AT_decl_file   : 4
    <124>   DW_AT_decl_line   : 8
    <125>   DW_AT_decl_column : 11
    <126>   DW_AT_type        : <0xa8>
    <12a>   DW_AT_data_member_location: 0
 <2><12b>: Abbrev Number: 13 (DW_TAG_member)
    <12c>   DW_AT_name        : (indirect string, offset: 0x18a): length
    <130>   DW_AT_decl_file   : 4
    <130>   DW_AT_decl_line   : 9
    <131>   DW_AT_decl_column : 11
    <132>   DW_AT_type        : <0xc5>
    <136>   DW_AT_bit_size    : 30
    <137>   DW_AT_data_bit_offset: 16
 <2><138>: Abbrev Number: 13 (DW_TAG_member)
    <139>   DW_AT_name        : (indirect string, offset: 0x78): mode
    <13d>   DW_AT_decl_file   : 4
    <13d>   DW_AT_decl_line   : 10
    <13e>   DW_AT_decl_column : 46
    <13f>   DW_AT_type        : <0xe2>
    <143>   DW_AT_bit_size    : 2
    <144>   DW_AT_data_bit_offset: 46
 <2><145>: Abbrev Number: 13 (DW_TAG_member)
    <146>   DW_AT_name        : (indirect string, offset: 0x232): type
    <14a>   DW_AT_decl_file   : 4
    <14a>   DW_AT_decl_line   : 11
    <14b>   DW_AT_decl_column : 49
    <14c>   DW_AT_type        : <0xfb>
    <150>   DW_AT_bit_size    : 8
    <151>   DW_AT_data_bit_offset: 48
 <2><152>: Abbrev Number: 0
 <1><153>: Abbrev Number: 26 (DW_TAG_union_type)
    <154>   DW_AT_byte_size   : 7
    <155>   DW_AT_decl_file   : 4
    <155>   DW_AT_decl_line   : 13
    <156>   DW_AT_decl_column : 9
    <156>   DW_AT_sibling     : <0x171>
 <2><15a>: Abbrev Number: 14 (DW_TAG_member)
    <15b>   DW_AT_name        : (indirect string, offset: 0x316): bytes
    <15f>   DW_AT_decl_file   : 4
    <15f>   DW_AT_decl_line   : 14
    <160>   DW_AT_decl_column : 10
    <161>   DW_AT_type        : <0x171>
 <2><165>: Abbrev Number: 14 (DW_TAG_member)
    <166>   DW_AT_name        : (indirect string, offset: 0): header
    <16a>   DW_AT_decl_file   : 4
    <16a>   DW_AT_decl_line   : 15
    <16b>   DW_AT_decl_column : 22
    <16c>   DW_AT_type        : <0x114>
 <2><170>: Abbrev Number: 0
 <1><171>: Abbrev Number: 19 (DW_TAG_array_type)
    <172>   DW_AT_type        : <0x9c>
    <176>   DW_AT_sibling     : <0x181>
 <2><17a>: Abbrev Number: 27 (DW_TAG_subrange_type)
    <17b>   DW_AT_type        : <0x2d>
    <17f>   DW_AT_upper_bound : 6
 <2><180>: Abbrev Number: 0
 <1><181>: Abbrev Number: 6 (DW_TAG_typedef)
    <182>   DW_AT_name        : (indirect string, offset: 0x333): PacketHeader
    <186>   DW_AT_decl_file   : 4
    <187>   DW_AT_decl_line   : 16
    <188>   DW_AT_decl_column : 3
    <189>   DW_AT_type        : <0x153>
 <1><18d>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <18e>   DW_AT_encoding    : 7	(unsigned)
    <18e>   DW_AT_byte_size   : 1
    <18e>   DW_AT_type        : <0x47>
    <192>   DW_AT_decl_file   : 4
    <193>   DW_AT_decl_line   : 21
    <194>   DW_AT_decl_column : 7
    <195>   DW_AT_sibling     : <0x1a6>
 <2><199>: Abbrev Number: 4 (DW_TAG_enumerator)
    <19a>   DW_AT_name        : (indirect string, offset: 0x86): START_PACKET
    <19e>   DW_AT_const_value : 1
 <2><19f>: Abbrev Number: 4 (DW_TAG_enumerator)
    <1a0>   DW_AT_name        : (indirect string, offset: 0xb1): DATA_PACKET
    <1a4>   DW_AT_const_value : 0
 <2><1a5>: Abbrev Number: 0
 <1><1a6>: Abbrev Number: 25 (DW_TAG_structure_type)
    <1a7>   DW_AT_name        : (indirect string, offset: 0x7): ScanHeaderFields
    <1ab>   DW_AT_byte_size   : 10
    <1ac>   DW_AT_decl_file   : 4
    <1ac>   DW_AT_decl_line   : 19
    <1ad>   DW_AT_decl_column : 32
    <1ad>   DW_AT_sibling     : <0x1fb>
 <2><1b1>: Abbrev Number: 9 (DW_TAG_member)
    <1b2>   DW_AT_name        : (indirect string, offset: 0x9e): start_code
    <1b6>   DW_AT_decl_file   : 4
    <1b6>   DW_AT_decl_line   : 20
    <1b7>   DW_AT_decl_column : 11
    <1b8>   DW_AT_type        : <0xa8>
    <1bc>   DW_AT_data_member_location: 0
 <2><1bd>: Abbrev Number: 13 (DW_TAG_member)
    <1be>   DW_AT_name        : (indirect string, offset: 0x232): type
    <1c2>   DW_AT_decl_file   : 4
    <1c2>   DW_AT_decl_line   : 21
    <1c3>   DW_AT_decl_column : 45
    <1c4>   DW_AT_type        : <0x18d>
    <1c8>   DW_AT_bit_size    : 8
    <1c9>   DW_AT_data_bit_offset: 16
 <2><1ca>: Abbrev Number: 9 (DW_TAG_member)
    <1cb>   DW_AT_name        : (indirect string, offset: 0x237): sample_count
    <1cf>   DW_AT_decl_file   : 4
    <1cf>   DW_AT_decl_line   : 22
    <1d0>   DW_AT_decl_column : 10
    <1d1>   DW_AT_type        : <0x9c>
    <1d5>   DW_AT_data_member_location: 3
 <2><1d6>: Abbrev Number: 9 (DW_TAG_member)
    <1d7>   DW_AT_name        : (indirect string, offset: 0x381): start_angle
    <1db>   DW_AT_decl_file   : 4
    <1db>   DW_AT_decl_line   : 23
    <1dc>   DW_AT_decl_column : 11
    <1dd>   DW_AT_type        : <0xa8>
    <1e1>   DW_AT_data_member_location: 4
 <2><1e2>: Abbrev Number: 9 (DW_TAG_member)
    <1e3>   DW_AT_name        : (indirect string, offset: 0x19f): end_angle
    <1e7>   DW_AT_decl_file   : 4
    <1e7>   DW_AT_decl_line   : 24
    <1e8>   DW_AT_decl_column : 11
    <1e9>   DW_AT_type        : <0xa8>
    <1ed>   DW_AT_data_member_location: 6
 <2><1ee>: Abbrev Number: 9 (DW_TAG_member)
    <1ef>   DW_AT_name        : (indirect string, offset: 0x365): checksum
    <1f3>   DW_AT_decl_file   : 4
    <1f3>   DW_AT_decl_line   : 25
    <1f4>   DW_AT_decl_column : 11
    <1f5>   DW_AT_type        : <0xa8>
    <1f9>   DW_AT_data_member_location: 8
 <2><1fa>: Abbrev Number: 0
 <1><1fb>: Abbrev Number: 26 (DW_TAG_union_type)
    <1fc>   DW_AT_byte_size   : 10
    <1fd>   DW_AT_decl_file   : 4
    <1fd>   DW_AT_decl_line   : 27
    <1fe>   DW_AT_decl_column : 9
    <1fe>   DW_AT_sibling     : <0x219>
 <2><202>: Abbrev Number: 14 (DW_TAG_member)
    <203>   DW_AT_name        : (indirect string, offset: 0x316): bytes
    <207>   DW_AT_decl_file   : 4
    <207>   DW_AT_decl_line   : 28
    <208>   DW_AT_decl_column : 10
    <209>   DW_AT_type        : <0x219>
 <2><20d>: Abbrev Number: 14 (DW_TAG_member)
    <20e>   DW_AT_name        : (indirect string, offset: 0): header
    <212>   DW_AT_decl_file   : 4
    <212>   DW_AT_decl_line   : 29
    <213>   DW_AT_decl_column : 26
    <214>   DW_AT_type        : <0x1a6>
 <2><218>: Abbrev Number: 0
 <1><219>: Abbrev Number: 19 (DW_TAG_array_type)
    <21a>   DW_AT_type        : <0x9c>
    <21e>   DW_AT_sibling     : <0x229>
 <2><222>: Abbrev Number: 27 (DW_TAG_subrange_type)
    <223>   DW_AT_type        : <0x2d>
    <227>   DW_AT_upper_bound : 9
 <2><228>: Abbrev Number: 0
 <1><229>: Abbrev Number: 6 (DW_TAG_typedef)
    <22a>   DW_AT_name        : (indirect string, offset: 0x35a): ScanHeader
    <22e>   DW_AT_decl_file   : 4
    <22f>   DW_AT_decl_line   : 30
    <230>   DW_AT_decl_column : 3
    <231>   DW_AT_type        : <0x1fb>
 <1><235>: Abbrev Number: 19 (DW_TAG_array_type)
    <236>   DW_AT_type        : <0xc5>
    <23a>   DW_AT_sibling     : <0x246>
 <2><23e>: Abbrev Number: 33 (DW_TAG_subrange_type)
    <23f>   DW_AT_type        : <0x2d>
    <243>   DW_AT_upper_bound : 359
 <2><245>: Abbrev Number: 0
 <1><246>: Abbrev Number: 20 (DW_TAG_variable)
    <247>   DW_AT_name        : (indirect string, offset: 0x1c0): points_buf_0
    <24b>   DW_AT_decl_file   : 1
    <24b>   DW_AT_decl_line   : 33
    <24c>   DW_AT_decl_column : 10
    <24d>   DW_AT_type        : <0x235>
    <251>   DW_AT_external    : 1
    <251>   DW_AT_location    : 5 byte block: 3 c4 5 0 20 	(DW_OP_addr: 200005c4)
 <1><257>: Abbrev Number: 20 (DW_TAG_variable)
    <258>   DW_AT_name        : (indirect string, offset: 0x1cd): points_buf_1
    <25c>   DW_AT_decl_file   : 1
    <25c>   DW_AT_decl_line   : 34
    <25d>   DW_AT_decl_column : 10
    <25e>   DW_AT_type        : <0x235>
    <262>   DW_AT_external    : 1
    <262>   DW_AT_location    : 5 byte block: 3 24 0 0 20 	(DW_OP_addr: 20000024)
 <1><268>: Abbrev Number: 34 (DW_TAG_variable)
    <269>   DW_AT_specification: <0xd1>
    <26d>   DW_AT_decl_file   : 1
    <26e>   DW_AT_decl_line   : 35
    <26f>   DW_AT_decl_column : 11
    <270>   DW_AT_location    : 5 byte block: 3 20 0 0 20 	(DW_OP_addr: 20000020)
 <1><276>: Abbrev Number: 20 (DW_TAG_variable)
    <277>   DW_AT_name        : (indirect string, offset: 0x3d4): receiving_point_buffer
    <27b>   DW_AT_decl_file   : 1
    <27b>   DW_AT_decl_line   : 36
    <27c>   DW_AT_decl_column : 11
    <27d>   DW_AT_type        : <0xdd>
    <281>   DW_AT_external    : 1
    <281>   DW_AT_location    : 5 byte block: 3 1c 0 0 20 	(DW_OP_addr: 2000001c)
 <1><287>: Abbrev Number: 35 (DW_TAG_subprogram)
    <288>   DW_AT_external    : 1
    <288>   DW_AT_name        : (indirect string, offset: 0x150): printlf
    <28c>   DW_AT_decl_file   : 5
    <28d>   DW_AT_decl_line   : 10
    <28e>   DW_AT_decl_column : 6
    <28f>   DW_AT_prototyped  : 1
    <28f>   DW_AT_declaration : 1
    <28f>   DW_AT_sibling     : <0x29a>
 <2><293>: Abbrev Number: 36 (DW_TAG_formal_parameter)
    <294>   DW_AT_type        : <0x29a>
 <2><298>: Abbrev Number: 37 (DW_TAG_unspecified_parameters)
 <2><299>: Abbrev Number: 0
 <1><29a>: Abbrev Number: 24 (DW_TAG_pointer_type)
    <29b>   DW_AT_byte_size   : 4
    <29b>   DW_AT_type        : <0x29f>
 <1><29f>: Abbrev Number: 5 (DW_TAG_base_type)
    <2a0>   DW_AT_byte_size   : 1
    <2a1>   DW_AT_encoding    : 8	(unsigned char)
    <2a2>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><2a6>: Abbrev Number: 10 (DW_TAG_subprogram)
    <2a7>   DW_AT_external    : 1
    <2a7>   DW_AT_name        : (indirect string, offset: 0x2f4): process_packets
    <2ab>   DW_AT_decl_file   : 1
    <2ab>   DW_AT_decl_line   : 133
    <2ac>   DW_AT_decl_column : 6
    <2ac>   DW_AT_prototyped  : 1
    <2ac>   DW_AT_low_pc      : 0x4c4
    <2b0>   DW_AT_high_pc     : 0x288
    <2b4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <2b6>   DW_AT_call_all_calls: 1
    <2b6>   DW_AT_sibling     : <0x5ad>
 <2><2ba>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <2bb>   DW_AT_encoding    : 7	(unsigned)
    <2bb>   DW_AT_byte_size   : 1
    <2bb>   DW_AT_type        : <0x47>
    <2bf>   DW_AT_decl_file   : 1
    <2c0>   DW_AT_decl_line   : 134
    <2c1>   DW_AT_decl_column : 14
    <2c2>   DW_AT_sibling     : <0x2eb>
 <3><2c6>: Abbrev Number: 4 (DW_TAG_enumerator)
    <2c7>   DW_AT_name        : (indirect string, offset: 0x1da): COMM_WAITING
    <2cb>   DW_AT_const_value : 0
 <3><2cc>: Abbrev Number: 4 (DW_TAG_enumerator)
    <2cd>   DW_AT_name        : (indirect string, offset: 0x3a0): RECEIVING_HEADER
    <2d1>   DW_AT_const_value : 1
 <3><2d2>: Abbrev Number: 4 (DW_TAG_enumerator)
    <2d3>   DW_AT_name        : (indirect string, offset: 0x18): WAITING_SCAN_HEADER
    <2d7>   DW_AT_const_value : 2
 <3><2d8>: Abbrev Number: 4 (DW_TAG_enumerator)
    <2d9>   DW_AT_name        : (indirect string, offset: 0xc7): RECEIVING_SCAN_HEADER
    <2dd>   DW_AT_const_value : 3
 <3><2de>: Abbrev Number: 4 (DW_TAG_enumerator)
    <2df>   DW_AT_name        : (indirect string, offset: 0x165): RECEIVING_SCAN_DATA
    <2e3>   DW_AT_const_value : 4
 <3><2e4>: Abbrev Number: 4 (DW_TAG_enumerator)
    <2e5>   DW_AT_name        : (indirect string, offset: 0x3bc): RECEIVING_HEALTH_REPORT
    <2e9>   DW_AT_const_value : 5
 <3><2ea>: Abbrev Number: 0
 <2><2eb>: Abbrev Number: 15 (DW_TAG_variable)
    <2ec>   DW_AT_name        : (indirect string, offset: 0x3b1): comm_state
    <2f0>   DW_AT_decl_file   : 1
    <2f0>   DW_AT_decl_line   : 134
    <2f1>   DW_AT_decl_column : 137
    <2f2>   DW_AT_type        : <0x2ba>
    <2f6>   DW_AT_location    : 5 byte block: 3 1a 0 0 20 	(DW_OP_addr: 2000001a)
 <2><2fc>: Abbrev Number: 15 (DW_TAG_variable)
    <2fd>   DW_AT_name        : (indirect string, offset: 0x158): current_byte
    <301>   DW_AT_decl_file   : 1
    <301>   DW_AT_decl_line   : 135
    <302>   DW_AT_decl_column : 18
    <303>   DW_AT_type        : <0xa8>
    <307>   DW_AT_location    : 5 byte block: 3 18 0 0 20 	(DW_OP_addr: 20000018)
 <2><30d>: Abbrev Number: 15 (DW_TAG_variable)
    <30e>   DW_AT_name        : (indirect string, offset: 0x31c): current_message
    <312>   DW_AT_decl_file   : 1
    <312>   DW_AT_decl_line   : 136
    <313>   DW_AT_decl_column : 22
    <314>   DW_AT_type        : <0x181>
    <318>   DW_AT_location    : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <2><31e>: Abbrev Number: 15 (DW_TAG_variable)
    <31f>   DW_AT_name        : (indirect string, offset: 0x100): current_scan
    <323>   DW_AT_decl_file   : 1
    <323>   DW_AT_decl_line   : 137
    <324>   DW_AT_decl_column : 20
    <325>   DW_AT_type        : <0x229>
    <329>   DW_AT_location    : 5 byte block: 3 4 0 0 20 	(DW_OP_addr: 20000004)
 <2><32f>: Abbrev Number: 21 (DW_TAG_lexical_block)
    <330>   DW_AT_low_pc      : 0x4c8
    <334>   DW_AT_high_pc     : 0x2e
    <338>   DW_AT_sibling     : <0x376>
 <3><33c>: Abbrev Number: 11 (DW_TAG_variable)
    <33d>   DW_AT_name        : tmp
    <341>   DW_AT_decl_file   : 1
    <341>   DW_AT_decl_line   : 146
    <342>   DW_AT_decl_column : 10
    <343>   DW_AT_type        : <0x29f>
    <347>   DW_AT_location    : 0xe (location list)
    <34b>   DW_AT_GNU_locviews: 0xc
 <3><34f>: Abbrev Number: 2 (DW_TAG_call_site)
    <350>   DW_AT_call_return_pc: 0x4d4
    <354>   DW_AT_sibling     : <0x362>
 <4><358>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <359>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <35b>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <4><361>: Abbrev Number: 0
 <3><362>: Abbrev Number: 16 (DW_TAG_call_site)
    <363>   DW_AT_call_return_pc: 0x4f6
    <367>   DW_AT_call_origin : <0x287>
 <4><36b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <36c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <36e>   DW_AT_call_value  : 5 byte block: 3 d0 b 0 0 	(DW_OP_addr: bd0)
 <4><374>: Abbrev Number: 0
 <3><375>: Abbrev Number: 0
 <2><376>: Abbrev Number: 21 (DW_TAG_lexical_block)
    <377>   DW_AT_low_pc      : 0x612
    <37b>   DW_AT_high_pc     : 0x38
    <37f>   DW_AT_sibling     : <0x3f1>
 <3><383>: Abbrev Number: 8 (DW_TAG_variable)
    <384>   DW_AT_name        : (indirect string, offset: 0xdd): temp
    <388>   DW_AT_decl_file   : 1
    <388>   DW_AT_decl_line   : 217
    <389>   DW_AT_decl_column : 16
    <38a>   DW_AT_type        : <0xdd>
    <38e>   DW_AT_location    : 0x19 (location list)
    <392>   DW_AT_GNU_locviews: 0x17
 <3><396>: Abbrev Number: 7 (DW_TAG_call_site)
    <397>   DW_AT_call_return_pc: 0x618
    <39b>   DW_AT_call_origin : <0x287>
    <39f>   DW_AT_sibling     : <0x3ad>
 <4><3a3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3a4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3a6>   DW_AT_call_value  : 5 byte block: 3 90 c 0 0 	(DW_OP_addr: c90)
 <4><3ac>: Abbrev Number: 0
 <3><3ad>: Abbrev Number: 3 (DW_TAG_call_site)
    <3ae>   DW_AT_call_return_pc: 0x61c
    <3b2>   DW_AT_call_origin : <0x827>
 <3><3b6>: Abbrev Number: 7 (DW_TAG_call_site)
    <3b7>   DW_AT_call_return_pc: 0x624
    <3bb>   DW_AT_call_origin : <0x287>
    <3bf>   DW_AT_sibling     : <0x3ca>
 <4><3c3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3c4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3c6>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><3c9>: Abbrev Number: 0
 <3><3ca>: Abbrev Number: 3 (DW_TAG_call_site)
    <3cb>   DW_AT_call_return_pc: 0x63a
    <3cf>   DW_AT_call_origin : <0x8c5>
 <3><3d3>: Abbrev Number: 7 (DW_TAG_call_site)
    <3d4>   DW_AT_call_return_pc: 0x640
    <3d8>   DW_AT_call_origin : <0x287>
    <3dc>   DW_AT_sibling     : <0x3e7>
 <4><3e0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3e1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3e3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><3e6>: Abbrev Number: 0
 <3><3e7>: Abbrev Number: 3 (DW_TAG_call_site)
    <3e8>   DW_AT_call_return_pc: 0x64a
    <3ec>   DW_AT_call_origin : <0x5ad>
 <3><3f0>: Abbrev Number: 0
 <2><3f1>: Abbrev Number: 21 (DW_TAG_lexical_block)
    <3f2>   DW_AT_low_pc      : 0x64c
    <3f6>   DW_AT_high_pc     : 0x68
    <3fa>   DW_AT_sibling     : <0x47c>
 <3><3fe>: Abbrev Number: 28 (DW_TAG_variable)
    <3ff>   DW_AT_name        : lsb
    <403>   DW_AT_decl_file   : 1
    <403>   DW_AT_decl_line   : 232
    <404>   DW_AT_decl_column : 20
    <405>   DW_AT_type        : <0x9c>
    <409>   DW_AT_location    : 5 byte block: 3 1 0 0 20 	(DW_OP_addr: 20000001)
 <3><40f>: Abbrev Number: 28 (DW_TAG_variable)
    <410>   DW_AT_name        : msb
    <414>   DW_AT_decl_file   : 1
    <414>   DW_AT_decl_line   : 232
    <415>   DW_AT_decl_column : 25
    <416>   DW_AT_type        : <0x9c>
    <41a>   DW_AT_location    : 5 byte block: 3 0 0 0 20 	(DW_OP_addr: 20000000)
 <3><420>: Abbrev Number: 17 (DW_TAG_lexical_block)
    <421>   DW_AT_low_pc      : 0x65a
    <425>   DW_AT_high_pc     : 0x5a
 <4><429>: Abbrev Number: 11 (DW_TAG_variable)
    <42a>   DW_AT_name        : val
    <42e>   DW_AT_decl_file   : 1
    <42e>   DW_AT_decl_line   : 240
    <42f>   DW_AT_decl_column : 16
    <430>   DW_AT_type        : <0xc5>
    <434>   DW_AT_location    : 0x26 (location list)
    <438>   DW_AT_GNU_locviews: 0x22
 <4><43c>: Abbrev Number: 8 (DW_TAG_variable)
    <43d>   DW_AT_name        : (indirect string, offset: 0x1a3): angle
    <441>   DW_AT_decl_file   : 1
    <441>   DW_AT_decl_line   : 241
    <442>   DW_AT_decl_column : 11
    <443>   DW_AT_type        : <0x95>
    <447>   DW_AT_location    : 0x3a (location list)
    <44b>   DW_AT_GNU_locviews: 0x36
 <4><44f>: Abbrev Number: 2 (DW_TAG_call_site)
    <450>   DW_AT_call_return_pc: 0x666
    <454>   DW_AT_sibling     : <0x462>
 <5><458>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <459>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <45b>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <5><461>: Abbrev Number: 0
 <4><462>: Abbrev Number: 3 (DW_TAG_call_site)
    <463>   DW_AT_call_return_pc: 0x688
    <467>   DW_AT_call_origin : <0x5f6>
 <4><46b>: Abbrev Number: 18 (DW_TAG_call_site)
    <46c>   DW_AT_call_return_pc: 0x6a8
 <5><470>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <471>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <473>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <5><479>: Abbrev Number: 0
 <4><47a>: Abbrev Number: 0
 <3><47b>: Abbrev Number: 0
 <2><47c>: Abbrev Number: 2 (DW_TAG_call_site)
    <47d>   DW_AT_call_return_pc: 0x504
    <481>   DW_AT_sibling     : <0x48f>
 <3><485>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <486>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <488>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><48e>: Abbrev Number: 0
 <2><48f>: Abbrev Number: 7 (DW_TAG_call_site)
    <490>   DW_AT_call_return_pc: 0x528
    <494>   DW_AT_call_origin : <0x287>
    <498>   DW_AT_sibling     : <0x4a6>
 <3><49c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <49d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <49f>   DW_AT_call_value  : 5 byte block: 3 e0 b 0 0 	(DW_OP_addr: be0)
 <3><4a5>: Abbrev Number: 0
 <2><4a6>: Abbrev Number: 3 (DW_TAG_call_site)
    <4a7>   DW_AT_call_return_pc: 0x52c
    <4ab>   DW_AT_call_origin : <0x6b8>
 <2><4af>: Abbrev Number: 3 (DW_TAG_call_site)
    <4b0>   DW_AT_call_return_pc: 0x530
    <4b4>   DW_AT_call_origin : <0x681>
 <2><4b8>: Abbrev Number: 2 (DW_TAG_call_site)
    <4b9>   DW_AT_call_return_pc: 0x540
    <4bd>   DW_AT_sibling     : <0x4c9>
 <3><4c1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4c2>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4c4>   DW_AT_call_value  : 3 byte block: a 20 4e 	(DW_OP_const2u: 20000)
 <3><4c8>: Abbrev Number: 0
 <2><4c9>: Abbrev Number: 3 (DW_TAG_call_site)
    <4ca>   DW_AT_call_return_pc: 0x544
    <4ce>   DW_AT_call_origin : <0x681>
 <2><4d2>: Abbrev Number: 3 (DW_TAG_call_site)
    <4d3>   DW_AT_call_return_pc: 0x548
    <4d7>   DW_AT_call_origin : <0x6f5>
 <2><4db>: Abbrev Number: 7 (DW_TAG_call_site)
    <4dc>   DW_AT_call_return_pc: 0x556
    <4e0>   DW_AT_call_origin : <0x287>
    <4e4>   DW_AT_sibling     : <0x4f2>
 <3><4e8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4e9>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4eb>   DW_AT_call_value  : 5 byte block: 3 4 c 0 0 	(DW_OP_addr: c04)
 <3><4f1>: Abbrev Number: 0
 <2><4f2>: Abbrev Number: 7 (DW_TAG_call_site)
    <4f3>   DW_AT_call_return_pc: 0x574
    <4f7>   DW_AT_call_origin : <0x287>
    <4fb>   DW_AT_sibling     : <0x509>
 <3><4ff>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <500>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <502>   DW_AT_call_value  : 5 byte block: 3 18 c 0 0 	(DW_OP_addr: c18)
 <3><508>: Abbrev Number: 0
 <2><509>: Abbrev Number: 7 (DW_TAG_call_site)
    <50a>   DW_AT_call_return_pc: 0x584
    <50e>   DW_AT_call_origin : <0x287>
    <512>   DW_AT_sibling     : <0x520>
 <3><516>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <517>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <519>   DW_AT_call_value  : 5 byte block: 3 34 c 0 0 	(DW_OP_addr: c34)
 <3><51f>: Abbrev Number: 0
 <2><520>: Abbrev Number: 2 (DW_TAG_call_site)
    <521>   DW_AT_call_return_pc: 0x598
    <525>   DW_AT_sibling     : <0x533>
 <3><529>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <52a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <52c>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><532>: Abbrev Number: 0
 <2><533>: Abbrev Number: 2 (DW_TAG_call_site)
    <534>   DW_AT_call_return_pc: 0x5be
    <538>   DW_AT_sibling     : <0x546>
 <3><53c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <53d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <53f>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><545>: Abbrev Number: 0
 <2><546>: Abbrev Number: 7 (DW_TAG_call_site)
    <547>   DW_AT_call_return_pc: 0x5d6
    <54b>   DW_AT_call_origin : <0x287>
    <54f>   DW_AT_sibling     : <0x55d>
 <3><553>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <554>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <556>   DW_AT_call_value  : 5 byte block: 3 60 c 0 0 	(DW_OP_addr: c60)
 <3><55c>: Abbrev Number: 0
 <2><55d>: Abbrev Number: 7 (DW_TAG_call_site)
    <55e>   DW_AT_call_return_pc: 0x5fe
    <562>   DW_AT_call_origin : <0x287>
    <566>   DW_AT_sibling     : <0x574>
 <3><56a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <56b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <56d>   DW_AT_call_value  : 5 byte block: 3 74 c 0 0 	(DW_OP_addr: c74)
 <3><573>: Abbrev Number: 0
 <2><574>: Abbrev Number: 3 (DW_TAG_call_site)
    <575>   DW_AT_call_return_pc: 0x602
    <579>   DW_AT_call_origin : <0x6b8>
 <2><57d>: Abbrev Number: 3 (DW_TAG_call_site)
    <57e>   DW_AT_call_return_pc: 0x606
    <582>   DW_AT_call_origin : <0x6f5>
 <2><586>: Abbrev Number: 2 (DW_TAG_call_site)
    <587>   DW_AT_call_return_pc: 0x6c6
    <58b>   DW_AT_sibling     : <0x599>
 <3><58f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <590>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <592>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><598>: Abbrev Number: 0
 <2><599>: Abbrev Number: 16 (DW_TAG_call_site)
    <59a>   DW_AT_call_return_pc: 0x6f6
    <59e>   DW_AT_call_origin : <0x287>
 <3><5a2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5a3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5a5>   DW_AT_call_value  : 5 byte block: 3 a8 c 0 0 	(DW_OP_addr: ca8)
 <3><5ab>: Abbrev Number: 0
 <2><5ac>: Abbrev Number: 0
 <1><5ad>: Abbrev Number: 10 (DW_TAG_subprogram)
    <5ae>   DW_AT_external    : 1
    <5ae>   DW_AT_name        : (indirect string, offset: 0x6b): print_angles
    <5b2>   DW_AT_decl_file   : 1
    <5b2>   DW_AT_decl_line   : 127
    <5b3>   DW_AT_decl_column : 6
    <5b3>   DW_AT_prototyped  : 1
    <5b3>   DW_AT_low_pc      : 0x49c
    <5b7>   DW_AT_high_pc     : 0x28
    <5bb>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <5bd>   DW_AT_call_all_calls: 1
    <5bd>   DW_AT_sibling     : <0x5f6>
 <2><5c1>: Abbrev Number: 17 (DW_TAG_lexical_block)
    <5c2>   DW_AT_low_pc      : 0x49e
    <5c6>   DW_AT_high_pc     : 0x1c
 <3><5ca>: Abbrev Number: 11 (DW_TAG_variable)
    <5cb>   DW_AT_name        : i
    <5cd>   DW_AT_decl_file   : 1
    <5cd>   DW_AT_decl_line   : 128
    <5ce>   DW_AT_decl_column : 10
    <5cf>   DW_AT_type        : <0x95>
    <5d3>   DW_AT_location    : 0x4e (location list)
    <5d7>   DW_AT_GNU_locviews: 0x4a
 <3><5db>: Abbrev Number: 16 (DW_TAG_call_site)
    <5dc>   DW_AT_call_return_pc: 0x4b2
    <5e0>   DW_AT_call_origin : <0x287>
 <4><5e4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5e5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5e7>   DW_AT_call_value  : 5 byte block: 3 c4 b 0 0 	(DW_OP_addr: bc4)
 <4><5ed>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5ee>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5f0>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><5f3>: Abbrev Number: 0
 <3><5f4>: Abbrev Number: 0
 <2><5f5>: Abbrev Number: 0
 <1><5f6>: Abbrev Number: 38 (DW_TAG_subprogram)
    <5f7>   DW_AT_external    : 1
    <5f7>   DW_AT_name        : (indirect string, offset: 0xbd): angle_map
    <5fb>   DW_AT_decl_file   : 1
    <5fc>   DW_AT_decl_line   : 121
    <5fd>   DW_AT_decl_column : 5
    <5fe>   DW_AT_prototyped  : 1
    <5fe>   DW_AT_type        : <0x95>
    <602>   DW_AT_low_pc      : 0x464
    <606>   DW_AT_high_pc     : 0x38
    <60a>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <60c>   DW_AT_call_all_calls: 1
    <60c>   DW_AT_sibling     : <0x681>
 <2><610>: Abbrev Number: 22 (DW_TAG_formal_parameter)
    <611>   DW_AT_name        : (indirect string, offset: 0x1e7): start
    <615>   DW_AT_decl_file   : 1
    <615>   DW_AT_decl_line   : 121
    <615>   DW_AT_decl_column : 23
    <616>   DW_AT_type        : <0xb4>
    <61a>   DW_AT_location    : 0x65 (location list)
    <61e>   DW_AT_GNU_locviews: 0x5f
 <2><622>: Abbrev Number: 39 (DW_TAG_formal_parameter)
    <623>   DW_AT_name        : end
    <627>   DW_AT_decl_file   : 1
    <628>   DW_AT_decl_line   : 121
    <629>   DW_AT_decl_column : 38
    <62a>   DW_AT_type        : <0xb4>
    <62e>   DW_AT_location    : 0x8b (location list)
    <632>   DW_AT_GNU_locviews: 0x83
 <2><636>: Abbrev Number: 22 (DW_TAG_formal_parameter)
    <637>   DW_AT_name        : (indirect string, offset: 0x23e): count
    <63b>   DW_AT_decl_file   : 1
    <63b>   DW_AT_decl_line   : 121
    <63b>   DW_AT_decl_column : 47
    <63c>   DW_AT_type        : <0x95>
    <640>   DW_AT_location    : 0xbf (location list)
    <644>   DW_AT_GNU_locviews: 0xb7
 <2><648>: Abbrev Number: 22 (DW_TAG_formal_parameter)
    <649>   DW_AT_name        : (indirect string, offset: 0x378): position
    <64d>   DW_AT_decl_file   : 1
    <64d>   DW_AT_decl_line   : 121
    <64d>   DW_AT_decl_column : 58
    <64e>   DW_AT_type        : <0x95>
    <652>   DW_AT_location    : 0xf3 (location list)
    <656>   DW_AT_GNU_locviews: 0xeb
 <2><65a>: Abbrev Number: 8 (DW_TAG_variable)
    <65b>   DW_AT_name        : (indirect string, offset: 0x5a): delta
    <65f>   DW_AT_decl_file   : 1
    <65f>   DW_AT_decl_line   : 122
    <660>   DW_AT_decl_column : 16
    <661>   DW_AT_type        : <0xc0>
    <665>   DW_AT_location    : 0x123 (location list)
    <669>   DW_AT_GNU_locviews: 0x11f
 <2><66d>: Abbrev Number: 8 (DW_TAG_variable)
    <66e>   DW_AT_name        : (indirect string, offset: 0xf0): delta_per_count
    <672>   DW_AT_decl_file   : 1
    <672>   DW_AT_decl_line   : 123
    <673>   DW_AT_decl_column : 16
    <674>   DW_AT_type        : <0xc0>
    <678>   DW_AT_location    : 0x137 (location list)
    <67c>   DW_AT_GNU_locviews: 0x133
 <2><680>: Abbrev Number: 0
 <1><681>: Abbrev Number: 10 (DW_TAG_subprogram)
    <682>   DW_AT_external    : 1
    <682>   DW_AT_name        : (indirect string, offset: 0x223): clear_lidar_IO
    <686>   DW_AT_decl_file   : 1
    <686>   DW_AT_decl_line   : 115
    <687>   DW_AT_decl_column : 6
    <687>   DW_AT_prototyped  : 1
    <687>   DW_AT_low_pc      : 0x43c
    <68b>   DW_AT_high_pc     : 0x28
    <68f>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <691>   DW_AT_call_all_calls: 1
    <691>   DW_AT_sibling     : <0x6b8>
 <2><695>: Abbrev Number: 2 (DW_TAG_call_site)
    <696>   DW_AT_call_return_pc: 0x44c
    <69a>   DW_AT_sibling     : <0x6a8>
 <3><69e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <69f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6a1>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><6a7>: Abbrev Number: 0
 <2><6a8>: Abbrev Number: 18 (DW_TAG_call_site)
    <6a9>   DW_AT_call_return_pc: 0x458
 <3><6ad>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6ae>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6b0>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><6b6>: Abbrev Number: 0
 <2><6b7>: Abbrev Number: 0
 <1><6b8>: Abbrev Number: 10 (DW_TAG_subprogram)
    <6b9>   DW_AT_external    : 1
    <6b9>   DW_AT_name        : (indirect string, offset: 0x34a): stop_lidar_scan
    <6bd>   DW_AT_decl_file   : 1
    <6bd>   DW_AT_decl_line   : 110
    <6be>   DW_AT_decl_column : 6
    <6be>   DW_AT_prototyped  : 1
    <6be>   DW_AT_low_pc      : 0x418
    <6c2>   DW_AT_high_pc     : 0x24
    <6c6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6c8>   DW_AT_call_all_calls: 1
    <6c8>   DW_AT_sibling     : <0x6f5>
 <2><6cc>: Abbrev Number: 2 (DW_TAG_call_site)
    <6cd>   DW_AT_call_return_pc: 0x42a
    <6d1>   DW_AT_sibling     : <0x6e2>
 <3><6d5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6d6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6d8>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6db>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6dc>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6de>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><6e1>: Abbrev Number: 0
 <2><6e2>: Abbrev Number: 18 (DW_TAG_call_site)
    <6e3>   DW_AT_call_return_pc: 0x434
 <3><6e7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6e8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6ea>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6ed>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6ee>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6f0>   DW_AT_call_value  : 2 byte block: 8 65 	(DW_OP_const1u: 101)
 <3><6f3>: Abbrev Number: 0
 <2><6f4>: Abbrev Number: 0
 <1><6f5>: Abbrev Number: 10 (DW_TAG_subprogram)
    <6f6>   DW_AT_external    : 1
    <6f6>   DW_AT_name        : (indirect string, offset: 0x179): start_lidar_scan
    <6fa>   DW_AT_decl_file   : 1
    <6fa>   DW_AT_decl_line   : 105
    <6fb>   DW_AT_decl_column : 6
    <6fb>   DW_AT_prototyped  : 1
    <6fb>   DW_AT_low_pc      : 0x3f4
    <6ff>   DW_AT_high_pc     : 0x24
    <703>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <705>   DW_AT_call_all_calls: 1
    <705>   DW_AT_sibling     : <0x732>
 <2><709>: Abbrev Number: 2 (DW_TAG_call_site)
    <70a>   DW_AT_call_return_pc: 0x406
    <70e>   DW_AT_sibling     : <0x71f>
 <3><712>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <713>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <715>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><718>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <719>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <71b>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><71e>: Abbrev Number: 0
 <2><71f>: Abbrev Number: 18 (DW_TAG_call_site)
    <720>   DW_AT_call_return_pc: 0x410
 <3><724>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <725>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <727>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><72a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <72b>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <72d>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><730>: Abbrev Number: 0
 <2><731>: Abbrev Number: 0
 <1><732>: Abbrev Number: 40 (DW_TAG_subprogram)
    <733>   DW_AT_external    : 1
    <733>   DW_AT_name        : (indirect string, offset: 0x304): setup_lidar_comms
    <737>   DW_AT_decl_file   : 1
    <738>   DW_AT_decl_line   : 83
    <739>   DW_AT_decl_column : 6
    <73a>   DW_AT_prototyped  : 1
    <73a>   DW_AT_low_pc      : 0x314
    <73e>   DW_AT_high_pc     : 0xe0
    <742>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <744>   DW_AT_call_all_tail_calls: 1
    <744>   DW_AT_sibling     : <0x827>
 <2><748>: Abbrev Number: 2 (DW_TAG_call_site)
    <749>   DW_AT_call_return_pc: 0x322
    <74d>   DW_AT_sibling     : <0x75c>
 <3><751>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <752>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <754>   DW_AT_call_value  : 6 byte block: 11 83 90 80 80 7f 	(DW_OP_consts: -268433405)
 <3><75b>: Abbrev Number: 0
 <2><75c>: Abbrev Number: 2 (DW_TAG_call_site)
    <75d>   DW_AT_call_return_pc: 0x32a
    <761>   DW_AT_sibling     : <0x770>
 <3><765>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <766>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <768>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><76f>: Abbrev Number: 0
 <2><770>: Abbrev Number: 2 (DW_TAG_call_site)
    <771>   DW_AT_call_return_pc: 0x338
    <775>   DW_AT_sibling     : <0x784>
 <3><779>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <77a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <77c>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><783>: Abbrev Number: 0
 <2><784>: Abbrev Number: 23 (DW_TAG_call_site)
    <785>   DW_AT_call_return_pc: 0x37e
    <789>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <78c>   DW_AT_sibling     : <0x7a8>
 <3><790>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <791>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <793>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><796>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <797>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <799>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><79c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <79d>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <79f>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><7a2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7a3>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <7a5>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><7a7>: Abbrev Number: 0
 <2><7a8>: Abbrev Number: 23 (DW_TAG_call_site)
    <7a9>   DW_AT_call_return_pc: 0x38c
    <7ad>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <7b0>   DW_AT_sibling     : <0x7cc>
 <3><7b4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7b5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7b7>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><7ba>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7bb>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <7bd>   DW_AT_call_value  : 2 byte block: 8 40 	(DW_OP_const1u: 64)
 <3><7c0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7c1>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7c3>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><7c6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7c7>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <7c9>   DW_AT_call_value  : 1 byte block: 3a 	(DW_OP_lit10)
 <3><7cb>: Abbrev Number: 0
 <2><7cc>: Abbrev Number: 2 (DW_TAG_call_site)
    <7cd>   DW_AT_call_return_pc: 0x398
    <7d1>   DW_AT_sibling     : <0x7e7>
 <3><7d5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7d6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7d8>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><7db>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7dc>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <7de>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><7e1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7e2>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7e4>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><7e6>: Abbrev Number: 0
 <2><7e7>: Abbrev Number: 23 (DW_TAG_call_site)
    <7e8>   DW_AT_call_return_pc: 0x3ae
    <7ec>   DW_AT_call_target : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
    <7ef>   DW_AT_sibling     : <0x80b>
 <3><7f3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7f4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7f6>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><7fc>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7fd>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7ff>   DW_AT_call_value  : 4 byte block: 8 e1 3a 24 	(DW_OP_const1u: 225; DW_OP_lit10; DW_OP_shl)
 <3><804>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <805>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <807>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><80a>: Abbrev Number: 0
 <2><80b>: Abbrev Number: 3 (DW_TAG_call_site)
    <80c>   DW_AT_call_return_pc: 0x3b8
    <810>   DW_AT_call_origin : <0x8c5>
 <2><814>: Abbrev Number: 3 (DW_TAG_call_site)
    <815>   DW_AT_call_return_pc: 0x3c2
    <819>   DW_AT_call_origin : <0x827>
 <2><81d>: Abbrev Number: 3 (DW_TAG_call_site)
    <81e>   DW_AT_call_return_pc: 0x3ce
    <822>   DW_AT_call_origin : <0x8c5>
 <2><826>: Abbrev Number: 0
 <1><827>: Abbrev Number: 41 (DW_TAG_subprogram)
    <828>   DW_AT_external    : 1
    <828>   DW_AT_name        : (indirect string, offset: 0x38d): process_point_buff
    <82c>   DW_AT_decl_file   : 1
    <82d>   DW_AT_decl_line   : 46
    <82e>   DW_AT_decl_column : 6
    <82f>   DW_AT_low_pc      : 0x288
    <833>   DW_AT_high_pc     : 0x8c
    <837>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <839>   DW_AT_call_all_calls: 1
    <839>   DW_AT_sibling     : <0x8be>
 <2><83d>: Abbrev Number: 17 (DW_TAG_lexical_block)
    <83e>   DW_AT_low_pc      : 0x28a
    <842>   DW_AT_high_pc     : 0x80
 <3><846>: Abbrev Number: 11 (DW_TAG_variable)
    <847>   DW_AT_name        : i
    <849>   DW_AT_decl_file   : 1
    <849>   DW_AT_decl_line   : 48
    <84a>   DW_AT_decl_column : 10
    <84b>   DW_AT_type        : <0x95>
    <84f>   DW_AT_location    : 0x14b (location list)
    <853>   DW_AT_GNU_locviews: 0x147
 <3><857>: Abbrev Number: 42 (DW_TAG_lexical_block)
    <858>   DW_AT_ranges      : 0xc
 <4><85c>: Abbrev Number: 8 (DW_TAG_variable)
    <85d>   DW_AT_name        : (indirect string, offset: 0xa9): leftidx
    <861>   DW_AT_decl_file   : 1
    <861>   DW_AT_decl_line   : 52
    <862>   DW_AT_decl_column : 7
    <863>   DW_AT_type        : <0x95>
    <867>   DW_AT_location    : 0x167 (location list)
    <86b>   DW_AT_GNU_locviews: 0x15d
 <4><86f>: Abbrev Number: 8 (DW_TAG_variable)
    <870>   DW_AT_name        : (indirect string, offset: 0x51): from_top
    <874>   DW_AT_decl_file   : 1
    <874>   DW_AT_decl_line   : 53
    <875>   DW_AT_decl_column : 8
    <876>   DW_AT_type        : <0x8be>
    <87a>   DW_AT_location    : 0x18c (location list)
    <87e>   DW_AT_GNU_locviews: 0x188
 <4><882>: Abbrev Number: 8 (DW_TAG_variable)
    <883>   DW_AT_name        : (indirect string, offset: 0x7d): rightidx
    <887>   DW_AT_decl_file   : 1
    <887>   DW_AT_decl_line   : 66
    <888>   DW_AT_decl_column : 7
    <889>   DW_AT_type        : <0x95>
    <88d>   DW_AT_location    : 0x1aa (location list)
    <891>   DW_AT_GNU_locviews: 0x1a4
 <4><895>: Abbrev Number: 8 (DW_TAG_variable)
    <896>   DW_AT_name        : (indirect string, offset: 0x32c): from_0
    <89a>   DW_AT_decl_file   : 1
    <89a>   DW_AT_decl_line   : 67
    <89b>   DW_AT_decl_column : 8
    <89c>   DW_AT_type        : <0x8be>
    <8a0>   DW_AT_location    : 0x1c5 (location list)
    <8a4>   DW_AT_GNU_locviews: 0x1c1
 <4><8a8>: Abbrev Number: 16 (DW_TAG_call_site)
    <8a9>   DW_AT_call_return_pc: 0x2b8
    <8ad>   DW_AT_call_origin : <0x287>
 <5><8b1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <8b2>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <8b4>   DW_AT_call_value  : 5 byte block: 3 bc b 0 0 	(DW_OP_addr: bbc)
 <5><8ba>: Abbrev Number: 0
 <4><8bb>: Abbrev Number: 0
 <3><8bc>: Abbrev Number: 0
 <2><8bd>: Abbrev Number: 0
 <1><8be>: Abbrev Number: 5 (DW_TAG_base_type)
    <8bf>   DW_AT_byte_size   : 1
    <8c0>   DW_AT_encoding    : 2	(boolean)
    <8c1>   DW_AT_name        : (indirect string, offset: 0x244): _Bool
 <1><8c5>: Abbrev Number: 43 (DW_TAG_subprogram)
    <8c6>   DW_AT_external    : 1
    <8c6>   DW_AT_name        : (indirect string, offset: 0x2c): zero_point_buf
    <8ca>   DW_AT_decl_file   : 1
    <8cb>   DW_AT_decl_line   : 38
    <8cc>   DW_AT_decl_column : 6
    <8cd>   DW_AT_prototyped  : 1
    <8cd>   DW_AT_low_pc      : 0x26c
    <8d1>   DW_AT_high_pc     : 0x1c
    <8d5>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <8d7>   DW_AT_call_all_calls: 1
 <2><8d7>: Abbrev Number: 17 (DW_TAG_lexical_block)
    <8d8>   DW_AT_low_pc      : 0x26c
    <8dc>   DW_AT_high_pc     : 0x16
 <3><8e0>: Abbrev Number: 11 (DW_TAG_variable)
    <8e1>   DW_AT_name        : i
    <8e3>   DW_AT_decl_file   : 1
    <8e3>   DW_AT_decl_line   : 39
    <8e4>   DW_AT_decl_column : 10
    <8e5>   DW_AT_type        : <0x95>
    <8e9>   DW_AT_location    : 0x1d9 (location list)
    <8ed>   DW_AT_GNU_locviews: 0x1d5
 <3><8f1>: Abbrev Number: 0
 <2><8f2>: Abbrev Number: 0
 <1><8f3>: Abbrev Number: 0
  Compilation Unit @ offset 0x8f4:
   Length:        0x1be (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x291
   Pointer Size:  4
 <0><900>: Abbrev Number: 8 (DW_TAG_compile_unit)
    <901>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <905>   DW_AT_language    : 29	(C11)
    <906>   DW_AT_name        : (indirect string, offset: 0x40d): src/main.c
    <90a>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <90e>   DW_AT_ranges      : 0x5e
    <912>   DW_AT_low_pc      : 0
    <916>   DW_AT_stmt_list   : 0x587
 <1><91a>: Abbrev Number: 1 (DW_TAG_base_type)
    <91b>   DW_AT_byte_size   : 1
    <91c>   DW_AT_encoding    : 6	(signed char)
    <91d>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><921>: Abbrev Number: 1 (DW_TAG_base_type)
    <922>   DW_AT_byte_size   : 1
    <923>   DW_AT_encoding    : 8	(unsigned char)
    <924>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><928>: Abbrev Number: 1 (DW_TAG_base_type)
    <929>   DW_AT_byte_size   : 2
    <92a>   DW_AT_encoding    : 5	(signed)
    <92b>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><92f>: Abbrev Number: 1 (DW_TAG_base_type)
    <930>   DW_AT_byte_size   : 2
    <931>   DW_AT_encoding    : 7	(unsigned)
    <932>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><936>: Abbrev Number: 1 (DW_TAG_base_type)
    <937>   DW_AT_byte_size   : 4
    <938>   DW_AT_encoding    : 5	(signed)
    <939>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><93d>: Abbrev Number: 7 (DW_TAG_typedef)
    <93e>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <942>   DW_AT_decl_file   : 2
    <943>   DW_AT_decl_line   : 79
    <944>   DW_AT_decl_column : 25
    <945>   DW_AT_type        : <0x949>
 <1><949>: Abbrev Number: 1 (DW_TAG_base_type)
    <94a>   DW_AT_byte_size   : 4
    <94b>   DW_AT_encoding    : 7	(unsigned)
    <94c>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><950>: Abbrev Number: 1 (DW_TAG_base_type)
    <951>   DW_AT_byte_size   : 8
    <952>   DW_AT_encoding    : 5	(signed)
    <953>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><957>: Abbrev Number: 1 (DW_TAG_base_type)
    <958>   DW_AT_byte_size   : 8
    <959>   DW_AT_encoding    : 7	(unsigned)
    <95a>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><95e>: Abbrev Number: 9 (DW_TAG_base_type)
    <95f>   DW_AT_byte_size   : 4
    <960>   DW_AT_encoding    : 5	(signed)
    <961>   DW_AT_name        : int
 <1><965>: Abbrev Number: 1 (DW_TAG_base_type)
    <966>   DW_AT_byte_size   : 4
    <967>   DW_AT_encoding    : 7	(unsigned)
    <968>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><96c>: Abbrev Number: 7 (DW_TAG_typedef)
    <96d>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <971>   DW_AT_decl_file   : 3
    <972>   DW_AT_decl_line   : 48
    <973>   DW_AT_decl_column : 20
    <974>   DW_AT_type        : <0x93d>
 <1><978>: Abbrev Number: 4 (DW_TAG_subprogram)
    <979>   DW_AT_external    : 1
    <979>   DW_AT_name        : (indirect string, offset: 0x2f4): process_packets
    <97d>   DW_AT_decl_file   : 4
    <97e>   DW_AT_decl_line   : 36
    <97f>   DW_AT_decl_column : 6
    <97f>   DW_AT_prototyped  : 1
    <97f>   DW_AT_declaration : 1
 <1><97f>: Abbrev Number: 4 (DW_TAG_subprogram)
    <980>   DW_AT_external    : 1
    <980>   DW_AT_name        : (indirect string, offset: 0x179): start_lidar_scan
    <984>   DW_AT_decl_file   : 4
    <985>   DW_AT_decl_line   : 34
    <986>   DW_AT_decl_column : 6
    <986>   DW_AT_prototyped  : 1
    <986>   DW_AT_declaration : 1
 <1><986>: Abbrev Number: 4 (DW_TAG_subprogram)
    <987>   DW_AT_external    : 1
    <987>   DW_AT_name        : (indirect string, offset: 0x223): clear_lidar_IO
    <98b>   DW_AT_decl_file   : 4
    <98c>   DW_AT_decl_line   : 37
    <98d>   DW_AT_decl_column : 6
    <98d>   DW_AT_prototyped  : 1
    <98d>   DW_AT_declaration : 1
 <1><98d>: Abbrev Number: 4 (DW_TAG_subprogram)
    <98e>   DW_AT_external    : 1
    <98e>   DW_AT_name        : (indirect string, offset: 0x34a): stop_lidar_scan
    <992>   DW_AT_decl_file   : 4
    <993>   DW_AT_decl_line   : 35
    <994>   DW_AT_decl_column : 6
    <994>   DW_AT_prototyped  : 1
    <994>   DW_AT_declaration : 1
 <1><994>: Abbrev Number: 4 (DW_TAG_subprogram)
    <995>   DW_AT_external    : 1
    <995>   DW_AT_name        : (indirect string, offset: 0x304): setup_lidar_comms
    <999>   DW_AT_decl_file   : 4
    <99a>   DW_AT_decl_line   : 33
    <99b>   DW_AT_decl_column : 6
    <99b>   DW_AT_prototyped  : 1
    <99b>   DW_AT_declaration : 1
 <1><99b>: Abbrev Number: 10 (DW_TAG_subprogram)
    <99c>   DW_AT_external    : 1
    <99c>   DW_AT_name        : (indirect string, offset: 0x150): printlf
    <9a0>   DW_AT_decl_file   : 5
    <9a1>   DW_AT_decl_line   : 10
    <9a2>   DW_AT_decl_column : 6
    <9a3>   DW_AT_prototyped  : 1
    <9a3>   DW_AT_declaration : 1
    <9a3>   DW_AT_sibling     : <0x9ae>
 <2><9a7>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <9a8>   DW_AT_type        : <0x9ae>
 <2><9ac>: Abbrev Number: 12 (DW_TAG_unspecified_parameters)
 <2><9ad>: Abbrev Number: 0
 <1><9ae>: Abbrev Number: 13 (DW_TAG_pointer_type)
    <9af>   DW_AT_byte_size   : 4
    <9b0>   DW_AT_type        : <0x9b4>
 <1><9b4>: Abbrev Number: 1 (DW_TAG_base_type)
    <9b5>   DW_AT_byte_size   : 1
    <9b6>   DW_AT_encoding    : 8	(unsigned char)
    <9b7>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><9bb>: Abbrev Number: 4 (DW_TAG_subprogram)
    <9bc>   DW_AT_external    : 1
    <9bc>   DW_AT_name        : (indirect string, offset: 0x3f5): setup_uart_printer
    <9c0>   DW_AT_decl_file   : 5
    <9c1>   DW_AT_decl_line   : 1
    <9c2>   DW_AT_decl_column : 6
    <9c2>   DW_AT_prototyped  : 1
    <9c2>   DW_AT_declaration : 1
 <1><9c2>: Abbrev Number: 14 (DW_TAG_subprogram)
    <9c3>   DW_AT_external    : 1
    <9c3>   DW_AT_name        : (indirect string, offset: 0x408): main
    <9c7>   DW_AT_decl_file   : 1
    <9c8>   DW_AT_decl_line   : 20
    <9c9>   DW_AT_decl_column : 5
    <9ca>   DW_AT_prototyped  : 1
    <9ca>   DW_AT_type        : <0x95e>
    <9ce>   DW_AT_low_pc      : 0x74c
    <9d2>   DW_AT_high_pc     : 0x78
    <9d6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <9d8>   DW_AT_call_all_calls: 1
 <2><9d8>: Abbrev Number: 6 (DW_TAG_call_site)
    <9d9>   DW_AT_call_return_pc: 0x75a
    <9dd>   DW_AT_sibling     : <0x9ec>
 <3><9e1>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <9e2>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <9e4>   DW_AT_call_value  : 6 byte block: 11 c0 8a 80 88 7c 	(DW_OP_consts: -1056963264)
 <3><9eb>: Abbrev Number: 0
 <2><9ec>: Abbrev Number: 2 (DW_TAG_call_site)
    <9ed>   DW_AT_call_return_pc: 0x75e
    <9f1>   DW_AT_call_origin : <0x9bb>
 <2><9f5>: Abbrev Number: 5 (DW_TAG_call_site)
    <9f6>   DW_AT_call_return_pc: 0x764
    <9fa>   DW_AT_call_origin : <0x99b>
    <9fe>   DW_AT_sibling     : <0xa0c>
 <3><a02>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a03>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a05>   DW_AT_call_value  : 5 byte block: 3 c8 c 0 0 	(DW_OP_addr: cc8)
 <3><a0b>: Abbrev Number: 0
 <2><a0c>: Abbrev Number: 2 (DW_TAG_call_site)
    <a0d>   DW_AT_call_return_pc: 0x768
    <a11>   DW_AT_call_origin : <0x994>
 <2><a15>: Abbrev Number: 5 (DW_TAG_call_site)
    <a16>   DW_AT_call_return_pc: 0x76e
    <a1a>   DW_AT_call_origin : <0x99b>
    <a1e>   DW_AT_sibling     : <0xa2c>
 <3><a22>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a23>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a25>   DW_AT_call_value  : 5 byte block: 3 dc c 0 0 	(DW_OP_addr: cdc)
 <3><a2b>: Abbrev Number: 0
 <2><a2c>: Abbrev Number: 2 (DW_TAG_call_site)
    <a2d>   DW_AT_call_return_pc: 0x772
    <a31>   DW_AT_call_origin : <0x98d>
 <2><a35>: Abbrev Number: 5 (DW_TAG_call_site)
    <a36>   DW_AT_call_return_pc: 0x778
    <a3a>   DW_AT_call_origin : <0x99b>
    <a3e>   DW_AT_sibling     : <0xa4c>
 <3><a42>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a43>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a45>   DW_AT_call_value  : 5 byte block: 3 f4 c 0 0 	(DW_OP_addr: cf4)
 <3><a4b>: Abbrev Number: 0
 <2><a4c>: Abbrev Number: 2 (DW_TAG_call_site)
    <a4d>   DW_AT_call_return_pc: 0x77c
    <a51>   DW_AT_call_origin : <0x986>
 <2><a55>: Abbrev Number: 6 (DW_TAG_call_site)
    <a56>   DW_AT_call_return_pc: 0x788
    <a5a>   DW_AT_sibling     : <0xa68>
 <3><a5e>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a5f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a61>   DW_AT_call_value  : 5 byte block: c 0 2d 31 1 	(DW_OP_const4u: 20000000)
 <3><a67>: Abbrev Number: 0
 <2><a68>: Abbrev Number: 5 (DW_TAG_call_site)
    <a69>   DW_AT_call_return_pc: 0x78e
    <a6d>   DW_AT_call_origin : <0x99b>
    <a71>   DW_AT_sibling     : <0xa7f>
 <3><a75>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a76>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a78>   DW_AT_call_value  : 5 byte block: 3 c d 0 0 	(DW_OP_addr: d0c)
 <3><a7e>: Abbrev Number: 0
 <2><a7f>: Abbrev Number: 2 (DW_TAG_call_site)
    <a80>   DW_AT_call_return_pc: 0x792
    <a84>   DW_AT_call_origin : <0x986>
 <2><a88>: Abbrev Number: 6 (DW_TAG_call_site)
    <a89>   DW_AT_call_return_pc: 0x79e
    <a8d>   DW_AT_sibling     : <0xa99>
 <3><a91>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a92>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a94>   DW_AT_call_value  : 3 byte block: a 20 4e 	(DW_OP_const2u: 20000)
 <3><a98>: Abbrev Number: 0
 <2><a99>: Abbrev Number: 2 (DW_TAG_call_site)
    <a9a>   DW_AT_call_return_pc: 0x7a2
    <a9e>   DW_AT_call_origin : <0x986>
 <2><aa2>: Abbrev Number: 2 (DW_TAG_call_site)
    <aa3>   DW_AT_call_return_pc: 0x7a6
    <aa7>   DW_AT_call_origin : <0x97f>
 <2><aab>: Abbrev Number: 2 (DW_TAG_call_site)
    <aac>   DW_AT_call_return_pc: 0x7aa
    <ab0>   DW_AT_call_origin : <0x978>
 <2><ab4>: Abbrev Number: 0
 <1><ab5>: Abbrev Number: 0
  Compilation Unit @ offset 0xab6:
   Length:        0x17a (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x349
   Pointer Size:  4
 <0><ac2>: Abbrev Number: 4 (DW_TAG_compile_unit)
    <ac3>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <ac7>   DW_AT_language    : 29	(C11)
    <ac8>   DW_AT_name        : (indirect string, offset: 0x444): src/timers.c
    <acc>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <ad0>   DW_AT_ranges      : 0x71
    <ad4>   DW_AT_low_pc      : 0
    <ad8>   DW_AT_stmt_list   : 0x65d
 <1><adc>: Abbrev Number: 1 (DW_TAG_base_type)
    <add>   DW_AT_byte_size   : 1
    <ade>   DW_AT_encoding    : 6	(signed char)
    <adf>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><ae3>: Abbrev Number: 1 (DW_TAG_base_type)
    <ae4>   DW_AT_byte_size   : 1
    <ae5>   DW_AT_encoding    : 8	(unsigned char)
    <ae6>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><aea>: Abbrev Number: 1 (DW_TAG_base_type)
    <aeb>   DW_AT_byte_size   : 2
    <aec>   DW_AT_encoding    : 5	(signed)
    <aed>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><af1>: Abbrev Number: 1 (DW_TAG_base_type)
    <af2>   DW_AT_byte_size   : 2
    <af3>   DW_AT_encoding    : 7	(unsigned)
    <af4>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><af8>: Abbrev Number: 2 (DW_TAG_typedef)
    <af9>   DW_AT_name        : (indirect string, offset: 0x340): __int32_t
    <afd>   DW_AT_decl_file   : 2
    <afe>   DW_AT_decl_line   : 77
    <aff>   DW_AT_decl_column : 24
    <b00>   DW_AT_type        : <0xb04>
 <1><b04>: Abbrev Number: 1 (DW_TAG_base_type)
    <b05>   DW_AT_byte_size   : 4
    <b06>   DW_AT_encoding    : 5	(signed)
    <b07>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><b0b>: Abbrev Number: 2 (DW_TAG_typedef)
    <b0c>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <b10>   DW_AT_decl_file   : 2
    <b11>   DW_AT_decl_line   : 79
    <b12>   DW_AT_decl_column : 25
    <b13>   DW_AT_type        : <0xb17>
 <1><b17>: Abbrev Number: 1 (DW_TAG_base_type)
    <b18>   DW_AT_byte_size   : 4
    <b19>   DW_AT_encoding    : 7	(unsigned)
    <b1a>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><b1e>: Abbrev Number: 1 (DW_TAG_base_type)
    <b1f>   DW_AT_byte_size   : 8
    <b20>   DW_AT_encoding    : 5	(signed)
    <b21>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><b25>: Abbrev Number: 2 (DW_TAG_typedef)
    <b26>   DW_AT_name        : (indirect string, offset: 0x497): __uint64_t
    <b2a>   DW_AT_decl_file   : 2
    <b2b>   DW_AT_decl_line   : 105
    <b2c>   DW_AT_decl_column : 25
    <b2d>   DW_AT_type        : <0xb31>
 <1><b31>: Abbrev Number: 1 (DW_TAG_base_type)
    <b32>   DW_AT_byte_size   : 8
    <b33>   DW_AT_encoding    : 7	(unsigned)
    <b34>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><b38>: Abbrev Number: 5 (DW_TAG_base_type)
    <b39>   DW_AT_byte_size   : 4
    <b3a>   DW_AT_encoding    : 5	(signed)
    <b3b>   DW_AT_name        : int
 <1><b3f>: Abbrev Number: 1 (DW_TAG_base_type)
    <b40>   DW_AT_byte_size   : 4
    <b41>   DW_AT_encoding    : 7	(unsigned)
    <b42>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><b46>: Abbrev Number: 2 (DW_TAG_typedef)
    <b47>   DW_AT_name        : (indirect string, offset: 0x342): int32_t
    <b4b>   DW_AT_decl_file   : 3
    <b4c>   DW_AT_decl_line   : 44
    <b4d>   DW_AT_decl_column : 19
    <b4e>   DW_AT_type        : <0xaf8>
 <1><b52>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <b53>   DW_AT_type        : <0xb46>
 <1><b57>: Abbrev Number: 2 (DW_TAG_typedef)
    <b58>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <b5c>   DW_AT_decl_file   : 3
    <b5d>   DW_AT_decl_line   : 48
    <b5e>   DW_AT_decl_column : 20
    <b5f>   DW_AT_type        : <0xb0b>
 <1><b63>: Abbrev Number: 2 (DW_TAG_typedef)
    <b64>   DW_AT_name        : (indirect string, offset: 0x499): uint64_t
    <b68>   DW_AT_decl_file   : 3
    <b69>   DW_AT_decl_line   : 60
    <b6a>   DW_AT_decl_column : 20
    <b6b>   DW_AT_type        : <0xb25>
 <1><b6f>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <b70>   DW_AT_type        : <0xb63>
 <1><b74>: Abbrev Number: 6 (DW_TAG_variable)
    <b75>   DW_AT_name        : (indirect string, offset: 0x451): uptime_seconds
    <b79>   DW_AT_decl_file   : 4
    <b7a>   DW_AT_decl_line   : 4
    <b7b>   DW_AT_decl_column : 25
    <b7c>   DW_AT_type        : <0xb52>
    <b80>   DW_AT_external    : 1
    <b80>   DW_AT_declaration : 1
 <1><b80>: Abbrev Number: 7 (DW_TAG_variable)
    <b81>   DW_AT_specification: <0xb74>
    <b85>   DW_AT_decl_file   : 1
    <b86>   DW_AT_decl_line   : 11
    <b87>   DW_AT_decl_column : 18
    <b88>   DW_AT_location    : 5 byte block: 3 70 b 0 20 	(DW_OP_addr: 20000b70)
 <1><b8e>: Abbrev Number: 8 (DW_TAG_variable)
    <b8f>   DW_AT_name        : (indirect string, offset: 0x460): timer1_overflow_count
    <b93>   DW_AT_decl_file   : 1
    <b94>   DW_AT_decl_line   : 12
    <b95>   DW_AT_decl_column : 19
    <b96>   DW_AT_type        : <0xb6f>
    <b9a>   DW_AT_external    : 1
    <b9a>   DW_AT_location    : 5 byte block: 3 68 b 0 20 	(DW_OP_addr: 20000b68)
 <1><ba0>: Abbrev Number: 9 (DW_TAG_subprogram)
    <ba1>   DW_AT_external    : 1
    <ba1>   DW_AT_name        : (indirect string, offset: 0x427): get_uptime_cycles
    <ba5>   DW_AT_decl_file   : 1
    <ba6>   DW_AT_decl_line   : 52
    <ba7>   DW_AT_decl_column : 10
    <ba8>   DW_AT_prototyped  : 1
    <ba8>   DW_AT_type        : <0xb63>
    <bac>   DW_AT_low_pc      : 0
    <bb0>   DW_AT_high_pc     : 0x58
    <bb4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <bb6>   DW_AT_call_all_tail_calls: 1
    <bb6>   DW_AT_sibling     : <0xbe4>
 <2><bba>: Abbrev Number: 10 (DW_TAG_variable)
    <bbb>   DW_AT_name        : (indirect string, offset: 0x484): overflow_count_now
    <bbf>   DW_AT_decl_file   : 1
    <bc0>   DW_AT_decl_line   : 53
    <bc1>   DW_AT_decl_column : 11
    <bc2>   DW_AT_type        : <0xb63>
    <bc6>   DW_AT_location    : 0x1fa (location list)
    <bca>   DW_AT_GNU_locviews: 0x1f6
 <2><bce>: Abbrev Number: 11 (DW_TAG_variable)
    <bcf>   DW_AT_name        : (indirect string, offset: 0x439): cycles_now
    <bd3>   DW_AT_decl_file   : 1
    <bd4>   DW_AT_decl_line   : 54
    <bd5>   DW_AT_decl_column : 11
    <bd6>   DW_AT_type        : <0xb63>
 <2><bda>: Abbrev Number: 12 (DW_TAG_call_site)
    <bdb>   DW_AT_call_return_pc: 0
    <bdf>   DW_AT_call_origin : <0xbe4>
 <2><be3>: Abbrev Number: 0
 <1><be4>: Abbrev Number: 13 (DW_TAG_subprogram)
    <be5>   DW_AT_external    : 1
    <be5>   DW_AT_name        : (indirect string, offset: 0x476): timeKeeperISR
    <be9>   DW_AT_decl_file   : 1
    <bea>   DW_AT_decl_line   : 34
    <beb>   DW_AT_decl_column : 6
    <bec>   DW_AT_prototyped  : 1
    <bec>   DW_AT_low_pc      : 0x7c4
    <bf0>   DW_AT_high_pc     : 0x64
    <bf4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <bf6>   DW_AT_call_all_calls: 1
    <bf6>   DW_AT_sibling     : <0xc1a>
 <2><bfa>: Abbrev Number: 14 (DW_TAG_variable)
    <bfb>   DW_AT_name        : (indirect string, offset: 0x418): second_counter
    <bff>   DW_AT_decl_file   : 1
    <c00>   DW_AT_decl_line   : 35
    <c01>   DW_AT_decl_column : 14
    <c02>   DW_AT_type        : <0xc1a>
    <c06>   DW_AT_location    : 5 byte block: 3 64 b 0 20 	(DW_OP_addr: 20000b64)
 <2><c0c>: Abbrev Number: 15 (DW_TAG_variable)
    <c0d>   DW_AT_name        : (indirect string, offset: 0x4a2): sonic_sensor_action_div
    <c11>   DW_AT_decl_file   : 1
    <c12>   DW_AT_decl_line   : 36
    <c13>   DW_AT_decl_column : 14
    <c14>   DW_AT_type        : <0xc1a>
    <c18>   DW_AT_const_value : 0
 <2><c19>: Abbrev Number: 0
 <1><c1a>: Abbrev Number: 1 (DW_TAG_base_type)
    <c1b>   DW_AT_byte_size   : 1
    <c1c>   DW_AT_encoding    : 8	(unsigned char)
    <c1d>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><c21>: Abbrev Number: 16 (DW_TAG_subprogram)
    <c22>   DW_AT_external    : 1
    <c22>   DW_AT_name        : (indirect string, offset: 0x4ba): configureDebounceTimer
    <c26>   DW_AT_decl_file   : 1
    <c27>   DW_AT_decl_line   : 16
    <c28>   DW_AT_decl_column : 6
    <c29>   DW_AT_prototyped  : 1
    <c29>   DW_AT_low_pc      : 0
    <c2d>   DW_AT_high_pc     : 0x7c
    <c31>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <c33>   DW_AT_call_all_tail_calls: 1
 <1><c33>: Abbrev Number: 0
  Compilation Unit @ offset 0xc34:
   Length:        0x51e (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x45d
   Pointer Size:  4
 <0><c40>: Abbrev Number: 20 (DW_TAG_compile_unit)
    <c41>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <c45>   DW_AT_language    : 29	(C11)
    <c46>   DW_AT_name        : (indirect string, offset: 0x532): src/uart_print.c
    <c4a>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <c4e>   DW_AT_ranges      : 0x9f
    <c52>   DW_AT_low_pc      : 0
    <c56>   DW_AT_stmt_list   : 0x851
 <1><c5a>: Abbrev Number: 2 (DW_TAG_base_type)
    <c5b>   DW_AT_byte_size   : 4
    <c5c>   DW_AT_encoding    : 4	(float)
    <c5d>   DW_AT_name        : (indirect string, offset: 0x52c): float
 <1><c61>: Abbrev Number: 2 (DW_TAG_base_type)
    <c62>   DW_AT_byte_size   : 8
    <c63>   DW_AT_encoding    : 7	(unsigned)
    <c64>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><c68>: Abbrev Number: 2 (DW_TAG_base_type)
    <c69>   DW_AT_byte_size   : 1
    <c6a>   DW_AT_encoding    : 8	(unsigned char)
    <c6b>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><c6f>: Abbrev Number: 5 (DW_TAG_typedef)
    <c70>   DW_AT_name        : (indirect string, offset: 0x50a): __gnuc_va_list
    <c74>   DW_AT_decl_file   : 2
    <c75>   DW_AT_decl_line   : 40
    <c76>   DW_AT_decl_column : 27
    <c77>   DW_AT_type        : <0xc7b>
 <1><c7b>: Abbrev Number: 21 (DW_TAG_structure_type)
    <c7c>   DW_AT_name        : (indirect string, offset: 0x587): __va_list
    <c80>   DW_AT_byte_size   : 4
    <c81>   DW_AT_decl_file   : 5
    <c82>   DW_AT_decl_line   : 0
    <c83>   DW_AT_sibling     : <0xc92>
 <2><c87>: Abbrev Number: 22 (DW_TAG_member)
    <c88>   DW_AT_name        : (indirect string, offset: 0x56f): __ap
    <c8c>   DW_AT_type        : <0xc92>
    <c90>   DW_AT_data_member_location: 0
    <c91>   DW_AT_artificial  : 1
 <2><c91>: Abbrev Number: 0
 <1><c92>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <c93>   DW_AT_byte_size   : 4
 <1><c94>: Abbrev Number: 5 (DW_TAG_typedef)
    <c95>   DW_AT_name        : (indirect string, offset: 0x589): va_list
    <c99>   DW_AT_decl_file   : 2
    <c9a>   DW_AT_decl_line   : 103
    <c9b>   DW_AT_decl_column : 24
    <c9c>   DW_AT_type        : <0xc6f>
 <1><ca0>: Abbrev Number: 2 (DW_TAG_base_type)
    <ca1>   DW_AT_byte_size   : 1
    <ca2>   DW_AT_encoding    : 6	(signed char)
    <ca3>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><ca7>: Abbrev Number: 2 (DW_TAG_base_type)
    <ca8>   DW_AT_byte_size   : 2
    <ca9>   DW_AT_encoding    : 5	(signed)
    <caa>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><cae>: Abbrev Number: 2 (DW_TAG_base_type)
    <caf>   DW_AT_byte_size   : 2
    <cb0>   DW_AT_encoding    : 7	(unsigned)
    <cb1>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><cb5>: Abbrev Number: 5 (DW_TAG_typedef)
    <cb6>   DW_AT_name        : (indirect string, offset: 0x340): __int32_t
    <cba>   DW_AT_decl_file   : 3
    <cbb>   DW_AT_decl_line   : 77
    <cbc>   DW_AT_decl_column : 24
    <cbd>   DW_AT_type        : <0xcc1>
 <1><cc1>: Abbrev Number: 2 (DW_TAG_base_type)
    <cc2>   DW_AT_byte_size   : 4
    <cc3>   DW_AT_encoding    : 5	(signed)
    <cc4>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><cc8>: Abbrev Number: 5 (DW_TAG_typedef)
    <cc9>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <ccd>   DW_AT_decl_file   : 3
    <cce>   DW_AT_decl_line   : 79
    <ccf>   DW_AT_decl_column : 25
    <cd0>   DW_AT_type        : <0xcd4>
 <1><cd4>: Abbrev Number: 2 (DW_TAG_base_type)
    <cd5>   DW_AT_byte_size   : 4
    <cd6>   DW_AT_encoding    : 7	(unsigned)
    <cd7>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><cdb>: Abbrev Number: 2 (DW_TAG_base_type)
    <cdc>   DW_AT_byte_size   : 8
    <cdd>   DW_AT_encoding    : 5	(signed)
    <cde>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><ce2>: Abbrev Number: 24 (DW_TAG_base_type)
    <ce3>   DW_AT_byte_size   : 4
    <ce4>   DW_AT_encoding    : 5	(signed)
    <ce5>   DW_AT_name        : int
 <1><ce9>: Abbrev Number: 2 (DW_TAG_base_type)
    <cea>   DW_AT_byte_size   : 4
    <ceb>   DW_AT_encoding    : 7	(unsigned)
    <cec>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><cf0>: Abbrev Number: 5 (DW_TAG_typedef)
    <cf1>   DW_AT_name        : (indirect string, offset: 0x342): int32_t
    <cf5>   DW_AT_decl_file   : 4
    <cf6>   DW_AT_decl_line   : 44
    <cf7>   DW_AT_decl_column : 19
    <cf8>   DW_AT_type        : <0xcb5>
 <1><cfc>: Abbrev Number: 5 (DW_TAG_typedef)
    <cfd>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <d01>   DW_AT_decl_file   : 4
    <d02>   DW_AT_decl_line   : 48
    <d03>   DW_AT_decl_column : 20
    <d04>   DW_AT_type        : <0xcc8>
 <1><d08>: Abbrev Number: 6 (DW_TAG_subprogram)
    <d09>   DW_AT_external    : 1
    <d09>   DW_AT_name        : (indirect string, offset: 0x150): printlf
    <d0d>   DW_AT_decl_file   : 1
    <d0d>   DW_AT_decl_line   : 115
    <d0e>   DW_AT_decl_column : 6
    <d0e>   DW_AT_prototyped  : 1
    <d0e>   DW_AT_low_pc      : 0xa78
    <d12>   DW_AT_high_pc     : 0xea
    <d16>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <d18>   DW_AT_call_all_calls: 1
    <d18>   DW_AT_sibling     : <0xde3>
 <2><d1c>: Abbrev Number: 25 (DW_TAG_formal_parameter)
    <d1d>   DW_AT_name        : (indirect string, offset: 0x543): format
    <d21>   DW_AT_decl_file   : 1
    <d22>   DW_AT_decl_line   : 115
    <d23>   DW_AT_decl_column : 19
    <d24>   DW_AT_type        : <0xde3>
    <d28>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><d2b>: Abbrev Number: 26 (DW_TAG_unspecified_parameters)
 <2><d2c>: Abbrev Number: 11 (DW_TAG_variable)
    <d2d>   DW_AT_name        : (indirect string, offset: 0x591): args
    <d31>   DW_AT_decl_file   : 1
    <d31>   DW_AT_decl_line   : 116
    <d32>   DW_AT_decl_column : 10
    <d33>   DW_AT_type        : <0xc94>
    <d37>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><d3a>: Abbrev Number: 14 (DW_TAG_variable)
    <d3b>   DW_AT_name        : str
    <d3f>   DW_AT_decl_file   : 1
    <d3f>   DW_AT_decl_line   : 119
    <d40>   DW_AT_decl_column : 8
    <d41>   DW_AT_type        : <0xde3>
 <2><d45>: Abbrev Number: 14 (DW_TAG_variable)
    <d46>   DW_AT_name        : num
    <d4a>   DW_AT_decl_file   : 1
    <d4a>   DW_AT_decl_line   : 120
    <d4b>   DW_AT_decl_column : 10
    <d4c>   DW_AT_type        : <0xcf0>
 <2><d50>: Abbrev Number: 27 (DW_TAG_variable)
    <d51>   DW_AT_name        : (indirect string, offset: 0x519): numu
    <d55>   DW_AT_decl_file   : 1
    <d56>   DW_AT_decl_line   : 121
    <d57>   DW_AT_decl_column : 11
    <d58>   DW_AT_type        : <0xcfc>
 <2><d5c>: Abbrev Number: 11 (DW_TAG_variable)
    <d5d>   DW_AT_name        : (indirect string, offset: 0x582): numf
    <d61>   DW_AT_decl_file   : 1
    <d61>   DW_AT_decl_line   : 122
    <d62>   DW_AT_decl_column : 9
    <d63>   DW_AT_type        : <0xdf4>
    <d67>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
 <2><d69>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <d6a>   DW_AT_low_pc      : 0xa86
    <d6e>   DW_AT_high_pc     : 0xd2
 <3><d72>: Abbrev Number: 8 (DW_TAG_variable)
    <d73>   DW_AT_name        : i
    <d75>   DW_AT_decl_file   : 1
    <d75>   DW_AT_decl_line   : 124
    <d76>   DW_AT_decl_column : 10
    <d77>   DW_AT_type        : <0xce2>
    <d7b>   DW_AT_location    : 0x22e (location list)
    <d7f>   DW_AT_GNU_locviews: 0x220
 <3><d83>: Abbrev Number: 3 (DW_TAG_call_site)
    <d84>   DW_AT_call_return_pc: 0xa96
    <d88>   DW_AT_call_origin : <0xf59>
 <3><d8c>: Abbrev Number: 3 (DW_TAG_call_site)
    <d8d>   DW_AT_call_return_pc: 0xaa6
    <d91>   DW_AT_call_origin : <0xf0d>
 <3><d95>: Abbrev Number: 4 (DW_TAG_call_site)
    <d96>   DW_AT_call_return_pc: 0xab0
    <d9a>   DW_AT_call_origin : <0x101e>
    <d9e>   DW_AT_sibling     : <0xda9>
 <4><da2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <da3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <da5>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><da8>: Abbrev Number: 0
 <3><da9>: Abbrev Number: 3 (DW_TAG_call_site)
    <daa>   DW_AT_call_return_pc: 0xabe
    <dae>   DW_AT_call_origin : <0xfc8>
 <3><db2>: Abbrev Number: 3 (DW_TAG_call_site)
    <db3>   DW_AT_call_return_pc: 0xad2
    <db7>   DW_AT_call_origin : <0xdf9>
 <3><dbb>: Abbrev Number: 4 (DW_TAG_call_site)
    <dbc>   DW_AT_call_return_pc: 0xadc
    <dc0>   DW_AT_call_origin : <0x101e>
    <dc4>   DW_AT_sibling     : <0xdcf>
 <4><dc8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <dc9>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <dcb>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><dce>: Abbrev Number: 0
 <3><dcf>: Abbrev Number: 3 (DW_TAG_call_site)
    <dd0>   DW_AT_call_return_pc: 0xae2
    <dd4>   DW_AT_call_origin : <0x101e>
 <3><dd8>: Abbrev Number: 3 (DW_TAG_call_site)
    <dd9>   DW_AT_call_return_pc: 0xaea
    <ddd>   DW_AT_call_origin : <0x101e>
 <3><de1>: Abbrev Number: 0
 <2><de2>: Abbrev Number: 0
 <1><de3>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <de4>   DW_AT_byte_size   : 4
    <de4>   DW_AT_type        : <0xde8>
 <1><de8>: Abbrev Number: 2 (DW_TAG_base_type)
    <de9>   DW_AT_byte_size   : 1
    <dea>   DW_AT_encoding    : 8	(unsigned char)
    <deb>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><def>: Abbrev Number: 16 (DW_TAG_const_type)
    <df0>   DW_AT_type        : <0xde8>
 <1><df4>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <df5>   DW_AT_byte_size   : 4
    <df5>   DW_AT_type        : <0xc5a>
 <1><df9>: Abbrev Number: 6 (DW_TAG_subprogram)
    <dfa>   DW_AT_external    : 1
    <dfa>   DW_AT_name        : (indirect string, offset: 0x526): print_float
    <dfe>   DW_AT_decl_file   : 1
    <dfe>   DW_AT_decl_line   : 72
    <dff>   DW_AT_decl_column : 6
    <dff>   DW_AT_prototyped  : 1
    <dff>   DW_AT_low_pc      : 0x958
    <e03>   DW_AT_high_pc     : 0x120
    <e07>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <e09>   DW_AT_call_all_calls: 1
    <e09>   DW_AT_sibling     : <0xefd>
 <2><e0d>: Abbrev Number: 28 (DW_TAG_formal_parameter)
    <e0e>   DW_AT_name        : (indirect string, offset: 0x57b): number
    <e12>   DW_AT_decl_file   : 1
    <e13>   DW_AT_decl_line   : 72
    <e14>   DW_AT_decl_column : 24
    <e15>   DW_AT_type        : <0xc5a>
    <e19>   DW_AT_location    : 0x26f (location list)
    <e1d>   DW_AT_GNU_locviews: 0x25b
 <2><e21>: Abbrev Number: 17 (DW_TAG_variable)
    <e22>   DW_AT_name        : buf
    <e26>   DW_AT_decl_file   : 1
    <e26>   DW_AT_decl_line   : 89
    <e27>   DW_AT_decl_column : 7
    <e27>   DW_AT_type        : <0xefd>
    <e2b>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><e2e>: Abbrev Number: 9 (DW_TAG_variable)
    <e2f>   DW_AT_name        : (indirect string, offset: 0x4d1): integerPart
    <e33>   DW_AT_decl_file   : 1
    <e33>   DW_AT_decl_line   : 96
    <e34>   DW_AT_decl_column : 11
    <e35>   DW_AT_type        : <0xcfc>
    <e39>   DW_AT_location    : 0x2d7 (location list)
    <e3d>   DW_AT_GNU_locviews: 0x2d3
 <2><e41>: Abbrev Number: 9 (DW_TAG_variable)
    <e42>   DW_AT_name        : (indirect string, offset: 0x4fe): decimalPart
    <e46>   DW_AT_decl_file   : 1
    <e46>   DW_AT_decl_line   : 97
    <e47>   DW_AT_decl_column : 11
    <e48>   DW_AT_type        : <0xcfc>
    <e4c>   DW_AT_location    : 0x2f0 (location list)
    <e50>   DW_AT_GNU_locviews: 0x2ea
 <2><e54>: Abbrev Number: 9 (DW_TAG_variable)
    <e55>   DW_AT_name        : (indirect string, offset: 0x574): places
    <e59>   DW_AT_decl_file   : 1
    <e59>   DW_AT_decl_line   : 99
    <e5a>   DW_AT_decl_column : 6
    <e5b>   DW_AT_type        : <0xce2>
    <e5f>   DW_AT_location    : 0x313 (location list)
    <e63>   DW_AT_GNU_locviews: 0x305
 <2><e67>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <e68>   DW_AT_ranges      : 0x90
    <e6c>   DW_AT_sibling     : <0xe82>
 <3><e70>: Abbrev Number: 8 (DW_TAG_variable)
    <e71>   DW_AT_name        : i
    <e73>   DW_AT_decl_file   : 1
    <e73>   DW_AT_decl_line   : 101
    <e74>   DW_AT_decl_column : 10
    <e75>   DW_AT_type        : <0xce2>
    <e79>   DW_AT_location    : 0x348 (location list)
    <e7d>   DW_AT_GNU_locviews: 0x344
 <3><e81>: Abbrev Number: 0
 <2><e82>: Abbrev Number: 4 (DW_TAG_call_site)
    <e83>   DW_AT_call_return_pc: 0x9e0
    <e87>   DW_AT_call_origin : <0xfc8>
    <e8b>   DW_AT_sibling     : <0xe99>
 <3><e8f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e90>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e92>   DW_AT_call_value  : 5 byte block: 3 38 d 0 0 	(DW_OP_addr: d38)
 <3><e98>: Abbrev Number: 0
 <2><e99>: Abbrev Number: 4 (DW_TAG_call_site)
    <e9a>   DW_AT_call_return_pc: 0x9e8
    <e9e>   DW_AT_call_origin : <0xfc8>
    <ea2>   DW_AT_sibling     : <0xeb0>
 <3><ea6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ea7>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ea9>   DW_AT_call_value  : 5 byte block: 3 3c d 0 0 	(DW_OP_addr: d3c)
 <3><eaf>: Abbrev Number: 0
 <2><eb0>: Abbrev Number: 4 (DW_TAG_call_site)
    <eb1>   DW_AT_call_return_pc: 0x9f6
    <eb5>   DW_AT_call_origin : <0xfc8>
    <eb9>   DW_AT_sibling     : <0xec7>
 <3><ebd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ebe>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ec0>   DW_AT_call_value  : 5 byte block: 3 40 d 0 0 	(DW_OP_addr: d40)
 <3><ec6>: Abbrev Number: 0
 <2><ec7>: Abbrev Number: 4 (DW_TAG_call_site)
    <ec8>   DW_AT_call_return_pc: 0x9fe
    <ecc>   DW_AT_call_origin : <0x101e>
    <ed0>   DW_AT_sibling     : <0xedb>
 <3><ed4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ed5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ed7>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><eda>: Abbrev Number: 0
 <2><edb>: Abbrev Number: 3 (DW_TAG_call_site)
    <edc>   DW_AT_call_return_pc: 0xa44
    <ee0>   DW_AT_call_origin : <0xf59>
 <2><ee4>: Abbrev Number: 13 (DW_TAG_call_site)
    <ee5>   DW_AT_call_return_pc: 0xa56
    <ee9>   DW_AT_call_origin : <0x101e>
 <3><eed>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <eee>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ef0>   DW_AT_call_value  : 10 byte block: 91 0 74 0 22 8 20 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_const1u: 32; DW_OP_minus; DW_OP_deref_size: 1)
 <3><efb>: Abbrev Number: 0
 <2><efc>: Abbrev Number: 0
 <1><efd>: Abbrev Number: 18 (DW_TAG_array_type)
    <efe>   DW_AT_type        : <0xde8>
    <f02>   DW_AT_sibling     : <0xf0d>
 <2><f06>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <f07>   DW_AT_type        : <0xce9>
    <f0b>   DW_AT_upper_bound : 14
 <2><f0c>: Abbrev Number: 0
 <1><f0d>: Abbrev Number: 6 (DW_TAG_subprogram)
    <f0e>   DW_AT_external    : 1
    <f0e>   DW_AT_name        : (indirect string, offset: 0x561): print_decimal
    <f12>   DW_AT_decl_file   : 1
    <f12>   DW_AT_decl_line   : 62
    <f13>   DW_AT_decl_column : 6
    <f13>   DW_AT_prototyped  : 1
    <f13>   DW_AT_low_pc      : 0x940
    <f17>   DW_AT_high_pc     : 0x18
    <f1b>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <f1d>   DW_AT_call_all_calls: 1
    <f1d>   DW_AT_sibling     : <0xf59>
 <2><f21>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <f22>   DW_AT_name        : num
    <f26>   DW_AT_decl_file   : 1
    <f26>   DW_AT_decl_line   : 62
    <f27>   DW_AT_decl_column : 28
    <f28>   DW_AT_type        : <0xcf0>
    <f2c>   DW_AT_location    : 0x361 (location list)
    <f30>   DW_AT_GNU_locviews: 0x359
 <2><f34>: Abbrev Number: 4 (DW_TAG_call_site)
    <f35>   DW_AT_call_return_pc: 0x94c
    <f39>   DW_AT_call_origin : <0xf59>
    <f3d>   DW_AT_sibling     : <0xf48>
 <3><f41>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f42>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f44>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><f47>: Abbrev Number: 0
 <2><f48>: Abbrev Number: 13 (DW_TAG_call_site)
    <f49>   DW_AT_call_return_pc: 0x954
    <f4d>   DW_AT_call_origin : <0x101e>
 <3><f51>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f52>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f54>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><f57>: Abbrev Number: 0
 <2><f58>: Abbrev Number: 0
 <1><f59>: Abbrev Number: 6 (DW_TAG_subprogram)
    <f5a>   DW_AT_external    : 1
    <f5a>   DW_AT_name        : (indirect string, offset: 0x54a): print_unsigned_decimal
    <f5e>   DW_AT_decl_file   : 1
    <f5e>   DW_AT_decl_line   : 46
    <f5f>   DW_AT_decl_column : 6
    <f5f>   DW_AT_prototyped  : 1
    <f5f>   DW_AT_low_pc      : 0x8f4
    <f63>   DW_AT_high_pc     : 0x4c
    <f67>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <f69>   DW_AT_call_all_calls: 1
    <f69>   DW_AT_sibling     : <0xfb8>
 <2><f6d>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <f6e>   DW_AT_name        : num
    <f72>   DW_AT_decl_file   : 1
    <f72>   DW_AT_decl_line   : 46
    <f73>   DW_AT_decl_column : 38
    <f74>   DW_AT_type        : <0xcfc>
    <f78>   DW_AT_location    : 0x37f (location list)
    <f7c>   DW_AT_GNU_locviews: 0x37b
 <2><f80>: Abbrev Number: 17 (DW_TAG_variable)
    <f81>   DW_AT_name        : buf
    <f85>   DW_AT_decl_file   : 1
    <f85>   DW_AT_decl_line   : 48
    <f86>   DW_AT_decl_column : 7
    <f86>   DW_AT_type        : <0xfb8>
    <f8a>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><f8d>: Abbrev Number: 9 (DW_TAG_variable)
    <f8e>   DW_AT_name        : (indirect string, offset: 0x574): places
    <f92>   DW_AT_decl_file   : 1
    <f92>   DW_AT_decl_line   : 50
    <f93>   DW_AT_decl_column : 6
    <f94>   DW_AT_type        : <0xce2>
    <f98>   DW_AT_location    : 0x39b (location list)
    <f9c>   DW_AT_GNU_locviews: 0x38f
 <2><fa0>: Abbrev Number: 13 (DW_TAG_call_site)
    <fa1>   DW_AT_call_return_pc: 0x934
    <fa5>   DW_AT_call_origin : <0x101e>
 <3><fa9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <faa>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <fac>   DW_AT_call_value  : 9 byte block: 91 0 74 0 22 44 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_lit20; DW_OP_minus; DW_OP_deref_size: 1)
 <3><fb6>: Abbrev Number: 0
 <2><fb7>: Abbrev Number: 0
 <1><fb8>: Abbrev Number: 18 (DW_TAG_array_type)
    <fb9>   DW_AT_type        : <0xde8>
    <fbd>   DW_AT_sibling     : <0xfc8>
 <2><fc1>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <fc2>   DW_AT_type        : <0xce9>
    <fc6>   DW_AT_upper_bound : 10
 <2><fc7>: Abbrev Number: 0
 <1><fc8>: Abbrev Number: 6 (DW_TAG_subprogram)
    <fc9>   DW_AT_external    : 1
    <fc9>   DW_AT_name        : (indirect string, offset: 0x4dd): print_string
    <fcd>   DW_AT_decl_file   : 1
    <fcd>   DW_AT_decl_line   : 40
    <fce>   DW_AT_decl_column : 6
    <fce>   DW_AT_prototyped  : 1
    <fce>   DW_AT_low_pc      : 0x8dc
    <fd2>   DW_AT_high_pc     : 0x16
    <fd6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <fd8>   DW_AT_call_all_calls: 1
    <fd8>   DW_AT_sibling     : <0x1014>
 <2><fdc>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <fdd>   DW_AT_name        : str
    <fe1>   DW_AT_decl_file   : 1
    <fe1>   DW_AT_decl_line   : 40
    <fe2>   DW_AT_decl_column : 38
    <fe3>   DW_AT_type        : <0x1019>
    <fe7>   DW_AT_location    : 0x3c8 (location list)
    <feb>   DW_AT_GNU_locviews: 0x3c4
 <2><fef>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <ff0>   DW_AT_low_pc      : 0x8e0
    <ff4>   DW_AT_high_pc     : 0x10
 <3><ff8>: Abbrev Number: 8 (DW_TAG_variable)
    <ff9>   DW_AT_name        : i
    <ffb>   DW_AT_decl_file   : 1
    <ffb>   DW_AT_decl_line   : 41
    <ffc>   DW_AT_decl_column : 10
    <ffd>   DW_AT_type        : <0xce2>
    <1001>   DW_AT_location    : 0x3dc (location list)
    <1005>   DW_AT_GNU_locviews: 0x3d8
 <3><1009>: Abbrev Number: 3 (DW_TAG_call_site)
    <100a>   DW_AT_call_return_pc: 0x8e8
    <100e>   DW_AT_call_origin : <0x101e>
 <3><1012>: Abbrev Number: 0
 <2><1013>: Abbrev Number: 0
 <1><1014>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <1015>   DW_AT_byte_size   : 4
    <1015>   DW_AT_type        : <0xdef>
 <1><1019>: Abbrev Number: 16 (DW_TAG_const_type)
    <101a>   DW_AT_type        : <0x1014>
 <1><101e>: Abbrev Number: 6 (DW_TAG_subprogram)
    <101f>   DW_AT_external    : 1
    <101f>   DW_AT_name        : (indirect string, offset: 0x51e): putchar
    <1023>   DW_AT_decl_file   : 1
    <1023>   DW_AT_decl_line   : 26
    <1024>   DW_AT_decl_column : 6
    <1024>   DW_AT_prototyped  : 1
    <1024>   DW_AT_low_pc      : 0x898
    <1028>   DW_AT_high_pc     : 0x44
    <102c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <102e>   DW_AT_call_all_calls: 1
    <102e>   DW_AT_sibling     : <0x10a3>
 <2><1032>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <1033>   DW_AT_name        : c
    <1035>   DW_AT_decl_file   : 1
    <1035>   DW_AT_decl_line   : 26
    <1036>   DW_AT_decl_column : 19
    <1037>   DW_AT_type        : <0xde8>
    <103b>   DW_AT_location    : 0x3f3 (location list)
    <103f>   DW_AT_GNU_locviews: 0x3ed
 <2><1043>: Abbrev Number: 11 (DW_TAG_variable)
    <1044>   DW_AT_name        : (indirect string, offset: 0x4ea): chars_sent_recently
    <1048>   DW_AT_decl_file   : 1
    <1048>   DW_AT_decl_line   : 27
    <1049>   DW_AT_decl_column : 13
    <104a>   DW_AT_type        : <0xce2>
    <104e>   DW_AT_location    : 5 byte block: 3 74 b 0 20 	(DW_OP_addr: 20000b74)
 <2><1054>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <1055>   DW_AT_low_pc      : 0x8c8
    <1059>   DW_AT_high_pc     : 0xa
    <105d>   DW_AT_sibling     : <0x1073>
 <3><1061>: Abbrev Number: 8 (DW_TAG_variable)
    <1062>   DW_AT_name        : i
    <1064>   DW_AT_decl_file   : 1
    <1064>   DW_AT_decl_line   : 34
    <1065>   DW_AT_decl_column : 11
    <1066>   DW_AT_type        : <0xce2>
    <106a>   DW_AT_location    : 0x415 (location list)
    <106e>   DW_AT_GNU_locviews: 0x411
 <3><1072>: Abbrev Number: 0
 <2><1073>: Abbrev Number: 7 (DW_TAG_call_site)
    <1074>   DW_AT_call_return_pc: 0x8a8
    <1078>   DW_AT_sibling     : <0x1093>
 <3><107c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <107d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <107f>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><1085>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1086>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <1088>   DW_AT_call_value  : 9 byte block: a3 3 a5 0 2d a8 34 a8 0 	(DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xc61>); DW_OP_convert <0xc68>; DW_OP_convert <0>)
 <3><1092>: Abbrev Number: 0
 <2><1093>: Abbrev Number: 31 (DW_TAG_call_site)
    <1094>   DW_AT_call_return_pc: 0x8b4
 <3><1098>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1099>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <109b>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><10a1>: Abbrev Number: 0
 <2><10a2>: Abbrev Number: 0
 <1><10a3>: Abbrev Number: 32 (DW_TAG_subprogram)
    <10a4>   DW_AT_external    : 1
    <10a4>   DW_AT_name        : (indirect string, offset: 0x3f5): setup_uart_printer
    <10a8>   DW_AT_decl_file   : 1
    <10a9>   DW_AT_decl_line   : 15
    <10aa>   DW_AT_decl_column : 6
    <10ab>   DW_AT_prototyped  : 1
    <10ab>   DW_AT_low_pc      : 0x828
    <10af>   DW_AT_high_pc     : 0x70
    <10b3>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <10b5>   DW_AT_call_all_tail_calls: 1
 <2><10b5>: Abbrev Number: 7 (DW_TAG_call_site)
    <10b6>   DW_AT_call_return_pc: 0x836
    <10ba>   DW_AT_sibling     : <0x10c9>
 <3><10be>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10bf>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10c1>   DW_AT_call_value  : 6 byte block: 11 80 90 80 80 7f 	(DW_OP_consts: -268433408)
 <3><10c8>: Abbrev Number: 0
 <2><10c9>: Abbrev Number: 7 (DW_TAG_call_site)
    <10ca>   DW_AT_call_return_pc: 0x83e
    <10ce>   DW_AT_sibling     : <0x10dd>
 <3><10d2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10d3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10d5>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><10dc>: Abbrev Number: 0
 <2><10dd>: Abbrev Number: 7 (DW_TAG_call_site)
    <10de>   DW_AT_call_return_pc: 0x84c
    <10e2>   DW_AT_sibling     : <0x10f1>
 <3><10e6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10e7>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10e9>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><10f0>: Abbrev Number: 0
 <2><10f1>: Abbrev Number: 33 (DW_TAG_call_site)
    <10f2>   DW_AT_call_return_pc: 0x864
    <10f6>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
    <10f9>   DW_AT_sibling     : <0x1117>
 <3><10fd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10fe>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1100>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><1106>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1107>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <1109>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><110b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <110c>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <110e>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><1111>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1112>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <1114>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><1116>: Abbrev Number: 0
 <2><1117>: Abbrev Number: 7 (DW_TAG_call_site)
    <1118>   DW_AT_call_return_pc: 0x872
    <111c>   DW_AT_sibling     : <0x1134>
 <3><1120>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1121>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1123>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><1129>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <112a>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <112c>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><112e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <112f>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <1131>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><1133>: Abbrev Number: 0
 <2><1134>: Abbrev Number: 34 (DW_TAG_call_site)
    <1135>   DW_AT_call_return_pc: 0x888
    <1139>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><113c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <113d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <113f>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><1145>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1146>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <1148>   DW_AT_call_value  : 4 byte block: 8 e1 3c 24 	(DW_OP_const1u: 225; DW_OP_lit12; DW_OP_shl)
 <3><114d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <114e>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <1150>   DW_AT_call_value  : 2 byte block: 8 68 	(DW_OP_const1u: 104)
 <3><1153>: Abbrev Number: 0
 <2><1154>: Abbrev Number: 0
 <1><1155>: Abbrev Number: 0
  Compilation Unit @ offset 0x1156:
   Length:        0x193 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x628
   Pointer Size:  4
 <0><1162>: Abbrev Number: 10 (DW_TAG_compile_unit)
    <1163>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <1167>   DW_AT_language    : 29	(C11)
    <1168>   DW_AT_name        : (indirect string, offset: 0x5cd): sys/startup_gcc.c
    <116c>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1170>   DW_AT_ranges      : 0xd8
    <1174>   DW_AT_low_pc      : 0
    <1178>   DW_AT_stmt_list   : 0xc75
 <1><117c>: Abbrev Number: 1 (DW_TAG_base_type)
    <117d>   DW_AT_byte_size   : 1
    <117e>   DW_AT_encoding    : 6	(signed char)
    <117f>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><1183>: Abbrev Number: 1 (DW_TAG_base_type)
    <1184>   DW_AT_byte_size   : 1
    <1185>   DW_AT_encoding    : 8	(unsigned char)
    <1186>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><118a>: Abbrev Number: 1 (DW_TAG_base_type)
    <118b>   DW_AT_byte_size   : 2
    <118c>   DW_AT_encoding    : 5	(signed)
    <118d>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><1191>: Abbrev Number: 1 (DW_TAG_base_type)
    <1192>   DW_AT_byte_size   : 2
    <1193>   DW_AT_encoding    : 7	(unsigned)
    <1194>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><1198>: Abbrev Number: 1 (DW_TAG_base_type)
    <1199>   DW_AT_byte_size   : 4
    <119a>   DW_AT_encoding    : 5	(signed)
    <119b>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><119f>: Abbrev Number: 4 (DW_TAG_typedef)
    <11a0>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <11a4>   DW_AT_decl_file   : 2
    <11a5>   DW_AT_decl_line   : 79
    <11a6>   DW_AT_decl_column : 25
    <11a7>   DW_AT_type        : <0x11ab>
 <1><11ab>: Abbrev Number: 1 (DW_TAG_base_type)
    <11ac>   DW_AT_byte_size   : 4
    <11ad>   DW_AT_encoding    : 7	(unsigned)
    <11ae>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><11b2>: Abbrev Number: 1 (DW_TAG_base_type)
    <11b3>   DW_AT_byte_size   : 8
    <11b4>   DW_AT_encoding    : 5	(signed)
    <11b5>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><11b9>: Abbrev Number: 1 (DW_TAG_base_type)
    <11ba>   DW_AT_byte_size   : 8
    <11bb>   DW_AT_encoding    : 7	(unsigned)
    <11bc>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><11c0>: Abbrev Number: 11 (DW_TAG_base_type)
    <11c1>   DW_AT_byte_size   : 4
    <11c2>   DW_AT_encoding    : 5	(signed)
    <11c3>   DW_AT_name        : int
 <1><11c7>: Abbrev Number: 1 (DW_TAG_base_type)
    <11c8>   DW_AT_byte_size   : 4
    <11c9>   DW_AT_encoding    : 7	(unsigned)
    <11ca>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><11ce>: Abbrev Number: 4 (DW_TAG_typedef)
    <11cf>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <11d3>   DW_AT_decl_file   : 3
    <11d4>   DW_AT_decl_line   : 48
    <11d5>   DW_AT_decl_column : 20
    <11d6>   DW_AT_type        : <0x119f>
 <1><11da>: Abbrev Number: 1 (DW_TAG_base_type)
    <11db>   DW_AT_byte_size   : 8
    <11dc>   DW_AT_encoding    : 4	(float)
    <11dd>   DW_AT_name        : (indirect string, offset: 0x5f5): long double
 <1><11e1>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <11e2>   DW_AT_byte_size   : 4
    <11e2>   DW_AT_type        : <0x11eb>
 <1><11e6>: Abbrev Number: 6 (DW_TAG_const_type)
    <11e7>   DW_AT_type        : <0x11e1>
 <1><11eb>: Abbrev Number: 12 (DW_TAG_subroutine_type)
    <11ec>   DW_AT_prototyped  : 1
 <1><11ec>: Abbrev Number: 1 (DW_TAG_base_type)
    <11ed>   DW_AT_byte_size   : 1
    <11ee>   DW_AT_encoding    : 8	(unsigned char)
    <11ef>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><11f3>: Abbrev Number: 7 (DW_TAG_array_type)
    <11f4>   DW_AT_type        : <0x11ab>
    <11f8>   DW_AT_sibling     : <0x1203>
 <2><11fc>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <11fd>   DW_AT_type        : <0x11c7>
    <1201>   DW_AT_upper_bound : 63
 <2><1202>: Abbrev Number: 0
 <1><1203>: Abbrev Number: 13 (DW_TAG_variable)
    <1204>   DW_AT_name        : (indirect string, offset: 0x59c): pulStack
    <1208>   DW_AT_decl_file   : 1
    <1209>   DW_AT_decl_line   : 33
    <120a>   DW_AT_decl_column : 22
    <120b>   DW_AT_type        : <0x11f3>
    <120f>   DW_AT_location    : 5 byte block: 3 78 b 0 20 	(DW_OP_addr: 20000b78)
 <1><1215>: Abbrev Number: 7 (DW_TAG_array_type)
    <1216>   DW_AT_type        : <0x11e6>
    <121a>   DW_AT_sibling     : <0x1225>
 <2><121e>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <121f>   DW_AT_type        : <0x11c7>
    <1223>   DW_AT_upper_bound : 154
 <2><1224>: Abbrev Number: 0
 <1><1225>: Abbrev Number: 6 (DW_TAG_const_type)
    <1226>   DW_AT_type        : <0x1215>
 <1><122a>: Abbrev Number: 14 (DW_TAG_variable)
    <122b>   DW_AT_name        : (indirect string, offset: 0x5e8): g_pfnVectors
    <122f>   DW_AT_decl_file   : 1
    <1230>   DW_AT_decl_line   : 42
    <1231>   DW_AT_decl_column : 15
    <1232>   DW_AT_type        : <0x1225>
    <1236>   DW_AT_external    : 1
    <1236>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <1><123c>: Abbrev Number: 2 (DW_TAG_variable)
    <123d>   DW_AT_name        : (indirect string, offset: 0x5bf): _etext
    <1241>   DW_AT_decl_file   : 1
    <1241>   DW_AT_decl_line   : 209
    <1242>   DW_AT_decl_column : 22
    <1242>   DW_AT_type        : <0x11ab>
    <1246>   DW_AT_external    : 1
    <1246>   DW_AT_declaration : 1
 <1><1246>: Abbrev Number: 2 (DW_TAG_variable)
    <1247>   DW_AT_name        : (indirect string, offset: 0x596): _data
    <124b>   DW_AT_decl_file   : 1
    <124b>   DW_AT_decl_line   : 210
    <124c>   DW_AT_decl_column : 22
    <124c>   DW_AT_type        : <0x11ab>
    <1250>   DW_AT_external    : 1
    <1250>   DW_AT_declaration : 1
 <1><1250>: Abbrev Number: 2 (DW_TAG_variable)
    <1251>   DW_AT_name        : (indirect string, offset: 0x5c6): _edata
    <1255>   DW_AT_decl_file   : 1
    <1255>   DW_AT_decl_line   : 211
    <1256>   DW_AT_decl_column : 22
    <1256>   DW_AT_type        : <0x11ab>
    <125a>   DW_AT_external    : 1
    <125a>   DW_AT_declaration : 1
 <1><125a>: Abbrev Number: 15 (DW_TAG_subprogram)
    <125b>   DW_AT_external    : 1
    <125b>   DW_AT_name        : (indirect string, offset: 0x408): main
    <125f>   DW_AT_decl_file   : 1
    <1260>   DW_AT_decl_line   : 26
    <1261>   DW_AT_decl_column : 12
    <1262>   DW_AT_prototyped  : 1
    <1262>   DW_AT_type        : <0x11c0>
    <1266>   DW_AT_declaration : 1
 <1><1266>: Abbrev Number: 16 (DW_TAG_subprogram)
    <1267>   DW_AT_external    : 1
    <1267>   DW_AT_name        : (indirect string, offset: 0x476): timeKeeperISR
    <126b>   DW_AT_decl_file   : 4
    <126c>   DW_AT_decl_line   : 7
    <126d>   DW_AT_decl_column : 6
    <126e>   DW_AT_prototyped  : 1
    <126e>   DW_AT_declaration : 1
 <1><126e>: Abbrev Number: 3 (DW_TAG_subprogram)
    <126f>   DW_AT_name        : (indirect string, offset: 0x5a5): IntDefaultHandler
    <1273>   DW_AT_decl_file   : 1
    <1273>   DW_AT_decl_line   : 304
    <1275>   DW_AT_decl_column : 1
    <1275>   DW_AT_prototyped  : 1
    <1275>   DW_AT_low_pc      : 0xb68
    <1279>   DW_AT_high_pc     : 0x2
    <127d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <127f>   DW_AT_call_all_calls: 1
 <1><127f>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1280>   DW_AT_name        : (indirect string, offset: 0x5df): FaultISR
    <1284>   DW_AT_decl_file   : 1
    <1284>   DW_AT_decl_line   : 286
    <1286>   DW_AT_decl_column : 1
    <1286>   DW_AT_prototyped  : 1
    <1286>   DW_AT_low_pc      : 0xb66
    <128a>   DW_AT_high_pc     : 0x2
    <128e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1290>   DW_AT_call_all_calls: 1
 <1><1290>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1291>   DW_AT_name        : (indirect string, offset: 0x611): NmiSR
    <1295>   DW_AT_decl_file   : 1
    <1295>   DW_AT_decl_line   : 268
    <1297>   DW_AT_decl_column : 1
    <1297>   DW_AT_prototyped  : 1
    <1297>   DW_AT_low_pc      : 0xb64
    <129b>   DW_AT_high_pc     : 0x2
    <129f>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <12a1>   DW_AT_call_all_calls: 1
 <1><12a1>: Abbrev Number: 17 (DW_TAG_subprogram)
    <12a2>   DW_AT_external    : 1
    <12a2>   DW_AT_name        : (indirect string, offset: 0x608): ResetISR
    <12a6>   DW_AT_decl_file   : 1
    <12a7>   DW_AT_decl_line   : 226
    <12a8>   DW_AT_decl_column : 1
    <12a9>   DW_AT_prototyped  : 1
    <12a9>   DW_AT_low_pc      : 0xb6c
    <12ad>   DW_AT_high_pc     : 0x48
    <12b1>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <12b3>   DW_AT_call_all_calls: 1
    <12b3>   DW_AT_sibling     : <0x12e7>
 <2><12b7>: Abbrev Number: 9 (DW_TAG_variable)
    <12b8>   DW_AT_name        : (indirect string, offset: 0x601): pulSrc
    <12bc>   DW_AT_decl_file   : 1
    <12bc>   DW_AT_decl_line   : 228
    <12bd>   DW_AT_decl_column : 20
    <12be>   DW_AT_type        : <0x12e7>
    <12c2>   DW_AT_location    : 0x438 (location list)
    <12c6>   DW_AT_GNU_locviews: 0x432
 <2><12ca>: Abbrev Number: 9 (DW_TAG_variable)
    <12cb>   DW_AT_name        : (indirect string, offset: 0x5b7): pulDest
    <12cf>   DW_AT_decl_file   : 1
    <12cf>   DW_AT_decl_line   : 228
    <12d0>   DW_AT_decl_column : 29
    <12d1>   DW_AT_type        : <0x12e7>
    <12d5>   DW_AT_location    : 0x455 (location list)
    <12d9>   DW_AT_GNU_locviews: 0x44f
 <2><12dd>: Abbrev Number: 18 (DW_TAG_call_site)
    <12de>   DW_AT_call_return_pc: 0xba4
    <12e2>   DW_AT_call_origin : <0x125a>
 <2><12e6>: Abbrev Number: 0
 <1><12e7>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <12e8>   DW_AT_byte_size   : 4
    <12e8>   DW_AT_type        : <0x11ab>
 <1><12ec>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_enumeration_type    [has children]
    DW_AT_encoding     DW_FORM_implicit_const: 7
    DW_AT_byte_size    DW_FORM_implicit_const: 1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_bit_size     DW_FORM_data1
    DW_AT_data_bit_offset DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_implicit_const: 121
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 32
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_union_type    [has children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 9
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   35      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   36      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   37      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   38      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   39      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   40      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   41      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   42      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   43      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x291)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x349)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x45d)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 7
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x628)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 22
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_implicit_const: 1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subroutine_type    [no children]
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_loclists section:

    Offset   Begin            End              Expression

    0000000c v0000000 v0000000 location view pair

    0000000e v0000000 v0000000 views at 0000000c for:
             000004d6 000004f2 (DW_OP_reg0 (r0))
    00000016 <End of list>

    00000017 v0000000 v0000000 location view pair

    00000019 v0000000 v0000000 views at 00000017 for:
             00000628 00000639 (DW_OP_reg1 (r1))
    00000021 <End of list>

    00000022 v0000000 v0000000 location view pair
    00000024 v0000000 v0000000 location view pair

    00000026 00000676 (base address)
    0000002b v0000000 v0000000 views at 00000022 for:
             00000676 0000069c (DW_OP_reg4 (r4))
    00000030 v0000000 v0000000 views at 00000024 for:
             000006ae 000006b4 (DW_OP_reg4 (r4))
    00000035 <End of list>

    00000036 v0000000 v0000000 location view pair
    00000038 v0000000 v0000000 location view pair

    0000003a 00000688 (base address)
    0000003f v0000000 v0000000 views at 00000036 for:
             00000688 0000069c (DW_OP_reg0 (r0))
    00000044 v0000000 v0000000 views at 00000038 for:
             000006ae 000006b4 (DW_OP_reg0 (r0))
    00000049 <End of list>

    0000004a v0000002 v0000000 location view pair
    0000004c v0000000 v0000000 location view pair

    0000004e 0000049e (base address)
    00000053 v0000002 v0000000 views at 0000004a for:
             0000049e 000004a2 (DW_OP_lit0; DW_OP_stack_value)
    00000059 v0000000 v0000000 views at 0000004c for:
             000004a2 000004bc (DW_OP_reg4 (r4))
    0000005e <End of list>

    0000005f v0000000 v0000000 location view pair
    00000061 v0000000 v0000000 location view pair
    00000063 v0000000 v0000000 location view pair

    00000065 00000464 (base address)
    0000006a v0000000 v0000000 views at 0000005f for:
             00000464 0000047e (DW_OP_reg0 (r0))
    0000006f v0000000 v0000000 views at 00000061 for:
             0000047e 00000490 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000007d v0000000 v0000000 views at 00000063 for:
             00000490 0000049c (DW_OP_reg0 (r0))
    00000082 <End of list>

    00000083 v0000000 v0000000 location view pair
    00000085 v0000000 v0000000 location view pair
    00000087 v0000000 v0000000 location view pair
    00000089 v0000000 v0000000 location view pair

    0000008b 00000464 (base address)
    00000090 v0000000 v0000000 views at 00000083 for:
             00000464 0000046a (DW_OP_reg1 (r1))
    00000095 v0000000 v0000000 views at 00000085 for:
             0000046a 00000490 (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000a3 v0000000 v0000000 views at 00000087 for:
             00000490 00000492 (DW_OP_reg1 (r1))
    000000a8 v0000000 v0000000 views at 00000089 for:
             00000492 0000049c (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000b6 <End of list>

    000000b7 v0000000 v0000000 location view pair
    000000b9 v0000000 v0000000 location view pair
    000000bb v0000000 v0000000 location view pair
    000000bd v0000000 v0000000 location view pair

    000000bf 00000464 (base address)
    000000c4 v0000000 v0000000 views at 000000b7 for:
             00000464 0000046e (DW_OP_reg2 (r2))
    000000c9 v0000000 v0000000 views at 000000b9 for:
             0000046e 00000490 (DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000d7 v0000000 v0000000 views at 000000bb for:
             00000490 00000494 (DW_OP_reg2 (r2))
    000000dc v0000000 v0000000 views at 000000bd for:
             00000494 0000049c (DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000ea <End of list>

    000000eb v0000000 v0000000 location view pair
    000000ed v0000000 v0000000 location view pair
    000000ef v0000000 v0000000 location view pair
    000000f1 v0000000 v0000000 location view pair

    000000f3 00000464 (base address)
    000000f8 v0000000 v0000000 views at 000000eb for:
             00000464 00000472 (DW_OP_reg3 (r3))
    000000fd v0000000 v0000000 views at 000000ed for:
             00000472 00000490 (DW_OP_entry_value: (DW_OP_regval_type: 3 (r3) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000010b v0000000 v0000000 views at 000000ef for:
             00000490 00000494 (DW_OP_reg3 (r3))
    00000110 v0000000 v0000000 views at 000000f1 for:
             00000494 0000049c (DW_OP_entry_value: (DW_OP_regval_type: 3 (r3) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000011e <End of list>

    0000011f v0000000 v0000000 location view pair
    00000121 v0000000 v0000000 location view pair

    00000123 0000046a (base address)
    00000128 v0000000 v0000000 views at 0000011f for:
             0000046a 00000478 (DW_OP_reg1 (r1))
    0000012d v0000000 v0000000 views at 00000121 for:
             00000494 0000049c (DW_OP_reg1 (r1))
    00000132 <End of list>

    00000133 v0000000 v0000000 location view pair
    00000135 v0000000 v0000000 location view pair

    00000137 0000046e (base address)
    0000013c v0000000 v0000000 views at 00000133 for:
             0000046e 0000047a (DW_OP_reg2 (r2))
    00000141 v0000000 v0000000 views at 00000135 for:
             00000494 0000049c (DW_OP_reg2 (r2))
    00000146 <End of list>

    00000147 v0000002 v0000000 location view pair
    00000149 v0000000 v0000000 location view pair

    0000014b 0000028a (base address)
    00000150 v0000002 v0000000 views at 00000147 for:
             0000028a 0000028e (DW_OP_lit1; DW_OP_stack_value)
    00000156 v0000000 v0000000 views at 00000149 for:
             0000028e 0000030c (DW_OP_reg4 (r4))
    0000015c <End of list>

    0000015d v0000000 v0000001 location view pair
    0000015f v0000001 v0000000 location view pair
    00000161 v0000000 v0000000 location view pair
    00000163 v0000000 v0000000 location view pair
    00000165 v0000000 v0000000 location view pair

    00000167 00000294 (base address)
    0000016c v0000000 v0000001 views at 0000015d for:
             00000294 000002a4 (DW_OP_reg3 (r3))
    00000171 v0000001 v0000000 views at 0000015f for:
             000002a4 000002a6 (DW_OP_breg3 (r3): -1; DW_OP_stack_value)
    00000178 v0000000 v0000000 views at 00000161 for:
             000002a6 000002b0 (DW_OP_reg3 (r3))
    0000017d v0000000 v0000000 views at 00000163 for:
             000002b2 000002b7 (DW_OP_reg3 (r3))
    00000182 v0000000 v0000000 views at 00000165 for:
             00000306 0000030a (DW_OP_reg0 (r0))
    00000187 <End of list>

    00000188 v0000000 v0000000 location view pair
    0000018a v0000001 v0000000 location view pair

    0000018c 00000294 (base address)
    00000191 v0000000 v0000000 views at 00000188 for:
             00000294 000002b4 (DW_OP_breg0 (r0): 0; DW_OP_lit0; DW_OP_gt; DW_OP_stack_value)
    0000019a v0000001 v0000000 views at 0000018a for:
             00000306 0000030a (DW_OP_breg0 (r0): 0; DW_OP_lit0; DW_OP_gt; DW_OP_stack_value)
    000001a3 <End of list>

    000001a4 v0000001 v0000000 location view pair
    000001a6 v0000000 v0000000 location view pair
    000001a8 v0000000 v0000000 location view pair

    000001aa 000002b8 (base address)
    000001af v0000001 v0000000 views at 000001a4 for:
             000002b8 000002ba (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000001b6 v0000000 v0000000 views at 000001a6 for:
             000002ba 000002e0 (DW_OP_reg3 (r3))
    000001bb v0000000 v0000000 views at 000001a8 for:
             000002e2 000002e4 (DW_OP_reg3 (r3))
    000001c0 <End of list>

    000001c1 v0000000 v0000000 location view pair
    000001c3 v0000000 v0000000 location view pair

    000001c5 000002c0 (base address)
    000001ca v0000000 v0000000 views at 000001c1 for:
             000002c0 000002de (DW_OP_reg0 (r0))
    000001cf v0000000 v0000000 views at 000001c3 for:
             000002e2 000002ea (DW_OP_reg0 (r0))
    000001d4 <End of list>

    000001d5 v0000003 v0000000 location view pair
    000001d7 v0000000 v0000000 location view pair

    000001d9 0000026c (base address)
    000001de v0000003 v0000000 views at 000001d5 for:
             0000026c 00000270 (DW_OP_lit0; DW_OP_stack_value)
    000001e4 v0000000 v0000000 views at 000001d7 for:
             00000270 00000288 (DW_OP_reg3 (r3))
    000001e9 <End of list>

    000001f6 v0000000 v0000000 location view pair
    000001f8 v0000000 v0000000 location view pair

    000001fa 00000000 (base address)
    000001ff v0000000 v0000000 views at 000001f6 for:
             00000000 0000001a (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    00000209 v0000000 v0000000 views at 000001f8 for:
             0000002a 00000046 (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    00000213 <End of list>

    00000220 v0000006 v0000000 location view pair
    00000222 v0000000 v0000001 location view pair
    00000224 v0000001 v0000000 location view pair
    00000226 v0000000 v0000000 location view pair
    00000228 v0000000 v0000000 location view pair
    0000022a v0000000 v0000000 location view pair
    0000022c v0000000 v0000000 location view pair

    0000022e 00000a86 (base address)
    00000233 v0000006 v0000000 views at 00000220 for:
             00000a86 00000a8a (DW_OP_lit0; DW_OP_stack_value)
    00000239 v0000000 v0000001 views at 00000222 for:
             00000a8a 00000ab0 (DW_OP_reg6 (r6))
    0000023e v0000001 v0000000 views at 00000224 for:
             00000ab0 00000ab2 (DW_OP_reg4 (r4))
    00000243 v0000000 v0000000 views at 00000226 for:
             00000ab2 00000ae6 (DW_OP_reg6 (r6))
    00000248 v0000000 v0000000 views at 00000228 for:
             00000ae6 00000af6 (DW_OP_reg4 (r4))
    0000024d v0000000 v0000000 views at 0000022a for:
             00000af6 00000b58 (DW_OP_reg6 (r6))
    00000253 v0000000 v0000000 views at 0000022c for:
             00000b58 00000b5e (DW_OP_reg4 (r4))
    0000025a <End of list>

    0000025b v0000000 v0000000 location view pair
    0000025d v0000000 v0000000 location view pair
    0000025f v0000000 v0000000 location view pair
    00000261 v0000000 v0000000 location view pair
    00000263 v0000000 v0000001 location view pair
    00000265 v0000000 v0000000 location view pair
    00000267 v0000000 v0000000 location view pair
    00000269 v0000000 v0000000 location view pair
    0000026b v0000000 v0000001 location view pair
    0000026d v0000001 v0000000 location view pair

    0000026f 00000958 (base address)
    00000274 v0000000 v0000000 views at 0000025b for:
             00000958 000009c4 (DW_OP_regx: 64 (r64))
    0000027a v0000000 v0000000 views at 0000025d for:
             000009da 000009df (DW_OP_regx: 64 (r64))
    00000282 v0000000 v0000000 views at 0000025f for:
             000009df 000009e2 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc5a>); DW_OP_stack_value)
    0000028e v0000000 v0000000 views at 00000261 for:
             000009e2 000009e7 (DW_OP_regx: 64 (r64))
    00000296 v0000000 v0000001 views at 00000263 for:
             000009e7 000009e8 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc5a>); DW_OP_stack_value)
    000002a2 v0000000 v0000000 views at 00000265 for:
             000009f0 000009f5 (DW_OP_regx: 64 (r64))
    000002aa v0000000 v0000000 views at 00000267 for:
             000009f5 000009f8 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc5a>); DW_OP_stack_value)
    000002b6 v0000000 v0000000 views at 00000269 for:
             000009f8 000009fd (DW_OP_regx: 64 (r64))
    000002be v0000000 v0000001 views at 0000026b for:
             000009fd 000009fe (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc5a>); DW_OP_stack_value)
    000002ca v0000001 v0000000 views at 0000026d for:
             000009fe 00000a04 (DW_OP_regx: 80 (r80))
    000002d2 <End of list>

    000002d3 v0000000 v0000000 location view pair
    000002d5 v0000000 v0000000 location view pair

    000002d7 000009bc (base address)
    000002dc v0000000 v0000000 views at 000002d3 for:
             000009bc 000009da (DW_OP_regx: 79 (r79))
    000002e2 v0000000 v0000000 views at 000002d5 for:
             00000a04 00000a43 (DW_OP_regx: 79 (r79))
    000002e9 <End of list>

    000002ea v0000000 v0000000 location view pair
    000002ec v0000000 v0000000 location view pair
    000002ee v0000000 v0000000 location view pair

    000002f0 000009d4 (base address)
    000002f5 v0000000 v0000000 views at 000002ea for:
             000009d4 000009da (DW_OP_reg3 (r3))
    000002fa v0000000 v0000000 views at 000002ec for:
             00000a04 00000a1c (DW_OP_reg3 (r3))
    000002ff v0000000 v0000000 views at 000002ee for:
             00000a24 00000a32 (DW_OP_reg3 (r3))
    00000304 <End of list>

    00000305 v0000001 v0000000 location view pair
    00000307 v0000000 v0000000 location view pair
    00000309 v0000000 v0000000 location view pair
    0000030b v0000000 v0000000 location view pair
    0000030d v0000000 v0000000 location view pair
    0000030f v0000000 v0000001 location view pair
    00000311 v0000001 v0000000 location view pair

    00000313 000009d4 (base address)
    00000318 v0000001 v0000000 views at 00000305 for:
             000009d4 000009da (DW_OP_lit0; DW_OP_stack_value)
    0000031e v0000000 v0000000 views at 00000307 for:
             00000a04 00000a16 (DW_OP_reg1 (r1))
    00000323 v0000000 v0000000 views at 00000309 for:
             00000a16 00000a28 (DW_OP_breg1 (r1): 1; DW_OP_stack_value)
    0000032a v0000000 v0000000 views at 0000030b for:
             00000a28 00000a2e (DW_OP_reg1 (r1))
    0000032f v0000000 v0000000 views at 0000030d for:
             00000a2e 00000a48 (DW_OP_reg4 (r4))
    00000334 v0000000 v0000001 views at 0000030f for:
             00000a48 00000a56 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    0000033c v0000001 v0000000 views at 00000311 for:
             00000a56 00000a78 (DW_OP_reg4 (r4))
    00000343 <End of list>

    00000344 v0000003 v0000000 location view pair
    00000346 v0000000 v0000000 location view pair

    00000348 000009d4 (base address)
    0000034d v0000003 v0000000 views at 00000344 for:
             000009d4 000009da (DW_OP_lit0; DW_OP_stack_value)
    00000353 v0000000 v0000000 views at 00000346 for:
             00000a04 00000a40 (DW_OP_reg0 (r0))
    00000358 <End of list>

    00000359 v0000000 v0000000 location view pair
    0000035b v0000000 v0000000 location view pair
    0000035d v0000000 v0000000 location view pair
    0000035f v0000000 v0000000 location view pair

    00000361 00000940 (base address)
    00000366 v0000000 v0000000 views at 00000359 for:
             00000940 00000946 (DW_OP_reg0 (r0))
    0000036b v0000000 v0000000 views at 0000035b for:
             00000946 0000094e (DW_OP_reg4 (r4))
    00000370 v0000000 v0000000 views at 0000035d for:
             0000094e 00000950 (DW_OP_reg0 (r0))
    00000375 v0000000 v0000000 views at 0000035f for:
             00000950 00000958 (DW_OP_reg4 (r4))
    0000037a <End of list>

    0000037b v0000000 v0000000 location view pair
    0000037d v0000000 v0000000 location view pair

    0000037f 000008f4 (base address)
    00000384 v0000000 v0000000 views at 0000037b for:
             000008f4 000008fa (DW_OP_reg0 (r0))
    00000389 v0000000 v0000000 views at 0000037d for:
             000008fa 00000924 (DW_OP_reg0 (r0))
    0000038e <End of list>

    0000038f v0000002 v0000000 location view pair
    00000391 v0000000 v0000000 location view pair
    00000393 v0000000 v0000000 location view pair
    00000395 v0000000 v0000000 location view pair
    00000397 v0000000 v0000001 location view pair
    00000399 v0000001 v0000000 location view pair

    0000039b 000008f8 (base address)
    000003a0 v0000002 v0000000 views at 0000038f for:
             000008f8 000008fa (DW_OP_lit0; DW_OP_stack_value)
    000003a6 v0000000 v0000000 views at 00000391 for:
             000008fa 00000916 (DW_OP_reg4 (r4))
    000003ab v0000000 v0000000 views at 00000393 for:
             00000916 00000924 (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    000003b2 v0000000 v0000000 views at 00000395 for:
             00000924 00000926 (DW_OP_reg4 (r4))
    000003b7 v0000000 v0000001 views at 00000397 for:
             00000926 00000934 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000003be v0000001 v0000000 views at 00000399 for:
             00000934 0000093c (DW_OP_reg4 (r4))
    000003c3 <End of list>

    000003c4 v0000000 v0000000 location view pair
    000003c6 v0000000 v0000000 location view pair

    000003c8 000008dc (base address)
    000003cd v0000000 v0000000 views at 000003c4 for:
             000008dc 000008e4 (DW_OP_reg0 (r0))
    000003d2 v0000000 v0000000 views at 000003c6 for:
             000008e4 000008f2 (DW_OP_reg5 (r5))
    000003d7 <End of list>

    000003d8 v0000002 v0000000 location view pair
    000003da v0000000 v0000000 location view pair

    000003dc 000008e0 (base address)
    000003e1 v0000002 v0000000 views at 000003d8 for:
             000008e0 000008e4 (DW_OP_lit0; DW_OP_stack_value)
    000003e7 v0000000 v0000000 views at 000003da for:
             000008e4 000008f2 (DW_OP_reg4 (r4))
    000003ec <End of list>

    000003ed v0000000 v0000000 location view pair
    000003ef v0000000 v0000000 location view pair
    000003f1 v0000000 v0000000 location view pair

    000003f3 00000898 (base address)
    000003f8 v0000000 v0000000 views at 000003ed for:
             00000898 000008a6 (DW_OP_reg0 (r0))
    000003fd v0000000 v0000000 views at 000003ef for:
             000008a6 000008a7 (DW_OP_reg1 (r1))
    00000402 v0000000 v0000000 views at 000003f1 for:
             000008a7 000008dc (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xc61>); DW_OP_convert <0xc68>; DW_OP_convert <0>; DW_OP_stack_value)
    00000410 <End of list>

    00000411 v0000002 v0000000 location view pair
    00000413 v0000000 v0000000 location view pair

    00000415 000008c8 (base address)
    0000041a v0000002 v0000000 views at 00000411 for:
             000008c8 000008ca (DW_OP_lit0; DW_OP_stack_value)
    00000420 v0000000 v0000000 views at 00000413 for:
             000008ca 000008d2 (DW_OP_reg3 (r3))
    00000425 <End of list>

    00000432 v0000000 v0000001 location view pair
    00000434 v0000001 v0000000 location view pair
    00000436 v0000000 v0000000 location view pair

    00000438 00000b74 (base address)
    0000043d v0000000 v0000001 views at 00000432 for:
             00000b74 00000b74 (DW_OP_reg2 (r2))
    00000442 v0000001 v0000000 views at 00000434 for:
             00000b74 00000b78 (DW_OP_breg2 (r2): 4; DW_OP_stack_value)
    00000449 v0000000 v0000000 views at 00000436 for:
             00000b78 00000b9c (DW_OP_reg2 (r2))
    0000044e <End of list>

    0000044f v0000000 v0000001 location view pair
    00000451 v0000001 v0000000 location view pair
    00000453 v0000000 v0000000 location view pair

    00000455 00000b74 (base address)
    0000045a v0000000 v0000001 views at 0000044f for:
             00000b74 00000b74 (DW_OP_reg3 (r3))
    0000045f v0000001 v0000000 views at 00000451 for:
             00000b74 00000b7c (DW_OP_breg3 (r3): 4; DW_OP_stack_value)
    00000466 v0000000 v0000000 views at 00000453 for:
             00000b7c 00000b98 (DW_OP_reg3 (r3))
    0000046b <End of list>

Contents of the .debug_aranges section:

  Length:                   92
  Version:                  2
  Offset into .debug_info:  0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000026c 0000001c
    00000288 0000008c
    00000314 000000e0
    000003f4 00000024
    00000418 00000024
    0000043c 00000028
    00000464 00000038
    0000049c 00000028
    000004c4 00000288
    00000000 00000000
  Length:                   28
  Version:                  2
  Offset into .debug_info:  0x8f4
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000074c 00000078
    00000000 00000000
  Length:                   44
  Version:                  2
  Offset into .debug_info:  0xab6
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000000 0000007c
    000007c4 00000064
    00000000 00000058
    00000000 00000000
  Length:                   76
  Version:                  2
  Offset into .debug_info:  0xc34
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000828 00000070
    00000898 00000044
    000008dc 00000016
    000008f4 0000004c
    00000940 00000018
    00000958 00000120
    00000a78 000000ea
    00000000 00000000
  Length:                   52
  Version:                  2
  Offset into .debug_info:  0x1156
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000b64 00000002
    00000b66 00000002
    00000b68 00000002
    00000b6c 00000048
    00000000 00000000

Contents of the .debug_rnglists section:

 Table at Offset: 0:
  Length:          0x4e
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xc, Index: 0
    Offset   Begin    End
    0000000c 0000028e (base address)
    00000011 0000028e 000002ea 
    00000014 000002f2 0000030a 
    00000017 <End of list>

 Table at Offset: 0x52:
  Length:          0xf
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x5e, Index: 0
    Offset   Begin    End
    0000005e 0000074c 000007c4 
    00000064 <End of list>

 Table at Offset: 0x65:
  Length:          0x1b
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x71, Index: 0
    Offset   Begin    End
    00000071 00000000 0000007c 
    00000077 000007c4 00000828 
    0000007d 00000000 00000058 
    00000083 <End of list>

 Table at Offset: 0x84:
  Length:          0x44
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x90, Index: 0
    Offset   Begin    End
    00000090 000009d4 (base address)
    00000095 000009d4 000009d6 
    00000098 000009d8 000009da 
    0000009b 00000a04 00000a2c 
    0000009e <End of list>

 Table at Offset: 0xcc:
  Length:          0x21
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xd8, Index: 0
    Offset   Begin    End
    000000d8 00000b64 00000b66 
    000000de 00000b66 00000b68 
    000000e4 00000b68 00000b6a 
    000000ea 00000b6c 00000bb4 
    000000f0 <End of list>

Raw dump of debug contents of section .debug_line:

  Offset:                      0
  Length:                      1411
  DWARF Version:               3
  Prologue Length:             160
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x62):
  Entry	Dir	Time	Size	Name
  1	1	0	0	lidar.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x000000aa]  Set column to 27
  [0x000000ac]  Extended opcode 2: set Address to 0x26c
  [0x000000b3]  Advance Line by 37 to 38
  [0x000000b5]  Copy
  [0x000000b6]  Set column to 2
  [0x000000b8]  Special opcode 6: advance Address by 0 to 0x26c and Line by 1 to 39 (view 1)
  [0x000000b9]  Set column to 6
  [0x000000bb]  Copy (view 2)
  [0x000000bc]  Set column to 10
  [0x000000be]  Set is_stmt to 0
  [0x000000bf]  Copy (view 3)
  [0x000000c0]  Set column to 2
  [0x000000c2]  Special opcode 19: advance Address by 2 to 0x26e and Line by 0 to 39
  [0x000000c3]  Set column to 3
  [0x000000c5]  Set is_stmt to 1
  [0x000000c6]  Special opcode 20: advance Address by 2 to 0x270 and Line by 1 to 40
  [0x000000c7]  Set column to 25
  [0x000000c9]  Set is_stmt to 0
  [0x000000ca]  Copy (view 1)
  [0x000000cb]  Set column to 29
  [0x000000cd]  Special opcode 33: advance Address by 4 to 0x274 and Line by 0 to 40
  [0x000000ce]  Set column to 39
  [0x000000d0]  Extended opcode 4: set Discriminator to 3
  [0x000000d4]  Set is_stmt to 1
  [0x000000d5]  Special opcode 46: advance Address by 6 to 0x27a and Line by -1 to 39
  [0x000000d6]  Set column to 19
  [0x000000d8]  Extended opcode 4: set Discriminator to 1
  [0x000000dc]  Special opcode 19: advance Address by 2 to 0x27c and Line by 0 to 39
  [0x000000dd]  Set column to 1
  [0x000000df]  Set is_stmt to 0
  [0x000000e0]  Special opcode 50: advance Address by 6 to 0x282 and Line by 3 to 42
  [0x000000e1]  Advance PC by 6 to 0x288
  [0x000000e3]  Extended opcode 1: End of Sequence

  [0x000000e6]  Set column to 26
  [0x000000e8]  Extended opcode 2: set Address to 0x288
  [0x000000ef]  Advance Line by 45 to 46
  [0x000000f1]  Copy
  [0x000000f2]  Set column to 2
  [0x000000f4]  Special opcode 21: advance Address by 2 to 0x28a and Line by 2 to 48
  [0x000000f5]  Set column to 6
  [0x000000f7]  Copy (view 1)
  [0x000000f8]  Set column to 10
  [0x000000fa]  Set is_stmt to 0
  [0x000000fb]  Copy (view 2)
  [0x000000fc]  Set column to 2
  [0x000000fe]  Special opcode 19: advance Address by 2 to 0x28c and Line by 0 to 48
  [0x000000ff]  Set column to 48
  [0x00000101]  Extended opcode 4: set Discriminator to 2
  [0x00000105]  Special opcode 23: advance Address by 2 to 0x28e and Line by 4 to 52
  [0x00000106]  Set column to 6
  [0x00000108]  Set is_stmt to 1
  [0x00000109]  Special opcode 52: advance Address by 6 to 0x294 and Line by 5 to 57
  [0x0000010a]  Set column to 32
  [0x0000010c]  Set is_stmt to 0
  [0x0000010d]  Copy (view 1)
  [0x0000010e]  Set column to 6
  [0x00000110]  Set is_stmt to 1
  [0x00000111]  Special opcode 34: advance Address by 4 to 0x298 and Line by 1 to 58
  [0x00000112]  Set column to 43
  [0x00000114]  Special opcode 1: advance Address by 0 to 0x298 and Line by -4 to 54 (view 1)
  [0x00000115]  Set column to 33
  [0x00000117]  Set is_stmt to 0
  [0x00000118]  Copy (view 2)
  [0x00000119]  Set column to 43
  [0x0000011b]  Special opcode 75: advance Address by 10 to 0x2a2 and Line by 0 to 54
  [0x0000011c]  Set column to 4
  [0x0000011e]  Set is_stmt to 1
  [0x0000011f]  Special opcode 20: advance Address by 2 to 0x2a4 and Line by 1 to 55
  [0x00000120]  Set column to 7
  [0x00000122]  Set is_stmt to 0
  [0x00000123]  Copy (view 1)
  [0x00000124]  Special opcode 19: advance Address by 2 to 0x2a6 and Line by 0 to 55
  [0x00000125]  Set column to 5
  [0x00000127]  Set is_stmt to 1
  [0x00000128]  Special opcode 20: advance Address by 2 to 0x2a8 and Line by 1 to 56
  [0x00000129]  Set column to 7
  [0x0000012b]  Set is_stmt to 0
  [0x0000012c]  Copy (view 1)
  [0x0000012d]  Set column to 14
  [0x0000012f]  Special opcode 37: advance Address by 4 to 0x2ac and Line by 4 to 60
  [0x00000130]  Special opcode 33: advance Address by 4 to 0x2b0 and Line by 0 to 60
  [0x00000131]  Set column to 3
  [0x00000133]  Set is_stmt to 1
  [0x00000134]  Special opcode 23: advance Address by 2 to 0x2b2 and Line by 4 to 64
  [0x00000135]  Set is_stmt to 0
  [0x00000136]  Special opcode 19: advance Address by 2 to 0x2b4 and Line by 0 to 64
  [0x00000137]  Set is_stmt to 1
  [0x00000138]  Special opcode 35: advance Address by 4 to 0x2b8 and Line by 2 to 66
  [0x00000139]  Special opcode 6: advance Address by 0 to 0x2b8 and Line by 1 to 67 (view 1)
  [0x0000013a]  Set column to 8
  [0x0000013c]  Set is_stmt to 0
  [0x0000013d]  Copy (view 2)
  [0x0000013e]  Special opcode 19: advance Address by 2 to 0x2ba and Line by 0 to 67
  [0x0000013f]  Set column to 3
  [0x00000141]  Set is_stmt to 1
  [0x00000142]  Special opcode 48: advance Address by 6 to 0x2c0 and Line by 1 to 68
  [0x00000143]  Set column to 8
  [0x00000145]  Set is_stmt to 0
  [0x00000146]  Copy (view 1)
  [0x00000147]  Set column to 6
  [0x00000149]  Set is_stmt to 1
  [0x0000014a]  Special opcode 22: advance Address by 2 to 0x2c2 and Line by 3 to 71
  [0x0000014b]  Set column to 32
  [0x0000014d]  Set is_stmt to 0
  [0x0000014e]  Copy (view 1)
  [0x0000014f]  Set column to 6
  [0x00000151]  Set is_stmt to 1
  [0x00000152]  Special opcode 34: advance Address by 4 to 0x2c6 and Line by 1 to 72
  [0x00000153]  Set column to 42
  [0x00000155]  Special opcode 1: advance Address by 0 to 0x2c6 and Line by -4 to 68 (view 1)
  [0x00000156]  Set column to 31
  [0x00000158]  Set is_stmt to 0
  [0x00000159]  Copy (view 2)
  [0x0000015a]  Set column to 42
  [0x0000015c]  Special opcode 61: advance Address by 8 to 0x2ce and Line by 0 to 68
  [0x0000015d]  Set column to 4
  [0x0000015f]  Set is_stmt to 1
  [0x00000160]  Special opcode 20: advance Address by 2 to 0x2d0 and Line by 1 to 69
  [0x00000161]  Set column to 6
  [0x00000163]  Set is_stmt to 0
  [0x00000164]  Copy (view 1)
  [0x00000165]  Special opcode 19: advance Address by 2 to 0x2d2 and Line by 0 to 69
  [0x00000166]  Set column to 5
  [0x00000168]  Set is_stmt to 1
  [0x00000169]  Special opcode 48: advance Address by 6 to 0x2d8 and Line by 1 to 70
  [0x0000016a]  Set column to 7
  [0x0000016c]  Set is_stmt to 0
  [0x0000016d]  Copy (view 1)
  [0x0000016e]  Set column to 13
  [0x00000170]  Special opcode 38: advance Address by 4 to 0x2dc and Line by 5 to 75
  [0x00000171]  Set column to 15
  [0x00000173]  Special opcode 18: advance Address by 2 to 0x2de and Line by -1 to 74
  [0x00000174]  Special opcode 19: advance Address by 2 to 0x2e0 and Line by 0 to 74
  [0x00000175]  Set column to 3
  [0x00000177]  Set is_stmt to 1
  [0x00000178]  Special opcode 24: advance Address by 2 to 0x2e2 and Line by 5 to 79
  [0x00000179]  Set column to 54
  [0x0000017b]  Set is_stmt to 0
  [0x0000017c]  Copy (view 1)
  [0x0000017d]  Set column to 64
  [0x0000017f]  Special opcode 19: advance Address by 2 to 0x2e4 and Line by 0 to 79
  [0x00000180]  Set column to 99
  [0x00000182]  Special opcode 19: advance Address by 2 to 0x2e6 and Line by 0 to 79
  [0x00000183]  Set column to 29
  [0x00000185]  Special opcode 19: advance Address by 2 to 0x2e8 and Line by 0 to 79
  [0x00000186]  Special opcode 19: advance Address by 2 to 0x2ea and Line by 0 to 79
  [0x00000187]  Set column to 39
  [0x00000189]  Extended opcode 4: set Discriminator to 2
  [0x0000018d]  Set is_stmt to 1
  [0x0000018e]  Advance Line by -31 to 48
  [0x00000190]  Copy (view 1)
  [0x00000191]  Set column to 19
  [0x00000193]  Extended opcode 4: set Discriminator to 1
  [0x00000197]  Special opcode 19: advance Address by 2 to 0x2ec and Line by 0 to 48
  [0x00000198]  Set column to 3
  [0x0000019a]  Special opcode 49: advance Address by 6 to 0x2f2 and Line by 2 to 50
  [0x0000019b]  Set column to 28
  [0x0000019d]  Set is_stmt to 0
  [0x0000019e]  Copy (view 1)
  [0x0000019f]  Set column to 5
  [0x000001a1]  Special opcode 75: advance Address by 10 to 0x2fc and Line by 0 to 50
  [0x000001a2]  Set column to 3
  [0x000001a4]  Set is_stmt to 1
  [0x000001a5]  Special opcode 35: advance Address by 4 to 0x300 and Line by 2 to 52
  [0x000001a6]  Set column to 48
  [0x000001a8]  Set is_stmt to 0
  [0x000001a9]  Copy (view 1)
  [0x000001aa]  Extended opcode 4: set Discriminator to 1
  [0x000001ae]  Special opcode 33: advance Address by 4 to 0x304 and Line by 0 to 52
  [0x000001af]  Set column to 3
  [0x000001b1]  Set is_stmt to 1
  [0x000001b2]  Special opcode 20: advance Address by 2 to 0x306 and Line by 1 to 53
  [0x000001b3]  Special opcode 6: advance Address by 0 to 0x306 and Line by 1 to 54 (view 1)
  [0x000001b4]  Set column to 7
  [0x000001b6]  Extended opcode 4: set Discriminator to 4
  [0x000001ba]  Set is_stmt to 0
  [0x000001bb]  Special opcode 3: advance Address by 0 to 0x306 and Line by -2 to 52 (view 2)
  [0x000001bc]  Set column to 9
  [0x000001be]  Special opcode 21: advance Address by 2 to 0x308 and Line by 2 to 54
  [0x000001bf]  Special opcode 19: advance Address by 2 to 0x30a and Line by 0 to 54
  [0x000001c0]  Set column to 1
  [0x000001c2]  Advance Line by 27 to 81
  [0x000001c4]  Copy (view 1)
  [0x000001c5]  Special opcode 19: advance Address by 2 to 0x30c and Line by 0 to 81
  [0x000001c6]  Advance PC by 8 to 0x314
  [0x000001c8]  Extended opcode 1: End of Sequence

  [0x000001cb]  Set column to 29
  [0x000001cd]  Extended opcode 2: set Address to 0x314
  [0x000001d4]  Advance Line by 82 to 83
  [0x000001d7]  Copy
  [0x000001d8]  Set column to 2
  [0x000001da]  Special opcode 20: advance Address by 2 to 0x316 and Line by 1 to 84
  [0x000001db]  Special opcode 90: advance Address by 12 to 0x322 and Line by 1 to 85
  [0x000001dc]  Special opcode 62: advance Address by 8 to 0x32a and Line by 1 to 86
  [0x000001dd]  Set column to 57
  [0x000001df]  Extended opcode 4: set Discriminator to 1
  [0x000001e3]  Copy (view 1)
  [0x000001e4]  Set column to 8
  [0x000001e6]  Extended opcode 4: set Discriminator to 1
  [0x000001ea]  Copy (view 2)
  [0x000001eb]  Set column to 9
  [0x000001ed]  Extended opcode 4: set Discriminator to 1
  [0x000001f1]  Set is_stmt to 0
  [0x000001f2]  Copy (view 3)
  [0x000001f3]  Set column to 8
  [0x000001f5]  Extended opcode 4: set Discriminator to 1
  [0x000001f9]  Special opcode 103: advance Address by 14 to 0x338 and Line by 0 to 86
  [0x000001fa]  Set column to 58
  [0x000001fc]  Extended opcode 4: set Discriminator to 2
  [0x00000200]  Set is_stmt to 1
  [0x00000201]  Special opcode 33: advance Address by 4 to 0x33c and Line by 0 to 86
  [0x00000202]  Set column to 2
  [0x00000204]  Special opcode 6: advance Address by 0 to 0x33c and Line by 1 to 87 (view 1)
  [0x00000205]  Set column to 20
  [0x00000207]  Set is_stmt to 0
  [0x00000208]  Copy (view 2)
  [0x00000209]  Set column to 2
  [0x0000020b]  Set is_stmt to 1
  [0x0000020c]  Special opcode 62: advance Address by 8 to 0x344 and Line by 1 to 88
  [0x0000020d]  Set column to 18
  [0x0000020f]  Set is_stmt to 0
  [0x00000210]  Special opcode 33: advance Address by 4 to 0x348 and Line by 0 to 88
  [0x00000211]  Set column to 2
  [0x00000213]  Set is_stmt to 1
  [0x00000214]  Special opcode 62: advance Address by 8 to 0x350 and Line by 1 to 89
  [0x00000215]  Set column to 19
  [0x00000217]  Set is_stmt to 0
  [0x00000218]  Special opcode 33: advance Address by 4 to 0x354 and Line by 0 to 89
  [0x00000219]  Set column to 2
  [0x0000021b]  Set is_stmt to 1
  [0x0000021c]  Special opcode 62: advance Address by 8 to 0x35c and Line by 1 to 90
  [0x0000021d]  Set column to 23
  [0x0000021f]  Set is_stmt to 0
  [0x00000220]  Copy (view 1)
  [0x00000221]  Set column to 41
  [0x00000223]  Special opcode 33: advance Address by 4 to 0x360 and Line by 0 to 90
  [0x00000224]  Set column to 102
  [0x00000226]  Special opcode 33: advance Address by 4 to 0x364 and Line by 0 to 90
  [0x00000227]  Set column to 20
  [0x00000229]  Special opcode 33: advance Address by 4 to 0x368 and Line by 0 to 90
  [0x0000022a]  Set column to 2
  [0x0000022c]  Set is_stmt to 1
  [0x0000022d]  Special opcode 34: advance Address by 4 to 0x36c and Line by 1 to 91
  [0x0000022e]  Special opcode 132: advance Address by 18 to 0x37e and Line by 1 to 92
  [0x0000022f]  Special opcode 104: advance Address by 14 to 0x38c and Line by 1 to 93
  [0x00000230]  Special opcode 90: advance Address by 12 to 0x398 and Line by 1 to 94
  [0x00000231]  Set column to 36
  [0x00000233]  Set is_stmt to 0
  [0x00000234]  Special opcode 33: advance Address by 4 to 0x39c and Line by 0 to 94
  [0x00000235]  Set column to 2
  [0x00000237]  Special opcode 33: advance Address by 4 to 0x3a0 and Line by 0 to 94
  [0x00000238]  Extended opcode 4: set Discriminator to 1
  [0x0000023c]  Special opcode 33: advance Address by 4 to 0x3a4 and Line by 0 to 94
  [0x0000023d]  Set is_stmt to 1
  [0x0000023e]  Special opcode 77: advance Address by 10 to 0x3ae and Line by 2 to 96
  [0x0000023f]  Set column to 25
  [0x00000241]  Set is_stmt to 0
  [0x00000242]  Copy (view 1)
  [0x00000243]  Set column to 2
  [0x00000245]  Set is_stmt to 1
  [0x00000246]  Special opcode 48: advance Address by 6 to 0x3b4 and Line by 1 to 97
  [0x00000247]  Special opcode 34: advance Address by 4 to 0x3b8 and Line by 1 to 98
  [0x00000248]  Set column to 24
  [0x0000024a]  Set is_stmt to 0
  [0x0000024b]  Copy (view 1)
  [0x0000024c]  Set column to 28
  [0x0000024e]  Special opcode 19: advance Address by 2 to 0x3ba and Line by 0 to 98
  [0x0000024f]  Set column to 2
  [0x00000251]  Set is_stmt to 1
  [0x00000252]  Special opcode 34: advance Address by 4 to 0x3be and Line by 1 to 99
  [0x00000253]  Special opcode 34: advance Address by 4 to 0x3c2 and Line by 1 to 100
  [0x00000254]  Set column to 22
  [0x00000256]  Set is_stmt to 0
  [0x00000257]  Copy (view 1)
  [0x00000258]  Set column to 2
  [0x0000025a]  Set is_stmt to 1
  [0x0000025b]  Special opcode 34: advance Address by 4 to 0x3c6 and Line by 1 to 101
  [0x0000025c]  Set column to 25
  [0x0000025e]  Set is_stmt to 0
  [0x0000025f]  Copy (view 1)
  [0x00000260]  Set column to 2
  [0x00000262]  Set is_stmt to 1
  [0x00000263]  Special opcode 34: advance Address by 4 to 0x3ca and Line by 1 to 102
  [0x00000264]  Set column to 1
  [0x00000266]  Set is_stmt to 0
  [0x00000267]  Special opcode 34: advance Address by 4 to 0x3ce and Line by 1 to 103
  [0x00000268]  Advance PC by 38 to 0x3f4
  [0x0000026a]  Extended opcode 1: End of Sequence

  [0x0000026d]  Set column to 29
  [0x0000026f]  Extended opcode 2: set Address to 0x3f4
  [0x00000276]  Advance Line by 104 to 105
  [0x00000279]  Copy
  [0x0000027a]  Set column to 2
  [0x0000027c]  Special opcode 20: advance Address by 2 to 0x3f6 and Line by 1 to 106
  [0x0000027d]  Special opcode 118: advance Address by 16 to 0x406 and Line by 1 to 107
  [0x0000027e]  Set column to 1
  [0x00000280]  Set is_stmt to 0
  [0x00000281]  Special opcode 76: advance Address by 10 to 0x410 and Line by 1 to 108
  [0x00000282]  Advance PC by 8 to 0x418
  [0x00000284]  Extended opcode 1: End of Sequence

  [0x00000287]  Set column to 28
  [0x00000289]  Extended opcode 2: set Address to 0x418
  [0x00000290]  Advance Line by 109 to 110
  [0x00000293]  Copy
  [0x00000294]  Set column to 2
  [0x00000296]  Special opcode 20: advance Address by 2 to 0x41a and Line by 1 to 111
  [0x00000297]  Special opcode 118: advance Address by 16 to 0x42a and Line by 1 to 112
  [0x00000298]  Set column to 1
  [0x0000029a]  Set is_stmt to 0
  [0x0000029b]  Special opcode 76: advance Address by 10 to 0x434 and Line by 1 to 113
  [0x0000029c]  Advance PC by 8 to 0x43c
  [0x0000029e]  Extended opcode 1: End of Sequence

  [0x000002a1]  Set column to 26
  [0x000002a3]  Extended opcode 2: set Address to 0x43c
  [0x000002aa]  Advance Line by 114 to 115
  [0x000002ad]  Copy
  [0x000002ae]  Set column to 2
  [0x000002b0]  Special opcode 20: advance Address by 2 to 0x43e and Line by 1 to 116
  [0x000002b1]  Set column to 7
  [0x000002b3]  Set is_stmt to 0
  [0x000002b4]  Copy (view 1)
  [0x000002b5]  Set column to 3
  [0x000002b7]  Set is_stmt to 1
  [0x000002b8]  Special opcode 20: advance Address by 2 to 0x440 and Line by 1 to 117
  [0x000002b9]  Set column to 8
  [0x000002bb]  Special opcode 88: advance Address by 12 to 0x44c and Line by -1 to 116
  [0x000002bc]  Extended opcode 4: set Discriminator to 1
  [0x000002c0]  Set is_stmt to 0
  [0x000002c1]  Special opcode 89: advance Address by 12 to 0x458 and Line by 0 to 116
  [0x000002c2]  Set column to 1
  [0x000002c4]  Special opcode 36: advance Address by 4 to 0x45c and Line by 3 to 119
  [0x000002c5]  Advance PC by 8 to 0x464
  [0x000002c7]  Extended opcode 1: End of Sequence

  [0x000002ca]  Set column to 67
  [0x000002cc]  Extended opcode 2: set Address to 0x464
  [0x000002d3]  Advance Line by 120 to 121
  [0x000002d6]  Copy
  [0x000002d7]  Set column to 2
  [0x000002d9]  Special opcode 6: advance Address by 0 to 0x464 and Line by 1 to 122 (view 1)
  [0x000002da]  Set column to 54
  [0x000002dc]  Set is_stmt to 0
  [0x000002dd]  Copy (view 2)
  [0x000002de]  Extended opcode 4: set Discriminator to 1
  [0x000002e2]  Special opcode 33: advance Address by 4 to 0x468 and Line by 0 to 122
  [0x000002e3]  Set column to 2
  [0x000002e5]  Set is_stmt to 1
  [0x000002e6]  Special opcode 20: advance Address by 2 to 0x46a and Line by 1 to 123
  [0x000002e7]  Set column to 16
  [0x000002e9]  Set is_stmt to 0
  [0x000002ea]  Copy (view 1)
  [0x000002eb]  Set column to 2
  [0x000002ed]  Set is_stmt to 1
  [0x000002ee]  Special opcode 34: advance Address by 4 to 0x46e and Line by 1 to 124
  [0x000002ef]  Set column to 38
  [0x000002f1]  Set is_stmt to 0
  [0x000002f2]  Copy (view 1)
  [0x000002f3]  Set column to 47
  [0x000002f5]  Special opcode 33: advance Address by 4 to 0x472 and Line by 0 to 124
  [0x000002f6]  Set column to 53
  [0x000002f8]  Special opcode 47: advance Address by 6 to 0x478 and Line by 0 to 124
  [0x000002f9]  Special opcode 19: advance Address by 2 to 0x47a and Line by 0 to 124
  [0x000002fa]  Special opcode 33: advance Address by 4 to 0x47e and Line by 0 to 124
  [0x000002fb]  Set column to 1
  [0x000002fd]  Special opcode 62: advance Address by 8 to 0x486 and Line by 1 to 125
  [0x000002fe]  Set column to 54
  [0x00000300]  Extended opcode 4: set Discriminator to 2
  [0x00000304]  Special opcode 72: advance Address by 10 to 0x490 and Line by -3 to 122
  [0x00000305]  Extended opcode 4: set Discriminator to 2
  [0x00000309]  Special opcode 19: advance Address by 2 to 0x492 and Line by 0 to 122
  [0x0000030a]  Set column to 47
  [0x0000030c]  Special opcode 21: advance Address by 2 to 0x494 and Line by 2 to 124
  [0x0000030d]  Advance PC by 8 to 0x49c
  [0x0000030f]  Extended opcode 1: End of Sequence

  [0x00000312]  Set column to 25
  [0x00000314]  Extended opcode 2: set Address to 0x49c
  [0x0000031b]  Advance Line by 126 to 127
  [0x0000031e]  Copy
  [0x0000031f]  Set column to 2
  [0x00000321]  Special opcode 20: advance Address by 2 to 0x49e and Line by 1 to 128
  [0x00000322]  Set column to 6
  [0x00000324]  Copy (view 1)
  [0x00000325]  Set column to 10
  [0x00000327]  Set is_stmt to 0
  [0x00000328]  Copy (view 2)
  [0x00000329]  Set column to 2
  [0x0000032b]  Special opcode 19: advance Address by 2 to 0x4a0 and Line by 0 to 128
  [0x0000032c]  Set column to 3
  [0x0000032e]  Set is_stmt to 1
  [0x0000032f]  Special opcode 20: advance Address by 2 to 0x4a2 and Line by 1 to 129
  [0x00000330]  Set column to 46
  [0x00000332]  Set is_stmt to 0
  [0x00000333]  Copy (view 1)
  [0x00000334]  Set column to 3
  [0x00000336]  Special opcode 33: advance Address by 4 to 0x4a6 and Line by 0 to 129
  [0x00000337]  Set column to 27
  [0x00000339]  Extended opcode 4: set Discriminator to 3
  [0x0000033d]  Set is_stmt to 1
  [0x0000033e]  Special opcode 88: advance Address by 12 to 0x4b2 and Line by -1 to 128
  [0x0000033f]  Set column to 19
  [0x00000341]  Extended opcode 4: set Discriminator to 1
  [0x00000345]  Special opcode 19: advance Address by 2 to 0x4b4 and Line by 0 to 128
  [0x00000346]  Set column to 1
  [0x00000348]  Set is_stmt to 0
  [0x00000349]  Special opcode 50: advance Address by 6 to 0x4ba and Line by 3 to 131
  [0x0000034a]  Special opcode 19: advance Address by 2 to 0x4bc and Line by 0 to 131
  [0x0000034b]  Advance PC by 8 to 0x4c4
  [0x0000034d]  Extended opcode 1: End of Sequence

  [0x00000350]  Set column to 28
  [0x00000352]  Extended opcode 2: set Address to 0x4c4
  [0x00000359]  Advance Line by 132 to 133
  [0x0000035c]  Copy
  [0x0000035d]  Set column to 2
  [0x0000035f]  Special opcode 20: advance Address by 2 to 0x4c6 and Line by 1 to 134
  [0x00000360]  Special opcode 6: advance Address by 0 to 0x4c6 and Line by 1 to 135 (view 1)
  [0x00000361]  Special opcode 6: advance Address by 0 to 0x4c6 and Line by 1 to 136 (view 2)
  [0x00000362]  Special opcode 6: advance Address by 0 to 0x4c6 and Line by 1 to 137 (view 3)
  [0x00000363]  Special opcode 11: advance Address by 0 to 0x4c6 and Line by 6 to 143 (view 4)
  [0x00000364]  Set column to 7
  [0x00000366]  Set is_stmt to 0
  [0x00000367]  Copy (view 5)
  [0x00000368]  Set column to 5
  [0x0000036a]  Set is_stmt to 1
  [0x0000036b]  Special opcode 22: advance Address by 2 to 0x4c8 and Line by 3 to 146
  [0x0000036c]  Set column to 16
  [0x0000036e]  Set is_stmt to 0
  [0x0000036f]  Copy (view 1)
  [0x00000370]  Set column to 10
  [0x00000372]  Extended opcode 4: set Discriminator to 1
  [0x00000376]  Special opcode 89: advance Address by 12 to 0x4d4 and Line by 0 to 146
  [0x00000377]  Set column to 5
  [0x00000379]  Set is_stmt to 1
  [0x0000037a]  Special opcode 20: advance Address by 2 to 0x4d6 and Line by 1 to 147
  [0x0000037b]  Set column to 7
  [0x0000037d]  Set is_stmt to 0
  [0x0000037e]  Copy (view 1)
  [0x0000037f]  Set column to 20
  [0x00000381]  Extended opcode 4: set Discriminator to 1
  [0x00000385]  Special opcode 33: advance Address by 4 to 0x4da and Line by 0 to 147
  [0x00000386]  Set column to 5
  [0x00000388]  Set is_stmt to 1
  [0x00000389]  Special opcode 48: advance Address by 6 to 0x4e0 and Line by 1 to 148
  [0x0000038a]  Set column to 16
  [0x0000038c]  Set is_stmt to 0
  [0x0000038d]  Copy (view 1)
  [0x0000038e]  Set column to 5
  [0x00000390]  Set is_stmt to 1
  [0x00000391]  Special opcode 48: advance Address by 6 to 0x4e6 and Line by 1 to 149
  [0x00000392]  Set column to 18
  [0x00000394]  Set is_stmt to 0
  [0x00000395]  Copy (view 1)
  [0x00000396]  Set column to 5
  [0x00000398]  Set is_stmt to 1
  [0x00000399]  Special opcode 34: advance Address by 4 to 0x4ea and Line by 1 to 150
  [0x0000039a]  Set column to 30
  [0x0000039c]  Set is_stmt to 0
  [0x0000039d]  Copy (view 1)
  [0x0000039e]  Set column to 5
  [0x000003a0]  Set is_stmt to 1
  [0x000003a1]  Special opcode 48: advance Address by 6 to 0x4f0 and Line by 1 to 151
  [0x000003a2]  Set is_stmt to 0
  [0x000003a3]  Special opcode 19: advance Address by 2 to 0x4f2 and Line by 0 to 151
  [0x000003a4]  Set column to 6
  [0x000003a6]  Set is_stmt to 1
  [0x000003a7]  Special opcode 34: advance Address by 4 to 0x4f6 and Line by 1 to 152
  [0x000003a8]  Set column to 5
  [0x000003aa]  Special opcode 22: advance Address by 2 to 0x4f8 and Line by 3 to 155
  [0x000003ab]  Set column to 45
  [0x000003ad]  Set is_stmt to 0
  [0x000003ae]  Copy (view 1)
  [0x000003af]  Set column to 39
  [0x000003b1]  Extended opcode 4: set Discriminator to 1
  [0x000003b5]  Special opcode 89: advance Address by 12 to 0x504 and Line by 0 to 155
  [0x000003b6]  Set column to 43
  [0x000003b8]  Extended opcode 4: set Discriminator to 1
  [0x000003bc]  Special opcode 75: advance Address by 10 to 0x50e and Line by 0 to 155
  [0x000003bd]  Set column to 5
  [0x000003bf]  Set is_stmt to 1
  [0x000003c0]  Special opcode 36: advance Address by 4 to 0x512 and Line by 3 to 158
  [0x000003c1]  Set column to 7
  [0x000003c3]  Set is_stmt to 0
  [0x000003c4]  Copy (view 1)
  [0x000003c5]  Set column to 5
  [0x000003c7]  Set is_stmt to 1
  [0x000003c8]  Special opcode 50: advance Address by 6 to 0x518 and Line by 3 to 161
  [0x000003c9]  Set column to 30
  [0x000003cb]  Set is_stmt to 0
  [0x000003cc]  Copy (view 1)
  [0x000003cd]  Set column to 7
  [0x000003cf]  Special opcode 19: advance Address by 2 to 0x51a and Line by 0 to 161
  [0x000003d0]  Set column to 6
  [0x000003d2]  Set is_stmt to 1
  [0x000003d3]  Special opcode 62: advance Address by 8 to 0x522 and Line by 1 to 162
  [0x000003d4]  Special opcode 48: advance Address by 6 to 0x528 and Line by 1 to 163
  [0x000003d5]  Special opcode 34: advance Address by 4 to 0x52c and Line by 1 to 164
  [0x000003d6]  Special opcode 34: advance Address by 4 to 0x530 and Line by 1 to 165
  [0x000003d7]  Special opcode 118: advance Address by 16 to 0x540 and Line by 1 to 166
  [0x000003d8]  Special opcode 34: advance Address by 4 to 0x544 and Line by 1 to 167
  [0x000003d9]  Special opcode 34: advance Address by 4 to 0x548 and Line by 1 to 168
  [0x000003da]  Set column to 17
  [0x000003dc]  Set is_stmt to 0
  [0x000003dd]  Copy (view 1)
  [0x000003de]  Set column to 6
  [0x000003e0]  Set is_stmt to 1
  [0x000003e1]  Special opcode 48: advance Address by 6 to 0x54e and Line by 1 to 169
  [0x000003e2]  Special opcode 21: advance Address by 2 to 0x550 and Line by 2 to 171
  [0x000003e3]  Set column to 5
  [0x000003e5]  Special opcode 50: advance Address by 6 to 0x556 and Line by 3 to 174
  [0x000003e6]  Set column to 34
  [0x000003e8]  Set is_stmt to 0
  [0x000003e9]  Copy (view 1)
  [0x000003ea]  Set column to 7
  [0x000003ec]  Set is_stmt to 1
  [0x000003ed]  Special opcode 91: advance Address by 12 to 0x562 and Line by 2 to 176
  [0x000003ee]  Set column to 18
  [0x000003f0]  Set is_stmt to 0
  [0x000003f1]  Copy (view 1)
  [0x000003f2]  Set column to 7
  [0x000003f4]  Set is_stmt to 1
  [0x000003f5]  Special opcode 48: advance Address by 6 to 0x568 and Line by 1 to 177
  [0x000003f6]  Set column to 20
  [0x000003f8]  Set is_stmt to 0
  [0x000003f9]  Copy (view 1)
  [0x000003fa]  Set column to 7
  [0x000003fc]  Set is_stmt to 1
  [0x000003fd]  Special opcode 48: advance Address by 6 to 0x56e and Line by 1 to 178
  [0x000003fe]  Set column to 6
  [0x00000400]  Special opcode 48: advance Address by 6 to 0x574 and Line by 1 to 179
  [0x00000401]  Set column to 7
  [0x00000403]  Special opcode 22: advance Address by 2 to 0x576 and Line by 3 to 182
  [0x00000404]  Set column to 18
  [0x00000406]  Set is_stmt to 0
  [0x00000407]  Copy (view 1)
  [0x00000408]  Set column to 6
  [0x0000040a]  Set is_stmt to 1
  [0x0000040b]  Special opcode 48: advance Address by 6 to 0x57c and Line by 1 to 183
  [0x0000040c]  Set column to 7
  [0x0000040e]  Special opcode 22: advance Address by 2 to 0x57e and Line by 3 to 186
  [0x0000040f]  Special opcode 48: advance Address by 6 to 0x584 and Line by 1 to 187
  [0x00000410]  Set column to 18
  [0x00000412]  Set is_stmt to 0
  [0x00000413]  Copy (view 1)
  [0x00000414]  Set column to 6
  [0x00000416]  Set is_stmt to 1
  [0x00000417]  Special opcode 48: advance Address by 6 to 0x58a and Line by 1 to 188
  [0x00000418]  Set column to 5
  [0x0000041a]  Special opcode 24: advance Address by 2 to 0x58c and Line by 5 to 193
  [0x0000041b]  Set column to 8
  [0x0000041d]  Set is_stmt to 0
  [0x0000041e]  Copy (view 1)
  [0x0000041f]  Set column to 7
  [0x00000421]  Extended opcode 4: set Discriminator to 1
  [0x00000425]  Special opcode 89: advance Address by 12 to 0x598 and Line by 0 to 193
  [0x00000426]  Set column to 5
  [0x00000428]  Set is_stmt to 1
  [0x00000429]  Special opcode 48: advance Address by 6 to 0x59e and Line by 1 to 194
  [0x0000042a]  Set column to 16
  [0x0000042c]  Set is_stmt to 0
  [0x0000042d]  Copy (view 1)
  [0x0000042e]  Set column to 5
  [0x00000430]  Set is_stmt to 1
  [0x00000431]  Special opcode 48: advance Address by 6 to 0x5a4 and Line by 1 to 195
  [0x00000432]  Set column to 18
  [0x00000434]  Set is_stmt to 0
  [0x00000435]  Copy (view 1)
  [0x00000436]  Set column to 5
  [0x00000438]  Set is_stmt to 1
  [0x00000439]  Special opcode 48: advance Address by 6 to 0x5aa and Line by 1 to 196
  [0x0000043a]  Set column to 27
  [0x0000043c]  Set is_stmt to 0
  [0x0000043d]  Copy (view 1)
  [0x0000043e]  Set column to 6
  [0x00000440]  Set is_stmt to 1
  [0x00000441]  Special opcode 48: advance Address by 6 to 0x5b0 and Line by 1 to 197
  [0x00000442]  Set column to 5
  [0x00000444]  Special opcode 22: advance Address by 2 to 0x5b2 and Line by 3 to 200
  [0x00000445]  Set column to 42
  [0x00000447]  Set is_stmt to 0
  [0x00000448]  Copy (view 1)
  [0x00000449]  Set column to 36
  [0x0000044b]  Extended opcode 4: set Discriminator to 1
  [0x0000044f]  Special opcode 89: advance Address by 12 to 0x5be and Line by 0 to 200
  [0x00000450]  Set column to 40
  [0x00000452]  Extended opcode 4: set Discriminator to 1
  [0x00000456]  Special opcode 75: advance Address by 10 to 0x5c8 and Line by 0 to 200
  [0x00000457]  Set column to 5
  [0x00000459]  Set is_stmt to 1
  [0x0000045a]  Special opcode 36: advance Address by 4 to 0x5cc and Line by 3 to 203
  [0x0000045b]  Set column to 7
  [0x0000045d]  Set is_stmt to 0
  [0x0000045e]  Copy (view 1)
  [0x0000045f]  Set column to 5
  [0x00000461]  Set is_stmt to 1
  [0x00000462]  Special opcode 34: advance Address by 4 to 0x5d0 and Line by 1 to 204
  [0x00000463]  Special opcode 48: advance Address by 6 to 0x5d6 and Line by 1 to 205
  [0x00000464]  Set column to 27
  [0x00000466]  Set is_stmt to 0
  [0x00000467]  Copy (view 1)
  [0x00000468]  Set column to 7
  [0x0000046a]  Special opcode 33: advance Address by 4 to 0x5da and Line by 0 to 205
  [0x0000046b]  Set column to 5
  [0x0000046d]  Set is_stmt to 1
  [0x0000046e]  Special opcode 69: advance Address by 8 to 0x5e2 and Line by 8 to 213
  [0x0000046f]  Set column to 27
  [0x00000471]  Set is_stmt to 0
  [0x00000472]  Copy (view 1)
  [0x00000473]  Set column to 7
  [0x00000475]  Special opcode 33: advance Address by 4 to 0x5e6 and Line by 0 to 213
  [0x00000476]  Set column to 6
  [0x00000478]  Set is_stmt to 1
  [0x00000479]  Advance Line by 13 to 226
  [0x0000047b]  Special opcode 33: advance Address by 4 to 0x5ea and Line by 0 to 226
  [0x0000047c]  Set column to 17
  [0x0000047e]  Set is_stmt to 0
  [0x0000047f]  Copy (view 1)
  [0x00000480]  Set column to 6
  [0x00000482]  Set is_stmt to 1
  [0x00000483]  Special opcode 48: advance Address by 6 to 0x5f0 and Line by 1 to 227
  [0x00000484]  Set column to 19
  [0x00000486]  Set is_stmt to 0
  [0x00000487]  Copy (view 1)
  [0x00000488]  Set column to 6
  [0x0000048a]  Set is_stmt to 1
  [0x0000048b]  Advance Line by -21 to 206
  [0x0000048d]  Special opcode 61: advance Address by 8 to 0x5f8 and Line by 0 to 206
  [0x0000048e]  Special opcode 48: advance Address by 6 to 0x5fe and Line by 1 to 207
  [0x0000048f]  Special opcode 34: advance Address by 4 to 0x602 and Line by 1 to 208
  [0x00000490]  Special opcode 34: advance Address by 4 to 0x606 and Line by 1 to 209
  [0x00000491]  Set column to 17
  [0x00000493]  Set is_stmt to 0
  [0x00000494]  Copy (view 1)
  [0x00000495]  Set column to 6
  [0x00000497]  Set is_stmt to 1
  [0x00000498]  Special opcode 48: advance Address by 6 to 0x60c and Line by 1 to 210
  [0x00000499]  Set column to 18
  [0x0000049b]  Set is_stmt to 0
  [0x0000049c]  Copy (view 1)
  [0x0000049d]  Set column to 6
  [0x0000049f]  Set is_stmt to 1
  [0x000004a0]  Special opcode 34: advance Address by 4 to 0x610 and Line by 1 to 211
  [0x000004a1]  Set column to 1
  [0x000004a3]  Set is_stmt to 0
  [0x000004a4]  Advance Line by 55 to 266
  [0x000004a6]  Copy (view 1)
  [0x000004a7]  Set column to 6
  [0x000004a9]  Set is_stmt to 1
  [0x000004aa]  Advance Line by -51 to 215
  [0x000004ac]  Special opcode 19: advance Address by 2 to 0x612 and Line by 0 to 215
  [0x000004ad]  Special opcode 48: advance Address by 6 to 0x618 and Line by 1 to 216
  [0x000004ae]  Set column to 27
  [0x000004b0]  Extended opcode 4: set Discriminator to 1
  [0x000004b4]  Special opcode 33: advance Address by 4 to 0x61c and Line by 0 to 216
  [0x000004b5]  Set column to 6
  [0x000004b7]  Special opcode 62: advance Address by 8 to 0x624 and Line by 1 to 217
  [0x000004b8]  Set column to 16
  [0x000004ba]  Set is_stmt to 0
  [0x000004bb]  Copy (view 1)
  [0x000004bc]  Set column to 6
  [0x000004be]  Set is_stmt to 1
  [0x000004bf]  Special opcode 34: advance Address by 4 to 0x628 and Line by 1 to 218
  [0x000004c0]  Set column to 26
  [0x000004c2]  Set is_stmt to 0
  [0x000004c3]  Copy (view 1)
  [0x000004c4]  Set column to 6
  [0x000004c6]  Set is_stmt to 1
  [0x000004c7]  Special opcode 48: advance Address by 6 to 0x62e and Line by 1 to 219
  [0x000004c8]  Set column to 29
  [0x000004ca]  Set is_stmt to 0
  [0x000004cb]  Copy (view 1)
  [0x000004cc]  Set column to 6
  [0x000004ce]  Set is_stmt to 1
  [0x000004cf]  Special opcode 20: advance Address by 2 to 0x630 and Line by 1 to 220
  [0x000004d0]  Set column to 19
  [0x000004d2]  Set is_stmt to 0
  [0x000004d3]  Copy (view 1)
  [0x000004d4]  Set column to 6
  [0x000004d6]  Set is_stmt to 1
  [0x000004d7]  Special opcode 48: advance Address by 6 to 0x636 and Line by 1 to 221
  [0x000004d8]  Set column to 23
  [0x000004da]  Extended opcode 4: set Discriminator to 1
  [0x000004de]  Special opcode 33: advance Address by 4 to 0x63a and Line by 0 to 221
  [0x000004df]  Set column to 6
  [0x000004e1]  Special opcode 48: advance Address by 6 to 0x640 and Line by 1 to 222
  [0x000004e2]  Set column to 17
  [0x000004e4]  Set is_stmt to 0
  [0x000004e5]  Copy (view 1)
  [0x000004e6]  Set column to 6
  [0x000004e8]  Set is_stmt to 1
  [0x000004e9]  Special opcode 48: advance Address by 6 to 0x646 and Line by 1 to 223
  [0x000004ea]  Set column to 5
  [0x000004ec]  Advance Line by 9 to 232
  [0x000004ee]  Special opcode 47: advance Address by 6 to 0x64c and Line by 0 to 232
  [0x000004ef]  Special opcode 6: advance Address by 0 to 0x64c and Line by 1 to 233 (view 1)
  [0x000004f0]  Set column to 25
  [0x000004f2]  Set is_stmt to 0
  [0x000004f3]  Copy (view 2)
  [0x000004f4]  Set column to 7
  [0x000004f6]  Set is_stmt to 1
  [0x000004f7]  Special opcode 109: advance Address by 14 to 0x65a and Line by 6 to 239
  [0x000004f8]  Set column to 13
  [0x000004fa]  Set is_stmt to 0
  [0x000004fb]  Copy (view 1)
  [0x000004fc]  Set column to 11
  [0x000004fe]  Extended opcode 4: set Discriminator to 1
  [0x00000502]  Special opcode 89: advance Address by 12 to 0x666 and Line by 0 to 239
  [0x00000503]  Set column to 7
  [0x00000505]  Set is_stmt to 1
  [0x00000506]  Special opcode 34: advance Address by 4 to 0x66a and Line by 1 to 240
  [0x00000507]  Set column to 28
  [0x00000509]  Set is_stmt to 0
  [0x0000050a]  Copy (view 1)
  [0x0000050b]  Set column to 34
  [0x0000050d]  Special opcode 19: advance Address by 2 to 0x66c and Line by 0 to 240
  [0x0000050e]  Set column to 41
  [0x00000510]  Special opcode 61: advance Address by 8 to 0x674 and Line by 0 to 240
  [0x00000511]  Set column to 7
  [0x00000513]  Set is_stmt to 1
  [0x00000514]  Special opcode 20: advance Address by 2 to 0x676 and Line by 1 to 241
  [0x00000515]  Set column to 48
  [0x00000517]  Set is_stmt to 0
  [0x00000518]  Copy (view 1)
  [0x00000519]  Set column to 19
  [0x0000051b]  Special opcode 19: advance Address by 2 to 0x678 and Line by 0 to 241
  [0x0000051c]  Set column to 7
  [0x0000051e]  Set is_stmt to 1
  [0x0000051f]  Special opcode 119: advance Address by 16 to 0x688 and Line by 2 to 243
  [0x00000520]  Set column to 33
  [0x00000522]  Set is_stmt to 0
  [0x00000523]  Copy (view 1)
  [0x00000524]  Set column to 10
  [0x00000526]  Special opcode 61: advance Address by 8 to 0x690 and Line by 0 to 243
  [0x00000527]  Set column to 8
  [0x00000529]  Set is_stmt to 1
  [0x0000052a]  Special opcode 20: advance Address by 2 to 0x692 and Line by 1 to 244
  [0x0000052b]  Set column to 71
  [0x0000052d]  Set is_stmt to 0
  [0x0000052e]  Copy (view 1)
  [0x0000052f]  Set column to 78
  [0x00000531]  Special opcode 19: advance Address by 2 to 0x694 and Line by 0 to 244
  [0x00000532]  Set column to 38
  [0x00000534]  Special opcode 19: advance Address by 2 to 0x696 and Line by 0 to 244
  [0x00000535]  Set column to 7
  [0x00000537]  Set is_stmt to 1
  [0x00000538]  Advance Line by -9 to 235
  [0x0000053a]  Special opcode 47: advance Address by 6 to 0x69c and Line by 0 to 235
  [0x0000053b]  Set column to 13
  [0x0000053d]  Set is_stmt to 0
  [0x0000053e]  Copy (view 1)
  [0x0000053f]  Set column to 11
  [0x00000541]  Extended opcode 4: set Discriminator to 1
  [0x00000545]  Special opcode 89: advance Address by 12 to 0x6a8 and Line by 0 to 235
  [0x00000546]  Set column to 6
  [0x00000548]  Set is_stmt to 1
  [0x00000549]  Special opcode 34: advance Address by 4 to 0x6ac and Line by 1 to 236
  [0x0000054a]  Set column to 8
  [0x0000054c]  Advance Line by 10 to 246
  [0x0000054e]  Special opcode 19: advance Address by 2 to 0x6ae and Line by 0 to 246
  [0x0000054f]  Set column to 38
  [0x00000551]  Set is_stmt to 0
  [0x00000552]  Copy (view 1)
  [0x00000553]  Special opcode 47: advance Address by 6 to 0x6b4 and Line by 0 to 246
  [0x00000554]  Set column to 5
  [0x00000556]  Set is_stmt to 1
  [0x00000557]  Advance Line by 11 to 257
  [0x00000559]  Copy (view 1)
  [0x0000055a]  Set column to 16
  [0x0000055c]  Set is_stmt to 0
  [0x0000055d]  Copy (view 2)
  [0x0000055e]  Set column to 4
  [0x00000560]  Set is_stmt to 1
  [0x00000561]  Special opcode 48: advance Address by 6 to 0x6ba and Line by 1 to 258
  [0x00000562]  Set column to 8
  [0x00000564]  Advance Line by -115 to 143
  [0x00000567]  Copy (view 1)
  [0x00000568]  Extended opcode 4: set Discriminator to 1
  [0x0000056c]  Set is_stmt to 0
  [0x0000056d]  Special opcode 89: advance Address by 12 to 0x6c6 and Line by 0 to 143
  [0x0000056e]  Set column to 3
  [0x00000570]  Set is_stmt to 1
  [0x00000571]  Special opcode 34: advance Address by 4 to 0x6ca and Line by 1 to 144
  [0x00000572]  Set column to 5
  [0x00000574]  Advance Line by 117 to 261
  [0x00000577]  Advance PC by constant 34 to 0x6ec
  [0x00000578]  Special opcode 33: advance Address by 4 to 0x6f0 and Line by 0 to 261
  [0x00000579]  Special opcode 48: advance Address by 6 to 0x6f6 and Line by 1 to 262
  [0x0000057a]  Set column to 16
  [0x0000057c]  Set is_stmt to 0
  [0x0000057d]  Copy (view 1)
  [0x0000057e]  Set column to 4
  [0x00000580]  Set is_stmt to 1
  [0x00000581]  Special opcode 48: advance Address by 6 to 0x6fc and Line by 1 to 263
  [0x00000582]  Advance PC by 80 to 0x74c
  [0x00000584]  Extended opcode 1: End of Sequence


  Offset:                      0x587
  Length:                      210
  DWARF Version:               3
  Prologue Length:             159
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x5a2):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x5e9):
  Entry	Dir	Time	Size	Name
  1	1	0	0	main.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x00000630]  Set column to 17
  [0x00000632]  Extended opcode 2: set Address to 0x74c
  [0x00000639]  Advance Line by 19 to 20
  [0x0000063b]  Copy
  [0x0000063c]  Set column to 2
  [0x0000063e]  Special opcode 20: advance Address by 2 to 0x74e and Line by 1 to 21
  [0x0000063f]  Special opcode 91: advance Address by 12 to 0x75a and Line by 2 to 23
  [0x00000640]  Special opcode 34: advance Address by 4 to 0x75e and Line by 1 to 24
  [0x00000641]  Special opcode 48: advance Address by 6 to 0x764 and Line by 1 to 25
  [0x00000642]  Special opcode 34: advance Address by 4 to 0x768 and Line by 1 to 26
  [0x00000643]  Special opcode 48: advance Address by 6 to 0x76e and Line by 1 to 27
  [0x00000644]  Special opcode 34: advance Address by 4 to 0x772 and Line by 1 to 28
  [0x00000645]  Special opcode 48: advance Address by 6 to 0x778 and Line by 1 to 29
  [0x00000646]  Special opcode 34: advance Address by 4 to 0x77c and Line by 1 to 30
  [0x00000647]  Special opcode 20: advance Address by 2 to 0x77e and Line by 1 to 31
  [0x00000648]  Special opcode 79: advance Address by 10 to 0x788 and Line by 4 to 35
  [0x00000649]  Special opcode 48: advance Address by 6 to 0x78e and Line by 1 to 36
  [0x0000064a]  Special opcode 34: advance Address by 4 to 0x792 and Line by 1 to 37
  [0x0000064b]  Special opcode 90: advance Address by 12 to 0x79e and Line by 1 to 38
  [0x0000064c]  Special opcode 34: advance Address by 4 to 0x7a2 and Line by 1 to 39
  [0x0000064d]  Special opcode 34: advance Address by 4 to 0x7a6 and Line by 1 to 40
  [0x0000064e]  Set column to 3
  [0x00000650]  Extended opcode 4: set Discriminator to 1
  [0x00000654]  Special opcode 6: advance Address by 0 to 0x7a6 and Line by 1 to 41 (view 1)
  [0x00000655]  Set column to 7
  [0x00000657]  Special opcode 32: advance Address by 4 to 0x7aa and Line by -1 to 40
  [0x00000658]  Advance PC by 26 to 0x7c4
  [0x0000065a]  Extended opcode 1: End of Sequence


  Offset:                      0x65d
  Length:                      496
  DWARF Version:               3
  Prologue Length:             146
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x678):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x6bf):
  Entry	Dir	Time	Size	Name
  1	1	0	0	timers.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	timers.h

 Line Number Statements:
  [0x000006f9]  Set column to 35
  [0x000006fb]  Extended opcode 2: set Address to 0
  [0x00000702]  Advance Line by 15 to 16
  [0x00000704]  Copy
  [0x00000705]  Set column to 2
  [0x00000707]  Special opcode 21: advance Address by 2 to 0x2 and Line by 2 to 18
  [0x00000708]  Set column to 21
  [0x0000070a]  Set is_stmt to 0
  [0x0000070b]  Special opcode 47: advance Address by 6 to 0x8 and Line by 0 to 18
  [0x0000070c]  Set column to 2
  [0x0000070e]  Set is_stmt to 1
  [0x0000070f]  Special opcode 63: advance Address by 8 to 0x10 and Line by 2 to 20
  [0x00000710]  Set column to 53
  [0x00000712]  Extended opcode 4: set Discriminator to 1
  [0x00000716]  Copy (view 1)
  [0x00000717]  Set column to 9
  [0x00000719]  Extended opcode 4: set Discriminator to 1
  [0x0000071d]  Copy (view 2)
  [0x0000071e]  Set column to 11
  [0x00000720]  Extended opcode 4: set Discriminator to 1
  [0x00000724]  Set is_stmt to 0
  [0x00000725]  Copy (view 3)
  [0x00000726]  Set column to 9
  [0x00000728]  Extended opcode 4: set Discriminator to 1
  [0x0000072c]  Special opcode 47: advance Address by 6 to 0x16 and Line by 0 to 20
  [0x0000072d]  Set column to 2
  [0x0000072f]  Set is_stmt to 1
  [0x00000730]  Special opcode 49: advance Address by 6 to 0x1c and Line by 2 to 22
  [0x00000731]  Set column to 15
  [0x00000733]  Set is_stmt to 0
  [0x00000734]  Special opcode 33: advance Address by 4 to 0x20 and Line by 0 to 22
  [0x00000735]  Set column to 2
  [0x00000737]  Set is_stmt to 1
  [0x00000738]  Special opcode 48: advance Address by 6 to 0x26 and Line by 1 to 23
  [0x00000739]  Set column to 15
  [0x0000073b]  Set is_stmt to 0
  [0x0000073c]  Special opcode 19: advance Address by 2 to 0x28 and Line by 0 to 23
  [0x0000073d]  Set column to 2
  [0x0000073f]  Set is_stmt to 1
  [0x00000740]  Special opcode 48: advance Address by 6 to 0x2e and Line by 1 to 24
  [0x00000741]  Set column to 15
  [0x00000743]  Set is_stmt to 0
  [0x00000744]  Copy (view 1)
  [0x00000745]  Set column to 2
  [0x00000747]  Set is_stmt to 1
  [0x00000748]  Special opcode 34: advance Address by 4 to 0x32 and Line by 1 to 25
  [0x00000749]  Set column to 16
  [0x0000074b]  Set is_stmt to 0
  [0x0000074c]  Special opcode 19: advance Address by 2 to 0x34 and Line by 0 to 25
  [0x0000074d]  Set column to 2
  [0x0000074f]  Set is_stmt to 1
  [0x00000750]  Special opcode 48: advance Address by 6 to 0x3a and Line by 1 to 26
  [0x00000751]  Set column to 19
  [0x00000753]  Set is_stmt to 0
  [0x00000754]  Copy (view 1)
  [0x00000755]  Extended opcode 4: set Discriminator to 1
  [0x00000759]  Special opcode 75: advance Address by 10 to 0x44 and Line by 0 to 26
  [0x0000075a]  Set column to 31
  [0x0000075c]  Extended opcode 4: set Discriminator to 1
  [0x00000760]  Special opcode 19: advance Address by 2 to 0x46 and Line by 0 to 26
  [0x00000761]  Set column to 17
  [0x00000763]  Extended opcode 4: set Discriminator to 1
  [0x00000767]  Special opcode 19: advance Address by 2 to 0x48 and Line by 0 to 26
  [0x00000768]  Set column to 2
  [0x0000076a]  Set is_stmt to 1
  [0x0000076b]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 27
  [0x0000076c]  Set column to 16
  [0x0000076e]  Set is_stmt to 0
  [0x0000076f]  Copy (view 1)
  [0x00000770]  Set column to 2
  [0x00000772]  Set is_stmt to 1
  [0x00000773]  Special opcode 20: advance Address by 2 to 0x4c and Line by 1 to 28
  [0x00000774]  Set column to 15
  [0x00000776]  Set is_stmt to 0
  [0x00000777]  Special opcode 19: advance Address by 2 to 0x4e and Line by 0 to 28
  [0x00000778]  Set column to 2
  [0x0000077a]  Set is_stmt to 1
  [0x0000077b]  Special opcode 48: advance Address by 6 to 0x54 and Line by 1 to 29
  [0x0000077c]  Set column to 15
  [0x0000077e]  Set is_stmt to 0
  [0x0000077f]  Special opcode 19: advance Address by 2 to 0x56 and Line by 0 to 29
  [0x00000780]  Set column to 2
  [0x00000782]  Set is_stmt to 1
  [0x00000783]  Special opcode 48: advance Address by 6 to 0x5c and Line by 1 to 30
  [0x00000784]  Set column to 13
  [0x00000786]  Set is_stmt to 0
  [0x00000787]  Copy (view 1)
  [0x00000788]  Set column to 2
  [0x0000078a]  Set is_stmt to 1
  [0x0000078b]  Special opcode 90: advance Address by 12 to 0x68 and Line by 1 to 31
  [0x0000078c]  Set column to 15
  [0x0000078e]  Set is_stmt to 0
  [0x0000078f]  Special opcode 19: advance Address by 2 to 0x6a and Line by 0 to 31
  [0x00000790]  Set column to 1
  [0x00000792]  Special opcode 48: advance Address by 6 to 0x70 and Line by 1 to 32
  [0x00000793]  Advance PC by 12 to 0x7c
  [0x00000795]  Extended opcode 1: End of Sequence

  [0x00000798]  Set column to 27
  [0x0000079a]  Extended opcode 2: set Address to 0x7c4
  [0x000007a1]  Advance Line by 33 to 34
  [0x000007a3]  Copy
  [0x000007a4]  Set column to 2
  [0x000007a6]  Special opcode 20: advance Address by 2 to 0x7c6 and Line by 1 to 35
  [0x000007a7]  Special opcode 6: advance Address by 0 to 0x7c6 and Line by 1 to 36 (view 1)
  [0x000007a8]  Special opcode 7: advance Address by 0 to 0x7c6 and Line by 2 to 38 (view 2)
  [0x000007a9]  Set column to 15
  [0x000007ab]  Set is_stmt to 0
  [0x000007ac]  Special opcode 33: advance Address by 4 to 0x7ca and Line by 0 to 38
  [0x000007ad]  Set column to 2
  [0x000007af]  Set is_stmt to 1
  [0x000007b0]  Special opcode 48: advance Address by 6 to 0x7d0 and Line by 1 to 39
  [0x000007b1]  Set column to 15
  [0x000007b3]  Set is_stmt to 0
  [0x000007b4]  Special opcode 19: advance Address by 2 to 0x7d2 and Line by 0 to 39
  [0x000007b5]  Set column to 2
  [0x000007b7]  Set is_stmt to 1
  [0x000007b8]  Special opcode 49: advance Address by 6 to 0x7d8 and Line by 2 to 41
  [0x000007b9]  Set column to 23
  [0x000007bb]  Set is_stmt to 0
  [0x000007bc]  Copy (view 1)
  [0x000007bd]  Set column to 2
  [0x000007bf]  Set is_stmt to 1
  [0x000007c0]  Special opcode 120: advance Address by 16 to 0x7e8 and Line by 3 to 44
  [0x000007c1]  Set column to 5
  [0x000007c3]  Set is_stmt to 0
  [0x000007c4]  Copy (view 1)
  [0x000007c5]  Set column to 4
  [0x000007c7]  Special opcode 61: advance Address by 8 to 0x7f0 and Line by 0 to 44
  [0x000007c8]  Set column to 2
  [0x000007ca]  Set is_stmt to 1
  [0x000007cb]  Special opcode 52: advance Address by 6 to 0x7f6 and Line by 5 to 49
  [0x000007cc]  Set column to 15
  [0x000007ce]  Set is_stmt to 0
  [0x000007cf]  Special opcode 33: advance Address by 4 to 0x7fa and Line by 0 to 49
  [0x000007d0]  Set column to 1
  [0x000007d2]  Special opcode 48: advance Address by 6 to 0x800 and Line by 1 to 50
  [0x000007d3]  Set column to 3
  [0x000007d5]  Set is_stmt to 1
  [0x000007d6]  Special opcode 42: advance Address by 6 to 0x806 and Line by -5 to 45
  [0x000007d7]  Set column to 17
  [0x000007d9]  Set is_stmt to 0
  [0x000007da]  Copy (view 1)
  [0x000007db]  Set column to 3
  [0x000007dd]  Set is_stmt to 1
  [0x000007de]  Special opcode 62: advance Address by 8 to 0x80e and Line by 1 to 46
  [0x000007df]  Set column to 18
  [0x000007e1]  Set is_stmt to 0
  [0x000007e2]  Copy (view 1)
  [0x000007e3]  Advance PC by 26 to 0x828
  [0x000007e5]  Extended opcode 1: End of Sequence

  [0x000007e8]  Set column to 34
  [0x000007ea]  Extended opcode 2: set Address to 0
  [0x000007f1]  Advance Line by 51 to 52
  [0x000007f3]  Copy
  [0x000007f4]  Set column to 3
  [0x000007f6]  Special opcode 39: advance Address by 4 to 0x4 and Line by 6 to 58
  [0x000007f7]  Set column to 22
  [0x000007f9]  Set is_stmt to 0
  [0x000007fa]  Copy (view 1)
  [0x000007fb]  Set column to 3
  [0x000007fd]  Set is_stmt to 1
  [0x000007fe]  Special opcode 48: advance Address by 6 to 0xa and Line by 1 to 59
  [0x000007ff]  Set column to 16
  [0x00000801]  Set is_stmt to 0
  [0x00000802]  Copy (view 1)
  [0x00000803]  Set column to 31
  [0x00000805]  Extended opcode 4: set Discriminator to 1
  [0x00000809]  Special opcode 75: advance Address by 10 to 0x14 and Line by 0 to 59
  [0x0000080a]  Set column to 14
  [0x0000080c]  Extended opcode 4: set Discriminator to 1
  [0x00000810]  Special opcode 33: advance Address by 4 to 0x18 and Line by 0 to 59
  [0x00000811]  Set column to 11
  [0x00000813]  Set is_stmt to 1
  [0x00000814]  Special opcode 35: advance Address by 4 to 0x1c and Line by 2 to 61
  [0x00000815]  Set column to 2
  [0x00000817]  Advance Line by -8 to 53
  [0x00000819]  Special opcode 61: advance Address by 8 to 0x24 and Line by 0 to 53
  [0x0000081a]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 54 (view 1)
  [0x0000081b]  Special opcode 7: advance Address by 0 to 0x24 and Line by 2 to 56 (view 2)
  [0x0000081c]  Set column to 3
  [0x0000081e]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 57 (view 3)
  [0x0000081f]  Set column to 6
  [0x00000821]  Set is_stmt to 0
  [0x00000822]  Copy (view 4)
  [0x00000823]  Set column to 5
  [0x00000825]  Special opcode 33: advance Address by 4 to 0x28 and Line by 0 to 57
  [0x00000826]  Set column to 28
  [0x00000828]  Extended opcode 4: set Discriminator to 1
  [0x0000082c]  Set is_stmt to 1
  [0x0000082d]  Special opcode 47: advance Address by 6 to 0x2e and Line by 0 to 57
  [0x0000082e]  Set column to 2
  [0x00000830]  Special opcode 53: advance Address by 6 to 0x34 and Line by 6 to 63
  [0x00000831]  Set column to 10
  [0x00000833]  Set is_stmt to 0
  [0x00000834]  Copy (view 1)
  [0x00000835]  Extended opcode 4: set Discriminator to 1
  [0x00000839]  Special opcode 75: advance Address by 10 to 0x3e and Line by 0 to 63
  [0x0000083a]  Set column to 23
  [0x0000083c]  Extended opcode 4: set Discriminator to 1
  [0x00000840]  Special opcode 19: advance Address by 2 to 0x40 and Line by 0 to 63
  [0x00000841]  Set column to 45
  [0x00000843]  Extended opcode 4: set Discriminator to 1
  [0x00000847]  Special opcode 61: advance Address by 8 to 0x48 and Line by 0 to 63
  [0x00000848]  Set column to 1
  [0x0000084a]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 64
  [0x0000084b]  Special opcode 47: advance Address by 6 to 0x50 and Line by 0 to 64
  [0x0000084c]  Advance PC by 8 to 0x58
  [0x0000084e]  Extended opcode 1: End of Sequence


  Offset:                      0x851
  Length:                      1056
  DWARF Version:               3
  Prologue Length:             206
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x86c):
  1	src
  2	/usr/lib/gcc/arm-none-eabi/13.2.0/include
  3	/usr/arm-none-eabi/include/machine
  4	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x8dd):
  Entry	Dir	Time	Size	Name
  1	1	0	0	uart_print.c
  2	2	0	0	stdarg.h
  3	3	0	0	_default_types.h
  4	4	0	0	_stdint.h
  5	0	0	0	<built-in>

 Line Number Statements:
  [0x00000929]  Set column to 30
  [0x0000092b]  Extended opcode 2: set Address to 0x828
  [0x00000932]  Advance Line by 14 to 15
  [0x00000934]  Copy
  [0x00000935]  Set column to 2
  [0x00000937]  Special opcode 20: advance Address by 2 to 0x82a and Line by 1 to 16
  [0x00000938]  Special opcode 90: advance Address by 12 to 0x836 and Line by 1 to 17
  [0x00000939]  Special opcode 62: advance Address by 8 to 0x83e and Line by 1 to 18
  [0x0000093a]  Set column to 57
  [0x0000093c]  Extended opcode 4: set Discriminator to 1
  [0x00000940]  Copy (view 1)
  [0x00000941]  Set column to 8
  [0x00000943]  Extended opcode 4: set Discriminator to 1
  [0x00000947]  Copy (view 2)
  [0x00000948]  Set column to 9
  [0x0000094a]  Extended opcode 4: set Discriminator to 1
  [0x0000094e]  Set is_stmt to 0
  [0x0000094f]  Copy (view 3)
  [0x00000950]  Set column to 8
  [0x00000952]  Extended opcode 4: set Discriminator to 1
  [0x00000956]  Special opcode 103: advance Address by 14 to 0x84c and Line by 0 to 18
  [0x00000957]  Set column to 58
  [0x00000959]  Extended opcode 4: set Discriminator to 2
  [0x0000095d]  Set is_stmt to 1
  [0x0000095e]  Special opcode 33: advance Address by 4 to 0x850 and Line by 0 to 18
  [0x0000095f]  Set column to 2
  [0x00000961]  Special opcode 7: advance Address by 0 to 0x850 and Line by 2 to 20 (view 1)
  [0x00000962]  Special opcode 146: advance Address by 20 to 0x864 and Line by 1 to 21
  [0x00000963]  Special opcode 104: advance Address by 14 to 0x872 and Line by 1 to 22
  [0x00000964]  Set column to 38
  [0x00000966]  Set is_stmt to 0
  [0x00000967]  Special opcode 33: advance Address by 4 to 0x876 and Line by 0 to 22
  [0x00000968]  Set column to 2
  [0x0000096a]  Special opcode 33: advance Address by 4 to 0x87a and Line by 0 to 22
  [0x0000096b]  Extended opcode 4: set Discriminator to 1
  [0x0000096f]  Special opcode 33: advance Address by 4 to 0x87e and Line by 0 to 22
  [0x00000970]  Set column to 1
  [0x00000972]  Special opcode 77: advance Address by 10 to 0x888 and Line by 2 to 24
  [0x00000973]  Advance PC by 16 to 0x898
  [0x00000975]  Extended opcode 1: End of Sequence

  [0x00000978]  Set column to 22
  [0x0000097a]  Extended opcode 2: set Address to 0x898
  [0x00000981]  Advance Line by 25 to 26
  [0x00000983]  Copy
  [0x00000984]  Set is_stmt to 0
  [0x00000985]  Copy (view 1)
  [0x00000986]  Set column to 2
  [0x00000988]  Set is_stmt to 1
  [0x00000989]  Special opcode 34: advance Address by 4 to 0x89c and Line by 1 to 27
  [0x0000098a]  Special opcode 6: advance Address by 0 to 0x89c and Line by 1 to 28 (view 1)
  [0x0000098b]  Set is_stmt to 0
  [0x0000098c]  Special opcode 75: advance Address by 10 to 0x8a6 and Line by 0 to 28
  [0x0000098d]  Set is_stmt to 1
  [0x0000098e]  Special opcode 20: advance Address by 2 to 0x8a8 and Line by 1 to 29
  [0x0000098f]  Set column to 35
  [0x00000991]  Extended opcode 4: set Discriminator to 1
  [0x00000995]  Copy (view 1)
  [0x00000996]  Set column to 8
  [0x00000998]  Extended opcode 4: set Discriminator to 1
  [0x0000099c]  Copy (view 2)
  [0x0000099d]  Set column to 36
  [0x0000099f]  Extended opcode 4: set Discriminator to 2
  [0x000009a3]  Special opcode 117: advance Address by 16 to 0x8b8 and Line by 0 to 29
  [0x000009a4]  Set column to 2
  [0x000009a6]  Special opcode 8: advance Address by 0 to 0x8b8 and Line by 3 to 32 (view 1)
  [0x000009a7]  Set column to 5
  [0x000009a9]  Set is_stmt to 0
  [0x000009aa]  Copy (view 2)
  [0x000009ab]  Set column to 4
  [0x000009ad]  Special opcode 47: advance Address by 6 to 0x8be and Line by 0 to 32
  [0x000009ae]  Set column to 3
  [0x000009b0]  Set is_stmt to 1
  [0x000009b1]  Special opcode 48: advance Address by 6 to 0x8c4 and Line by 1 to 33
  [0x000009b2]  Set column to 23
  [0x000009b4]  Set is_stmt to 0
  [0x000009b5]  Copy (view 1)
  [0x000009b6]  Set column to 3
  [0x000009b8]  Set is_stmt to 1
  [0x000009b9]  Special opcode 34: advance Address by 4 to 0x8c8 and Line by 1 to 34
  [0x000009ba]  Set column to 7
  [0x000009bc]  Copy (view 1)
  [0x000009bd]  Set column to 3
  [0x000009bf]  Set is_stmt to 0
  [0x000009c0]  Copy (view 2)
  [0x000009c1]  Set column to 4
  [0x000009c3]  Set is_stmt to 1
  [0x000009c4]  Special opcode 20: advance Address by 2 to 0x8ca and Line by 1 to 35
  [0x000009c5]  Set column to 28
  [0x000009c7]  Extended opcode 4: set Discriminator to 3
  [0x000009cb]  Special opcode 18: advance Address by 2 to 0x8cc and Line by -1 to 34
  [0x000009cc]  Set column to 20
  [0x000009ce]  Extended opcode 4: set Discriminator to 1
  [0x000009d2]  Special opcode 19: advance Address by 2 to 0x8ce and Line by 0 to 34
  [0x000009d3]  Extended opcode 4: set Discriminator to 1
  [0x000009d7]  Set is_stmt to 0
  [0x000009d8]  Special opcode 33: advance Address by 4 to 0x8d2 and Line by 0 to 34
  [0x000009d9]  Set column to 1
  [0x000009db]  Special opcode 9: advance Address by 0 to 0x8d2 and Line by 4 to 38 (view 1)
  [0x000009dc]  Advance PC by 10 to 0x8dc
  [0x000009de]  Extended opcode 1: End of Sequence

  [0x000009e1]  Set column to 43
  [0x000009e3]  Extended opcode 2: set Address to 0x8dc
  [0x000009ea]  Advance Line by 39 to 40
  [0x000009ec]  Copy
  [0x000009ed]  Set is_stmt to 0
  [0x000009ee]  Copy (view 1)
  [0x000009ef]  Set column to 2
  [0x000009f1]  Set is_stmt to 1
  [0x000009f2]  Special opcode 34: advance Address by 4 to 0x8e0 and Line by 1 to 41
  [0x000009f3]  Set column to 6
  [0x000009f5]  Copy (view 1)
  [0x000009f6]  Set column to 10
  [0x000009f8]  Set is_stmt to 0
  [0x000009f9]  Copy (view 2)
  [0x000009fa]  Set column to 2
  [0x000009fc]  Special opcode 19: advance Address by 2 to 0x8e2 and Line by 0 to 41
  [0x000009fd]  Set column to 3
  [0x000009ff]  Set is_stmt to 1
  [0x00000a00]  Special opcode 20: advance Address by 2 to 0x8e4 and Line by 1 to 42
  [0x00000a01]  Set column to 34
  [0x00000a03]  Extended opcode 4: set Discriminator to 3
  [0x00000a07]  Special opcode 32: advance Address by 4 to 0x8e8 and Line by -1 to 41
  [0x00000a08]  Set column to 24
  [0x00000a0a]  Extended opcode 4: set Discriminator to 1
  [0x00000a0e]  Special opcode 19: advance Address by 2 to 0x8ea and Line by 0 to 41
  [0x00000a0f]  Set column to 20
  [0x00000a11]  Extended opcode 4: set Discriminator to 1
  [0x00000a15]  Set is_stmt to 0
  [0x00000a16]  Copy (view 1)
  [0x00000a17]  Set column to 24
  [0x00000a19]  Extended opcode 4: set Discriminator to 1
  [0x00000a1d]  Special opcode 19: advance Address by 2 to 0x8ec and Line by 0 to 41
  [0x00000a1e]  Set column to 1
  [0x00000a20]  Special opcode 36: advance Address by 4 to 0x8f0 and Line by 3 to 44
  [0x00000a21]  Special opcode 19: advance Address by 2 to 0x8f2 and Line by 0 to 44
  [0x00000a22]  Extended opcode 1: End of Sequence

  [0x00000a25]  Set column to 42
  [0x00000a27]  Extended opcode 2: set Address to 0x8f4
  [0x00000a2e]  Advance Line by 45 to 46
  [0x00000a30]  Copy
  [0x00000a31]  Set is_stmt to 0
  [0x00000a32]  Copy (view 1)
  [0x00000a33]  Set column to 2
  [0x00000a35]  Set is_stmt to 1
  [0x00000a36]  Special opcode 35: advance Address by 4 to 0x8f8 and Line by 2 to 48
  [0x00000a37]  Special opcode 7: advance Address by 0 to 0x8f8 and Line by 2 to 50 (view 1)
  [0x00000a38]  Set column to 6
  [0x00000a3a]  Set is_stmt to 0
  [0x00000a3b]  Copy (view 2)
  [0x00000a3c]  Set column to 2
  [0x00000a3e]  Set is_stmt to 1
  [0x00000a3f]  Special opcode 21: advance Address by 2 to 0x8fa and Line by 2 to 52
  [0x00000a40]  Set column to 3
  [0x00000a42]  Special opcode 6: advance Address by 0 to 0x8fa and Line by 1 to 53 (view 1)
  [0x00000a43]  Set column to 37
  [0x00000a45]  Set is_stmt to 0
  [0x00000a46]  Copy (view 2)
  [0x00000a47]  Set column to 19
  [0x00000a49]  Special opcode 145: advance Address by 20 to 0x90e and Line by 0 to 53
  [0x00000a4a]  Set column to 17
  [0x00000a4c]  Special opcode 19: advance Address by 2 to 0x910 and Line by 0 to 53
  [0x00000a4d]  Special opcode 47: advance Address by 6 to 0x916 and Line by 0 to 53
  [0x00000a4e]  Set column to 3
  [0x00000a50]  Set is_stmt to 1
  [0x00000a51]  Special opcode 34: advance Address by 4 to 0x91a and Line by 1 to 54
  [0x00000a52]  Set column to 7
  [0x00000a54]  Set is_stmt to 0
  [0x00000a55]  Special opcode 19: advance Address by 2 to 0x91c and Line by 0 to 54
  [0x00000a56]  Set column to 15
  [0x00000a58]  Extended opcode 4: set Discriminator to 1
  [0x00000a5c]  Set is_stmt to 1
  [0x00000a5d]  Special opcode 20: advance Address by 2 to 0x91e and Line by 1 to 55
  [0x00000a5e]  Set column to 3
  [0x00000a60]  Special opcode 50: advance Address by 6 to 0x924 and Line by 3 to 58
  [0x00000a61]  Set column to 22
  [0x00000a63]  Set is_stmt to 0
  [0x00000a64]  Copy (view 1)
  [0x00000a65]  Set column to 3
  [0x00000a67]  Special opcode 19: advance Address by 2 to 0x926 and Line by 0 to 58
  [0x00000a68]  Set column to 22
  [0x00000a6a]  Extended opcode 4: set Discriminator to 2
  [0x00000a6e]  Set is_stmt to 1
  [0x00000a6f]  Special opcode 102: advance Address by 14 to 0x934 and Line by -1 to 57
  [0x00000a70]  Set column to 8
  [0x00000a72]  Extended opcode 4: set Discriminator to 1
  [0x00000a76]  Copy (view 1)
  [0x00000a77]  Set column to 1
  [0x00000a79]  Set is_stmt to 0
  [0x00000a7a]  Special opcode 36: advance Address by 4 to 0x938 and Line by 3 to 60
  [0x00000a7b]  Special opcode 33: advance Address by 4 to 0x93c and Line by 0 to 60
  [0x00000a7c]  Advance PC by 4 to 0x940
  [0x00000a7e]  Extended opcode 1: End of Sequence

  [0x00000a81]  Set column to 32
  [0x00000a83]  Extended opcode 2: set Address to 0x940
  [0x00000a8a]  Advance Line by 61 to 62
  [0x00000a8c]  Copy
  [0x00000a8d]  Set is_stmt to 0
  [0x00000a8e]  Copy (view 1)
  [0x00000a8f]  Set column to 2
  [0x00000a91]  Set is_stmt to 1
  [0x00000a92]  Special opcode 21: advance Address by 2 to 0x942 and Line by 2 to 64
  [0x00000a93]  Set column to 5
  [0x00000a95]  Set is_stmt to 0
  [0x00000a96]  Copy (view 1)
  [0x00000a97]  Set column to 2
  [0x00000a99]  Set is_stmt to 1
  [0x00000a9a]  Special opcode 38: advance Address by 4 to 0x946 and Line by 5 to 69
  [0x00000a9b]  Set column to 1
  [0x00000a9d]  Set is_stmt to 0
  [0x00000a9e]  Special opcode 48: advance Address by 6 to 0x94c and Line by 1 to 70
  [0x00000a9f]  Set column to 3
  [0x00000aa1]  Set is_stmt to 1
  [0x00000aa2]  Special opcode 14: advance Address by 2 to 0x94e and Line by -5 to 65
  [0x00000aa3]  Set is_stmt to 0
  [0x00000aa4]  Special opcode 19: advance Address by 2 to 0x950 and Line by 0 to 65
  [0x00000aa5]  Set is_stmt to 1
  [0x00000aa6]  Special opcode 34: advance Address by 4 to 0x954 and Line by 1 to 66
  [0x00000aa7]  Set column to 7
  [0x00000aa9]  Set is_stmt to 0
  [0x00000aaa]  Copy (view 1)
  [0x00000aab]  Special opcode 19: advance Address by 2 to 0x956 and Line by 0 to 66
  [0x00000aac]  Advance PC by 2 to 0x958
  [0x00000aae]  Extended opcode 1: End of Sequence

  [0x00000ab1]  Set column to 32
  [0x00000ab3]  Extended opcode 2: set Address to 0x958
  [0x00000aba]  Advance Line by 71 to 72
  [0x00000abd]  Copy
  [0x00000abe]  Set is_stmt to 0
  [0x00000abf]  Copy (view 1)
  [0x00000ac0]  Set column to 2
  [0x00000ac2]  Set is_stmt to 1
  [0x00000ac3]  Special opcode 63: advance Address by 8 to 0x960 and Line by 2 to 74
  [0x00000ac4]  Set column to 4
  [0x00000ac6]  Set is_stmt to 0
  [0x00000ac7]  Copy (view 1)
  [0x00000ac8]  Set column to 2
  [0x00000aca]  Set is_stmt to 1
  [0x00000acb]  Special opcode 80: advance Address by 10 to 0x96a and Line by 5 to 79
  [0x00000acc]  Set column to 15
  [0x00000ace]  Set is_stmt to 0
  [0x00000acf]  Copy (view 1)
  [0x00000ad0]  Set column to 4
  [0x00000ad2]  Special opcode 89: advance Address by 12 to 0x976 and Line by 0 to 79
  [0x00000ad3]  Set column to 24
  [0x00000ad5]  Extended opcode 4: set Discriminator to 1
  [0x00000ad9]  Special opcode 75: advance Address by 10 to 0x980 and Line by 0 to 79
  [0x00000ada]  Set column to 2
  [0x00000adc]  Set is_stmt to 1
  [0x00000add]  Special opcode 108: advance Address by 14 to 0x98e and Line by 5 to 84
  [0x00000ade]  Set column to 4
  [0x00000ae0]  Set is_stmt to 0
  [0x00000ae1]  Copy (view 1)
  [0x00000ae2]  Set column to 30
  [0x00000ae4]  Extended opcode 4: set Discriminator to 1
  [0x00000ae8]  Special opcode 103: advance Address by 14 to 0x99c and Line by 0 to 84
  [0x00000ae9]  Set column to 25
  [0x00000aeb]  Extended opcode 4: set Discriminator to 1
  [0x00000aef]  Special opcode 61: advance Address by 8 to 0x9a4 and Line by 0 to 84
  [0x00000af0]  Set column to 2
  [0x00000af2]  Set is_stmt to 1
  [0x00000af3]  Special opcode 80: advance Address by 10 to 0x9ae and Line by 5 to 89
  [0x00000af4]  Special opcode 7: advance Address by 0 to 0x9ae and Line by 2 to 91 (view 1)
  [0x00000af5]  Set column to 4
  [0x00000af7]  Set is_stmt to 0
  [0x00000af8]  Copy (view 2)
  [0x00000af9]  Set column to 2
  [0x00000afb]  Set is_stmt to 1
  [0x00000afc]  Special opcode 80: advance Address by 10 to 0x9b8 and Line by 5 to 96
  [0x00000afd]  Set column to 11
  [0x00000aff]  Set is_stmt to 0
  [0x00000b00]  Copy (view 1)
  [0x00000b01]  Set column to 2
  [0x00000b03]  Set is_stmt to 1
  [0x00000b04]  Special opcode 34: advance Address by 4 to 0x9bc and Line by 1 to 97
  [0x00000b05]  Set column to 44
  [0x00000b07]  Set is_stmt to 0
  [0x00000b08]  Copy (view 1)
  [0x00000b09]  Set column to 59
  [0x00000b0b]  Special opcode 61: advance Address by 8 to 0x9c4 and Line by 0 to 97
  [0x00000b0c]  Set column to 11
  [0x00000b0e]  Special opcode 61: advance Address by 8 to 0x9cc and Line by 0 to 97
  [0x00000b0f]  Set column to 2
  [0x00000b11]  Set is_stmt to 1
  [0x00000b12]  Special opcode 63: advance Address by 8 to 0x9d4 and Line by 2 to 99
  [0x00000b13]  Special opcode 7: advance Address by 0 to 0x9d4 and Line by 2 to 101 (view 1)
  [0x00000b14]  Set column to 6
  [0x00000b16]  Copy (view 2)
  [0x00000b17]  Set column to 10
  [0x00000b19]  Set is_stmt to 0
  [0x00000b1a]  Copy (view 3)
  [0x00000b1b]  Set column to 6
  [0x00000b1d]  Special opcode 17: advance Address by 2 to 0x9d6 and Line by -2 to 99
  [0x00000b1e]  Set column to 2
  [0x00000b20]  Special opcode 21: advance Address by 2 to 0x9d8 and Line by 2 to 101
  [0x00000b21]  Special opcode 19: advance Address by 2 to 0x9da and Line by 0 to 101
  [0x00000b22]  Set column to 3
  [0x00000b24]  Set is_stmt to 1
  [0x00000b25]  Advance Line by -26 to 75
  [0x00000b27]  Copy (view 1)
  [0x00000b28]  Special opcode 48: advance Address by 6 to 0x9e0 and Line by 1 to 76
  [0x00000b29]  Special opcode 23: advance Address by 2 to 0x9e2 and Line by 4 to 80
  [0x00000b2a]  Special opcode 48: advance Address by 6 to 0x9e8 and Line by 1 to 81
  [0x00000b2b]  Set column to 1
  [0x00000b2d]  Set is_stmt to 0
  [0x00000b2e]  Advance Line by 32 to 113
  [0x00000b30]  Copy (view 1)
  [0x00000b31]  Set column to 3
  [0x00000b33]  Set is_stmt to 1
  [0x00000b34]  Advance Line by -28 to 85
  [0x00000b36]  Special opcode 61: advance Address by 8 to 0x9f0 and Line by 0 to 85
  [0x00000b37]  Special opcode 48: advance Address by 6 to 0x9f6 and Line by 1 to 86
  [0x00000b38]  Special opcode 25: advance Address by 2 to 0x9f8 and Line by 6 to 92
  [0x00000b39]  Special opcode 48: advance Address by 6 to 0x9fe and Line by 1 to 93
  [0x00000b3a]  Set column to 10
  [0x00000b3c]  Set is_stmt to 0
  [0x00000b3d]  Copy (view 1)
  [0x00000b3e]  Set column to 3
  [0x00000b40]  Set is_stmt to 1
  [0x00000b41]  Advance Line by 9 to 102
  [0x00000b43]  Special opcode 47: advance Address by 6 to 0xa04 and Line by 0 to 102
  [0x00000b44]  Set column to 44
  [0x00000b46]  Set is_stmt to 0
  [0x00000b47]  Copy (view 1)
  [0x00000b48]  Set column to 19
  [0x00000b4a]  Special opcode 131: advance Address by 18 to 0xa16 and Line by 0 to 102
  [0x00000b4b]  Set column to 17
  [0x00000b4d]  Special opcode 19: advance Address by 2 to 0xa18 and Line by 0 to 102
  [0x00000b4e]  Special opcode 33: advance Address by 4 to 0xa1c and Line by 0 to 102
  [0x00000b4f]  Set column to 3
  [0x00000b51]  Set is_stmt to 1
  [0x00000b52]  Special opcode 48: advance Address by 6 to 0xa22 and Line by 1 to 103
  [0x00000b53]  Set column to 15
  [0x00000b55]  Set is_stmt to 0
  [0x00000b56]  Copy (view 1)
  [0x00000b57]  Set column to 25
  [0x00000b59]  Extended opcode 4: set Discriminator to 3
  [0x00000b5d]  Set is_stmt to 1
  [0x00000b5e]  Special opcode 17: advance Address by 2 to 0xa24 and Line by -2 to 101
  [0x00000b5f]  Set column to 13
  [0x00000b61]  Set is_stmt to 0
  [0x00000b62]  Special opcode 20: advance Address by 2 to 0xa26 and Line by 1 to 102
  [0x00000b63]  Set column to 19
  [0x00000b65]  Extended opcode 4: set Discriminator to 1
  [0x00000b69]  Set is_stmt to 1
  [0x00000b6a]  Special opcode 18: advance Address by 2 to 0xa28 and Line by -1 to 101
  [0x00000b6b]  Set column to 3
  [0x00000b6d]  Special opcode 36: advance Address by 4 to 0xa2c and Line by 3 to 104
  [0x00000b6e]  Set column to 2
  [0x00000b70]  Special opcode 7: advance Address by 0 to 0xa2c and Line by 2 to 106 (view 1)
  [0x00000b71]  Set column to 12
  [0x00000b73]  Set is_stmt to 0
  [0x00000b74]  Copy (view 2)
  [0x00000b75]  Set column to 16
  [0x00000b77]  Special opcode 19: advance Address by 2 to 0xa2e and Line by 0 to 106
  [0x00000b78]  Special opcode 33: advance Address by 4 to 0xa32 and Line by 0 to 106
  [0x00000b79]  Set column to 2
  [0x00000b7b]  Set is_stmt to 1
  [0x00000b7c]  Special opcode 77: advance Address by 10 to 0xa3c and Line by 2 to 108
  [0x00000b7d]  Set is_stmt to 0
  [0x00000b7e]  Special opcode 33: advance Address by 4 to 0xa40 and Line by 0 to 108
  [0x00000b7f]  Set is_stmt to 1
  [0x00000b80]  Special opcode 35: advance Address by 4 to 0xa44 and Line by 2 to 110
  [0x00000b81]  Set column to 3
  [0x00000b83]  Special opcode 20: advance Address by 2 to 0xa46 and Line by 1 to 111
  [0x00000b84]  Set column to 22
  [0x00000b86]  Set is_stmt to 0
  [0x00000b87]  Copy (view 1)
  [0x00000b88]  Set column to 3
  [0x00000b8a]  Special opcode 19: advance Address by 2 to 0xa48 and Line by 0 to 111
  [0x00000b8b]  Set column to 22
  [0x00000b8d]  Extended opcode 4: set Discriminator to 2
  [0x00000b91]  Set is_stmt to 1
  [0x00000b92]  Special opcode 102: advance Address by 14 to 0xa56 and Line by -1 to 110
  [0x00000b93]  Set column to 8
  [0x00000b95]  Extended opcode 4: set Discriminator to 1
  [0x00000b99]  Copy (view 1)
  [0x00000b9a]  Extended opcode 4: set Discriminator to 1
  [0x00000b9e]  Set is_stmt to 0
  [0x00000b9f]  Special opcode 33: advance Address by 4 to 0xa5a and Line by 0 to 110
  [0x00000ba0]  Advance PC by 30 to 0xa78
  [0x00000ba2]  Extended opcode 1: End of Sequence

  [0x00000ba5]  Set column to 34
  [0x00000ba7]  Extended opcode 2: set Address to 0xa78
  [0x00000bae]  Advance Line by 114 to 115
  [0x00000bb1]  Copy
  [0x00000bb2]  Set is_stmt to 0
  [0x00000bb3]  Copy (view 1)
  [0x00000bb4]  Set column to 2
  [0x00000bb6]  Set is_stmt to 1
  [0x00000bb7]  Special opcode 90: advance Address by 12 to 0xa84 and Line by 1 to 116
  [0x00000bb8]  Special opcode 6: advance Address by 0 to 0xa84 and Line by 1 to 117 (view 1)
  [0x00000bb9]  Special opcode 21: advance Address by 2 to 0xa86 and Line by 2 to 119
  [0x00000bba]  Special opcode 6: advance Address by 0 to 0xa86 and Line by 1 to 120 (view 1)
  [0x00000bbb]  Special opcode 6: advance Address by 0 to 0xa86 and Line by 1 to 121 (view 2)
  [0x00000bbc]  Special opcode 6: advance Address by 0 to 0xa86 and Line by 1 to 122 (view 3)
  [0x00000bbd]  Special opcode 7: advance Address by 0 to 0xa86 and Line by 2 to 124 (view 4)
  [0x00000bbe]  Set column to 6
  [0x00000bc0]  Copy (view 5)
  [0x00000bc1]  Set column to 10
  [0x00000bc3]  Set is_stmt to 0
  [0x00000bc4]  Copy (view 6)
  [0x00000bc5]  Set column to 2
  [0x00000bc7]  Special opcode 19: advance Address by 2 to 0xa88 and Line by 0 to 124
  [0x00000bc8]  Set column to 7
  [0x00000bca]  Set is_stmt to 1
  [0x00000bcb]  Special opcode 25: advance Address by 2 to 0xa8a and Line by 6 to 130
  [0x00000bcc]  Set column to 12
  [0x00000bce]  Set is_stmt to 0
  [0x00000bcf]  Copy (view 1)
  [0x00000bd0]  Set column to 7
  [0x00000bd2]  Set is_stmt to 1
  [0x00000bd3]  Special opcode 48: advance Address by 6 to 0xa90 and Line by 1 to 131
  [0x00000bd4]  Set column to 6
  [0x00000bd6]  Special opcode 48: advance Address by 6 to 0xa96 and Line by 1 to 132
  [0x00000bd7]  Set is_stmt to 0
  [0x00000bd8]  Special opcode 0: advance Address by 0 to 0xa96 and Line by -5 to 127 (view 1)
  [0x00000bd9]  Special opcode 24: advance Address by 2 to 0xa98 and Line by 5 to 132
  [0x00000bda]  Set column to 7
  [0x00000bdc]  Set is_stmt to 1
  [0x00000bdd]  Special opcode 22: advance Address by 2 to 0xa9a and Line by 3 to 135
  [0x00000bde]  Set column to 11
  [0x00000be0]  Set is_stmt to 0
  [0x00000be1]  Copy (view 1)
  [0x00000be2]  Set column to 7
  [0x00000be4]  Set is_stmt to 1
  [0x00000be5]  Special opcode 48: advance Address by 6 to 0xaa0 and Line by 1 to 136
  [0x00000be6]  Set column to 6
  [0x00000be8]  Special opcode 48: advance Address by 6 to 0xaa6 and Line by 1 to 137
  [0x00000be9]  Set is_stmt to 0
  [0x00000bea]  Advance Line by -10 to 127
  [0x00000bec]  Copy (view 1)
  [0x00000bed]  Advance Line by 10 to 137
  [0x00000bef]  Special opcode 19: advance Address by 2 to 0xaa8 and Line by 0 to 137
  [0x00000bf0]  Set column to 7
  [0x00000bf2]  Set is_stmt to 1
  [0x00000bf3]  Special opcode 22: advance Address by 2 to 0xaaa and Line by 3 to 140
  [0x00000bf4]  Special opcode 48: advance Address by 6 to 0xab0 and Line by 1 to 141
  [0x00000bf5]  Set column to 6
  [0x00000bf7]  Special opcode 6: advance Address by 0 to 0xab0 and Line by 1 to 142 (view 1)
  [0x00000bf8]  Set column to 7
  [0x00000bfa]  Special opcode 22: advance Address by 2 to 0xab2 and Line by 3 to 145
  [0x00000bfb]  Set column to 11
  [0x00000bfd]  Set is_stmt to 0
  [0x00000bfe]  Copy (view 1)
  [0x00000bff]  Set column to 7
  [0x00000c01]  Set is_stmt to 1
  [0x00000c02]  Special opcode 48: advance Address by 6 to 0xab8 and Line by 1 to 146
  [0x00000c03]  Set column to 6
  [0x00000c05]  Special opcode 48: advance Address by 6 to 0xabe and Line by 1 to 147
  [0x00000c06]  Set is_stmt to 0
  [0x00000c07]  Advance Line by -20 to 127
  [0x00000c09]  Copy (view 1)
  [0x00000c0a]  Advance Line by 20 to 147
  [0x00000c0c]  Special opcode 19: advance Address by 2 to 0xac0 and Line by 0 to 147
  [0x00000c0d]  Set column to 7
  [0x00000c0f]  Set is_stmt to 1
  [0x00000c10]  Special opcode 22: advance Address by 2 to 0xac2 and Line by 3 to 150
  [0x00000c11]  Set column to 12
  [0x00000c13]  Set is_stmt to 0
  [0x00000c14]  Copy (view 1)
  [0x00000c15]  Set column to 7
  [0x00000c17]  Set is_stmt to 1
  [0x00000c18]  Special opcode 62: advance Address by 8 to 0xaca and Line by 1 to 151
  [0x00000c19]  Set column to 6
  [0x00000c1b]  Special opcode 62: advance Address by 8 to 0xad2 and Line by 1 to 152
  [0x00000c1c]  Set is_stmt to 0
  [0x00000c1d]  Advance Line by -25 to 127
  [0x00000c1f]  Copy (view 1)
  [0x00000c20]  Advance Line by 25 to 152
  [0x00000c22]  Special opcode 19: advance Address by 2 to 0xad4 and Line by 0 to 152
  [0x00000c23]  Set is_stmt to 1
  [0x00000c24]  Special opcode 22: advance Address by 2 to 0xad6 and Line by 3 to 155
  [0x00000c25]  Special opcode 48: advance Address by 6 to 0xadc and Line by 1 to 156
  [0x00000c26]  Special opcode 48: advance Address by 6 to 0xae2 and Line by 1 to 157
  [0x00000c27]  Set is_stmt to 0
  [0x00000c28]  Advance Line by -30 to 127
  [0x00000c2a]  Copy (view 1)
  [0x00000c2b]  Advance Line by 30 to 157
  [0x00000c2d]  Special opcode 19: advance Address by 2 to 0xae4 and Line by 0 to 157
  [0x00000c2e]  Set column to 5
  [0x00000c30]  Set is_stmt to 1
  [0x00000c31]  Special opcode 24: advance Address by 2 to 0xae6 and Line by 5 to 162
  [0x00000c32]  Set column to 4
  [0x00000c34]  Special opcode 34: advance Address by 4 to 0xaea and Line by 1 to 163
  [0x00000c35]  Set column to 35
  [0x00000c37]  Extended opcode 4: set Discriminator to 2
  [0x00000c3b]  Advance Line by -39 to 124
  [0x00000c3d]  Copy (view 1)
  [0x00000c3e]  Set column to 25
  [0x00000c40]  Extended opcode 4: set Discriminator to 1
  [0x00000c44]  Special opcode 19: advance Address by 2 to 0xaec and Line by 0 to 124
  [0x00000c45]  Set column to 21
  [0x00000c47]  Extended opcode 4: set Discriminator to 1
  [0x00000c4b]  Set is_stmt to 0
  [0x00000c4c]  Copy (view 1)
  [0x00000c4d]  Set column to 25
  [0x00000c4f]  Extended opcode 4: set Discriminator to 1
  [0x00000c53]  Special opcode 19: advance Address by 2 to 0xaee and Line by 0 to 124
  [0x00000c54]  Set column to 3
  [0x00000c56]  Set is_stmt to 1
  [0x00000c57]  Special opcode 20: advance Address by 2 to 0xaf0 and Line by 1 to 125
  [0x00000c58]  Set column to 5
  [0x00000c5a]  Special opcode 35: advance Address by 4 to 0xaf4 and Line by 2 to 127
  [0x00000c5b]  Set column to 6
  [0x00000c5d]  Set is_stmt to 0
  [0x00000c5e]  Copy (view 1)
  [0x00000c5f]  Set column to 5
  [0x00000c61]  Set is_stmt to 1
  [0x00000c62]  Special opcode 20: advance Address by 2 to 0xaf6 and Line by 1 to 128
  [0x00000c63]  Set column to 18
  [0x00000c65]  Set is_stmt to 0
  [0x00000c66]  Copy (view 1)
  [0x00000c67]  Advance PC by 98 to 0xb58
  [0x00000c69]  Special opcode 5: advance Address by 0 to 0xb58 and Line by 0 to 128
  [0x00000c6a]  Set column to 1
  [0x00000c6c]  Advance Line by 40 to 168
  [0x00000c6e]  Copy (view 1)
  [0x00000c6f]  Special opcode 47: advance Address by 6 to 0xb5e and Line by 0 to 168
  [0x00000c70]  Advance PC by 4 to 0xb62
  [0x00000c72]  Extended opcode 1: End of Sequence


  Offset:                      0xc75
  Length:                      308
  DWARF Version:               3
  Prologue Length:             155
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0xc90):
  1	sys
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	src

 The File Name Table (offset 0xcdb):
  Entry	Dir	Time	Size	Name
  1	1	0	0	startup_gcc.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	timers.h

 Line Number Statements:
  [0x00000d1a]  Set column to 1
  [0x00000d1c]  Extended opcode 2: set Address to 0xb64
  [0x00000d23]  Advance Line by 268 to 269
  [0x00000d26]  Copy
  [0x00000d27]  Set column to 5
  [0x00000d29]  Special opcode 9: advance Address by 0 to 0xb64 and Line by 4 to 273 (view 1)
  [0x00000d2a]  Special opcode 7: advance Address by 0 to 0xb64 and Line by 2 to 275 (view 2)
  [0x00000d2b]  Set column to 10
  [0x00000d2d]  Special opcode 3: advance Address by 0 to 0xb64 and Line by -2 to 273 (view 3)
  [0x00000d2e]  Advance PC by 2 to 0xb66
  [0x00000d30]  Extended opcode 1: End of Sequence

  [0x00000d33]  Set column to 1
  [0x00000d35]  Extended opcode 2: set Address to 0xb66
  [0x00000d3c]  Advance Line by 286 to 287
  [0x00000d3f]  Copy
  [0x00000d40]  Set column to 5
  [0x00000d42]  Special opcode 9: advance Address by 0 to 0xb66 and Line by 4 to 291 (view 1)
  [0x00000d43]  Special opcode 7: advance Address by 0 to 0xb66 and Line by 2 to 293 (view 2)
  [0x00000d44]  Set column to 10
  [0x00000d46]  Special opcode 3: advance Address by 0 to 0xb66 and Line by -2 to 291 (view 3)
  [0x00000d47]  Advance PC by 2 to 0xb68
  [0x00000d49]  Extended opcode 1: End of Sequence

  [0x00000d4c]  Set column to 1
  [0x00000d4e]  Extended opcode 2: set Address to 0xb68
  [0x00000d55]  Advance Line by 304 to 305
  [0x00000d58]  Copy
  [0x00000d59]  Set column to 5
  [0x00000d5b]  Special opcode 9: advance Address by 0 to 0xb68 and Line by 4 to 309 (view 1)
  [0x00000d5c]  Special opcode 7: advance Address by 0 to 0xb68 and Line by 2 to 311 (view 2)
  [0x00000d5d]  Set column to 10
  [0x00000d5f]  Special opcode 3: advance Address by 0 to 0xb68 and Line by -2 to 309 (view 3)
  [0x00000d60]  Advance PC by 2 to 0xb6a
  [0x00000d62]  Extended opcode 1: End of Sequence

  [0x00000d65]  Set column to 1
  [0x00000d67]  Extended opcode 2: set Address to 0xb6c
  [0x00000d6e]  Advance Line by 226 to 227
  [0x00000d71]  Copy
  [0x00000d72]  Set column to 5
  [0x00000d74]  Special opcode 20: advance Address by 2 to 0xb6e and Line by 1 to 228
  [0x00000d75]  Special opcode 10: advance Address by 0 to 0xb6e and Line by 5 to 233 (view 1)
  [0x00000d76]  Special opcode 6: advance Address by 0 to 0xb6e and Line by 1 to 234 (view 2)
  [0x00000d77]  Set column to 17
  [0x00000d79]  Set is_stmt to 0
  [0x00000d7a]  Copy (view 3)
  [0x00000d7b]  Set column to 12
  [0x00000d7d]  Special opcode 18: advance Address by 2 to 0xb70 and Line by -1 to 233
  [0x00000d7e]  Set column to 5
  [0x00000d80]  Special opcode 20: advance Address by 2 to 0xb72 and Line by 1 to 234
  [0x00000d81]  Set column to 9
  [0x00000d83]  Set is_stmt to 1
  [0x00000d84]  Special opcode 21: advance Address by 2 to 0xb74 and Line by 2 to 236
  [0x00000d85]  Set column to 22
  [0x00000d87]  Set is_stmt to 0
  [0x00000d88]  Copy (view 1)
  [0x00000d89]  Set column to 20
  [0x00000d8b]  Special opcode 33: advance Address by 4 to 0xb78 and Line by 0 to 236
  [0x00000d8c]  Set column to 35
  [0x00000d8e]  Extended opcode 4: set Discriminator to 1
  [0x00000d92]  Set is_stmt to 1
  [0x00000d93]  Special opcode 31: advance Address by 4 to 0xb7c and Line by -2 to 234
  [0x00000d94]  Set column to 5
  [0x00000d96]  Special opcode 55: advance Address by 6 to 0xb82 and Line by 8 to 242
  [0x00000d97]  Advance Line by 14 to 256
  [0x00000d99]  Special opcode 131: advance Address by 18 to 0xb94 and Line by 0 to 256
  [0x00000d9a]  Set column to 31
  [0x00000d9c]  Set is_stmt to 0
  [0x00000d9d]  Copy (view 1)
  [0x00000d9e]  Special opcode 33: advance Address by 4 to 0xb98 and Line by 0 to 256
  [0x00000d9f]  Special opcode 33: advance Address by 4 to 0xb9c and Line by 0 to 256
  [0x00000da0]  Set column to 5
  [0x00000da2]  Set is_stmt to 1
  [0x00000da3]  Special opcode 34: advance Address by 4 to 0xba0 and Line by 1 to 257
  [0x00000da4]  Set column to 1
  [0x00000da6]  Set is_stmt to 0
  [0x00000da7]  Special opcode 34: advance Address by 4 to 0xba4 and Line by 1 to 258
  [0x00000da8]  Advance PC by 24 to 0xbbc
  [0x00000daa]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 68656164 65720053 63616e48 65616465 header.ScanHeade
  0x00000010 72466965 6c647300 57414954 494e475f rFields.WAITING_
  0x00000020 5343414e 5f484541 44455200 7a65726f SCAN_HEADER.zero
  0x00000030 5f706f69 6e745f62 75660073 72632f6c _point_buf.src/l
  0x00000040 69646172 2e630073 686f7274 20696e74 idar.c.short int
  0x00000050 0066726f 6d5f746f 70006465 6c746100 .from_top.delta.
  0x00000060 5f5f7569 6e743332 5f740070 72696e74 __uint32_t.print
  0x00000070 5f616e67 6c657300 6d6f6465 00726967 _angles.mode.rig
  0x00000080 68746964 78005354 4152545f 5041434b htidx.START_PACK
  0x00000090 4554005f 5f75696e 7431365f 74007374 ET.__uint16_t.st
  0x000000a0 6172745f 636f6465 006c6566 74696478 art_code.leftidx
  0x000000b0 00444154 415f5041 434b4554 00616e67 .DATA_PACKET.ang
  0x000000c0 6c655f6d 61700052 45434549 56494e47 le_map.RECEIVING
  0x000000d0 5f534341 4e5f4845 41444552 0074656d _SCAN_HEADER.tem
  0x000000e0 70006c6f 6e67206c 6f6e6720 696e7400 p.long long int.
  0x000000f0 64656c74 615f7065 725f636f 756e7400 delta_per_count.
  0x00000100 63757272 656e745f 7363616e 00616374 current_scan.act
  0x00000110 6976655f 706f696e 745f6275 66666572 ive_point_buffer
  0x00000120 002f686f 6d652f6a 6b6d756e 736f6e2f ./home/jkmunson/
  0x00000130 776f726b 73706163 652f4545 4e473436 workspace/EENG46
  0x00000140 312f4545 4e473436 315f4c49 44415200 1/EENG461_LIDAR.
  0x00000150 7072696e 746c6600 63757272 656e745f printlf.current_
  0x00000160 62797465 00524543 45495649 4e475f53 byte.RECEIVING_S
  0x00000170 43414e5f 44415441 00737461 72745f6c CAN_DATA.start_l
  0x00000180 69646172 5f736361 6e006c65 6e677468 idar_scan.length
  0x00000190 00756e73 69676e65 64206368 61720065 .unsigned char.e
  0x000001a0 6e645f61 6e676c65 006c6f6e 67206c6f nd_angle.long lo
  0x000001b0 6e672075 6e736967 6e656420 696e7400 ng unsigned int.
  0x000001c0 706f696e 74735f62 75665f30 00706f69 points_buf_0.poi
  0x000001d0 6e74735f 6275665f 3100434f 4d4d5f57 nts_buf_1.COMM_W
  0x000001e0 41495449 4e470073 74617274 0073686f AITING.start.sho
  0x000001f0 72742075 6e736967 6e656420 696e7400 rt unsigned int.
  0x00000200 4d4f4445 5f434f4e 54494e55 4f555300 MODE_CONTINUOUS.
  0x00000210 54595045 5f484541 4c54485f 53544154 TYPE_HEALTH_STAT
  0x00000220 55530063 6c656172 5f6c6964 61725f49 US.clear_lidar_I
  0x00000230 4f007479 70650073 616d706c 655f636f O.type.sample_co
  0x00000240 756e7400 5f426f6f 6c00474e 55204331 unt._Bool.GNU C1
  0x00000250 37203133 2e322e30 202d6d74 68756d62 7 13.2.0 -mthumb
  0x00000260 202d6d63 70753d63 6f727465 782d6d34  -mcpu=cortex-m4
  0x00000270 202d6d66 70753d66 7076342d 73702d64  -mfpu=fpv4-sp-d
  0x00000280 3136202d 6d666c6f 61742d61 62693d68 16 -mfloat-abi=h
  0x00000290 61726420 2d6d6172 63683d61 726d7637 ard -march=armv7
  0x000002a0 652d6d2b 6670202d 67202d4f 67202d73 e-m+fp -g -Og -s
  0x000002b0 74643d63 3137202d 6666756e 6374696f td=c17 -ffunctio
  0x000002c0 6e2d7365 6374696f 6e73202d 666e6f2d n-sections -fno-
  0x000002d0 6275696c 74696e20 2d666461 74612d73 builtin -fdata-s
  0x000002e0 65637469 6f6e7300 4d4f4445 5f53494e ections.MODE_SIN
  0x000002f0 474c4500 70726f63 6573735f 7061636b GLE.process_pack
  0x00000300 65747300 73657475 705f6c69 6461725f ets.setup_lidar_
  0x00000310 636f6d6d 73006279 74657300 63757272 comms.bytes.curr
  0x00000320 656e745f 6d657373 61676500 66726f6d ent_message.from
  0x00000330 5f300050 61636b65 74486561 64657200 _0.PacketHeader.
  0x00000340 5f5f696e 7433325f 74007374 6f705f6c __int32_t.stop_l
  0x00000350 69646172 5f736361 6e005363 616e4865 idar_scan.ScanHe
  0x00000360 61646572 00636865 636b7375 6d005459 ader.checksum.TY
  0x00000370 50455f53 43414e00 706f7369 74696f6e PE_SCAN.position
  0x00000380 00737461 72745f61 6e676c65 0070726f .start_angle.pro
  0x00000390 63657373 5f706f69 6e745f62 75666600 cess_point_buff.
  0x000003a0 52454345 4956494e 475f4845 41444552 RECEIVING_HEADER
  0x000003b0 00636f6d 6d5f7374 61746500 52454345 .comm_state.RECE
  0x000003c0 4956494e 475f4845 414c5448 5f524550 IVING_HEALTH_REP
  0x000003d0 4f525400 72656365 6976696e 675f706f ORT.receiving_po
  0x000003e0 696e745f 62756666 6572005f 5f75696e int_buffer.__uin
  0x000003f0 74385f74 00736574 75705f75 6172745f t8_t.setup_uart_
  0x00000400 7072696e 74657200 6d61696e 00737263 printer.main.src
  0x00000410 2f6d6169 6e2e6300 7365636f 6e645f63 /main.c.second_c
  0x00000420 6f756e74 65720067 65745f75 7074696d ounter.get_uptim
  0x00000430 655f6379 636c6573 00637963 6c65735f e_cycles.cycles_
  0x00000440 6e6f7700 7372632f 74696d65 72732e63 now.src/timers.c
  0x00000450 00757074 696d655f 7365636f 6e647300 .uptime_seconds.
  0x00000460 74696d65 72315f6f 76657266 6c6f775f timer1_overflow_
  0x00000470 636f756e 74007469 6d654b65 65706572 count.timeKeeper
  0x00000480 49535200 6f766572 666c6f77 5f636f75 ISR.overflow_cou
  0x00000490 6e745f6e 6f77005f 5f75696e 7436345f nt_now.__uint64_
  0x000004a0 7400736f 6e69635f 73656e73 6f725f61 t.sonic_sensor_a
  0x000004b0 6374696f 6e5f6469 7600636f 6e666967 ction_div.config
  0x000004c0 75726544 65626f75 6e636554 696d6572 ureDebounceTimer
  0x000004d0 00696e74 65676572 50617274 00707269 .integerPart.pri
  0x000004e0 6e745f73 7472696e 67006368 6172735f nt_string.chars_
  0x000004f0 73656e74 5f726563 656e746c 79006465 sent_recently.de
  0x00000500 63696d61 6c506172 74005f5f 676e7563 cimalPart.__gnuc
  0x00000510 5f76615f 6c697374 006e756d 75007075 _va_list.numu.pu
  0x00000520 74636861 72007072 696e745f 666c6f61 tchar.print_floa
  0x00000530 74007372 632f7561 72745f70 72696e74 t.src/uart_print
  0x00000540 2e630066 6f726d61 74007072 696e745f .c.format.print_
  0x00000550 756e7369 676e6564 5f646563 696d616c unsigned_decimal
  0x00000560 00707269 6e745f64 6563696d 616c005f .print_decimal._
  0x00000570 5f617000 706c6163 6573006e 756d6265 _ap.places.numbe
  0x00000580 72006e75 6d66005f 5f76615f 6c697374 r.numf.__va_list
  0x00000590 00617267 73005f64 61746100 70756c53 .args._data.pulS
  0x000005a0 7461636b 00496e74 44656661 756c7448 tack.IntDefaultH
  0x000005b0 616e646c 65720070 756c4465 7374005f andler.pulDest._
  0x000005c0 65746578 74005f65 64617461 00737973 etext._edata.sys
  0x000005d0 2f737461 72747570 5f676363 2e630046 /startup_gcc.c.F
  0x000005e0 61756c74 49535200 675f7066 6e566563 aultISR.g_pfnVec
  0x000005f0 746f7273 006c6f6e 6720646f 75626c65 tors.long double
  0x00000600 0070756c 53726300 52657365 74495352 .pulSrc.ResetISR
  0x00000610 004e6d69 535200                     .NmiSR.

Contents of the .debug_frame section:


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 0000000c 00000000 FDE cie=00000000 pc=0000026c..00000288

00000020 00000018 00000000 FDE cie=00000000 pc=00000288..00000314
  DW_CFA_advance_loc: 2 to 0000028a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000003c 00000018 00000000 FDE cie=00000000 pc=00000314..000003f4
  DW_CFA_advance_loc: 2 to 00000316
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000058 00000018 00000000 FDE cie=00000000 pc=000003f4..00000418
  DW_CFA_advance_loc: 2 to 000003f6
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000074 00000018 00000000 FDE cie=00000000 pc=00000418..0000043c
  DW_CFA_advance_loc: 2 to 0000041a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000090 00000014 00000000 FDE cie=00000000 pc=0000043c..00000464
  DW_CFA_advance_loc: 2 to 0000043e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000a8 0000000c 00000000 FDE cie=00000000 pc=00000464..0000049c

000000b8 00000014 00000000 FDE cie=00000000 pc=0000049c..000004c4
  DW_CFA_advance_loc: 2 to 0000049e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000d0 00000014 00000000 FDE cie=00000000 pc=000004c4..0000074c
  DW_CFA_advance_loc: 2 to 000004c6
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000e8 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000000f8 00000014 000000e8 FDE cie=000000e8 pc=0000074c..000007c4
  DW_CFA_advance_loc: 2 to 0000074e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000110 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000120 00000018 00000110 FDE cie=00000110 pc=00000000..0000007c
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000013c 00000018 00000110 FDE cie=00000110 pc=000007c4..00000828
  DW_CFA_advance_loc: 2 to 000007c6
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r4 at cfa-4
  DW_CFA_advance_loc: 62 to 00000804
  DW_CFA_remember_state
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 0
  DW_CFA_advance_loc: 2 to 00000806
  DW_CFA_restore_state

00000158 00000018 00000110 FDE cie=00000110 pc=00000000..00000058
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000174 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000184 00000018 00000174 FDE cie=00000174 pc=00000828..00000898
  DW_CFA_advance_loc: 2 to 0000082a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001a0 00000014 00000174 FDE cie=00000174 pc=00000898..000008dc
  DW_CFA_advance_loc: 2 to 0000089a
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001b8 00000018 00000174 FDE cie=00000174 pc=000008dc..000008f2
  DW_CFA_advance_loc: 2 to 000008de
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001d4 0000001c 00000174 FDE cie=00000174 pc=000008f4..00000940
  DW_CFA_advance_loc: 2 to 000008f6
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 000008f8
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 66 to 0000093a
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000001f4 00000014 00000174 FDE cie=00000174 pc=00000940..00000958
  DW_CFA_advance_loc: 2 to 00000942
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000020c 00000030 00000174 FDE cie=00000174 pc=00000958..00000a78
  DW_CFA_advance_loc: 2 to 0000095a
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 0000095e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset_extended: r80 at cfa-16
  DW_CFA_offset_extended: r81 at cfa-12
  DW_CFA_advance_loc: 2 to 00000960
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc1: 138 to 000009ea
  DW_CFA_remember_state
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 4 to 000009ee
  DW_CFA_restore_extended: r80
  DW_CFA_restore_extended: r81
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 000009f0
  DW_CFA_restore_state
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000240 00000038 00000174 FDE cie=00000174 pc=00000a78..00000b62
  DW_CFA_advance_loc: 2 to 00000a7a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r0 at cfa-16
  DW_CFA_offset: r1 at cfa-12
  DW_CFA_offset: r2 at cfa-8
  DW_CFA_offset: r3 at cfa-4
  DW_CFA_advance_loc: 2 to 00000a7c
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r4 at cfa-32
  DW_CFA_offset: r5 at cfa-28
  DW_CFA_offset: r6 at cfa-24
  DW_CFA_offset: r14 at cfa-20
  DW_CFA_advance_loc: 2 to 00000a7e
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc1: 220 to 00000b5a
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 4 to 00000b5e
  DW_CFA_restore: r14
  DW_CFA_restore: r6
  DW_CFA_restore: r5
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000b60
  DW_CFA_restore: r3
  DW_CFA_restore: r2
  DW_CFA_restore: r1
  DW_CFA_restore: r0
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

0000027c 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

0000028c 0000000c 0000027c FDE cie=0000027c pc=00000b64..00000b66

0000029c 0000000c 0000027c FDE cie=0000027c pc=00000b66..00000b68

000002ac 0000000c 0000027c FDE cie=0000027c pc=00000b68..00000b6a

000002bc 00000014 0000027c FDE cie=0000027c pc=00000b6c..00000bb4
  DW_CFA_advance_loc: 2 to 00000b6e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop


Disassembly of section .text:

00000000 <g_pfnVectors>:
volatile int32_t uptime_seconds;
volatile uint64_t timer1_overflow_count;

#define TIMER_ISR_IS_PENDING (TIMER1_MIS_R & TIMER_ICR_TATOCINT)

void configureDebounceTimer(void) {
   0:	78 0c 00 20 6d 0b 00 00 65 0b 00 00 67 0b 00 00     x.. m...e...g...

	SYSCTL_RCGCTIMER_R |= SYSCTL_RCGCTIMER_R1; //Enable Run Mode Clock Gating Control for Timer 0

	while (!(SYSCTL_PRTIMER_R & SYSCTL_RCGCTIMER_R1)) {}
  10:	69 0b 00 00 69 0b 00 00 69 0b 00 00 00 00 00 00     i...i...i.......
	...

	TIMER1_CTL_R &= ~TIMER_CTL_TAEN; //Disable Timer
	TIMER1_CTL_R |= TIMER_CTL_TASTALL; //Stall for debug
  2c:	69 0b 00 00 69 0b 00 00 00 00 00 00 69 0b 00 00     i...i.......i...
	TIMER1_CFG_R = TIMER_CFG_32_BIT_TIMER;
	TIMER1_TAMR_R |= TIMER_TAMR_TAMR_PERIOD; //Set Timer to count down periodically
	TIMER1_TAILR_R = TIMER_CYCLES-1;
  3c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
	TIMER1_TAPR_R = 0;
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
  4c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt as Timeout
	NVIC_EN0_R = 1 << (INT_TIMER1A - 16);
  5c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
	TIMER1_CTL_R |= TIMER_CTL_TAEN; //Enable Timer
  6c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  7c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  8c:	69 0b 00 00 69 0b 00 00 c5 07 00 00 69 0b 00 00     i...i.......i...
  9c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  ac:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  bc:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  cc:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  dc:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  ec:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
  fc:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 10c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 11c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 12c:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 13c:	69 0b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     i...............
 14c:	00 00 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     ....i...i...i...
 15c:	69 0b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     i...............
	...
 1b0:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 1c0:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 1d0:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 1e0:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 1f0:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 200:	69 0b 00 00 69 0b 00 00 69 0b 00 00 00 00 00 00     i...i...i.......
 210:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 220:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 230:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 240:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 250:	69 0b 00 00 69 0b 00 00 69 0b 00 00 69 0b 00 00     i...i...i...i...
 260:	69 0b 00 00 69 0b 00 00 69 0b 00 00                 i...i...i...

0000026c <zero_point_buf>:
uint32_t points_buf_1[POINTS_BUF_SIZE];
uint32_t *active_point_buffer;
uint32_t *receiving_point_buffer;

void zero_point_buf(void) {
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 26c:	2300      	movs	r3, #0
 26e:	e005      	b.n	27c <zero_point_buf+0x10>
		receiving_point_buffer[i] = 0;
 270:	4a04      	ldr	r2, [pc, #16]	@ (284 <zero_point_buf+0x18>)
 272:	6812      	ldr	r2, [r2, #0]
 274:	2100      	movs	r1, #0
 276:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 27a:	3301      	adds	r3, #1
 27c:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 280:	dbf6      	blt.n	270 <zero_point_buf+0x4>
	}
}
 282:	4770      	bx	lr
 284:	2000001c 	.word	0x2000001c

00000288 <process_point_buff>:

//Fill in any missing points with the average of the closest points to the left and the right.
//While the lidar is operating correctly, this should mostly never happen.
void process_point_buff(){
 288:	b570      	push	{r4, r5, r6, lr}
	
	for(int i = 1; i < POINTS_BUF_SIZE; i++){
 28a:	2401      	movs	r4, #1
 28c:	e02e      	b.n	2ec <process_point_buff+0x64>
		
		if(receiving_point_buffer[i] != 0) continue;
		//Find closest point to the "left" that has a value
		int leftidx = (i == 0) ? (POINTS_BUF_SIZE-1) : (i-1);
 28e:	f240 1067 	movw	r0, #359	@ 0x167
 292:	e038      	b.n	306 <process_point_buff+0x7e>
		bool from_top = (leftidx > 0);
		while ((receiving_point_buffer[leftidx] == 0)) {
			if (--leftidx < 0) {
				if(from_top){
					receiving_point_buffer[i] = 1; // No data was collected from lidar???
 294:	2101      	movs	r1, #1
 296:	5151      	str	r1, [r2, r5]
		while ((receiving_point_buffer[leftidx] == 0)) {
 298:	4a1c      	ldr	r2, [pc, #112]	@ (30c <process_point_buff+0x84>)
 29a:	6812      	ldr	r2, [r2, #0]
 29c:	009e      	lsls	r6, r3, #2
 29e:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 2a2:	b931      	cbnz	r1, 2b2 <process_point_buff+0x2a>
			if (--leftidx < 0) {
 2a4:	3b01      	subs	r3, #1
 2a6:	d5f7      	bpl.n	298 <process_point_buff+0x10>
				if(from_top){
 2a8:	2800      	cmp	r0, #0
 2aa:	dcf3      	bgt.n	294 <process_point_buff+0xc>
					continue;
				} else {
					leftidx = (POINTS_BUF_SIZE-1);
 2ac:	f240 1367 	movw	r3, #359	@ 0x167
 2b0:	e7f2      	b.n	298 <process_point_buff+0x10>
				}
			}
		}
		printlf("here!");
 2b2:	4817      	ldr	r0, [pc, #92]	@ (310 <process_point_buff+0x88>)
 2b4:	f000 fbe0 	bl	a78 <printlf>
		//Find closest point to the right that has a value
		int rightidx = (i < POINTS_BUF_SIZE) ? (i+1) : 0;
		bool from_0 = !rightidx;
 2b8:	1c63      	adds	r3, r4, #1
 2ba:	bf0c      	ite	eq
 2bc:	2001      	moveq	r0, #1
 2be:	2000      	movne	r0, #0
		while(receiving_point_buffer[rightidx] == 0) {
 2c0:	e001      	b.n	2c6 <process_point_buff+0x3e>
			if(++rightidx >= POINTS_BUF_SIZE){
				if(from_0) {
					receiving_point_buffer[i] = 1; // No data was collected from lidar?
 2c2:	2201      	movs	r2, #1
 2c4:	514a      	str	r2, [r1, r5]
		while(receiving_point_buffer[rightidx] == 0) {
 2c6:	4a11      	ldr	r2, [pc, #68]	@ (30c <process_point_buff+0x84>)
 2c8:	6811      	ldr	r1, [r2, #0]
 2ca:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 2ce:	b942      	cbnz	r2, 2e2 <process_point_buff+0x5a>
			if(++rightidx >= POINTS_BUF_SIZE){
 2d0:	3301      	adds	r3, #1
 2d2:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 2d6:	dbf6      	blt.n	2c6 <process_point_buff+0x3e>
				if(from_0) {
 2d8:	2800      	cmp	r0, #0
 2da:	d1f2      	bne.n	2c2 <process_point_buff+0x3a>
					continue;
				} else {
					rightidx = 0;
					from_0 = true;
 2dc:	2001      	movs	r0, #1
					rightidx = 0;
 2de:	2300      	movs	r3, #0
 2e0:	e7f1      	b.n	2c6 <process_point_buff+0x3e>
				}
			}
		}
		receiving_point_buffer[i] = (receiving_point_buffer[leftidx] + receiving_point_buffer[rightidx])/2;
 2e2:	598b      	ldr	r3, [r1, r6]
 2e4:	441a      	add	r2, r3
 2e6:	0852      	lsrs	r2, r2, #1
 2e8:	514a      	str	r2, [r1, r5]
	for(int i = 1; i < POINTS_BUF_SIZE; i++){
 2ea:	3401      	adds	r4, #1
 2ec:	f5b4 7fb4 	cmp.w	r4, #360	@ 0x168
 2f0:	da0b      	bge.n	30a <process_point_buff+0x82>
		if(receiving_point_buffer[i] != 0) continue;
 2f2:	00a5      	lsls	r5, r4, #2
 2f4:	4b05      	ldr	r3, [pc, #20]	@ (30c <process_point_buff+0x84>)
 2f6:	681b      	ldr	r3, [r3, #0]
 2f8:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 2fc:	2b00      	cmp	r3, #0
 2fe:	d1f4      	bne.n	2ea <process_point_buff+0x62>
		int leftidx = (i == 0) ? (POINTS_BUF_SIZE-1) : (i-1);
 300:	2c00      	cmp	r4, #0
 302:	d0c4      	beq.n	28e <process_point_buff+0x6>
 304:	1e60      	subs	r0, r4, #1
 306:	4603      	mov	r3, r0
		while ((receiving_point_buffer[leftidx] == 0)) {
 308:	e7c6      	b.n	298 <process_point_buff+0x10>
	}
}
 30a:	bd70      	pop	{r4, r5, r6, pc}
 30c:	2000001c 	.word	0x2000001c
 310:	00000bbc 	.word	0x00000bbc

00000314 <setup_lidar_comms>:

void setup_lidar_comms(void){
 314:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
 316:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 31a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 31c:	699b      	ldr	r3, [r3, #24]
 31e:	482c      	ldr	r0, [pc, #176]	@ (3d0 <setup_lidar_comms+0xbc>)
 320:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART2);
 322:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 324:	699b      	ldr	r3, [r3, #24]
 326:	482b      	ldr	r0, [pc, #172]	@ (3d4 <setup_lidar_comms+0xc0>)
 328:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART2)){};
 32a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 32e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 330:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 334:	4827      	ldr	r0, [pc, #156]	@ (3d4 <setup_lidar_comms+0xc0>)
 336:	4798      	blx	r3
 338:	2800      	cmp	r0, #0
 33a:	d0f6      	beq.n	32a <setup_lidar_comms+0x16>
	GPIO_PORTD_LOCK_R = 0x4C4F434B;
 33c:	4c26      	ldr	r4, [pc, #152]	@ (3d8 <setup_lidar_comms+0xc4>)
 33e:	4b27      	ldr	r3, [pc, #156]	@ (3dc <setup_lidar_comms+0xc8>)
 340:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
	GPIO_PORTD_CR_R |= 0xFF;
 344:	f8d4 3524 	ldr.w	r3, [r4, #1316]	@ 0x524
 348:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 34c:	f8c4 3524 	str.w	r3, [r4, #1316]	@ 0x524
	GPIO_PORTD_DEN_R |= 0xFF;
 350:	f8d4 351c 	ldr.w	r3, [r4, #1308]	@ 0x51c
 354:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 358:	f8c4 351c 	str.w	r3, [r4, #1308]	@ 0x51c
	GPIO_PORTD_PCTL_R = (GPIO_PORTD_PCTL_R & ~(GPIO_PCTL_PD7_M | GPIO_PCTL_PD6_M)) | GPIO_PCTL_PD7_U2TX | GPIO_PCTL_PD6_U2RX;
 35c:	f8d4 352c 	ldr.w	r3, [r4, #1324]	@ 0x52c
 360:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 364:	f043 5388 	orr.w	r3, r3, #285212672	@ 0x11000000
 368:	f8c4 352c 	str.w	r3, [r4, #1324]	@ 0x52c
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, LID_PINS, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 36c:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 370:	6a2b      	ldr	r3, [r5, #32]
 372:	695e      	ldr	r6, [r3, #20]
 374:	2308      	movs	r3, #8
 376:	2266      	movs	r2, #102	@ 0x66
 378:	21c0      	movs	r1, #192	@ 0xc0
 37a:	4620      	mov	r0, r4
 37c:	47b0      	blx	r6
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, RX_PIN, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD_WPU);
 37e:	6a2b      	ldr	r3, [r5, #32]
 380:	695e      	ldr	r6, [r3, #20]
 382:	230a      	movs	r3, #10
 384:	2266      	movs	r2, #102	@ 0x66
 386:	2140      	movs	r1, #64	@ 0x40
 388:	4620      	mov	r0, r4
 38a:	47b0      	blx	r6
	ROM_GPIODirModeSet(GPIO_PORTD_BASE, LID_PINS, GPIO_DIR_MODE_HW);
 38c:	6a2b      	ldr	r3, [r5, #32]
 38e:	685b      	ldr	r3, [r3, #4]
 390:	2202      	movs	r2, #2
 392:	21c0      	movs	r1, #192	@ 0xc0
 394:	4620      	mov	r0, r4
 396:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(LID_BASE, ROM_SysCtlClockGet(), LID_BAUD, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));
 398:	696b      	ldr	r3, [r5, #20]
 39a:	695c      	ldr	r4, [r3, #20]
 39c:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 39e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 3a0:	4798      	blx	r3
 3a2:	4601      	mov	r1, r0
 3a4:	2360      	movs	r3, #96	@ 0x60
 3a6:	f44f 3261 	mov.w	r2, #230400	@ 0x38400
 3aa:	480d      	ldr	r0, [pc, #52]	@ (3e0 <setup_lidar_comms+0xcc>)
 3ac:	47a0      	blx	r4
	
	receiving_point_buffer = points_buf_0;
 3ae:	4c0d      	ldr	r4, [pc, #52]	@ (3e4 <setup_lidar_comms+0xd0>)
 3b0:	4d0d      	ldr	r5, [pc, #52]	@ (3e8 <setup_lidar_comms+0xd4>)
 3b2:	6025      	str	r5, [r4, #0]
	zero_point_buf();
 3b4:	f7ff ff5a 	bl	26c <zero_point_buf>
	receiving_point_buffer[0] = 1;
 3b8:	6823      	ldr	r3, [r4, #0]
 3ba:	2201      	movs	r2, #1
 3bc:	601a      	str	r2, [r3, #0]
	process_point_buff();
 3be:	f7ff ff63 	bl	288 <process_point_buff>
	active_point_buffer = points_buf_0;
 3c2:	4b0a      	ldr	r3, [pc, #40]	@ (3ec <setup_lidar_comms+0xd8>)
 3c4:	601d      	str	r5, [r3, #0]
	receiving_point_buffer = points_buf_1;
 3c6:	4b0a      	ldr	r3, [pc, #40]	@ (3f0 <setup_lidar_comms+0xdc>)
 3c8:	6023      	str	r3, [r4, #0]
	zero_point_buf();
 3ca:	f7ff ff4f 	bl	26c <zero_point_buf>
}
 3ce:	bd70      	pop	{r4, r5, r6, pc}
 3d0:	f0000803 	.word	0xf0000803
 3d4:	f0001802 	.word	0xf0001802
 3d8:	40007000 	.word	0x40007000
 3dc:	4c4f434b 	.word	0x4c4f434b
 3e0:	4000e000 	.word	0x4000e000
 3e4:	2000001c 	.word	0x2000001c
 3e8:	200005c4 	.word	0x200005c4
 3ec:	20000020 	.word	0x20000020
 3f0:	20000024 	.word	0x20000024

000003f4 <start_lidar_scan>:

void start_lidar_scan(void) {
 3f4:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, MAGIC);
 3f6:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 3fa:	696b      	ldr	r3, [r5, #20]
 3fc:	681b      	ldr	r3, [r3, #0]
 3fe:	4c05      	ldr	r4, [pc, #20]	@ (414 <start_lidar_scan+0x20>)
 400:	21a5      	movs	r1, #165	@ 0xa5
 402:	4620      	mov	r0, r4
 404:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, START);
 406:	696b      	ldr	r3, [r5, #20]
 408:	681b      	ldr	r3, [r3, #0]
 40a:	2160      	movs	r1, #96	@ 0x60
 40c:	4620      	mov	r0, r4
 40e:	4798      	blx	r3
}
 410:	bd38      	pop	{r3, r4, r5, pc}
 412:	bf00      	nop
 414:	4000e000 	.word	0x4000e000

00000418 <stop_lidar_scan>:

void stop_lidar_scan(void) {
 418:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, MAGIC);
 41a:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 41e:	696b      	ldr	r3, [r5, #20]
 420:	681b      	ldr	r3, [r3, #0]
 422:	4c05      	ldr	r4, [pc, #20]	@ (438 <stop_lidar_scan+0x20>)
 424:	21a5      	movs	r1, #165	@ 0xa5
 426:	4620      	mov	r0, r4
 428:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, STOP);
 42a:	696b      	ldr	r3, [r5, #20]
 42c:	681b      	ldr	r3, [r3, #0]
 42e:	2165      	movs	r1, #101	@ 0x65
 430:	4620      	mov	r0, r4
 432:	4798      	blx	r3
}
 434:	bd38      	pop	{r3, r4, r5, pc}
 436:	bf00      	nop
 438:	4000e000 	.word	0x4000e000

0000043c <clear_lidar_IO>:

void clear_lidar_IO(void){
 43c:	b508      	push	{r3, lr}
	while(ROM_UARTCharsAvail(LID_BASE)){
 43e:	e005      	b.n	44c <clear_lidar_IO+0x10>
		ROM_UARTCharGet(LID_BASE);
 440:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 444:	695b      	ldr	r3, [r3, #20]
 446:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 448:	4805      	ldr	r0, [pc, #20]	@ (460 <clear_lidar_IO+0x24>)
 44a:	4798      	blx	r3
	while(ROM_UARTCharsAvail(LID_BASE)){
 44c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 450:	695b      	ldr	r3, [r3, #20]
 452:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 454:	4802      	ldr	r0, [pc, #8]	@ (460 <clear_lidar_IO+0x24>)
 456:	4798      	blx	r3
 458:	2800      	cmp	r0, #0
 45a:	d1f1      	bne.n	440 <clear_lidar_IO+0x4>
	}
}
 45c:	bd08      	pop	{r3, pc}
 45e:	bf00      	nop
 460:	4000e000 	.word	0x4000e000

00000464 <angle_map>:

int angle_map(int32_t start, int32_t end, int count, int position){
	const int32_t delta = (end > start) ? (end - start) : (start - end);
 464:	4281      	cmp	r1, r0
 466:	dd13      	ble.n	490 <angle_map+0x2c>
 468:	1a09      	subs	r1, r1, r0
	const int32_t delta_per_count = delta/count;
 46a:	fb91 f2f2 	sdiv	r2, r1, r2
	return (((position*delta_per_count) + start) / 64) % 360;
 46e:	fb03 0302 	mla	r3, r3, r2, r0
 472:	2b00      	cmp	r3, #0
 474:	db0e      	blt.n	494 <angle_map+0x30>
 476:	1199      	asrs	r1, r3, #6
 478:	4a07      	ldr	r2, [pc, #28]	@ (498 <angle_map+0x34>)
 47a:	fb82 0201 	smull	r0, r2, r2, r1
 47e:	440a      	add	r2, r1
 480:	17db      	asrs	r3, r3, #31
 482:	ebc3 2322 	rsb	r3, r3, r2, asr #8
}
 486:	f44f 70b4 	mov.w	r0, #360	@ 0x168
 48a:	fb00 1013 	mls	r0, r0, r3, r1
 48e:	4770      	bx	lr
	const int32_t delta = (end > start) ? (end - start) : (start - end);
 490:	1a41      	subs	r1, r0, r1
 492:	e7ea      	b.n	46a <angle_map+0x6>
	return (((position*delta_per_count) + start) / 64) % 360;
 494:	333f      	adds	r3, #63	@ 0x3f
 496:	e7ee      	b.n	476 <angle_map+0x12>
 498:	b60b60b7 	.word	0xb60b60b7

0000049c <print_angles>:

void print_angles(void) {
 49c:	b510      	push	{r4, lr}
	for(int i = 0; i < 360; i++) {
 49e:	2400      	movs	r4, #0
 4a0:	e008      	b.n	4b4 <print_angles+0x18>
		printlf("%d: \t %d", i, active_point_buffer[i]);
 4a2:	4b06      	ldr	r3, [pc, #24]	@ (4bc <print_angles+0x20>)
 4a4:	681b      	ldr	r3, [r3, #0]
 4a6:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
 4aa:	4621      	mov	r1, r4
 4ac:	4804      	ldr	r0, [pc, #16]	@ (4c0 <print_angles+0x24>)
 4ae:	f000 fae3 	bl	a78 <printlf>
	for(int i = 0; i < 360; i++) {
 4b2:	3401      	adds	r4, #1
 4b4:	f5b4 7fb4 	cmp.w	r4, #360	@ 0x168
 4b8:	dbf3      	blt.n	4a2 <print_angles+0x6>
	}
}
 4ba:	bd10      	pop	{r4, pc}
 4bc:	20000020 	.word	0x20000020
 4c0:	00000bc4 	.word	0x00000bc4

000004c4 <process_packets>:

void process_packets(void) {
 4c4:	b510      	push	{r4, lr}
	
	//while(ROM_UARTCharsAvail(LID_BASE)) {
	//	ROM_UARTCharPut(UART0_BASE,ROM_UARTCharGet(LID_BASE));
	//} return;
	
	while(ROM_UARTCharsAvail(LID_BASE)) {
 4c6:	e0f8      	b.n	6ba <process_packets+0x1f6>
		switch(comm_state) {
			case COMM_WAITING:{
				char tmp = ROM_UARTCharGet(LID_BASE);
 4c8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 4cc:	695b      	ldr	r3, [r3, #20]
 4ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 4d0:	488b      	ldr	r0, [pc, #556]	@ (700 <process_packets+0x23c>)
 4d2:	4798      	blx	r3
 4d4:	b2c0      	uxtb	r0, r0
				if(tmp != 0xA5 && tmp != 0xAA ) break; // Really we're looking for 0xA5, but is 0xAA is seen, this will lead to a reset.
 4d6:	28a5      	cmp	r0, #165	@ 0xa5
 4d8:	d002      	beq.n	4e0 <process_packets+0x1c>
 4da:	28aa      	cmp	r0, #170	@ 0xaa
 4dc:	f040 80ed 	bne.w	6ba <process_packets+0x1f6>
				comm_state = RECEIVING_HEADER;
 4e0:	2301      	movs	r3, #1
 4e2:	4a88      	ldr	r2, [pc, #544]	@ (704 <process_packets+0x240>)
 4e4:	7013      	strb	r3, [r2, #0]
				current_byte = 1;
 4e6:	4a88      	ldr	r2, [pc, #544]	@ (708 <process_packets+0x244>)
 4e8:	8013      	strh	r3, [r2, #0]
				current_message.bytes[0] = 0xA5;
 4ea:	4b88      	ldr	r3, [pc, #544]	@ (70c <process_packets+0x248>)
 4ec:	22a5      	movs	r2, #165	@ 0xa5
 4ee:	701a      	strb	r2, [r3, #0]
				printlf("Header Started\n");
 4f0:	4887      	ldr	r0, [pc, #540]	@ (710 <process_packets+0x24c>)
 4f2:	f000 fac1 	bl	a78 <printlf>
			} break;
 4f6:	e0e0      	b.n	6ba <process_packets+0x1f6>
			
			case RECEIVING_HEADER: {
				current_message.bytes[current_byte++] = ROM_UARTCharGet(LID_BASE);
 4f8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 4fc:	695b      	ldr	r3, [r3, #20]
 4fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 500:	487f      	ldr	r0, [pc, #508]	@ (700 <process_packets+0x23c>)
 502:	4798      	blx	r3
 504:	4980      	ldr	r1, [pc, #512]	@ (708 <process_packets+0x244>)
 506:	880a      	ldrh	r2, [r1, #0]
 508:	1c53      	adds	r3, r2, #1
 50a:	b29b      	uxth	r3, r3
 50c:	800b      	strh	r3, [r1, #0]
 50e:	497f      	ldr	r1, [pc, #508]	@ (70c <process_packets+0x248>)
 510:	5488      	strb	r0, [r1, r2]
				//printlf(" %d : %d\n", current_message.bytes[current_byte-1], current_byte-1);
				//If we're not done receiving the header, continue
				if(current_byte < sizeof(current_message)) break; 
 512:	2b06      	cmp	r3, #6
 514:	f240 80d1 	bls.w	6ba <process_packets+0x1f6>
				
				//process the header
				if(current_message.header.start_code != HEADER_MAGIC) {
 518:	8809      	ldrh	r1, [r1, #0]
 51a:	f645 23a5 	movw	r3, #23205	@ 0x5aa5
 51e:	4299      	cmp	r1, r3
 520:	d016      	beq.n	550 <process_packets+0x8c>
					printlf("Unexpected Header %d, resetting\n", current_message.header.start_code);
 522:	487c      	ldr	r0, [pc, #496]	@ (714 <process_packets+0x250>)
 524:	f000 faa8 	bl	a78 <printlf>
					stop_lidar_scan();
 528:	f7ff ff76 	bl	418 <stop_lidar_scan>
					clear_lidar_IO();
 52c:	f7ff ff86 	bl	43c <clear_lidar_IO>
					ROM_SysCtlDelay(20000);
 530:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 534:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 536:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 53a:	f644 6020 	movw	r0, #20000	@ 0x4e20
 53e:	4798      	blx	r3
					clear_lidar_IO();
 540:	f7ff ff7c 	bl	43c <clear_lidar_IO>
					start_lidar_scan();
 544:	f7ff ff56 	bl	3f4 <start_lidar_scan>
					comm_state = COMM_WAITING;
 548:	4b6e      	ldr	r3, [pc, #440]	@ (704 <process_packets+0x240>)
 54a:	2200      	movs	r2, #0
 54c:	701a      	strb	r2, [r3, #0]
					break;
 54e:	e0b4      	b.n	6ba <process_packets+0x1f6>
				} else {
					printlf("Got valid header!\n");
 550:	4871      	ldr	r0, [pc, #452]	@ (718 <process_packets+0x254>)
 552:	f000 fa91 	bl	a78 <printlf>
				}
				
				switch(current_message.header.type){
 556:	4b6d      	ldr	r3, [pc, #436]	@ (70c <process_packets+0x248>)
 558:	7999      	ldrb	r1, [r3, #6]
 55a:	2906      	cmp	r1, #6
 55c:	d00b      	beq.n	576 <process_packets+0xb2>
 55e:	2981      	cmp	r1, #129	@ 0x81
 560:	d10d      	bne.n	57e <process_packets+0xba>
					case TYPE_SCAN:
						comm_state = WAITING_SCAN_HEADER;
 562:	4b68      	ldr	r3, [pc, #416]	@ (704 <process_packets+0x240>)
 564:	2202      	movs	r2, #2
 566:	701a      	strb	r2, [r3, #0]
						current_byte = 0;
 568:	4b67      	ldr	r3, [pc, #412]	@ (708 <process_packets+0x244>)
 56a:	2200      	movs	r2, #0
 56c:	801a      	strh	r2, [r3, #0]
						printlf("Header is start of scan\n");
 56e:	486b      	ldr	r0, [pc, #428]	@ (71c <process_packets+0x258>)
 570:	f000 fa82 	bl	a78 <printlf>
					break;
 574:	e0a1      	b.n	6ba <process_packets+0x1f6>
					
					case TYPE_HEALTH_STATUS:
						comm_state = RECEIVING_HEALTH_REPORT;
 576:	4b63      	ldr	r3, [pc, #396]	@ (704 <process_packets+0x240>)
 578:	2205      	movs	r2, #5
 57a:	701a      	strb	r2, [r3, #0]
					break;
 57c:	e09d      	b.n	6ba <process_packets+0x1f6>
					
					default:
						printlf("Unexpected message type %d. Discarding...\n", (uint32_t)current_message.header.type);
 57e:	4868      	ldr	r0, [pc, #416]	@ (720 <process_packets+0x25c>)
 580:	f000 fa7a 	bl	a78 <printlf>
						comm_state = COMM_WAITING;
 584:	4b5f      	ldr	r3, [pc, #380]	@ (704 <process_packets+0x240>)
 586:	2200      	movs	r2, #0
 588:	701a      	strb	r2, [r3, #0]
					break;
 58a:	e096      	b.n	6ba <process_packets+0x1f6>
				}
			} break;
			
			case WAITING_SCAN_HEADER:{
				if(ROM_UARTCharGet(LID_BASE) != 0xAA) break;
 58c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 590:	695b      	ldr	r3, [r3, #20]
 592:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 594:	485a      	ldr	r0, [pc, #360]	@ (700 <process_packets+0x23c>)
 596:	4798      	blx	r3
 598:	28aa      	cmp	r0, #170	@ 0xaa
 59a:	f040 808e 	bne.w	6ba <process_packets+0x1f6>
				comm_state = RECEIVING_SCAN_HEADER;
 59e:	4b59      	ldr	r3, [pc, #356]	@ (704 <process_packets+0x240>)
 5a0:	2203      	movs	r2, #3
 5a2:	701a      	strb	r2, [r3, #0]
				current_byte = 1;
 5a4:	4b58      	ldr	r3, [pc, #352]	@ (708 <process_packets+0x244>)
 5a6:	2201      	movs	r2, #1
 5a8:	801a      	strh	r2, [r3, #0]
				current_scan.bytes[0] = 0xAA;
 5aa:	4b5e      	ldr	r3, [pc, #376]	@ (724 <process_packets+0x260>)
 5ac:	22aa      	movs	r2, #170	@ 0xaa
 5ae:	701a      	strb	r2, [r3, #0]
			} break;
 5b0:	e083      	b.n	6ba <process_packets+0x1f6>
				
			case RECEIVING_SCAN_HEADER: {
				current_scan.bytes[current_byte++] = ROM_UARTCharGet(LID_BASE);
 5b2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 5b6:	695b      	ldr	r3, [r3, #20]
 5b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 5ba:	4851      	ldr	r0, [pc, #324]	@ (700 <process_packets+0x23c>)
 5bc:	4798      	blx	r3
 5be:	4952      	ldr	r1, [pc, #328]	@ (708 <process_packets+0x244>)
 5c0:	880a      	ldrh	r2, [r1, #0]
 5c2:	1c53      	adds	r3, r2, #1
 5c4:	b29b      	uxth	r3, r3
 5c6:	800b      	strh	r3, [r1, #0]
 5c8:	4956      	ldr	r1, [pc, #344]	@ (724 <process_packets+0x260>)
 5ca:	5488      	strb	r0, [r1, r2]
				//ROM_UARTCharPut(UART0_BASE, current_scan.bytes[current_byte-1]);
				//If we're not done receiving the header, continue
				if(current_byte < sizeof(current_scan)) break;
 5cc:	2b09      	cmp	r3, #9
 5ce:	d974      	bls.n	6ba <process_packets+0x1f6>
				printlf("Got scan header\n");
 5d0:	4855      	ldr	r0, [pc, #340]	@ (728 <process_packets+0x264>)
 5d2:	f000 fa51 	bl	a78 <printlf>
				if(current_scan.header.start_code != SCAN_MAGIC){
 5d6:	4b53      	ldr	r3, [pc, #332]	@ (724 <process_packets+0x260>)
 5d8:	881a      	ldrh	r2, [r3, #0]
 5da:	f245 53aa 	movw	r3, #21930	@ 0x55aa
 5de:	429a      	cmp	r2, r3
 5e0:	d10a      	bne.n	5f8 <process_packets+0x134>
					start_lidar_scan();
					comm_state = COMM_WAITING;
					current_byte=0;
					return;
				}
				if(current_scan.header.type == START_PACKET) {
 5e2:	4b50      	ldr	r3, [pc, #320]	@ (724 <process_packets+0x260>)
 5e4:	789b      	ldrb	r3, [r3, #2]
 5e6:	2b01      	cmp	r3, #1
 5e8:	d013      	beq.n	612 <process_packets+0x14e>
					zero_point_buf();printlf("here");
					comm_state = WAITING_SCAN_HEADER;
					print_angles();
					
				} else {
					comm_state = RECEIVING_SCAN_DATA;
 5ea:	4b46      	ldr	r3, [pc, #280]	@ (704 <process_packets+0x240>)
 5ec:	2204      	movs	r2, #4
 5ee:	701a      	strb	r2, [r3, #0]
					current_byte = 0;
 5f0:	4b45      	ldr	r3, [pc, #276]	@ (708 <process_packets+0x244>)
 5f2:	2200      	movs	r2, #0
 5f4:	801a      	strh	r2, [r3, #0]
 5f6:	e060      	b.n	6ba <process_packets+0x1f6>
					printlf("Scan header invalid! Reset\n");
 5f8:	484c      	ldr	r0, [pc, #304]	@ (72c <process_packets+0x268>)
 5fa:	f000 fa3d 	bl	a78 <printlf>
					stop_lidar_scan();
 5fe:	f7ff ff0b 	bl	418 <stop_lidar_scan>
					start_lidar_scan();
 602:	f7ff fef7 	bl	3f4 <start_lidar_scan>
					comm_state = COMM_WAITING;
 606:	2300      	movs	r3, #0
 608:	4a3e      	ldr	r2, [pc, #248]	@ (704 <process_packets+0x240>)
 60a:	7013      	strb	r3, [r2, #0]
					current_byte=0;
 60c:	4a3e      	ldr	r2, [pc, #248]	@ (708 <process_packets+0x244>)
 60e:	8013      	strh	r3, [r2, #0]
				printlf("Invalid comm state - resetting");
				comm_state = COMM_WAITING;
			break;
		}
	}
}
 610:	bd10      	pop	{r4, pc}
					printlf("START PACKET\n");
 612:	4847      	ldr	r0, [pc, #284]	@ (730 <process_packets+0x26c>)
 614:	f000 fa30 	bl	a78 <printlf>
					process_point_buff();printlf("here");
 618:	f7ff fe36 	bl	288 <process_point_buff>
 61c:	4c45      	ldr	r4, [pc, #276]	@ (734 <process_packets+0x270>)
 61e:	4620      	mov	r0, r4
 620:	f000 fa2a 	bl	a78 <printlf>
					uint32_t *temp = active_point_buffer;
 624:	4a44      	ldr	r2, [pc, #272]	@ (738 <process_packets+0x274>)
 626:	6811      	ldr	r1, [r2, #0]
					active_point_buffer = receiving_point_buffer;
 628:	4b44      	ldr	r3, [pc, #272]	@ (73c <process_packets+0x278>)
 62a:	6818      	ldr	r0, [r3, #0]
 62c:	6010      	str	r0, [r2, #0]
					receiving_point_buffer = temp;
 62e:	6019      	str	r1, [r3, #0]
					current_byte = 0;
 630:	4b35      	ldr	r3, [pc, #212]	@ (708 <process_packets+0x244>)
 632:	2200      	movs	r2, #0
 634:	801a      	strh	r2, [r3, #0]
					zero_point_buf();printlf("here");
 636:	f7ff fe19 	bl	26c <zero_point_buf>
 63a:	4620      	mov	r0, r4
 63c:	f000 fa1c 	bl	a78 <printlf>
					comm_state = WAITING_SCAN_HEADER;
 640:	4b30      	ldr	r3, [pc, #192]	@ (704 <process_packets+0x240>)
 642:	2202      	movs	r2, #2
 644:	701a      	strb	r2, [r3, #0]
					print_angles();
 646:	f7ff ff29 	bl	49c <print_angles>
 64a:	e036      	b.n	6ba <process_packets+0x1f6>
				switch(current_byte % 2){
 64c:	4b2e      	ldr	r3, [pc, #184]	@ (708 <process_packets+0x244>)
 64e:	881b      	ldrh	r3, [r3, #0]
 650:	f013 0301 	ands.w	r3, r3, #1
 654:	d022      	beq.n	69c <process_packets+0x1d8>
 656:	2b00      	cmp	r3, #0
 658:	d02f      	beq.n	6ba <process_packets+0x1f6>
						msb = ROM_UARTCharGet(LID_BASE);
 65a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 65e:	695b      	ldr	r3, [r3, #20]
 660:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 662:	4827      	ldr	r0, [pc, #156]	@ (700 <process_packets+0x23c>)
 664:	4798      	blx	r3
 666:	4b36      	ldr	r3, [pc, #216]	@ (740 <process_packets+0x27c>)
 668:	7018      	strb	r0, [r3, #0]
						uint32_t val = ((msb << 8) | lsb) >> 2;
 66a:	b2c0      	uxtb	r0, r0
 66c:	4b35      	ldr	r3, [pc, #212]	@ (744 <process_packets+0x280>)
 66e:	781b      	ldrb	r3, [r3, #0]
 670:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 674:	109c      	asrs	r4, r3, #2
						int angle = angle_map(current_scan.header.start_angle, current_scan.header.end_angle, current_scan.header.sample_count, current_byte>>1);
 676:	482b      	ldr	r0, [pc, #172]	@ (724 <process_packets+0x260>)
 678:	4b23      	ldr	r3, [pc, #140]	@ (708 <process_packets+0x244>)
 67a:	881b      	ldrh	r3, [r3, #0]
 67c:	085b      	lsrs	r3, r3, #1
 67e:	78c2      	ldrb	r2, [r0, #3]
 680:	88c1      	ldrh	r1, [r0, #6]
 682:	8880      	ldrh	r0, [r0, #4]
 684:	f7ff feee 	bl	464 <angle_map>
						if (receiving_point_buffer[angle]) {
 688:	4b2c      	ldr	r3, [pc, #176]	@ (73c <process_packets+0x278>)
 68a:	681a      	ldr	r2, [r3, #0]
 68c:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
 690:	b16b      	cbz	r3, 6ae <process_packets+0x1ea>
							receiving_point_buffer[angle] = (receiving_point_buffer[angle] + val) >> 1;
 692:	4423      	add	r3, r4
 694:	085b      	lsrs	r3, r3, #1
 696:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 69a:	e00e      	b.n	6ba <process_packets+0x1f6>
						lsb = ROM_UARTCharGet(LID_BASE);
 69c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 6a0:	695b      	ldr	r3, [r3, #20]
 6a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 6a4:	4816      	ldr	r0, [pc, #88]	@ (700 <process_packets+0x23c>)
 6a6:	4798      	blx	r3
 6a8:	4b26      	ldr	r3, [pc, #152]	@ (744 <process_packets+0x280>)
 6aa:	7018      	strb	r0, [r3, #0]
					break;
 6ac:	e005      	b.n	6ba <process_packets+0x1f6>
							receiving_point_buffer[angle] = val;
 6ae:	f842 4020 	str.w	r4, [r2, r0, lsl #2]
 6b2:	e002      	b.n	6ba <process_packets+0x1f6>
				comm_state = COMM_WAITING;
 6b4:	4b13      	ldr	r3, [pc, #76]	@ (704 <process_packets+0x240>)
 6b6:	2200      	movs	r2, #0
 6b8:	701a      	strb	r2, [r3, #0]
	while(ROM_UARTCharsAvail(LID_BASE)) {
 6ba:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 6be:	695b      	ldr	r3, [r3, #20]
 6c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 6c2:	480f      	ldr	r0, [pc, #60]	@ (700 <process_packets+0x23c>)
 6c4:	4798      	blx	r3
 6c6:	2800      	cmp	r0, #0
 6c8:	d0a2      	beq.n	610 <process_packets+0x14c>
		switch(comm_state) {
 6ca:	4b0e      	ldr	r3, [pc, #56]	@ (704 <process_packets+0x240>)
 6cc:	781b      	ldrb	r3, [r3, #0]
 6ce:	2b05      	cmp	r3, #5
 6d0:	d80e      	bhi.n	6f0 <process_packets+0x22c>
 6d2:	a201      	add	r2, pc, #4	@ (adr r2, 6d8 <process_packets+0x214>)
 6d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 6d8:	000004c9 	.word	0x000004c9
 6dc:	000004f9 	.word	0x000004f9
 6e0:	0000058d 	.word	0x0000058d
 6e4:	000005b3 	.word	0x000005b3
 6e8:	0000064d 	.word	0x0000064d
 6ec:	000006b5 	.word	0x000006b5
				printlf("Invalid comm state - resetting");
 6f0:	4815      	ldr	r0, [pc, #84]	@ (748 <process_packets+0x284>)
 6f2:	f000 f9c1 	bl	a78 <printlf>
				comm_state = COMM_WAITING;
 6f6:	4b03      	ldr	r3, [pc, #12]	@ (704 <process_packets+0x240>)
 6f8:	2200      	movs	r2, #0
 6fa:	701a      	strb	r2, [r3, #0]
			break;
 6fc:	e7dd      	b.n	6ba <process_packets+0x1f6>
 6fe:	bf00      	nop
 700:	4000e000 	.word	0x4000e000
 704:	2000001a 	.word	0x2000001a
 708:	20000018 	.word	0x20000018
 70c:	20000010 	.word	0x20000010
 710:	00000bd0 	.word	0x00000bd0
 714:	00000be0 	.word	0x00000be0
 718:	00000c04 	.word	0x00000c04
 71c:	00000c18 	.word	0x00000c18
 720:	00000c34 	.word	0x00000c34
 724:	20000004 	.word	0x20000004
 728:	00000c60 	.word	0x00000c60
 72c:	00000c74 	.word	0x00000c74
 730:	00000c90 	.word	0x00000c90
 734:	00000ca0 	.word	0x00000ca0
 738:	20000020 	.word	0x20000020
 73c:	2000001c 	.word	0x2000001c
 740:	20000000 	.word	0x20000000
 744:	20000001 	.word	0x20000001
 748:	00000ca8 	.word	0x00000ca8

0000074c <main>:

#define Disable_Interrupts() __asm("CPSID I")
#define Enable_Interrupts() 


int main (void) {
 74c:	b508      	push	{r3, lr}
	ROM_SysCtlClockSet(SYSCTL_SYSDIV_2_5 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);
 74e:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 752:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 754:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 756:	4815      	ldr	r0, [pc, #84]	@ (7ac <main+0x60>)
 758:	4798      	blx	r3
	
	setup_uart_printer();
 75a:	f000 f865 	bl	828 <setup_uart_printer>
	printlf("Init Lidar Comms\n");
 75e:	4814      	ldr	r0, [pc, #80]	@ (7b0 <main+0x64>)
 760:	f000 f98a 	bl	a78 <printlf>
	setup_lidar_comms();
 764:	f7ff fdd6 	bl	314 <setup_lidar_comms>
	printlf("Stopping Lidar scan\n");
 768:	4812      	ldr	r0, [pc, #72]	@ (7b4 <main+0x68>)
 76a:	f000 f985 	bl	a78 <printlf>
	stop_lidar_scan();
 76e:	f7ff fe53 	bl	418 <stop_lidar_scan>
	printlf("Flushing Lidar buffer\n");
 772:	4811      	ldr	r0, [pc, #68]	@ (7b8 <main+0x6c>)
 774:	f000 f980 	bl	a78 <printlf>
	clear_lidar_IO();
 778:	f7ff fe60 	bl	43c <clear_lidar_IO>
	__asm("CPSIE I");
 77c:	b662      	cpsie	i
	ROM_SysCtlDelay(20000000);
 77e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 780:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 784:	480d      	ldr	r0, [pc, #52]	@ (7bc <main+0x70>)
 786:	4798      	blx	r3
	//ROM_SysCtlDelay(20000000);
	//ROM_SysCtlDelay(20000000);
	//ROM_SysCtlDelay(20000000);
	printlf("Starting lidar scan#####################\n");
 788:	480d      	ldr	r0, [pc, #52]	@ (7c0 <main+0x74>)
 78a:	f000 f975 	bl	a78 <printlf>
	clear_lidar_IO();
 78e:	f7ff fe55 	bl	43c <clear_lidar_IO>
	ROM_SysCtlDelay(20000);
 792:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 794:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 798:	f644 6020 	movw	r0, #20000	@ 0x4e20
 79c:	4798      	blx	r3
	clear_lidar_IO();
 79e:	f7ff fe4d 	bl	43c <clear_lidar_IO>
	start_lidar_scan();
 7a2:	f7ff fe27 	bl	3f4 <start_lidar_scan>
	while(1) {
		process_packets();
 7a6:	f7ff fe8d 	bl	4c4 <process_packets>
	while(1) {
 7aa:	e7fc      	b.n	7a6 <main+0x5a>
 7ac:	c1000540 	.word	0xc1000540
 7b0:	00000cc8 	.word	0x00000cc8
 7b4:	00000cdc 	.word	0x00000cdc
 7b8:	00000cf4 	.word	0x00000cf4
 7bc:	01312d00 	.word	0x01312d00
 7c0:	00000d0c 	.word	0x00000d0c

000007c4 <timeKeeperISR>:
}

void timeKeeperISR (void) {
 7c4:	b410      	push	{r4}
	static char second_counter = 0;
	static char sonic_sensor_action_div = 0;
	
	TIMER1_IMR_R &= ~TIMER_IMR_TATOIM; //Disable Interrupt
 7c6:	4b14      	ldr	r3, [pc, #80]	@ (818 <timeKeeperISR+0x54>)
 7c8:	699a      	ldr	r2, [r3, #24]
 7ca:	f022 0201 	bic.w	r2, r2, #1
 7ce:	619a      	str	r2, [r3, #24]
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 7d0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 7d2:	f042 0201 	orr.w	r2, r2, #1
 7d6:	625a      	str	r2, [r3, #36]	@ 0x24
	
	timer1_overflow_count++;
 7d8:	4c10      	ldr	r4, [pc, #64]	@ (81c <timeKeeperISR+0x58>)
 7da:	e9d4 2300 	ldrd	r2, r3, [r4]
 7de:	1c50      	adds	r0, r2, #1
 7e0:	f143 0100 	adc.w	r1, r3, #0
 7e4:	e9c4 0100 	strd	r0, r1, [r4]
	
	//Every second
	if(++second_counter == TIMER1_MULTIPLIER) {
 7e8:	4a0d      	ldr	r2, [pc, #52]	@ (820 <timeKeeperISR+0x5c>)
 7ea:	7813      	ldrb	r3, [r2, #0]
 7ec:	3301      	adds	r3, #1
 7ee:	b2db      	uxtb	r3, r3
 7f0:	7013      	strb	r3, [r2, #0]
 7f2:	2b20      	cmp	r3, #32
 7f4:	d007      	beq.n	806 <timeKeeperISR+0x42>
		uptime_seconds++;
		second_counter = 0;
	}
	
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
 7f6:	4a08      	ldr	r2, [pc, #32]	@ (818 <timeKeeperISR+0x54>)
 7f8:	6993      	ldr	r3, [r2, #24]
 7fa:	f043 0301 	orr.w	r3, r3, #1
 7fe:	6193      	str	r3, [r2, #24]
}
 800:	f85d 4b04 	ldr.w	r4, [sp], #4
 804:	4770      	bx	lr
		uptime_seconds++;
 806:	4a07      	ldr	r2, [pc, #28]	@ (824 <timeKeeperISR+0x60>)
 808:	6813      	ldr	r3, [r2, #0]
 80a:	3301      	adds	r3, #1
 80c:	6013      	str	r3, [r2, #0]
		second_counter = 0;
 80e:	4b04      	ldr	r3, [pc, #16]	@ (820 <timeKeeperISR+0x5c>)
 810:	2200      	movs	r2, #0
 812:	701a      	strb	r2, [r3, #0]
 814:	e7ef      	b.n	7f6 <timeKeeperISR+0x32>
 816:	bf00      	nop
 818:	40031000 	.word	0x40031000
 81c:	20000b68 	.word	0x20000b68
 820:	20000b64 	.word	0x20000b64
 824:	20000b70 	.word	0x20000b70

00000828 <setup_uart_printer>:
#include <inc/hw_memmap.h>
#include <common/tm4c123gh6pm.h>

#define INFINITY 1.0f/0.f

void setup_uart_printer(void){
 828:	b538      	push	{r3, r4, r5, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
 82a:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 82e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 830:	699b      	ldr	r3, [r3, #24]
 832:	4816      	ldr	r0, [pc, #88]	@ (88c <setup_uart_printer+0x64>)
 834:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
 836:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 838:	699b      	ldr	r3, [r3, #24]
 83a:	4815      	ldr	r0, [pc, #84]	@ (890 <setup_uart_printer+0x68>)
 83c:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART0)){};
 83e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 842:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 844:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 848:	4811      	ldr	r0, [pc, #68]	@ (890 <setup_uart_printer+0x68>)
 84a:	4798      	blx	r3
 84c:	2800      	cmp	r0, #0
 84e:	d0f6      	beq.n	83e <setup_uart_printer+0x16>
	
	ROM_GPIOPadConfigSet(GPIO_PORTA_BASE, 3, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 850:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 854:	6a23      	ldr	r3, [r4, #32]
 856:	695d      	ldr	r5, [r3, #20]
 858:	2308      	movs	r3, #8
 85a:	2266      	movs	r2, #102	@ 0x66
 85c:	2103      	movs	r1, #3
 85e:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 862:	47a8      	blx	r5
	ROM_GPIODirModeSet(GPIO_PORTA_BASE, 3, GPIO_DIR_MODE_HW);
 864:	6a23      	ldr	r3, [r4, #32]
 866:	685b      	ldr	r3, [r3, #4]
 868:	2202      	movs	r2, #2
 86a:	2103      	movs	r1, #3
 86c:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 870:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(UART0_BASE, ROM_SysCtlClockGet(), 921600,
 872:	6963      	ldr	r3, [r4, #20]
 874:	695d      	ldr	r5, [r3, #20]
 876:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 878:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 87a:	4798      	blx	r3
 87c:	4601      	mov	r1, r0
 87e:	2368      	movs	r3, #104	@ 0x68
 880:	f44f 2261 	mov.w	r2, #921600	@ 0xe1000
 884:	4803      	ldr	r0, [pc, #12]	@ (894 <setup_uart_printer+0x6c>)
 886:	47a8      	blx	r5
                            (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_TWO | UART_CONFIG_PAR_NONE));
}
 888:	bd38      	pop	{r3, r4, r5, pc}
 88a:	bf00      	nop
 88c:	f0000800 	.word	0xf0000800
 890:	f0001800 	.word	0xf0001800
 894:	4000c000 	.word	0x4000c000

00000898 <putchar>:

void putchar(char c) {
 898:	b508      	push	{r3, lr}
 89a:	4601      	mov	r1, r0
	static int chars_sent_recently = 0;
	ROM_UARTCharPut(UART0_BASE, c);
 89c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8a0:	695b      	ldr	r3, [r3, #20]
 8a2:	681b      	ldr	r3, [r3, #0]
 8a4:	480b      	ldr	r0, [pc, #44]	@ (8d4 <putchar+0x3c>)
 8a6:	4798      	blx	r3
	while(ROM_UARTBusy(UART0_BASE)) {};
 8a8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8ac:	695b      	ldr	r3, [r3, #20]
 8ae:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8b0:	4808      	ldr	r0, [pc, #32]	@ (8d4 <putchar+0x3c>)
 8b2:	4798      	blx	r3
 8b4:	2800      	cmp	r0, #0
 8b6:	d1f7      	bne.n	8a8 <putchar+0x10>
	
	//Really dumb, but avoid overwhelming ICDI
	if(++chars_sent_recently > 7) {
 8b8:	4a07      	ldr	r2, [pc, #28]	@ (8d8 <putchar+0x40>)
 8ba:	6813      	ldr	r3, [r2, #0]
 8bc:	3301      	adds	r3, #1
 8be:	6013      	str	r3, [r2, #0]
 8c0:	2b07      	cmp	r3, #7
 8c2:	dd06      	ble.n	8d2 <putchar+0x3a>
		chars_sent_recently = 0;
 8c4:	2300      	movs	r3, #0
 8c6:	6013      	str	r3, [r2, #0]
		for(int i = 0; i < 150; i++) {
 8c8:	e001      	b.n	8ce <putchar+0x36>
			__asm("mov r1,r1\n");
 8ca:	4609      	mov	r1, r1
		for(int i = 0; i < 150; i++) {
 8cc:	3301      	adds	r3, #1
 8ce:	2b95      	cmp	r3, #149	@ 0x95
 8d0:	ddfb      	ble.n	8ca <putchar+0x32>
		}
	}
}
 8d2:	bd08      	pop	{r3, pc}
 8d4:	4000c000 	.word	0x4000c000
 8d8:	20000b74 	.word	0x20000b74

000008dc <print_string>:

void print_string(const char * const str) {
 8dc:	b538      	push	{r3, r4, r5, lr}
 8de:	4605      	mov	r5, r0
	for(int i = 0; str[i] != '\0'; i++) {
 8e0:	2400      	movs	r4, #0
 8e2:	e002      	b.n	8ea <print_string+0xe>
		putchar( str[i]);
 8e4:	f7ff ffd8 	bl	898 <putchar>
	for(int i = 0; str[i] != '\0'; i++) {
 8e8:	3401      	adds	r4, #1
 8ea:	5d28      	ldrb	r0, [r5, r4]
 8ec:	2800      	cmp	r0, #0
 8ee:	d1f9      	bne.n	8e4 <print_string+0x8>
	}
}
 8f0:	bd38      	pop	{r3, r4, r5, pc}
	...

000008f4 <print_unsigned_decimal>:

void print_unsigned_decimal(uint32_t num){
 8f4:	b510      	push	{r4, lr}
 8f6:	b084      	sub	sp, #16
	
	char buf[11]; //Large enough to fit any value of num
	
	int places = 0;
 8f8:	2400      	movs	r4, #0
	
	do {
		buf[places++] = (char)('0' + (num % 10));
 8fa:	4b10      	ldr	r3, [pc, #64]	@ (93c <print_unsigned_decimal+0x48>)
 8fc:	fba3 2300 	umull	r2, r3, r3, r0
 900:	08db      	lsrs	r3, r3, #3
 902:	4619      	mov	r1, r3
 904:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 908:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 90c:	4622      	mov	r2, r4
 90e:	3330      	adds	r3, #48	@ 0x30
 910:	3210      	adds	r2, #16
 912:	446a      	add	r2, sp
 914:	3401      	adds	r4, #1
 916:	f802 3c0c 	strb.w	r3, [r2, #-12]
		num /= 10;
 91a:	4603      	mov	r3, r0
 91c:	4608      	mov	r0, r1
	} while (num > 0);
 91e:	2b09      	cmp	r3, #9
 920:	d8eb      	bhi.n	8fa <print_unsigned_decimal+0x6>
 922:	e007      	b.n	934 <print_unsigned_decimal+0x40>
	
	for(; places; places--) {
		putchar( buf[places-1]);
 924:	3c01      	subs	r4, #1
 926:	f104 0310 	add.w	r3, r4, #16
 92a:	446b      	add	r3, sp
 92c:	f813 0c0c 	ldrb.w	r0, [r3, #-12]
 930:	f7ff ffb2 	bl	898 <putchar>
	for(; places; places--) {
 934:	2c00      	cmp	r4, #0
 936:	d1f5      	bne.n	924 <print_unsigned_decimal+0x30>
	}
}
 938:	b004      	add	sp, #16
 93a:	bd10      	pop	{r4, pc}
 93c:	cccccccd 	.word	0xcccccccd

00000940 <print_decimal>:

void print_decimal(int32_t num){
 940:	b510      	push	{r4, lr}
	
	if (num < 0) {
 942:	1e04      	subs	r4, r0, #0
 944:	db03      	blt.n	94e <print_decimal+0xe>
		putchar( '-');
		num = 0 - num;
	}
	
	print_unsigned_decimal((uint32_t)num);
 946:	4620      	mov	r0, r4
 948:	f7ff ffd4 	bl	8f4 <print_unsigned_decimal>
}
 94c:	bd10      	pop	{r4, pc}
		putchar( '-');
 94e:	202d      	movs	r0, #45	@ 0x2d
 950:	f7ff ffa2 	bl	898 <putchar>
		num = 0 - num;
 954:	4264      	negs	r4, r4
 956:	e7f6      	b.n	946 <print_decimal+0x6>

00000958 <print_float>:

void print_float(float number) {
 958:	b510      	push	{r4, lr}
 95a:	ed2d 8b02 	vpush	{d8}
 95e:	b084      	sub	sp, #16
	
	if(number != number) { //NaN is not equal to anything, including NaN
 960:	eeb4 0a40 	vcmp.f32	s0, s0
 964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 968:	d137      	bne.n	9da <print_float+0x82>
		print_string("NaN");
		return;
	}
	
	if(number == INFINITY || number == -INFINITY) {
 96a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 96e:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ a5c <print_float+0x104>
 972:	eec6 7a87 	vdiv.f32	s15, s13, s14
 976:	eef4 7a40 	vcmp.f32	s15, s0
 97a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 97e:	d030      	beq.n	9e2 <print_float+0x8a>
 980:	eef1 7a67 	vneg.f32	s15, s15
 984:	eef4 7a40 	vcmp.f32	s15, s0
 988:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 98c:	d029      	beq.n	9e2 <print_float+0x8a>
		print_string("inf");
		return;
	}
	
	if(number > UINT32_MAX || (0-number) > UINT32_MAX) {
 98e:	eddf 7a34 	vldr	s15, [pc, #208]	@ a60 <print_float+0x108>
 992:	eeb4 0ae7 	vcmpe.f32	s0, s15
 996:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 99a:	dc29      	bgt.n	9f0 <print_float+0x98>
 99c:	ed9f 8a2f 	vldr	s16, [pc, #188]	@ a5c <print_float+0x104>
 9a0:	ee38 8a40 	vsub.f32	s16, s16, s0
 9a4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 9a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9ac:	dc20      	bgt.n	9f0 <print_float+0x98>
		return;
	}
	
	char buf[15]; // large enough to fit any value
	
	if(number < 0) {
 9ae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 9b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9b6:	d41f      	bmi.n	9f8 <print_float+0xa0>
		putchar( '-');
		number = 0 - number;
	}
	
	uint32_t integerPart = (uint32_t)number;
 9b8:	eefc 7ac0 	vcvt.u32.f32	s15, s0
	uint32_t decimalPart = (uint32_t)((number - integerPart) * 1000);
 9bc:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 9c0:	ee30 0a47 	vsub.f32	s0, s0, s14
 9c4:	ed9f 7a27 	vldr	s14, [pc, #156]	@ a64 <print_float+0x10c>
 9c8:	ee20 0a07 	vmul.f32	s0, s0, s14
 9cc:	eebc 7ac0 	vcvt.u32.f32	s14, s0
 9d0:	ee17 3a10 	vmov	r3, s14
	
	int places = 0;
	
	for(int i = 0; i < 3; i++) {
 9d4:	2000      	movs	r0, #0
	int places = 0;
 9d6:	4601      	mov	r1, r0
	for(int i = 0; i < 3; i++) {
 9d8:	e026      	b.n	a28 <print_float+0xd0>
		print_string("NaN");
 9da:	4823      	ldr	r0, [pc, #140]	@ (a68 <print_float+0x110>)
 9dc:	f7ff ff7e 	bl	8dc <print_string>
		return;
 9e0:	e002      	b.n	9e8 <print_float+0x90>
		print_string("inf");
 9e2:	4822      	ldr	r0, [pc, #136]	@ (a6c <print_float+0x114>)
 9e4:	f7ff ff7a 	bl	8dc <print_string>
	print_unsigned_decimal(integerPart);
	
	for(; places; places--) {
		putchar( buf[places-1]);
	}
}
 9e8:	b004      	add	sp, #16
 9ea:	ecbd 8b02 	vpop	{d8}
 9ee:	bd10      	pop	{r4, pc}
		print_string("[out of range]");
 9f0:	481f      	ldr	r0, [pc, #124]	@ (a70 <print_float+0x118>)
 9f2:	f7ff ff73 	bl	8dc <print_string>
		return;
 9f6:	e7f7      	b.n	9e8 <print_float+0x90>
		putchar( '-');
 9f8:	202d      	movs	r0, #45	@ 0x2d
 9fa:	f7ff ff4d 	bl	898 <putchar>
		number = 0 - number;
 9fe:	eeb0 0a48 	vmov.f32	s0, s16
 a02:	e7d9      	b.n	9b8 <print_float+0x60>
		buf[places++] = (char)('0' + decimalPart % 10);
 a04:	4a1b      	ldr	r2, [pc, #108]	@ (a74 <print_float+0x11c>)
 a06:	fba2 4203 	umull	r4, r2, r2, r3
 a0a:	08d2      	lsrs	r2, r2, #3
 a0c:	4614      	mov	r4, r2
 a0e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 a12:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
 a16:	3230      	adds	r2, #48	@ 0x30
 a18:	f101 0310 	add.w	r3, r1, #16
 a1c:	446b      	add	r3, sp
 a1e:	f803 2c10 	strb.w	r2, [r3, #-16]
		decimalPart /= 10;
 a22:	4623      	mov	r3, r4
	for(int i = 0; i < 3; i++) {
 a24:	3001      	adds	r0, #1
		buf[places++] = (char)('0' + decimalPart % 10);
 a26:	3101      	adds	r1, #1
	for(int i = 0; i < 3; i++) {
 a28:	2802      	cmp	r0, #2
 a2a:	ddeb      	ble.n	a04 <print_float+0xac>
	buf[places++] = '.';
 a2c:	1c4c      	adds	r4, r1, #1
 a2e:	f101 0310 	add.w	r3, r1, #16
 a32:	eb0d 0103 	add.w	r1, sp, r3
 a36:	232e      	movs	r3, #46	@ 0x2e
 a38:	f801 3c10 	strb.w	r3, [r1, #-16]
	print_unsigned_decimal(integerPart);
 a3c:	ee17 0a90 	vmov	r0, s15
 a40:	f7ff ff58 	bl	8f4 <print_unsigned_decimal>
	for(; places; places--) {
 a44:	e007      	b.n	a56 <print_float+0xfe>
		putchar( buf[places-1]);
 a46:	3c01      	subs	r4, #1
 a48:	f104 0310 	add.w	r3, r4, #16
 a4c:	446b      	add	r3, sp
 a4e:	f813 0c10 	ldrb.w	r0, [r3, #-16]
 a52:	f7ff ff21 	bl	898 <putchar>
	for(; places; places--) {
 a56:	2c00      	cmp	r4, #0
 a58:	d1f5      	bne.n	a46 <print_float+0xee>
 a5a:	e7c5      	b.n	9e8 <print_float+0x90>
 a5c:	00000000 	.word	0x00000000
 a60:	4f800000 	.word	0x4f800000
 a64:	447a0000 	.word	0x447a0000
 a68:	00000d38 	.word	0x00000d38
 a6c:	00000d3c 	.word	0x00000d3c
 a70:	00000d40 	.word	0x00000d40
 a74:	cccccccd 	.word	0xcccccccd

00000a78 <printlf>:

void printlf(char format[], ...) {
 a78:	b40f      	push	{r0, r1, r2, r3}
 a7a:	b570      	push	{r4, r5, r6, lr}
 a7c:	b082      	sub	sp, #8
 a7e:	ab06      	add	r3, sp, #24
 a80:	f853 5b04 	ldr.w	r5, [r3], #4
	va_list args;
	va_start(args, format);
 a84:	9301      	str	r3, [sp, #4]
	char *str;
	int32_t num;
	uint32_t numu;
	float *numf;
	
	for(int i=0; format[i] != '\0'; i++) {
 a86:	2400      	movs	r4, #0
 a88:	e030      	b.n	aec <printlf+0x74>
		switch(format[i]) {
			case '%' :
				i++;
				switch(format[i]) {
					case 'u': //unsigned decimal number
						numu = va_arg(args, uint32_t);
 a8a:	9b01      	ldr	r3, [sp, #4]
 a8c:	1d1a      	adds	r2, r3, #4
 a8e:	9201      	str	r2, [sp, #4]
						print_unsigned_decimal(numu);
 a90:	6818      	ldr	r0, [r3, #0]
 a92:	f7ff ff2f 	bl	8f4 <print_unsigned_decimal>
				i++;
 a96:	4634      	mov	r4, r6
					break;
 a98:	e027      	b.n	aea <printlf+0x72>
					
					case 'd': //signed decimal number
						num = va_arg(args, int32_t);
 a9a:	9b01      	ldr	r3, [sp, #4]
 a9c:	1d1a      	adds	r2, r3, #4
 a9e:	9201      	str	r2, [sp, #4]
						print_decimal(num);
 aa0:	6818      	ldr	r0, [r3, #0]
 aa2:	f7ff ff4d 	bl	940 <print_decimal>
				i++;
 aa6:	4634      	mov	r4, r6
					break;
 aa8:	e01f      	b.n	aea <printlf+0x72>
					
					case '\0': // End of string
						putchar( '%');
 aaa:	2025      	movs	r0, #37	@ 0x25
 aac:	f7ff fef4 	bl	898 <putchar>
						i--; //let the for loop catch this
					break;
 ab0:	e01b      	b.n	aea <printlf+0x72>
					
					case 's': //string
						str = va_arg(args, char*);
 ab2:	9b01      	ldr	r3, [sp, #4]
 ab4:	1d1a      	adds	r2, r3, #4
 ab6:	9201      	str	r2, [sp, #4]
						print_string(str);
 ab8:	6818      	ldr	r0, [r3, #0]
 aba:	f7ff ff0f 	bl	8dc <print_string>
				i++;
 abe:	4634      	mov	r4, r6
					break;
 ac0:	e013      	b.n	aea <printlf+0x72>
					
					case 'f': //float
						numf = va_arg(args, float *);
 ac2:	9b01      	ldr	r3, [sp, #4]
 ac4:	1d1a      	adds	r2, r3, #4
 ac6:	9201      	str	r2, [sp, #4]
 ac8:	681b      	ldr	r3, [r3, #0]
						print_float(*numf);
 aca:	ed93 0a00 	vldr	s0, [r3]
 ace:	f7ff ff43 	bl	958 <print_float>
				i++;
 ad2:	4634      	mov	r4, r6
					break;
 ad4:	e009      	b.n	aea <printlf+0x72>
					
					default: //Not recognized
					putchar( '%');
 ad6:	2025      	movs	r0, #37	@ 0x25
 ad8:	f7ff fede 	bl	898 <putchar>
					putchar( format[i]);
 adc:	5da8      	ldrb	r0, [r5, r6]
 ade:	f7ff fedb 	bl	898 <putchar>
				i++;
 ae2:	4634      	mov	r4, r6
					break;
 ae4:	e001      	b.n	aea <printlf+0x72>
				}
			break;
				
			default:
				putchar( format[i]);
 ae6:	f7ff fed7 	bl	898 <putchar>
	for(int i=0; format[i] != '\0'; i++) {
 aea:	3401      	adds	r4, #1
 aec:	5d28      	ldrb	r0, [r5, r4]
 aee:	b398      	cbz	r0, b58 <printlf+0xe0>
		switch(format[i]) {
 af0:	2825      	cmp	r0, #37	@ 0x25
 af2:	d1f8      	bne.n	ae6 <printlf+0x6e>
				i++;
 af4:	1c66      	adds	r6, r4, #1
				switch(format[i]) {
 af6:	5dab      	ldrb	r3, [r5, r6]
 af8:	2b00      	cmp	r3, #0
 afa:	d0d6      	beq.n	aaa <printlf+0x32>
 afc:	2b75      	cmp	r3, #117	@ 0x75
 afe:	d8ea      	bhi.n	ad6 <printlf+0x5e>
 b00:	2b64      	cmp	r3, #100	@ 0x64
 b02:	d3e8      	bcc.n	ad6 <printlf+0x5e>
 b04:	3b64      	subs	r3, #100	@ 0x64
 b06:	2b11      	cmp	r3, #17
 b08:	d8e5      	bhi.n	ad6 <printlf+0x5e>
 b0a:	a201      	add	r2, pc, #4	@ (adr r2, b10 <printlf+0x98>)
 b0c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 b10:	00000a9b 	.word	0x00000a9b
 b14:	00000ad7 	.word	0x00000ad7
 b18:	00000ac3 	.word	0x00000ac3
 b1c:	00000ad7 	.word	0x00000ad7
 b20:	00000ad7 	.word	0x00000ad7
 b24:	00000ad7 	.word	0x00000ad7
 b28:	00000ad7 	.word	0x00000ad7
 b2c:	00000ad7 	.word	0x00000ad7
 b30:	00000ad7 	.word	0x00000ad7
 b34:	00000ad7 	.word	0x00000ad7
 b38:	00000ad7 	.word	0x00000ad7
 b3c:	00000ad7 	.word	0x00000ad7
 b40:	00000ad7 	.word	0x00000ad7
 b44:	00000ad7 	.word	0x00000ad7
 b48:	00000ad7 	.word	0x00000ad7
 b4c:	00000ab3 	.word	0x00000ab3
 b50:	00000ad7 	.word	0x00000ad7
 b54:	00000a8b 	.word	0x00000a8b
			break;
		}
	}
	
	va_end(args);
}
 b58:	b002      	add	sp, #8
 b5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 b5e:	b004      	add	sp, #16
 b60:	4770      	bx	lr
 b62:	bf00      	nop

00000b64 <NmiSR>:
NmiSR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 b64:	e7fe      	b.n	b64 <NmiSR>

00000b66 <FaultISR>:
FaultISR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 b66:	e7fe      	b.n	b66 <FaultISR>

00000b68 <IntDefaultHandler>:
IntDefaultHandler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
 b68:	e7fe      	b.n	b68 <IntDefaultHandler>
	...

00000b6c <ResetISR>:
{
 b6c:	b508      	push	{r3, lr}
    for(pulDest = &_data; pulDest < &_edata; )
 b6e:	4b0e      	ldr	r3, [pc, #56]	@ (ba8 <zero_loop+0x1e>)
    pulSrc = &_etext;
 b70:	4a0e      	ldr	r2, [pc, #56]	@ (bac <zero_loop+0x22>)
    for(pulDest = &_data; pulDest < &_edata; )
 b72:	e003      	b.n	b7c <ResetISR+0x10>
        *pulDest++ = *pulSrc++;
 b74:	f852 1b04 	ldr.w	r1, [r2], #4
 b78:	f843 1b04 	str.w	r1, [r3], #4
    for(pulDest = &_data; pulDest < &_edata; )
 b7c:	490c      	ldr	r1, [pc, #48]	@ (bb0 <zero_loop+0x26>)
 b7e:	428b      	cmp	r3, r1
 b80:	d3f8      	bcc.n	b74 <ResetISR+0x8>
    __asm("    ldr     r0, =_bss\n"
 b82:	480c      	ldr	r0, [pc, #48]	@ (bb4 <zero_loop+0x2a>)
 b84:	490c      	ldr	r1, [pc, #48]	@ (bb8 <zero_loop+0x2e>)
 b86:	f04f 0200 	mov.w	r2, #0

00000b8a <zero_loop>:
 b8a:	4288      	cmp	r0, r1
 b8c:	bfb8      	it	lt
 b8e:	f840 2b04 	strlt.w	r2, [r0], #4
 b92:	dbfa      	blt.n	b8a <zero_loop>
    *((uint32_t *)0xE000ED88) = 0xFFFFFFFF; //SPM376e pg 133 - enable FPU
 b94:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 b98:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 b9c:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
    main();
 ba0:	f7ff fdd4 	bl	74c <main>
}
 ba4:	bd08      	pop	{r3, pc}
 ba6:	bf00      	nop
 ba8:	20000000 	.word	0x20000000
 bac:	00000d4f 	.word	0x00000d4f
 bb0:	20000000 	.word	0x20000000
 bb4:	20000000 	.word	0x20000000
 bb8:	20000c78 	.word	0x20000c78
 bbc:	65726568 	.word	0x65726568
 bc0:	00000021 	.word	0x00000021
 bc4:	203a6425 	.word	0x203a6425
 bc8:	64252009 	.word	0x64252009
 bcc:	00000000 	.word	0x00000000
 bd0:	64616548 	.word	0x64616548
 bd4:	53207265 	.word	0x53207265
 bd8:	74726174 	.word	0x74726174
 bdc:	000a6465 	.word	0x000a6465
 be0:	78656e55 	.word	0x78656e55
 be4:	74636570 	.word	0x74636570
 be8:	48206465 	.word	0x48206465
 bec:	65646165 	.word	0x65646165
 bf0:	64252072 	.word	0x64252072
 bf4:	6572202c 	.word	0x6572202c
 bf8:	74746573 	.word	0x74746573
 bfc:	0a676e69 	.word	0x0a676e69
 c00:	00000000 	.word	0x00000000
 c04:	20746f47 	.word	0x20746f47
 c08:	696c6176 	.word	0x696c6176
 c0c:	65682064 	.word	0x65682064
 c10:	72656461 	.word	0x72656461
 c14:	00000a21 	.word	0x00000a21
 c18:	64616548 	.word	0x64616548
 c1c:	69207265 	.word	0x69207265
 c20:	74732073 	.word	0x74732073
 c24:	20747261 	.word	0x20747261
 c28:	7320666f 	.word	0x7320666f
 c2c:	0a6e6163 	.word	0x0a6e6163
 c30:	00000000 	.word	0x00000000
 c34:	78656e55 	.word	0x78656e55
 c38:	74636570 	.word	0x74636570
 c3c:	6d206465 	.word	0x6d206465
 c40:	61737365 	.word	0x61737365
 c44:	74206567 	.word	0x74206567
 c48:	20657079 	.word	0x20657079
 c4c:	202e6425 	.word	0x202e6425
 c50:	63736944 	.word	0x63736944
 c54:	69647261 	.word	0x69647261
 c58:	2e2e676e 	.word	0x2e2e676e
 c5c:	00000a2e 	.word	0x00000a2e
 c60:	20746f47 	.word	0x20746f47
 c64:	6e616373 	.word	0x6e616373
 c68:	61656820 	.word	0x61656820
 c6c:	0a726564 	.word	0x0a726564
 c70:	00000000 	.word	0x00000000
 c74:	6e616353 	.word	0x6e616353
 c78:	61656820 	.word	0x61656820
 c7c:	20726564 	.word	0x20726564
 c80:	61766e69 	.word	0x61766e69
 c84:	2164696c 	.word	0x2164696c
 c88:	73655220 	.word	0x73655220
 c8c:	000a7465 	.word	0x000a7465
 c90:	52415453 	.word	0x52415453
 c94:	41502054 	.word	0x41502054
 c98:	54454b43 	.word	0x54454b43
 c9c:	0000000a 	.word	0x0000000a
 ca0:	65726568 	.word	0x65726568
 ca4:	00000000 	.word	0x00000000
 ca8:	61766e49 	.word	0x61766e49
 cac:	2064696c 	.word	0x2064696c
 cb0:	6d6d6f63 	.word	0x6d6d6f63
 cb4:	61747320 	.word	0x61747320
 cb8:	2d206574 	.word	0x2d206574
 cbc:	73657220 	.word	0x73657220
 cc0:	69747465 	.word	0x69747465
 cc4:	0000676e 	.word	0x0000676e
 cc8:	74696e49 	.word	0x74696e49
 ccc:	64694c20 	.word	0x64694c20
 cd0:	43207261 	.word	0x43207261
 cd4:	736d6d6f 	.word	0x736d6d6f
 cd8:	0000000a 	.word	0x0000000a
 cdc:	706f7453 	.word	0x706f7453
 ce0:	676e6970 	.word	0x676e6970
 ce4:	64694c20 	.word	0x64694c20
 ce8:	73207261 	.word	0x73207261
 cec:	0a6e6163 	.word	0x0a6e6163
 cf0:	00000000 	.word	0x00000000
 cf4:	73756c46 	.word	0x73756c46
 cf8:	676e6968 	.word	0x676e6968
 cfc:	64694c20 	.word	0x64694c20
 d00:	62207261 	.word	0x62207261
 d04:	65666675 	.word	0x65666675
 d08:	00000a72 	.word	0x00000a72
 d0c:	72617453 	.word	0x72617453
 d10:	676e6974 	.word	0x676e6974
 d14:	64696c20 	.word	0x64696c20
 d18:	73207261 	.word	0x73207261
 d1c:	236e6163 	.word	0x236e6163
 d20:	23232323 	.word	0x23232323
 d24:	23232323 	.word	0x23232323
 d28:	23232323 	.word	0x23232323
 d2c:	23232323 	.word	0x23232323
 d30:	23232323 	.word	0x23232323
 d34:	0000000a 	.word	0x0000000a
 d38:	004e614e 	.word	0x004e614e
 d3c:	00666e69 	.word	0x00666e69
 d40:	74756f5b 	.word	0x74756f5b
 d44:	20666f20 	.word	0x20666f20
 d48:	676e6172 	.word	0x676e6172
 d4c:	5d65      	.short	0x5d65
	...
