
objs/lidar.axf:     file format elf32-littlearm

Contents of the .debug_info section:

  Compilation Unit @ offset 0:
   Length:        0x914 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0
   Pointer Size:  4
 <0><c>: Abbrev Number: 31 (DW_TAG_compile_unit)
    <d>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <11>   DW_AT_language    : 29	(C11)
    <12>   DW_AT_name        : (indirect string, offset: 0x190): src/lidar.c
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0x329): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1a>   DW_AT_ranges      : 0x4c
    <1e>   DW_AT_low_pc      : 0
    <22>   DW_AT_stmt_list   : 0
 <1><26>: Abbrev Number: 2 (DW_TAG_base_type)
    <27>   DW_AT_byte_size   : 8
    <28>   DW_AT_encoding    : 7	(unsigned)
    <29>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><2d>: Abbrev Number: 2 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 4
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><34>: Abbrev Number: 2 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 2
    <36>   DW_AT_encoding    : 7	(unsigned)
    <37>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><3b>: Abbrev Number: 2 (DW_TAG_base_type)
    <3c>   DW_AT_byte_size   : 4
    <3d>   DW_AT_encoding    : 4	(float)
    <3e>   DW_AT_name        : (indirect string, offset: 0x50e): float
 <1><42>: Abbrev Number: 32 (DW_TAG_base_type)
    <43>   DW_AT_byte_size   : 4
    <44>   DW_AT_encoding    : 5	(signed)
    <45>   DW_AT_name        : int
 <1><49>: Abbrev Number: 2 (DW_TAG_base_type)
    <4a>   DW_AT_byte_size   : 1
    <4b>   DW_AT_encoding    : 6	(signed char)
    <4c>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><50>: Abbrev Number: 4 (DW_TAG_typedef)
    <51>   DW_AT_name        : (indirect string, offset: 0x25): __uint8_t
    <55>   DW_AT_decl_file   : 2
    <56>   DW_AT_decl_line   : 43
    <57>   DW_AT_decl_column : 24
    <58>   DW_AT_type        : <0x5c>
 <1><5c>: Abbrev Number: 2 (DW_TAG_base_type)
    <5d>   DW_AT_byte_size   : 1
    <5e>   DW_AT_encoding    : 8	(unsigned char)
    <5f>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><63>: Abbrev Number: 2 (DW_TAG_base_type)
    <64>   DW_AT_byte_size   : 2
    <65>   DW_AT_encoding    : 5	(signed)
    <66>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><6a>: Abbrev Number: 4 (DW_TAG_typedef)
    <6b>   DW_AT_name        : (indirect string, offset: 0x2d4): __uint16_t
    <6f>   DW_AT_decl_file   : 2
    <70>   DW_AT_decl_line   : 57
    <71>   DW_AT_decl_column : 25
    <72>   DW_AT_type        : <0x34>
 <1><76>: Abbrev Number: 4 (DW_TAG_typedef)
    <77>   DW_AT_name        : (indirect string, offset: 0x2df): __int32_t
    <7b>   DW_AT_decl_file   : 2
    <7c>   DW_AT_decl_line   : 77
    <7d>   DW_AT_decl_column : 24
    <7e>   DW_AT_type        : <0x82>
 <1><82>: Abbrev Number: 2 (DW_TAG_base_type)
    <83>   DW_AT_byte_size   : 4
    <84>   DW_AT_encoding    : 5	(signed)
    <85>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><89>: Abbrev Number: 4 (DW_TAG_typedef)
    <8a>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <8e>   DW_AT_decl_file   : 2
    <8f>   DW_AT_decl_line   : 79
    <90>   DW_AT_decl_column : 25
    <91>   DW_AT_type        : <0x95>
 <1><95>: Abbrev Number: 2 (DW_TAG_base_type)
    <96>   DW_AT_byte_size   : 4
    <97>   DW_AT_encoding    : 7	(unsigned)
    <98>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><9c>: Abbrev Number: 2 (DW_TAG_base_type)
    <9d>   DW_AT_byte_size   : 8
    <9e>   DW_AT_encoding    : 5	(signed)
    <9f>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><a3>: Abbrev Number: 4 (DW_TAG_typedef)
    <a4>   DW_AT_name        : (indirect string, offset: 0x27): uint8_t
    <a8>   DW_AT_decl_file   : 3
    <a9>   DW_AT_decl_line   : 24
    <aa>   DW_AT_decl_column : 19
    <ab>   DW_AT_type        : <0x50>
 <1><af>: Abbrev Number: 4 (DW_TAG_typedef)
    <b0>   DW_AT_name        : (indirect string, offset: 0x2d6): uint16_t
    <b4>   DW_AT_decl_file   : 3
    <b5>   DW_AT_decl_line   : 36
    <b6>   DW_AT_decl_column : 20
    <b7>   DW_AT_type        : <0x6a>
 <1><bb>: Abbrev Number: 4 (DW_TAG_typedef)
    <bc>   DW_AT_name        : (indirect string, offset: 0x2e1): int32_t
    <c0>   DW_AT_decl_file   : 3
    <c1>   DW_AT_decl_line   : 44
    <c2>   DW_AT_decl_column : 19
    <c3>   DW_AT_type        : <0x76>
 <1><c7>: Abbrev Number: 33 (DW_TAG_volatile_type)
    <c8>   DW_AT_type        : <0xbb>
 <1><cc>: Abbrev Number: 4 (DW_TAG_typedef)
    <cd>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <d1>   DW_AT_decl_file   : 3
    <d2>   DW_AT_decl_line   : 48
    <d3>   DW_AT_decl_column : 20
    <d4>   DW_AT_type        : <0x89>
 <1><d8>: Abbrev Number: 4 (DW_TAG_typedef)
    <d9>   DW_AT_name        : (indirect string, offset: 0x15): size_t
    <dd>   DW_AT_decl_file   : 4
    <de>   DW_AT_decl_line   : 214
    <df>   DW_AT_decl_column : 23
    <e0>   DW_AT_type        : <0x2d>
 <1><e4>: Abbrev Number: 2 (DW_TAG_base_type)
    <e5>   DW_AT_byte_size   : 8
    <e6>   DW_AT_encoding    : 4	(float)
    <e7>   DW_AT_name        : (indirect string, offset: 0x257): long double
 <1><eb>: Abbrev Number: 17 (DW_TAG_pointer_type)
    <ec>   DW_AT_byte_size   : 4
    <ec>   DW_AT_type        : <0xf0>
 <1><f0>: Abbrev Number: 2 (DW_TAG_base_type)
    <f1>   DW_AT_byte_size   : 1
    <f2>   DW_AT_encoding    : 8	(unsigned char)
    <f3>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><f7>: Abbrev Number: 22 (DW_TAG_array_type)
    <f8>   DW_AT_type        : <0xaf>
    <fc>   DW_AT_sibling     : <0x108>
 <2><100>: Abbrev Number: 34 (DW_TAG_subrange_type)
    <101>   DW_AT_type        : <0x2d>
    <105>   DW_AT_upper_bound : 360
 <2><107>: Abbrev Number: 0
 <1><108>: Abbrev Number: 18 (DW_TAG_variable)
    <109>   DW_AT_name        : (indirect string, offset: 0x109): g_points
    <10d>   DW_AT_decl_file   : 5
    <10e>   DW_AT_decl_line   : 6
    <10f>   DW_AT_decl_column : 17
    <110>   DW_AT_type        : <0xf7>
    <114>   DW_AT_external    : 1
    <114>   DW_AT_declaration : 1
 <1><114>: Abbrev Number: 18 (DW_TAG_variable)
    <115>   DW_AT_name        : (indirect string, offset: 0x358): g_conditioned_points
    <119>   DW_AT_decl_file   : 5
    <11a>   DW_AT_decl_line   : 7
    <11b>   DW_AT_decl_column : 17
    <11c>   DW_AT_type        : <0xf7>
    <120>   DW_AT_external    : 1
    <120>   DW_AT_declaration : 1
 <1><120>: Abbrev Number: 23 (DW_TAG_enumeration_type)
    <121>   DW_AT_encoding    : 7	(unsigned)
    <121>   DW_AT_byte_size   : 1
    <121>   DW_AT_type        : <0x5c>
    <125>   DW_AT_decl_file   : 5
    <126>   DW_AT_decl_line   : 23
    <127>   DW_AT_decl_column : 7
    <128>   DW_AT_sibling     : <0x139>
 <2><12c>: Abbrev Number: 7 (DW_TAG_enumerator)
    <12d>   DW_AT_name        : (indirect string, offset: 0x126): START_PACKET
    <131>   DW_AT_const_value : 1
 <2><132>: Abbrev Number: 7 (DW_TAG_enumerator)
    <133>   DW_AT_name        : (indirect string, offset: 0x3c9): DATA_PACKET
    <137>   DW_AT_const_value : 0
 <2><138>: Abbrev Number: 0
 <1><139>: Abbrev Number: 35 (DW_TAG_structure_type)
    <13a>   DW_AT_name        : (indirect string, offset: 0x19c): ScanHeaderFields
    <13e>   DW_AT_byte_size   : 10
    <13f>   DW_AT_decl_file   : 5
    <140>   DW_AT_decl_line   : 21
    <141>   DW_AT_decl_column : 32
    <142>   DW_AT_sibling     : <0x191>
 <2><146>: Abbrev Number: 10 (DW_TAG_member)
    <147>   DW_AT_name        : (indirect string, offset: 0x146): start_code
    <14b>   DW_AT_decl_file   : 5
    <14b>   DW_AT_decl_line   : 22
    <14c>   DW_AT_decl_column : 11
    <14d>   DW_AT_type        : <0xaf>
    <151>   DW_AT_data_member_location: 0
 <2><152>: Abbrev Number: 36 (DW_TAG_member)
    <153>   DW_AT_name        : (indirect string, offset: 0x2f): type
    <157>   DW_AT_decl_file   : 5
    <158>   DW_AT_decl_line   : 23
    <159>   DW_AT_decl_column : 45
    <15a>   DW_AT_type        : <0x120>
    <15e>   DW_AT_bit_size    : 8
    <15f>   DW_AT_data_bit_offset: 16
 <2><160>: Abbrev Number: 10 (DW_TAG_member)
    <161>   DW_AT_name        : (indirect string, offset: 0x37d): sample_count
    <165>   DW_AT_decl_file   : 5
    <165>   DW_AT_decl_line   : 24
    <166>   DW_AT_decl_column : 10
    <167>   DW_AT_type        : <0xa3>
    <16b>   DW_AT_data_member_location: 3
 <2><16c>: Abbrev Number: 10 (DW_TAG_member)
    <16d>   DW_AT_name        : (indirect string, offset: 0x95): start_angle
    <171>   DW_AT_decl_file   : 5
    <171>   DW_AT_decl_line   : 25
    <172>   DW_AT_decl_column : 11
    <173>   DW_AT_type        : <0xaf>
    <177>   DW_AT_data_member_location: 4
 <2><178>: Abbrev Number: 10 (DW_TAG_member)
    <179>   DW_AT_name        : (indirect string, offset: 0x24d): end_angle
    <17d>   DW_AT_decl_file   : 5
    <17d>   DW_AT_decl_line   : 26
    <17e>   DW_AT_decl_column : 11
    <17f>   DW_AT_type        : <0xaf>
    <183>   DW_AT_data_member_location: 6
 <2><184>: Abbrev Number: 10 (DW_TAG_member)
    <185>   DW_AT_name        : (indirect string, offset: 0x1c): checksum
    <189>   DW_AT_decl_file   : 5
    <189>   DW_AT_decl_line   : 27
    <18a>   DW_AT_decl_column : 11
    <18b>   DW_AT_type        : <0xaf>
    <18f>   DW_AT_data_member_location: 8
 <2><190>: Abbrev Number: 0
 <1><191>: Abbrev Number: 37 (DW_TAG_union_type)
    <192>   DW_AT_byte_size   : 10
    <193>   DW_AT_decl_file   : 5
    <194>   DW_AT_decl_line   : 29
    <195>   DW_AT_decl_column : 9
    <196>   DW_AT_sibling     : <0x1b1>
 <2><19a>: Abbrev Number: 24 (DW_TAG_member)
    <19b>   DW_AT_name        : (indirect string, offset: 0xbd): bytes
    <19f>   DW_AT_decl_file   : 5
    <19f>   DW_AT_decl_line   : 30
    <1a0>   DW_AT_decl_column : 10
    <1a1>   DW_AT_type        : <0x1b1>
 <2><1a5>: Abbrev Number: 24 (DW_TAG_member)
    <1a6>   DW_AT_name        : (indirect string, offset: 0x3ac): header
    <1aa>   DW_AT_decl_file   : 5
    <1aa>   DW_AT_decl_line   : 31
    <1ab>   DW_AT_decl_column : 26
    <1ac>   DW_AT_type        : <0x139>
 <2><1b0>: Abbrev Number: 0
 <1><1b1>: Abbrev Number: 22 (DW_TAG_array_type)
    <1b2>   DW_AT_type        : <0xa3>
    <1b6>   DW_AT_sibling     : <0x1c1>
 <2><1ba>: Abbrev Number: 38 (DW_TAG_subrange_type)
    <1bb>   DW_AT_type        : <0x2d>
    <1bf>   DW_AT_upper_bound : 9
 <2><1c0>: Abbrev Number: 0
 <1><1c1>: Abbrev Number: 4 (DW_TAG_typedef)
    <1c2>   DW_AT_name        : (indirect string, offset: 0xad): ScanHeader
    <1c6>   DW_AT_decl_file   : 5
    <1c7>   DW_AT_decl_line   : 32
    <1c8>   DW_AT_decl_column : 3
    <1c9>   DW_AT_type        : <0x191>
 <1><1cd>: Abbrev Number: 18 (DW_TAG_variable)
    <1ce>   DW_AT_name        : (indirect string, offset: 0x41): uptime_seconds
    <1d2>   DW_AT_decl_file   : 6
    <1d3>   DW_AT_decl_line   : 4
    <1d4>   DW_AT_decl_column : 25
    <1d5>   DW_AT_type        : <0xc7>
    <1d9>   DW_AT_external    : 1
    <1d9>   DW_AT_declaration : 1
 <1><1d9>: Abbrev Number: 25 (DW_TAG_variable)
    <1da>   DW_AT_specification: <0x108>
    <1de>   DW_AT_decl_file   : 1
    <1de>   DW_AT_decl_line   : 38
    <1df>   DW_AT_decl_column : 10
    <1df>   DW_AT_location    : 5 byte block: 3 cc 5 0 20 	(DW_OP_addr: 200005cc)
 <1><1e5>: Abbrev Number: 25 (DW_TAG_variable)
    <1e6>   DW_AT_specification: <0x114>
    <1ea>   DW_AT_decl_file   : 1
    <1ea>   DW_AT_decl_line   : 39
    <1eb>   DW_AT_decl_column : 10
    <1eb>   DW_AT_location    : 5 byte block: 3 f8 2 0 20 	(DW_OP_addr: 200002f8)
 <1><1f1>: Abbrev Number: 39 (DW_TAG_variable)
    <1f2>   DW_AT_name        : (indirect string, offset: 0x30a): g_pt_buf
    <1f6>   DW_AT_decl_file   : 1
    <1f7>   DW_AT_decl_line   : 40
    <1f8>   DW_AT_decl_column : 10
    <1f9>   DW_AT_type        : <0xf7>
    <1fd>   DW_AT_external    : 1
    <1fd>   DW_AT_location    : 5 byte block: 3 24 0 0 20 	(DW_OP_addr: 20000024)
 <1><203>: Abbrev Number: 40 (DW_TAG_subprogram)
    <204>   DW_AT_external    : 1
    <204>   DW_AT_name        : (indirect string, offset: 0x2a8): printlf
    <208>   DW_AT_decl_file   : 7
    <209>   DW_AT_decl_line   : 10
    <20a>   DW_AT_decl_column : 6
    <20b>   DW_AT_prototyped  : 1
    <20b>   DW_AT_declaration : 1
    <20b>   DW_AT_sibling     : <0x216>
 <2><20f>: Abbrev Number: 41 (DW_TAG_formal_parameter)
    <210>   DW_AT_type        : <0xeb>
 <2><214>: Abbrev Number: 42 (DW_TAG_unspecified_parameters)
 <2><215>: Abbrev Number: 0
 <1><216>: Abbrev Number: 13 (DW_TAG_subprogram)
    <217>   DW_AT_external    : 1
    <217>   DW_AT_name        : (indirect string, offset: 0x36d): process_packets
    <21b>   DW_AT_decl_file   : 1
    <21b>   DW_AT_decl_line   : 167
    <21c>   DW_AT_decl_column : 6
    <21c>   DW_AT_prototyped  : 1
    <21c>   DW_AT_low_pc      : 0x5a8
    <220>   DW_AT_high_pc     : 0x180
    <224>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <226>   DW_AT_call_all_calls: 1
    <226>   DW_AT_sibling     : <0x41b>
 <2><22a>: Abbrev Number: 23 (DW_TAG_enumeration_type)
    <22b>   DW_AT_encoding    : 7	(unsigned)
    <22b>   DW_AT_byte_size   : 1
    <22b>   DW_AT_type        : <0x5c>
    <22f>   DW_AT_decl_file   : 1
    <230>   DW_AT_decl_line   : 168
    <231>   DW_AT_decl_column : 14
    <232>   DW_AT_sibling     : <0x25b>
 <3><236>: Abbrev Number: 7 (DW_TAG_enumerator)
    <237>   DW_AT_name        : (indirect string, offset: 0x2e9): COMM_WAITING
    <23b>   DW_AT_const_value : 0
 <3><23c>: Abbrev Number: 7 (DW_TAG_enumerator)
    <23d>   DW_AT_name        : (indirect string, offset: 0xe2): RECEIVING_HEADER
    <241>   DW_AT_const_value : 1
 <3><242>: Abbrev Number: 7 (DW_TAG_enumerator)
    <243>   DW_AT_name        : (indirect string, offset: 0x112): WAITING_SCAN_HEADER
    <247>   DW_AT_const_value : 2
 <3><248>: Abbrev Number: 7 (DW_TAG_enumerator)
    <249>   DW_AT_name        : (indirect string, offset: 0xf3): RECEIVING_SCAN_HEADER
    <24d>   DW_AT_const_value : 3
 <3><24e>: Abbrev Number: 7 (DW_TAG_enumerator)
    <24f>   DW_AT_name        : (indirect string, offset: 0xc3): RECEIVING_SCAN_DATA
    <253>   DW_AT_const_value : 4
 <3><254>: Abbrev Number: 7 (DW_TAG_enumerator)
    <255>   DW_AT_name        : (indirect string, offset: 0x15b): RECEIVING_HEALTH_REPORT
    <259>   DW_AT_const_value : 5
 <3><25a>: Abbrev Number: 0
 <2><25b>: Abbrev Number: 8 (DW_TAG_variable)
    <25c>   DW_AT_name        : (indirect string, offset: 0x3be): comm_state
    <260>   DW_AT_decl_file   : 1
    <260>   DW_AT_decl_line   : 168
    <261>   DW_AT_decl_column : 137
    <262>   DW_AT_type        : <0x22a>
    <266>   DW_AT_location    : 5 byte block: 3 0 0 0 20 	(DW_OP_addr: 20000000)
 <2><26c>: Abbrev Number: 8 (DW_TAG_variable)
    <26d>   DW_AT_name        : (indirect string, offset: 0x173): current_byte
    <271>   DW_AT_decl_file   : 1
    <271>   DW_AT_decl_line   : 169
    <272>   DW_AT_decl_column : 18
    <273>   DW_AT_type        : <0xcc>
    <277>   DW_AT_location    : 5 byte block: 3 1c 0 0 20 	(DW_OP_addr: 2000001c)
 <2><27d>: Abbrev Number: 8 (DW_TAG_variable)
    <27e>   DW_AT_name        : (indirect string, offset: 0x34): current_scan
    <282>   DW_AT_decl_file   : 1
    <282>   DW_AT_decl_line   : 170
    <283>   DW_AT_decl_column : 20
    <284>   DW_AT_type        : <0x1c1>
    <288>   DW_AT_location    : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <2><28e>: Abbrev Number: 8 (DW_TAG_variable)
    <28f>   DW_AT_name        : (indirect string, offset: 0x398): current_point
    <293>   DW_AT_decl_file   : 1
    <293>   DW_AT_decl_line   : 171
    <294>   DW_AT_decl_column : 18
    <295>   DW_AT_type        : <0xcc>
    <299>   DW_AT_location    : 5 byte block: 3 c 0 0 20 	(DW_OP_addr: 2000000c)
 <2><29f>: Abbrev Number: 8 (DW_TAG_variable)
    <2a0>   DW_AT_name        : (indirect string, offset: 0x1c): checksum
    <2a4>   DW_AT_decl_file   : 1
    <2a4>   DW_AT_decl_line   : 172
    <2a5>   DW_AT_decl_column : 18
    <2a6>   DW_AT_type        : <0xaf>
    <2aa>   DW_AT_location    : 5 byte block: 3 a 0 0 20 	(DW_OP_addr: 2000000a)
 <2><2b0>: Abbrev Number: 43 (DW_TAG_label)
    <2b1>   DW_AT_name        : (indirect string, offset: 0xf): reset
    <2b5>   DW_AT_decl_file   : 1
    <2b6>   DW_AT_decl_line   : 261
    <2b8>   DW_AT_decl_column : 2
    <2b9>   DW_AT_low_pc      : 0x5b2
 <2><2bd>: Abbrev Number: 44 (DW_TAG_label)
    <2be>   DW_AT_name        : (indirect string, offset: 0x305): skip
    <2c2>   DW_AT_decl_file   : 1
    <2c3>   DW_AT_decl_line   : 246
    <2c4>   DW_AT_decl_column : 7
    <2c5>   DW_AT_low_pc      : 0x6cc
 <2><2c9>: Abbrev Number: 26 (DW_TAG_lexical_block)
    <2ca>   DW_AT_ranges      : 0x3c
    <2ce>   DW_AT_sibling     : <0x3f8>
 <3><2d2>: Abbrev Number: 5 (DW_TAG_variable)
    <2d3>   DW_AT_name        : (indirect string, offset: 0x320): received
    <2d7>   DW_AT_decl_file   : 1
    <2d7>   DW_AT_decl_line   : 175
    <2d8>   DW_AT_decl_column : 11
    <2d9>   DW_AT_type        : <0xa3>
    <2dd>   DW_AT_location    : 0x14 (location list)
    <2e1>   DW_AT_GNU_locviews: 0xc
 <3><2e5>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <2e6>   DW_AT_low_pc      : 0x678
    <2ea>   DW_AT_high_pc     : 0xb0
    <2ee>   DW_AT_sibling     : <0x389>
 <4><2f2>: Abbrev Number: 45 (DW_TAG_variable)
    <2f3>   DW_AT_name        : low
    <2f7>   DW_AT_decl_file   : 1
    <2f8>   DW_AT_decl_line   : 225
    <2f9>   DW_AT_decl_column : 20
    <2fa>   DW_AT_type        : <0xa3>
    <2fe>   DW_AT_location    : 5 byte block: 3 9 0 0 20 	(DW_OP_addr: 20000009)
 <4><304>: Abbrev Number: 8 (DW_TAG_variable)
    <305>   DW_AT_name        : (indirect string, offset: 0x2f6): high
    <309>   DW_AT_decl_file   : 1
    <309>   DW_AT_decl_line   : 225
    <30a>   DW_AT_decl_column : 25
    <30b>   DW_AT_type        : <0xa3>
    <30f>   DW_AT_location    : 5 byte block: 3 8 0 0 20 	(DW_OP_addr: 20000008)
 <4><315>: Abbrev Number: 27 (DW_TAG_lexical_block)
    <316>   DW_AT_low_pc      : 0x684
    <31a>   DW_AT_high_pc     : 0xa4
 <5><31e>: Abbrev Number: 5 (DW_TAG_variable)
    <31f>   DW_AT_name        : (indirect string, offset: 0x3a0): point
    <323>   DW_AT_decl_file   : 1
    <323>   DW_AT_decl_line   : 236
    <324>   DW_AT_decl_column : 16
    <325>   DW_AT_type        : <0xaf>
    <329>   DW_AT_location    : 0x36 (location list)
    <32d>   DW_AT_GNU_locviews: 0x32
 <5><331>: Abbrev Number: 5 (DW_TAG_variable)
    <332>   DW_AT_name        : (indirect string, offset: 0x251): angle
    <336>   DW_AT_decl_file   : 1
    <336>   DW_AT_decl_line   : 239
    <337>   DW_AT_decl_column : 16
    <338>   DW_AT_type        : <0xaf>
    <33c>   DW_AT_location    : 0x48 (location list)
    <340>   DW_AT_GNU_locviews: 0x46
 <5><344>: Abbrev Number: 6 (DW_TAG_variable)
    <345>   DW_AT_name        : tmp
    <349>   DW_AT_decl_file   : 1
    <349>   DW_AT_decl_line   : 242
    <34a>   DW_AT_decl_column : 16
    <34b>   DW_AT_type        : <0xaf>
    <34f>   DW_AT_location    : 0x53 (location list)
    <353>   DW_AT_GNU_locviews: 0x51
 <5><357>: Abbrev Number: 11 (DW_TAG_call_site)
    <358>   DW_AT_call_return_pc: 0x6bc
    <35c>   DW_AT_call_origin : <0x500>
 <5><360>: Abbrev Number: 9 (DW_TAG_call_site)
    <361>   DW_AT_call_return_pc: 0x6c4
    <365>   DW_AT_call_origin : <0x4d3>
    <369>   DW_AT_sibling     : <0x374>
 <6><36d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <36e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <370>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <6><373>: Abbrev Number: 0
 <5><374>: Abbrev Number: 28 (DW_TAG_call_site)
    <375>   DW_AT_call_return_pc: 0x6ec
    <379>   DW_AT_call_origin : <0x203>
 <6><37d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <37e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <380>   DW_AT_call_value  : 5 byte block: 3 bc c 0 0 	(DW_OP_addr: cbc)
 <6><386>: Abbrev Number: 0
 <5><387>: Abbrev Number: 0
 <4><388>: Abbrev Number: 0
 <3><389>: Abbrev Number: 9 (DW_TAG_call_site)
    <38a>   DW_AT_call_return_pc: 0x5b2
    <38e>   DW_AT_call_origin : <0x203>
    <392>   DW_AT_sibling     : <0x3a0>
 <4><396>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <397>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <399>   DW_AT_call_value  : 5 byte block: 3 b8 c 0 0 	(DW_OP_addr: cb8)
 <4><39f>: Abbrev Number: 0
 <3><3a0>: Abbrev Number: 9 (DW_TAG_call_site)
    <3a1>   DW_AT_call_return_pc: 0x5f0
    <3a5>   DW_AT_call_origin : <0x49f>
    <3a9>   DW_AT_sibling     : <0x3b7>
 <4><3ad>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3ae>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3b0>   DW_AT_call_value  : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <4><3b6>: Abbrev Number: 0
 <3><3b7>: Abbrev Number: 9 (DW_TAG_call_site)
    <3b8>   DW_AT_call_return_pc: 0x60c
    <3bc>   DW_AT_call_origin : <0x41b>
    <3c0>   DW_AT_sibling     : <0x3ce>
 <4><3c4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3c5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3c7>   DW_AT_call_value  : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <4><3cd>: Abbrev Number: 0
 <3><3ce>: Abbrev Number: 3 (DW_TAG_call_site)
    <3cf>   DW_AT_call_return_pc: 0x634
    <3d3>   DW_AT_sibling     : <0x3de>
 <4><3d7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3d8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3da>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><3dd>: Abbrev Number: 0
 <3><3de>: Abbrev Number: 3 (DW_TAG_call_site)
    <3df>   DW_AT_call_return_pc: 0x63e
    <3e3>   DW_AT_sibling     : <0x3ee>
 <4><3e7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3e8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3ea>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><3ed>: Abbrev Number: 0
 <3><3ee>: Abbrev Number: 11 (DW_TAG_call_site)
    <3ef>   DW_AT_call_return_pc: 0x676
    <3f3>   DW_AT_call_origin : <0x716>
 <3><3f7>: Abbrev Number: 0
 <2><3f8>: Abbrev Number: 3 (DW_TAG_call_site)
    <3f9>   DW_AT_call_return_pc: 0x5be
    <3fd>   DW_AT_sibling     : <0x40b>
 <3><401>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <402>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <404>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><40a>: Abbrev Number: 0
 <2><40b>: Abbrev Number: 15 (DW_TAG_call_site)
    <40c>   DW_AT_call_return_pc: 0x622
 <3><410>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <411>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <413>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><419>: Abbrev Number: 0
 <2><41a>: Abbrev Number: 0
 <1><41b>: Abbrev Number: 16 (DW_TAG_subprogram)
    <41c>   DW_AT_external    : 1
    <41c>   DW_AT_name        : (indirect string, offset: 0x180): checksum_header
    <420>   DW_AT_decl_file   : 1
    <420>   DW_AT_decl_line   : 155
    <421>   DW_AT_decl_column : 10
    <422>   DW_AT_prototyped  : 1
    <422>   DW_AT_type        : <0xaf>
    <426>   DW_AT_low_pc      : 0x582
    <42a>   DW_AT_high_pc     : 0x24
    <42e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <430>   DW_AT_call_all_calls: 1
    <430>   DW_AT_sibling     : <0x49a>
 <2><434>: Abbrev Number: 12 (DW_TAG_formal_parameter)
    <435>   DW_AT_name        : (indirect string, offset: 0x2be): head
    <439>   DW_AT_decl_file   : 1
    <439>   DW_AT_decl_line   : 155
    <43a>   DW_AT_decl_column : 38
    <43b>   DW_AT_type        : <0x49a>
    <43f>   DW_AT_location    : 0x60 (location list)
    <443>   DW_AT_GNU_locviews: 0x5c
 <2><447>: Abbrev Number: 5 (DW_TAG_variable)
    <448>   DW_AT_name        : (indirect string, offset: 0x1c): checksum
    <44c>   DW_AT_decl_file   : 1
    <44c>   DW_AT_decl_line   : 156
    <44d>   DW_AT_decl_column : 11
    <44e>   DW_AT_type        : <0xaf>
    <452>   DW_AT_location    : 0x76 (location list)
    <456>   DW_AT_GNU_locviews: 0x70
 <2><45a>: Abbrev Number: 19 (DW_TAG_lexical_block)
    <45b>   DW_AT_ranges      : 0x30
 <3><45f>: Abbrev Number: 6 (DW_TAG_variable)
    <460>   DW_AT_name        : i
    <462>   DW_AT_decl_file   : 1
    <462>   DW_AT_decl_line   : 158
    <463>   DW_AT_decl_column : 13
    <464>   DW_AT_type        : <0xd8>
    <468>   DW_AT_location    : 0x96 (location list)
    <46c>   DW_AT_GNU_locviews: 0x8c
 <3><470>: Abbrev Number: 27 (DW_TAG_lexical_block)
    <471>   DW_AT_low_pc      : 0x58a
    <475>   DW_AT_high_pc     : 0x16
 <4><479>: Abbrev Number: 6 (DW_TAG_variable)
    <47a>   DW_AT_name        : low
    <47e>   DW_AT_decl_file   : 1
    <47e>   DW_AT_decl_line   : 159
    <47f>   DW_AT_decl_column : 11
    <480>   DW_AT_type        : <0xa3>
    <484>   DW_AT_location    : 0xbc (location list)
    <488>   DW_AT_GNU_locviews: 0xb8
 <4><48c>: Abbrev Number: 20 (DW_TAG_variable)
    <48d>   DW_AT_name        : (indirect string, offset: 0x2f6): high
    <491>   DW_AT_decl_file   : 1
    <491>   DW_AT_decl_line   : 160
    <492>   DW_AT_decl_column : 11
    <493>   DW_AT_type        : <0xa3>
 <4><497>: Abbrev Number: 0
 <3><498>: Abbrev Number: 0
 <2><499>: Abbrev Number: 0
 <1><49a>: Abbrev Number: 17 (DW_TAG_pointer_type)
    <49b>   DW_AT_byte_size   : 4
    <49b>   DW_AT_type        : <0x1c1>
 <1><49f>: Abbrev Number: 16 (DW_TAG_subprogram)
    <4a0>   DW_AT_external    : 1
    <4a0>   DW_AT_name        : (indirect string, offset: 0x3a6): check_header
    <4a4>   DW_AT_decl_file   : 1
    <4a4>   DW_AT_decl_line   : 144
    <4a5>   DW_AT_decl_column : 6
    <4a6>   DW_AT_prototyped  : 1
    <4a6>   DW_AT_type        : <0x4cc>
    <4aa>   DW_AT_low_pc      : 0x558
    <4ae>   DW_AT_high_pc     : 0x2a
    <4b2>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4b4>   DW_AT_call_all_calls: 1
    <4b4>   DW_AT_sibling     : <0x4cc>
 <2><4b8>: Abbrev Number: 12 (DW_TAG_formal_parameter)
    <4b9>   DW_AT_name        : (indirect string, offset: 0x2be): head
    <4bd>   DW_AT_decl_file   : 1
    <4bd>   DW_AT_decl_line   : 144
    <4be>   DW_AT_decl_column : 31
    <4bf>   DW_AT_type        : <0x49a>
    <4c3>   DW_AT_location    : 0xe2 (location list)
    <4c7>   DW_AT_GNU_locviews: 0xd2
 <2><4cb>: Abbrev Number: 0
 <1><4cc>: Abbrev Number: 2 (DW_TAG_base_type)
    <4cd>   DW_AT_byte_size   : 1
    <4ce>   DW_AT_encoding    : 2	(boolean)
    <4cf>   DW_AT_name        : (indirect string, offset: 0x27a): _Bool
 <1><4d3>: Abbrev Number: 16 (DW_TAG_subprogram)
    <4d4>   DW_AT_external    : 1
    <4d4>   DW_AT_name        : (indirect string, offset: 0x38a): convert_to_mm
    <4d8>   DW_AT_decl_file   : 1
    <4d8>   DW_AT_decl_line   : 139
    <4d9>   DW_AT_decl_column : 10
    <4da>   DW_AT_prototyped  : 1
    <4da>   DW_AT_type        : <0xaf>
    <4de>   DW_AT_low_pc      : 0x554
    <4e2>   DW_AT_high_pc     : 0x4
    <4e6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4e8>   DW_AT_call_all_calls: 1
    <4e8>   DW_AT_sibling     : <0x500>
 <2><4ec>: Abbrev Number: 12 (DW_TAG_formal_parameter)
    <4ed>   DW_AT_name        : (indirect string, offset: 0x3a0): point
    <4f1>   DW_AT_decl_file   : 1
    <4f1>   DW_AT_decl_line   : 139
    <4f2>   DW_AT_decl_column : 33
    <4f3>   DW_AT_type        : <0xaf>
    <4f7>   DW_AT_location    : 0x138 (location list)
    <4fb>   DW_AT_GNU_locviews: 0x134
 <2><4ff>: Abbrev Number: 0
 <1><500>: Abbrev Number: 16 (DW_TAG_subprogram)
    <501>   DW_AT_external    : 1
    <501>   DW_AT_name        : (indirect string, offset: 0x2b0): map_to_degree
    <505>   DW_AT_decl_file   : 1
    <505>   DW_AT_decl_line   : 132
    <506>   DW_AT_decl_column : 10
    <507>   DW_AT_prototyped  : 1
    <507>   DW_AT_type        : <0xaf>
    <50b>   DW_AT_low_pc      : 0x4d0
    <50f>   DW_AT_high_pc     : 0x84
    <513>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <515>   DW_AT_call_all_calls: 1
    <515>   DW_AT_sibling     : <0x582>
 <2><519>: Abbrev Number: 12 (DW_TAG_formal_parameter)
    <51a>   DW_AT_name        : (indirect string, offset: 0x3b3): start
    <51e>   DW_AT_decl_file   : 1
    <51e>   DW_AT_decl_line   : 132
    <51f>   DW_AT_decl_column : 33
    <520>   DW_AT_type        : <0xaf>
    <524>   DW_AT_location    : 0x161 (location list)
    <528>   DW_AT_GNU_locviews: 0x151
 <2><52c>: Abbrev Number: 46 (DW_TAG_formal_parameter)
    <52d>   DW_AT_name        : end
    <531>   DW_AT_decl_file   : 1
    <532>   DW_AT_decl_line   : 132
    <533>   DW_AT_decl_column : 49
    <534>   DW_AT_type        : <0xaf>
    <538>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
 <2><53a>: Abbrev Number: 47 (DW_TAG_formal_parameter)
    <53b>   DW_AT_name        : (indirect string, offset: 0x384): count
    <53f>   DW_AT_decl_file   : 1
    <540>   DW_AT_decl_line   : 132
    <541>   DW_AT_decl_column : 63
    <542>   DW_AT_type        : <0xaf>
    <546>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
 <2><548>: Abbrev Number: 29 (DW_TAG_formal_parameter)
    <549>   DW_AT_name        : num
    <54d>   DW_AT_decl_file   : 1
    <54d>   DW_AT_decl_line   : 132
    <54e>   DW_AT_decl_column : 79
    <54f>   DW_AT_type        : <0xaf>
    <553>   DW_AT_location    : 0x1ba (location list)
    <557>   DW_AT_GNU_locviews: 0x1b4
 <2><55b>: Abbrev Number: 5 (DW_TAG_variable)
    <55c>   DW_AT_name        : (indirect string, offset: 0x6c): delta
    <560>   DW_AT_decl_file   : 1
    <560>   DW_AT_decl_line   : 133
    <561>   DW_AT_decl_column : 8
    <562>   DW_AT_type        : <0x3b>
    <566>   DW_AT_location    : 0x1d3 (location list)
    <56a>   DW_AT_GNU_locviews: 0x1d1
 <2><56e>: Abbrev Number: 5 (DW_TAG_variable)
    <56f>   DW_AT_name        : (indirect string, offset: 0x2b7): degree
    <573>   DW_AT_decl_file   : 1
    <573>   DW_AT_decl_line   : 134
    <574>   DW_AT_decl_column : 8
    <575>   DW_AT_type        : <0x3b>
    <579>   DW_AT_location    : 0x1e3 (location list)
    <57d>   DW_AT_GNU_locviews: 0x1dd
 <2><581>: Abbrev Number: 0
 <1><582>: Abbrev Number: 13 (DW_TAG_subprogram)
    <583>   DW_AT_external    : 1
    <583>   DW_AT_name        : (indirect string, offset: 0x72): clear_lidar_IO
    <587>   DW_AT_decl_file   : 1
    <587>   DW_AT_decl_line   : 125
    <588>   DW_AT_decl_column : 6
    <588>   DW_AT_prototyped  : 1
    <588>   DW_AT_low_pc      : 0x4a0
    <58c>   DW_AT_high_pc     : 0x30
    <590>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <592>   DW_AT_call_all_calls: 1
    <592>   DW_AT_sibling     : <0x5c6>
 <2><596>: Abbrev Number: 3 (DW_TAG_call_site)
    <597>   DW_AT_call_return_pc: 0x4b2
    <59b>   DW_AT_sibling     : <0x5a6>
 <3><59f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5a0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5a2>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5a5>: Abbrev Number: 0
 <2><5a6>: Abbrev Number: 3 (DW_TAG_call_site)
    <5a7>   DW_AT_call_return_pc: 0x4ba
    <5ab>   DW_AT_sibling     : <0x5b6>
 <3><5af>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5b0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5b2>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5b5>: Abbrev Number: 0
 <2><5b6>: Abbrev Number: 15 (DW_TAG_call_site)
    <5b7>   DW_AT_call_return_pc: 0x4c6
 <3><5bb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5bc>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5be>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><5c4>: Abbrev Number: 0
 <2><5c5>: Abbrev Number: 0
 <1><5c6>: Abbrev Number: 13 (DW_TAG_subprogram)
    <5c7>   DW_AT_external    : 1
    <5c7>   DW_AT_name        : (indirect string, offset: 0x298): stop_lidar_scan
    <5cb>   DW_AT_decl_file   : 1
    <5cb>   DW_AT_decl_line   : 120
    <5cc>   DW_AT_decl_column : 6
    <5cc>   DW_AT_prototyped  : 1
    <5cc>   DW_AT_low_pc      : 0x47c
    <5d0>   DW_AT_high_pc     : 0x24
    <5d4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <5d6>   DW_AT_call_all_calls: 1
    <5d6>   DW_AT_sibling     : <0x603>
 <2><5da>: Abbrev Number: 3 (DW_TAG_call_site)
    <5db>   DW_AT_call_return_pc: 0x48e
    <5df>   DW_AT_sibling     : <0x5f0>
 <3><5e3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5e4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5e6>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5e9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5ea>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5ec>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><5ef>: Abbrev Number: 0
 <2><5f0>: Abbrev Number: 15 (DW_TAG_call_site)
    <5f1>   DW_AT_call_return_pc: 0x498
 <3><5f5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5f6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5f8>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><5fb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5fc>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5fe>   DW_AT_call_value  : 2 byte block: 8 65 	(DW_OP_const1u: 101)
 <3><601>: Abbrev Number: 0
 <2><602>: Abbrev Number: 0
 <1><603>: Abbrev Number: 13 (DW_TAG_subprogram)
    <604>   DW_AT_external    : 1
    <604>   DW_AT_name        : (indirect string, offset: 0x2c3): start_lidar_scan
    <608>   DW_AT_decl_file   : 1
    <608>   DW_AT_decl_line   : 115
    <609>   DW_AT_decl_column : 6
    <609>   DW_AT_prototyped  : 1
    <609>   DW_AT_low_pc      : 0x458
    <60d>   DW_AT_high_pc     : 0x24
    <611>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <613>   DW_AT_call_all_calls: 1
    <613>   DW_AT_sibling     : <0x640>
 <2><617>: Abbrev Number: 3 (DW_TAG_call_site)
    <618>   DW_AT_call_return_pc: 0x46a
    <61c>   DW_AT_sibling     : <0x62d>
 <3><620>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <621>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <623>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><626>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <627>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <629>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><62c>: Abbrev Number: 0
 <2><62d>: Abbrev Number: 15 (DW_TAG_call_site)
    <62e>   DW_AT_call_return_pc: 0x474
 <3><632>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <633>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <635>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><638>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <639>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <63b>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><63e>: Abbrev Number: 0
 <2><63f>: Abbrev Number: 0
 <1><640>: Abbrev Number: 48 (DW_TAG_subprogram)
    <641>   DW_AT_external    : 1
    <641>   DW_AT_name        : (indirect string, offset: 0x268): setup_lidar_comms
    <645>   DW_AT_decl_file   : 1
    <646>   DW_AT_decl_line   : 99
    <647>   DW_AT_decl_column : 6
    <648>   DW_AT_prototyped  : 1
    <648>   DW_AT_low_pc      : 0x3a8
    <64c>   DW_AT_high_pc     : 0xb0
    <650>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <652>   DW_AT_call_all_tail_calls: 1
    <652>   DW_AT_sibling     : <0x716>
 <2><656>: Abbrev Number: 3 (DW_TAG_call_site)
    <657>   DW_AT_call_return_pc: 0x3b6
    <65b>   DW_AT_sibling     : <0x66a>
 <3><65f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <660>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <662>   DW_AT_call_value  : 6 byte block: 11 83 90 80 80 7f 	(DW_OP_consts: -268433405)
 <3><669>: Abbrev Number: 0
 <2><66a>: Abbrev Number: 3 (DW_TAG_call_site)
    <66b>   DW_AT_call_return_pc: 0x3be
    <66f>   DW_AT_sibling     : <0x67e>
 <3><673>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <674>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <676>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><67d>: Abbrev Number: 0
 <2><67e>: Abbrev Number: 3 (DW_TAG_call_site)
    <67f>   DW_AT_call_return_pc: 0x3cc
    <683>   DW_AT_sibling     : <0x692>
 <3><687>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <688>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <68a>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><691>: Abbrev Number: 0
 <2><692>: Abbrev Number: 30 (DW_TAG_call_site)
    <693>   DW_AT_call_return_pc: 0x412
    <697>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <69a>   DW_AT_sibling     : <0x6b6>
 <3><69e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <69f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6a1>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6a4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6a5>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6a7>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><6aa>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6ab>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <6ad>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><6b0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6b1>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <6b3>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><6b5>: Abbrev Number: 0
 <2><6b6>: Abbrev Number: 30 (DW_TAG_call_site)
    <6b7>   DW_AT_call_return_pc: 0x420
    <6bb>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <6be>   DW_AT_sibling     : <0x6da>
 <3><6c2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6c3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6c5>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6c8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6c9>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6cb>   DW_AT_call_value  : 2 byte block: 8 40 	(DW_OP_const1u: 64)
 <3><6ce>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6cf>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <6d1>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><6d4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6d5>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <6d7>   DW_AT_call_value  : 1 byte block: 3a 	(DW_OP_lit10)
 <3><6d9>: Abbrev Number: 0
 <2><6da>: Abbrev Number: 3 (DW_TAG_call_site)
    <6db>   DW_AT_call_return_pc: 0x42c
    <6df>   DW_AT_sibling     : <0x6f5>
 <3><6e3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6e4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6e6>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6e9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6ea>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6ec>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><6ef>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6f0>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <6f2>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><6f4>: Abbrev Number: 0
 <2><6f5>: Abbrev Number: 49 (DW_TAG_call_site)
    <6f6>   DW_AT_call_return_pc: 0x442
    <6fa>   DW_AT_call_target : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6fd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6fe>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <700>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><706>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <707>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <709>   DW_AT_call_value  : 4 byte block: 8 e1 3a 24 	(DW_OP_const1u: 225; DW_OP_lit10; DW_OP_shl)
 <3><70e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <70f>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <711>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><714>: Abbrev Number: 0
 <2><715>: Abbrev Number: 0
 <1><716>: Abbrev Number: 50 (DW_TAG_subprogram)
    <717>   DW_AT_external    : 1
    <717>   DW_AT_name        : (indirect string, offset: 0): process_points
    <71b>   DW_AT_decl_file   : 1
    <71c>   DW_AT_decl_line   : 43
    <71d>   DW_AT_decl_column : 6
    <71e>   DW_AT_low_pc      : 0x2d4
    <722>   DW_AT_high_pc     : 0xd4
    <726>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <728>   DW_AT_call_all_calls: 1
    <728>   DW_AT_sibling     : <0x912>
 <2><72c>: Abbrev Number: 8 (DW_TAG_variable)
    <72d>   DW_AT_name        : (indirect string, offset: 0x151): last_time
    <731>   DW_AT_decl_file   : 1
    <731>   DW_AT_decl_line   : 44
    <732>   DW_AT_decl_column : 17
    <733>   DW_AT_type        : <0xbb>
    <737>   DW_AT_location    : 5 byte block: 3 20 0 0 20 	(DW_OP_addr: 20000020)
 <2><73d>: Abbrev Number: 21 (DW_TAG_subprogram)
    <73e>   DW_AT_name        : (indirect string, offset: 0x2fb): has_holes
    <742>   DW_AT_decl_file   : 1
    <742>   DW_AT_decl_line   : 46
    <743>   DW_AT_decl_column : 7
    <744>   DW_AT_prototyped  : 1
    <744>   DW_AT_type        : <0x4cc>
    <748>   DW_AT_low_pc      : 0x26c
    <74c>   DW_AT_high_pc     : 0x1a
    <750>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <752>   DW_AT_call_all_calls: 1
    <752>   DW_AT_sibling     : <0x781>
 <3><756>: Abbrev Number: 12 (DW_TAG_formal_parameter)
    <757>   DW_AT_name        : (indirect string, offset: 0x366): points
    <75b>   DW_AT_decl_file   : 1
    <75b>   DW_AT_decl_line   : 46
    <75c>   DW_AT_decl_column : 27
    <75d>   DW_AT_type        : <0x912>
    <761>   DW_AT_location    : 0x223 (location list)
    <765>   DW_AT_GNU_locviews: 0x21b
 <3><769>: Abbrev Number: 19 (DW_TAG_lexical_block)
    <76a>   DW_AT_ranges      : 0xc
 <4><76e>: Abbrev Number: 6 (DW_TAG_variable)
    <76f>   DW_AT_name        : i
    <771>   DW_AT_decl_file   : 1
    <771>   DW_AT_decl_line   : 47
    <772>   DW_AT_decl_column : 11
    <773>   DW_AT_type        : <0x42>
    <777>   DW_AT_location    : 0x253 (location list)
    <77b>   DW_AT_GNU_locviews: 0x24f
 <4><77f>: Abbrev Number: 0
 <3><780>: Abbrev Number: 0
 <2><781>: Abbrev Number: 21 (DW_TAG_subprogram)
    <782>   DW_AT_name        : (indirect string, offset: 0x313): count_points
    <786>   DW_AT_decl_file   : 1
    <786>   DW_AT_decl_line   : 51
    <787>   DW_AT_decl_column : 6
    <788>   DW_AT_prototyped  : 1
    <788>   DW_AT_type        : <0x42>
    <78c>   DW_AT_low_pc      : 0x288
    <790>   DW_AT_high_pc     : 0x24
    <794>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <796>   DW_AT_call_all_calls: 1
    <796>   DW_AT_sibling     : <0x7c5>
 <3><79a>: Abbrev Number: 5 (DW_TAG_variable)
    <79b>   DW_AT_name        : (indirect string, offset: 0x384): count
    <79f>   DW_AT_decl_file   : 1
    <79f>   DW_AT_decl_line   : 52
    <7a0>   DW_AT_decl_column : 7
    <7a1>   DW_AT_type        : <0x42>
    <7a5>   DW_AT_location    : 0x268 (location list)
    <7a9>   DW_AT_GNU_locviews: 0x264
 <3><7ad>: Abbrev Number: 19 (DW_TAG_lexical_block)
    <7ae>   DW_AT_ranges      : 0x18
 <4><7b2>: Abbrev Number: 6 (DW_TAG_variable)
    <7b3>   DW_AT_name        : i
    <7b5>   DW_AT_decl_file   : 1
    <7b5>   DW_AT_decl_line   : 53
    <7b6>   DW_AT_decl_column : 11
    <7b7>   DW_AT_type        : <0x42>
    <7bb>   DW_AT_location    : 0x27d (location list)
    <7bf>   DW_AT_GNU_locviews: 0x279
 <4><7c3>: Abbrev Number: 0
 <3><7c4>: Abbrev Number: 0
 <2><7c5>: Abbrev Number: 21 (DW_TAG_subprogram)
    <7c6>   DW_AT_name        : (indirect string, offset: 0xa1): bounded_idx
    <7ca>   DW_AT_decl_file   : 1
    <7ca>   DW_AT_decl_line   : 62
    <7cb>   DW_AT_decl_column : 6
    <7cc>   DW_AT_prototyped  : 1
    <7cc>   DW_AT_type        : <0x42>
    <7d0>   DW_AT_low_pc      : 0x2ac
    <7d4>   DW_AT_high_pc     : 0x28
    <7d8>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <7da>   DW_AT_call_all_calls: 1
    <7da>   DW_AT_sibling     : <0x7f2>
 <3><7de>: Abbrev Number: 29 (DW_TAG_formal_parameter)
    <7df>   DW_AT_name        : idx
    <7e3>   DW_AT_decl_file   : 1
    <7e3>   DW_AT_decl_line   : 62
    <7e4>   DW_AT_decl_column : 22
    <7e5>   DW_AT_type        : <0x42>
    <7e9>   DW_AT_location    : 0x292 (location list)
    <7ed>   DW_AT_GNU_locviews: 0x28e
 <3><7f1>: Abbrev Number: 0
 <2><7f2>: Abbrev Number: 20 (DW_TAG_variable)
    <7f3>   DW_AT_name        : (indirect string, offset: 0xb8): temp
    <7f7>   DW_AT_decl_file   : 1
    <7f7>   DW_AT_decl_line   : 78
    <7f8>   DW_AT_decl_column : 12
    <7f9>   DW_AT_type        : <0x912>
 <2><7fd>: Abbrev Number: 20 (DW_TAG_variable)
    <7fe>   DW_AT_name        : (indirect string, offset: 0x263): iter
    <802>   DW_AT_decl_file   : 1
    <802>   DW_AT_decl_line   : 80
    <803>   DW_AT_decl_column : 6
    <804>   DW_AT_type        : <0x42>
 <2><808>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <809>   DW_AT_low_pc      : 0x2e2
    <80d>   DW_AT_high_pc     : 0x14
    <811>   DW_AT_sibling     : <0x827>
 <3><815>: Abbrev Number: 6 (DW_TAG_variable)
    <816>   DW_AT_name        : j
    <818>   DW_AT_decl_file   : 1
    <818>   DW_AT_decl_line   : 70
    <819>   DW_AT_decl_column : 11
    <81a>   DW_AT_type        : <0x42>
    <81e>   DW_AT_location    : 0x2a4 (location list)
    <822>   DW_AT_GNU_locviews: 0x2a2
 <3><826>: Abbrev Number: 0
 <2><827>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <828>   DW_AT_low_pc      : 0x306
    <82c>   DW_AT_high_pc     : 0x1a
    <830>   DW_AT_sibling     : <0x846>
 <3><834>: Abbrev Number: 6 (DW_TAG_variable)
    <835>   DW_AT_name        : i
    <837>   DW_AT_decl_file   : 1
    <837>   DW_AT_decl_line   : 79
    <838>   DW_AT_decl_column : 10
    <839>   DW_AT_type        : <0x42>
    <83d>   DW_AT_location    : 0x2af (location list)
    <841>   DW_AT_GNU_locviews: 0x2ad
 <3><845>: Abbrev Number: 0
 <2><846>: Abbrev Number: 26 (DW_TAG_lexical_block)
    <847>   DW_AT_ranges      : 0x24
    <84b>   DW_AT_sibling     : <0x8d6>
 <3><84f>: Abbrev Number: 5 (DW_TAG_variable)
    <850>   DW_AT_name        : (indirect string, offset: 0x3b9): left
    <854>   DW_AT_decl_file   : 1
    <854>   DW_AT_decl_line   : 82
    <855>   DW_AT_decl_column : 7
    <856>   DW_AT_type        : <0x42>
    <85a>   DW_AT_location    : 0x2c2 (location list)
    <85e>   DW_AT_GNU_locviews: 0x2b8
 <3><862>: Abbrev Number: 5 (DW_TAG_variable)
    <863>   DW_AT_name        : (indirect string, offset: 0x81): right
    <867>   DW_AT_decl_file   : 1
    <867>   DW_AT_decl_line   : 82
    <868>   DW_AT_decl_column : 17
    <869>   DW_AT_type        : <0x42>
    <86d>   DW_AT_location    : 0x2ed (location list)
    <871>   DW_AT_GNU_locviews: 0x2e5
 <3><875>: Abbrev Number: 6 (DW_TAG_variable)
    <876>   DW_AT_name        : mid
    <87a>   DW_AT_decl_file   : 1
    <87a>   DW_AT_decl_line   : 82
    <87b>   DW_AT_decl_column : 24
    <87c>   DW_AT_type        : <0x42>
    <880>   DW_AT_location    : 0x30b (location list)
    <884>   DW_AT_GNU_locviews: 0x309
 <3><888>: Abbrev Number: 5 (DW_TAG_variable)
    <889>   DW_AT_name        : (indirect string, offset: 0x67): diff
    <88d>   DW_AT_decl_file   : 1
    <88d>   DW_AT_decl_line   : 92
    <88e>   DW_AT_decl_column : 7
    <88f>   DW_AT_type        : <0x42>
    <893>   DW_AT_location    : 0x316 (location list)
    <897>   DW_AT_GNU_locviews: 0x314
 <3><89b>: Abbrev Number: 9 (DW_TAG_call_site)
    <89c>   DW_AT_call_return_pc: 0x328
    <8a0>   DW_AT_call_origin : <0x7c5>
    <8a4>   DW_AT_sibling     : <0x8af>
 <4><8a8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <8a9>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <8ab>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><8ae>: Abbrev Number: 0
 <3><8af>: Abbrev Number: 9 (DW_TAG_call_site)
    <8b0>   DW_AT_call_return_pc: 0x33c
    <8b4>   DW_AT_call_origin : <0x7c5>
    <8b8>   DW_AT_sibling     : <0x8c3>
 <4><8bc>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <8bd>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <8bf>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><8c2>: Abbrev Number: 0
 <3><8c3>: Abbrev Number: 11 (DW_TAG_call_site)
    <8c4>   DW_AT_call_return_pc: 0x34c
    <8c8>   DW_AT_call_origin : <0x7c5>
 <3><8cc>: Abbrev Number: 11 (DW_TAG_call_site)
    <8cd>   DW_AT_call_return_pc: 0x358
    <8d1>   DW_AT_call_origin : <0x7c5>
 <3><8d5>: Abbrev Number: 0
 <2><8d6>: Abbrev Number: 14 (DW_TAG_lexical_block)
    <8d7>   DW_AT_low_pc      : 0x37a
    <8db>   DW_AT_high_pc     : 0x18
    <8df>   DW_AT_sibling     : <0x8f5>
 <3><8e3>: Abbrev Number: 6 (DW_TAG_variable)
    <8e4>   DW_AT_name        : i
    <8e6>   DW_AT_decl_file   : 1
    <8e6>   DW_AT_decl_line   : 96
    <8e7>   DW_AT_decl_column : 10
    <8e8>   DW_AT_type        : <0x42>
    <8ec>   DW_AT_location    : 0x321 (location list)
    <8f0>   DW_AT_GNU_locviews: 0x31f
 <3><8f4>: Abbrev Number: 0
 <2><8f5>: Abbrev Number: 11 (DW_TAG_call_site)
    <8f6>   DW_AT_call_return_pc: 0x302
    <8fa>   DW_AT_call_origin : <0x781>
 <2><8fe>: Abbrev Number: 28 (DW_TAG_call_site)
    <8ff>   DW_AT_call_return_pc: 0x368
    <903>   DW_AT_call_origin : <0x73d>
 <3><907>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <908>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <90a>   DW_AT_call_value  : 5 byte block: 3 24 0 0 20 	(DW_OP_addr: 20000024)
 <3><910>: Abbrev Number: 0
 <2><911>: Abbrev Number: 0
 <1><912>: Abbrev Number: 17 (DW_TAG_pointer_type)
    <913>   DW_AT_byte_size   : 4
    <913>   DW_AT_type        : <0xaf>
 <1><917>: Abbrev Number: 0
  Compilation Unit @ offset 0x918:
   Length:        0x306 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x2f2
   Pointer Size:  4
 <0><924>: Abbrev Number: 10 (DW_TAG_compile_unit)
    <925>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <929>   DW_AT_language    : 29	(C11)
    <92a>   DW_AT_name        : (indirect string, offset: 0x3da): src/main.c
    <92e>   DW_AT_comp_dir    : (indirect string, offset: 0x329): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <932>   DW_AT_ranges      : 0xab
    <936>   DW_AT_low_pc      : 0
    <93a>   DW_AT_stmt_list   : 0x6f0
 <1><93e>: Abbrev Number: 2 (DW_TAG_base_type)
    <93f>   DW_AT_byte_size   : 1
    <940>   DW_AT_encoding    : 6	(signed char)
    <941>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><945>: Abbrev Number: 2 (DW_TAG_base_type)
    <946>   DW_AT_byte_size   : 1
    <947>   DW_AT_encoding    : 8	(unsigned char)
    <948>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><94c>: Abbrev Number: 2 (DW_TAG_base_type)
    <94d>   DW_AT_byte_size   : 2
    <94e>   DW_AT_encoding    : 5	(signed)
    <94f>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><953>: Abbrev Number: 7 (DW_TAG_typedef)
    <954>   DW_AT_name        : (indirect string, offset: 0x2d4): __uint16_t
    <958>   DW_AT_decl_file   : 2
    <959>   DW_AT_decl_line   : 57
    <95a>   DW_AT_decl_column : 25
    <95b>   DW_AT_type        : <0x95f>
 <1><95f>: Abbrev Number: 2 (DW_TAG_base_type)
    <960>   DW_AT_byte_size   : 2
    <961>   DW_AT_encoding    : 7	(unsigned)
    <962>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><966>: Abbrev Number: 2 (DW_TAG_base_type)
    <967>   DW_AT_byte_size   : 4
    <968>   DW_AT_encoding    : 5	(signed)
    <969>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><96d>: Abbrev Number: 7 (DW_TAG_typedef)
    <96e>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <972>   DW_AT_decl_file   : 2
    <973>   DW_AT_decl_line   : 79
    <974>   DW_AT_decl_column : 25
    <975>   DW_AT_type        : <0x979>
 <1><979>: Abbrev Number: 2 (DW_TAG_base_type)
    <97a>   DW_AT_byte_size   : 4
    <97b>   DW_AT_encoding    : 7	(unsigned)
    <97c>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><980>: Abbrev Number: 2 (DW_TAG_base_type)
    <981>   DW_AT_byte_size   : 8
    <982>   DW_AT_encoding    : 5	(signed)
    <983>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><987>: Abbrev Number: 2 (DW_TAG_base_type)
    <988>   DW_AT_byte_size   : 8
    <989>   DW_AT_encoding    : 7	(unsigned)
    <98a>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><98e>: Abbrev Number: 11 (DW_TAG_base_type)
    <98f>   DW_AT_byte_size   : 4
    <990>   DW_AT_encoding    : 5	(signed)
    <991>   DW_AT_name        : int
 <1><995>: Abbrev Number: 2 (DW_TAG_base_type)
    <996>   DW_AT_byte_size   : 4
    <997>   DW_AT_encoding    : 7	(unsigned)
    <998>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><99c>: Abbrev Number: 7 (DW_TAG_typedef)
    <99d>   DW_AT_name        : (indirect string, offset: 0x2d6): uint16_t
    <9a1>   DW_AT_decl_file   : 3
    <9a2>   DW_AT_decl_line   : 36
    <9a3>   DW_AT_decl_column : 20
    <9a4>   DW_AT_type        : <0x953>
 <1><9a8>: Abbrev Number: 7 (DW_TAG_typedef)
    <9a9>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <9ad>   DW_AT_decl_file   : 3
    <9ae>   DW_AT_decl_line   : 48
    <9af>   DW_AT_decl_column : 20
    <9b0>   DW_AT_type        : <0x96d>
 <1><9b4>: Abbrev Number: 2 (DW_TAG_base_type)
    <9b5>   DW_AT_byte_size   : 8
    <9b6>   DW_AT_encoding    : 4	(float)
    <9b7>   DW_AT_name        : (indirect string, offset: 0x257): long double
 <1><9bb>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <9bc>   DW_AT_byte_size   : 4
    <9bd>   DW_AT_type        : <0x9c1>
 <1><9c1>: Abbrev Number: 2 (DW_TAG_base_type)
    <9c2>   DW_AT_byte_size   : 1
    <9c3>   DW_AT_encoding    : 8	(unsigned char)
    <9c4>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><9c8>: Abbrev Number: 13 (DW_TAG_array_type)
    <9c9>   DW_AT_type        : <0x99c>
    <9cd>   DW_AT_sibling     : <0x9d9>
 <2><9d1>: Abbrev Number: 14 (DW_TAG_subrange_type)
    <9d2>   DW_AT_type        : <0x995>
    <9d6>   DW_AT_upper_bound : 360
 <2><9d8>: Abbrev Number: 0
 <1><9d9>: Abbrev Number: 15 (DW_TAG_variable)
    <9da>   DW_AT_name        : (indirect string, offset: 0x358): g_conditioned_points
    <9de>   DW_AT_decl_file   : 4
    <9df>   DW_AT_decl_line   : 7
    <9e0>   DW_AT_decl_column : 17
    <9e1>   DW_AT_type        : <0x9c8>
    <9e5>   DW_AT_external    : 1
    <9e5>   DW_AT_declaration : 1
 <1><9e5>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9e6>   DW_AT_external    : 1
    <9e6>   DW_AT_name        : (indirect string, offset: 0x36d): process_packets
    <9ea>   DW_AT_decl_file   : 4
    <9eb>   DW_AT_decl_line   : 38
    <9ec>   DW_AT_decl_column : 6
    <9ec>   DW_AT_prototyped  : 1
    <9ec>   DW_AT_declaration : 1
 <1><9ec>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9ed>   DW_AT_external    : 1
    <9ed>   DW_AT_name        : (indirect string, offset: 0x2c3): start_lidar_scan
    <9f1>   DW_AT_decl_file   : 4
    <9f2>   DW_AT_decl_line   : 36
    <9f3>   DW_AT_decl_column : 6
    <9f3>   DW_AT_prototyped  : 1
    <9f3>   DW_AT_declaration : 1
 <1><9f3>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9f4>   DW_AT_external    : 1
    <9f4>   DW_AT_name        : (indirect string, offset: 0x72): clear_lidar_IO
    <9f8>   DW_AT_decl_file   : 4
    <9f9>   DW_AT_decl_line   : 39
    <9fa>   DW_AT_decl_column : 6
    <9fa>   DW_AT_prototyped  : 1
    <9fa>   DW_AT_declaration : 1
 <1><9fa>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9fb>   DW_AT_external    : 1
    <9fb>   DW_AT_name        : (indirect string, offset: 0x298): stop_lidar_scan
    <9ff>   DW_AT_decl_file   : 4
    <a00>   DW_AT_decl_line   : 37
    <a01>   DW_AT_decl_column : 6
    <a01>   DW_AT_prototyped  : 1
    <a01>   DW_AT_declaration : 1
 <1><a01>: Abbrev Number: 5 (DW_TAG_subprogram)
    <a02>   DW_AT_external    : 1
    <a02>   DW_AT_name        : (indirect string, offset: 0x268): setup_lidar_comms
    <a06>   DW_AT_decl_file   : 4
    <a07>   DW_AT_decl_line   : 35
    <a08>   DW_AT_decl_column : 6
    <a08>   DW_AT_prototyped  : 1
    <a08>   DW_AT_declaration : 1
 <1><a08>: Abbrev Number: 16 (DW_TAG_subprogram)
    <a09>   DW_AT_external    : 1
    <a09>   DW_AT_name        : (indirect string, offset: 0x2a8): printlf
    <a0d>   DW_AT_decl_file   : 5
    <a0e>   DW_AT_decl_line   : 10
    <a0f>   DW_AT_decl_column : 6
    <a10>   DW_AT_prototyped  : 1
    <a10>   DW_AT_declaration : 1
    <a10>   DW_AT_sibling     : <0xa1b>
 <2><a14>: Abbrev Number: 17 (DW_TAG_formal_parameter)
    <a15>   DW_AT_type        : <0x9bb>
 <2><a19>: Abbrev Number: 8 (DW_TAG_unspecified_parameters)
 <2><a1a>: Abbrev Number: 0
 <1><a1b>: Abbrev Number: 5 (DW_TAG_subprogram)
    <a1c>   DW_AT_external    : 1
    <a1c>   DW_AT_name        : (indirect string, offset: 0x3fc): setup_uart_printer
    <a20>   DW_AT_decl_file   : 5
    <a21>   DW_AT_decl_line   : 1
    <a22>   DW_AT_decl_column : 6
    <a22>   DW_AT_prototyped  : 1
    <a22>   DW_AT_declaration : 1
 <1><a22>: Abbrev Number: 9 (DW_TAG_subprogram)
    <a23>   DW_AT_external    : 1
    <a23>   DW_AT_name        : (indirect string, offset: 0x3e5): configureDebounceTimer
    <a27>   DW_AT_decl_file   : 1
    <a27>   DW_AT_decl_line   : 22
    <a27>   DW_AT_decl_column : 2
    <a27>   DW_AT_type        : <0x98e>
    <a2b>   DW_AT_declaration : 1
    <a2b>   DW_AT_sibling     : <0xa31>
 <2><a2f>: Abbrev Number: 8 (DW_TAG_unspecified_parameters)
 <2><a30>: Abbrev Number: 0
 <1><a31>: Abbrev Number: 18 (DW_TAG_subprogram)
    <a32>   DW_AT_external    : 1
    <a32>   DW_AT_name        : (indirect string, offset: 0x3d5): main
    <a36>   DW_AT_decl_file   : 1
    <a37>   DW_AT_decl_line   : 20
    <a38>   DW_AT_decl_column : 5
    <a39>   DW_AT_prototyped  : 1
    <a39>   DW_AT_type        : <0x98e>
    <a3d>   DW_AT_low_pc      : 0x728
    <a41>   DW_AT_high_pc     : 0x10c
    <a45>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <a47>   DW_AT_call_all_calls: 1
 <2><a47>: Abbrev Number: 9 (DW_TAG_subprogram)
    <a48>   DW_AT_external    : 1
    <a48>   DW_AT_name        : (indirect string, offset: 0x3e5): configureDebounceTimer
    <a4c>   DW_AT_decl_file   : 1
    <a4c>   DW_AT_decl_line   : 22
    <a4c>   DW_AT_decl_column : 2
    <a4c>   DW_AT_type        : <0x98e>
    <a50>   DW_AT_declaration : 1
    <a50>   DW_AT_sibling     : <0xa56>
 <3><a54>: Abbrev Number: 8 (DW_TAG_unspecified_parameters)
 <3><a55>: Abbrev Number: 0
 <2><a56>: Abbrev Number: 19 (DW_TAG_variable)
    <a57>   DW_AT_name        : i
    <a59>   DW_AT_decl_file   : 1
    <a5a>   DW_AT_decl_line   : 44
    <a5b>   DW_AT_decl_column : 6
    <a5c>   DW_AT_type        : <0x98e>
    <a60>   DW_AT_location    : 0x33e (location list)
    <a64>   DW_AT_GNU_locviews: 0x336
 <2><a68>: Abbrev Number: 3 (DW_TAG_call_site)
    <a69>   DW_AT_call_return_pc: 0x736
    <a6d>   DW_AT_sibling     : <0xa7c>
 <3><a71>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <a72>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a74>   DW_AT_call_value  : 6 byte block: 11 c0 8a 80 88 7c 	(DW_OP_consts: -1056963264)
 <3><a7b>: Abbrev Number: 0
 <2><a7c>: Abbrev Number: 4 (DW_TAG_call_site)
    <a7d>   DW_AT_call_return_pc: 0x73a
    <a81>   DW_AT_call_origin : <0xa22>
 <2><a85>: Abbrev Number: 4 (DW_TAG_call_site)
    <a86>   DW_AT_call_return_pc: 0x73e
    <a8a>   DW_AT_call_origin : <0xa1b>
 <2><a8e>: Abbrev Number: 6 (DW_TAG_call_site)
    <a8f>   DW_AT_call_return_pc: 0x744
    <a93>   DW_AT_call_origin : <0xa08>
    <a97>   DW_AT_sibling     : <0xaa5>
 <3><a9b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <a9c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a9e>   DW_AT_call_value  : 5 byte block: 3 cc c 0 0 	(DW_OP_addr: ccc)
 <3><aa4>: Abbrev Number: 0
 <2><aa5>: Abbrev Number: 4 (DW_TAG_call_site)
    <aa6>   DW_AT_call_return_pc: 0x748
    <aaa>   DW_AT_call_origin : <0xa01>
 <2><aae>: Abbrev Number: 6 (DW_TAG_call_site)
    <aaf>   DW_AT_call_return_pc: 0x74e
    <ab3>   DW_AT_call_origin : <0xa08>
    <ab7>   DW_AT_sibling     : <0xac5>
 <3><abb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <abc>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <abe>   DW_AT_call_value  : 5 byte block: 3 e0 c 0 0 	(DW_OP_addr: ce0)
 <3><ac4>: Abbrev Number: 0
 <2><ac5>: Abbrev Number: 4 (DW_TAG_call_site)
    <ac6>   DW_AT_call_return_pc: 0x752
    <aca>   DW_AT_call_origin : <0x9fa>
 <2><ace>: Abbrev Number: 6 (DW_TAG_call_site)
    <acf>   DW_AT_call_return_pc: 0x758
    <ad3>   DW_AT_call_origin : <0xa08>
    <ad7>   DW_AT_sibling     : <0xae5>
 <3><adb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <adc>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ade>   DW_AT_call_value  : 5 byte block: 3 f8 c 0 0 	(DW_OP_addr: cf8)
 <3><ae4>: Abbrev Number: 0
 <2><ae5>: Abbrev Number: 3 (DW_TAG_call_site)
    <ae6>   DW_AT_call_return_pc: 0x764
    <aea>   DW_AT_sibling     : <0xaf5>
 <3><aee>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <aef>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <af1>   DW_AT_call_value  : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <3><af4>: Abbrev Number: 0
 <2><af5>: Abbrev Number: 4 (DW_TAG_call_site)
    <af6>   DW_AT_call_return_pc: 0x768
    <afa>   DW_AT_call_origin : <0x9f3>
 <2><afe>: Abbrev Number: 3 (DW_TAG_call_site)
    <aff>   DW_AT_call_return_pc: 0x774
    <b03>   DW_AT_sibling     : <0xb14>
 <3><b07>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b08>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b0a>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b0d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b0e>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b10>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><b13>: Abbrev Number: 0
 <2><b14>: Abbrev Number: 3 (DW_TAG_call_site)
    <b15>   DW_AT_call_return_pc: 0x77e
    <b19>   DW_AT_sibling     : <0xb29>
 <3><b1d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b1e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b20>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b23>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b24>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b26>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><b28>: Abbrev Number: 0
 <2><b29>: Abbrev Number: 3 (DW_TAG_call_site)
    <b2a>   DW_AT_call_return_pc: 0x788
    <b2e>   DW_AT_sibling     : <0xb3f>
 <3><b32>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b33>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b35>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b38>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b39>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b3b>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><b3e>: Abbrev Number: 0
 <2><b3f>: Abbrev Number: 3 (DW_TAG_call_site)
    <b40>   DW_AT_call_return_pc: 0x792
    <b44>   DW_AT_sibling     : <0xb54>
 <3><b48>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b49>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b4b>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b4e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b4f>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b51>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><b53>: Abbrev Number: 0
 <2><b54>: Abbrev Number: 3 (DW_TAG_call_site)
    <b55>   DW_AT_call_return_pc: 0x79c
    <b59>   DW_AT_sibling     : <0xb6a>
 <3><b5d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b5e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b60>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b63>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b64>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b66>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><b69>: Abbrev Number: 0
 <2><b6a>: Abbrev Number: 3 (DW_TAG_call_site)
    <b6b>   DW_AT_call_return_pc: 0x7a6
    <b6f>   DW_AT_sibling     : <0xb7f>
 <3><b73>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b74>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b76>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b79>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b7a>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b7c>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><b7e>: Abbrev Number: 0
 <2><b7f>: Abbrev Number: 3 (DW_TAG_call_site)
    <b80>   DW_AT_call_return_pc: 0x7b0
    <b84>   DW_AT_sibling     : <0xb95>
 <3><b88>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b89>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b8b>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b8e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b8f>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b91>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><b94>: Abbrev Number: 0
 <2><b95>: Abbrev Number: 3 (DW_TAG_call_site)
    <b96>   DW_AT_call_return_pc: 0x7ba
    <b9a>   DW_AT_sibling     : <0xbaa>
 <3><b9e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b9f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ba1>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><ba4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ba5>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <ba7>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><ba9>: Abbrev Number: 0
 <2><baa>: Abbrev Number: 4 (DW_TAG_call_site)
    <bab>   DW_AT_call_return_pc: 0x7be
    <baf>   DW_AT_call_origin : <0x9f3>
 <2><bb3>: Abbrev Number: 3 (DW_TAG_call_site)
    <bb4>   DW_AT_call_return_pc: 0x7c8
    <bb8>   DW_AT_sibling     : <0xbc3>
 <3><bbc>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <bbd>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <bbf>   DW_AT_call_value  : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <3><bc2>: Abbrev Number: 0
 <2><bc3>: Abbrev Number: 6 (DW_TAG_call_site)
    <bc4>   DW_AT_call_return_pc: 0x7ce
    <bc8>   DW_AT_call_origin : <0xa08>
    <bcc>   DW_AT_sibling     : <0xbda>
 <3><bd0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <bd1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <bd3>   DW_AT_call_value  : 5 byte block: 3 10 d 0 0 	(DW_OP_addr: d10)
 <3><bd9>: Abbrev Number: 0
 <2><bda>: Abbrev Number: 4 (DW_TAG_call_site)
    <bdb>   DW_AT_call_return_pc: 0x7d2
    <bdf>   DW_AT_call_origin : <0x9ec>
 <2><be3>: Abbrev Number: 6 (DW_TAG_call_site)
    <be4>   DW_AT_call_return_pc: 0x7d8
    <be8>   DW_AT_call_origin : <0xa08>
    <bec>   DW_AT_sibling     : <0xbfa>
 <3><bf0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <bf1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <bf3>   DW_AT_call_value  : 5 byte block: 3 20 d 0 0 	(DW_OP_addr: d20)
 <3><bf9>: Abbrev Number: 0
 <2><bfa>: Abbrev Number: 6 (DW_TAG_call_site)
    <bfb>   DW_AT_call_return_pc: 0x7e8
    <bff>   DW_AT_call_origin : <0xa08>
    <c03>   DW_AT_sibling     : <0xc17>
 <3><c07>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c08>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <c0a>   DW_AT_call_value  : 5 byte block: 3 2c d 0 0 	(DW_OP_addr: d2c)
 <3><c10>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <c11>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <c13>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><c16>: Abbrev Number: 0
 <2><c17>: Abbrev Number: 4 (DW_TAG_call_site)
    <c18>   DW_AT_call_return_pc: 0x7ec
    <c1c>   DW_AT_call_origin : <0x9e5>
 <2><c20>: Abbrev Number: 0
 <1><c21>: Abbrev Number: 0
  Compilation Unit @ offset 0xc22:
   Length:        0x17a (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x3fb
   Pointer Size:  4
 <0><c2e>: Abbrev Number: 4 (DW_TAG_compile_unit)
    <c2f>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <c33>   DW_AT_language    : 29	(C11)
    <c34>   DW_AT_name        : (indirect string, offset: 0x43b): src/timers.c
    <c38>   DW_AT_comp_dir    : (indirect string, offset: 0x329): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <c3c>   DW_AT_ranges      : 0xbf
    <c40>   DW_AT_low_pc      : 0
    <c44>   DW_AT_stmt_list   : 0x7ed
 <1><c48>: Abbrev Number: 1 (DW_TAG_base_type)
    <c49>   DW_AT_byte_size   : 1
    <c4a>   DW_AT_encoding    : 6	(signed char)
    <c4b>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><c4f>: Abbrev Number: 1 (DW_TAG_base_type)
    <c50>   DW_AT_byte_size   : 1
    <c51>   DW_AT_encoding    : 8	(unsigned char)
    <c52>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><c56>: Abbrev Number: 1 (DW_TAG_base_type)
    <c57>   DW_AT_byte_size   : 2
    <c58>   DW_AT_encoding    : 5	(signed)
    <c59>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><c5d>: Abbrev Number: 1 (DW_TAG_base_type)
    <c5e>   DW_AT_byte_size   : 2
    <c5f>   DW_AT_encoding    : 7	(unsigned)
    <c60>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><c64>: Abbrev Number: 2 (DW_TAG_typedef)
    <c65>   DW_AT_name        : (indirect string, offset: 0x2df): __int32_t
    <c69>   DW_AT_decl_file   : 2
    <c6a>   DW_AT_decl_line   : 77
    <c6b>   DW_AT_decl_column : 24
    <c6c>   DW_AT_type        : <0xc70>
 <1><c70>: Abbrev Number: 1 (DW_TAG_base_type)
    <c71>   DW_AT_byte_size   : 4
    <c72>   DW_AT_encoding    : 5	(signed)
    <c73>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><c77>: Abbrev Number: 2 (DW_TAG_typedef)
    <c78>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <c7c>   DW_AT_decl_file   : 2
    <c7d>   DW_AT_decl_line   : 79
    <c7e>   DW_AT_decl_column : 25
    <c7f>   DW_AT_type        : <0xc83>
 <1><c83>: Abbrev Number: 1 (DW_TAG_base_type)
    <c84>   DW_AT_byte_size   : 4
    <c85>   DW_AT_encoding    : 7	(unsigned)
    <c86>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><c8a>: Abbrev Number: 1 (DW_TAG_base_type)
    <c8b>   DW_AT_byte_size   : 8
    <c8c>   DW_AT_encoding    : 5	(signed)
    <c8d>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><c91>: Abbrev Number: 2 (DW_TAG_typedef)
    <c92>   DW_AT_name        : (indirect string, offset: 0x47f): __uint64_t
    <c96>   DW_AT_decl_file   : 2
    <c97>   DW_AT_decl_line   : 105
    <c98>   DW_AT_decl_column : 25
    <c99>   DW_AT_type        : <0xc9d>
 <1><c9d>: Abbrev Number: 1 (DW_TAG_base_type)
    <c9e>   DW_AT_byte_size   : 8
    <c9f>   DW_AT_encoding    : 7	(unsigned)
    <ca0>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><ca4>: Abbrev Number: 5 (DW_TAG_base_type)
    <ca5>   DW_AT_byte_size   : 4
    <ca6>   DW_AT_encoding    : 5	(signed)
    <ca7>   DW_AT_name        : int
 <1><cab>: Abbrev Number: 1 (DW_TAG_base_type)
    <cac>   DW_AT_byte_size   : 4
    <cad>   DW_AT_encoding    : 7	(unsigned)
    <cae>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><cb2>: Abbrev Number: 2 (DW_TAG_typedef)
    <cb3>   DW_AT_name        : (indirect string, offset: 0x2e1): int32_t
    <cb7>   DW_AT_decl_file   : 3
    <cb8>   DW_AT_decl_line   : 44
    <cb9>   DW_AT_decl_column : 19
    <cba>   DW_AT_type        : <0xc64>
 <1><cbe>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <cbf>   DW_AT_type        : <0xcb2>
 <1><cc3>: Abbrev Number: 2 (DW_TAG_typedef)
    <cc4>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <cc8>   DW_AT_decl_file   : 3
    <cc9>   DW_AT_decl_line   : 48
    <cca>   DW_AT_decl_column : 20
    <ccb>   DW_AT_type        : <0xc77>
 <1><ccf>: Abbrev Number: 2 (DW_TAG_typedef)
    <cd0>   DW_AT_name        : (indirect string, offset: 0x481): uint64_t
    <cd4>   DW_AT_decl_file   : 3
    <cd5>   DW_AT_decl_line   : 60
    <cd6>   DW_AT_decl_column : 20
    <cd7>   DW_AT_type        : <0xc91>
 <1><cdb>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <cdc>   DW_AT_type        : <0xccf>
 <1><ce0>: Abbrev Number: 6 (DW_TAG_variable)
    <ce1>   DW_AT_name        : (indirect string, offset: 0x41): uptime_seconds
    <ce5>   DW_AT_decl_file   : 4
    <ce6>   DW_AT_decl_line   : 4
    <ce7>   DW_AT_decl_column : 25
    <ce8>   DW_AT_type        : <0xcbe>
    <cec>   DW_AT_external    : 1
    <cec>   DW_AT_declaration : 1
 <1><cec>: Abbrev Number: 7 (DW_TAG_variable)
    <ced>   DW_AT_specification: <0xce0>
    <cf1>   DW_AT_decl_file   : 1
    <cf2>   DW_AT_decl_line   : 11
    <cf3>   DW_AT_decl_column : 18
    <cf4>   DW_AT_location    : 5 byte block: 3 a8 8 0 20 	(DW_OP_addr: 200008a8)
 <1><cfa>: Abbrev Number: 8 (DW_TAG_variable)
    <cfb>   DW_AT_name        : (indirect string, offset: 0x448): timer1_overflow_count
    <cff>   DW_AT_decl_file   : 1
    <d00>   DW_AT_decl_line   : 12
    <d01>   DW_AT_decl_column : 19
    <d02>   DW_AT_type        : <0xcdb>
    <d06>   DW_AT_external    : 1
    <d06>   DW_AT_location    : 5 byte block: 3 a0 8 0 20 	(DW_OP_addr: 200008a0)
 <1><d0c>: Abbrev Number: 9 (DW_TAG_subprogram)
    <d0d>   DW_AT_external    : 1
    <d0d>   DW_AT_name        : (indirect string, offset: 0x41e): get_uptime_cycles
    <d11>   DW_AT_decl_file   : 1
    <d12>   DW_AT_decl_line   : 52
    <d13>   DW_AT_decl_column : 10
    <d14>   DW_AT_prototyped  : 1
    <d14>   DW_AT_type        : <0xccf>
    <d18>   DW_AT_low_pc      : 0
    <d1c>   DW_AT_high_pc     : 0x58
    <d20>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <d22>   DW_AT_call_all_tail_calls: 1
    <d22>   DW_AT_sibling     : <0xd50>
 <2><d26>: Abbrev Number: 10 (DW_TAG_variable)
    <d27>   DW_AT_name        : (indirect string, offset: 0x46c): overflow_count_now
    <d2b>   DW_AT_decl_file   : 1
    <d2c>   DW_AT_decl_line   : 53
    <d2d>   DW_AT_decl_column : 11
    <d2e>   DW_AT_type        : <0xccf>
    <d32>   DW_AT_location    : 0x36b (location list)
    <d36>   DW_AT_GNU_locviews: 0x367
 <2><d3a>: Abbrev Number: 11 (DW_TAG_variable)
    <d3b>   DW_AT_name        : (indirect string, offset: 0x430): cycles_now
    <d3f>   DW_AT_decl_file   : 1
    <d40>   DW_AT_decl_line   : 54
    <d41>   DW_AT_decl_column : 11
    <d42>   DW_AT_type        : <0xccf>
 <2><d46>: Abbrev Number: 12 (DW_TAG_call_site)
    <d47>   DW_AT_call_return_pc: 0
    <d4b>   DW_AT_call_origin : <0xd50>
 <2><d4f>: Abbrev Number: 0
 <1><d50>: Abbrev Number: 13 (DW_TAG_subprogram)
    <d51>   DW_AT_external    : 1
    <d51>   DW_AT_name        : (indirect string, offset: 0x45e): timeKeeperISR
    <d55>   DW_AT_decl_file   : 1
    <d56>   DW_AT_decl_line   : 34
    <d57>   DW_AT_decl_column : 6
    <d58>   DW_AT_prototyped  : 1
    <d58>   DW_AT_low_pc      : 0x8b0
    <d5c>   DW_AT_high_pc     : 0x64
    <d60>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <d62>   DW_AT_call_all_calls: 1
    <d62>   DW_AT_sibling     : <0xd86>
 <2><d66>: Abbrev Number: 14 (DW_TAG_variable)
    <d67>   DW_AT_name        : (indirect string, offset: 0x40f): second_counter
    <d6b>   DW_AT_decl_file   : 1
    <d6c>   DW_AT_decl_line   : 35
    <d6d>   DW_AT_decl_column : 14
    <d6e>   DW_AT_type        : <0xd86>
    <d72>   DW_AT_location    : 5 byte block: 3 9e 8 0 20 	(DW_OP_addr: 2000089e)
 <2><d78>: Abbrev Number: 15 (DW_TAG_variable)
    <d79>   DW_AT_name        : (indirect string, offset: 0x48a): sonic_sensor_action_div
    <d7d>   DW_AT_decl_file   : 1
    <d7e>   DW_AT_decl_line   : 36
    <d7f>   DW_AT_decl_column : 14
    <d80>   DW_AT_type        : <0xd86>
    <d84>   DW_AT_const_value : 0
 <2><d85>: Abbrev Number: 0
 <1><d86>: Abbrev Number: 1 (DW_TAG_base_type)
    <d87>   DW_AT_byte_size   : 1
    <d88>   DW_AT_encoding    : 8	(unsigned char)
    <d89>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><d8d>: Abbrev Number: 16 (DW_TAG_subprogram)
    <d8e>   DW_AT_external    : 1
    <d8e>   DW_AT_name        : (indirect string, offset: 0x3e5): configureDebounceTimer
    <d92>   DW_AT_decl_file   : 1
    <d93>   DW_AT_decl_line   : 16
    <d94>   DW_AT_decl_column : 6
    <d95>   DW_AT_prototyped  : 1
    <d95>   DW_AT_low_pc      : 0x834
    <d99>   DW_AT_high_pc     : 0x7c
    <d9d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <d9f>   DW_AT_call_all_tail_calls: 1
 <1><d9f>: Abbrev Number: 0
  Compilation Unit @ offset 0xda0:
   Length:        0x531 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x50f
   Pointer Size:  4
 <0><dac>: Abbrev Number: 20 (DW_TAG_compile_unit)
    <dad>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <db1>   DW_AT_language    : 29	(C11)
    <db2>   DW_AT_name        : (indirect string, offset: 0x4db): src/uart_print.c
    <db6>   DW_AT_comp_dir    : (indirect string, offset: 0x329): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <dba>   DW_AT_ranges      : 0xed
    <dbe>   DW_AT_low_pc      : 0
    <dc2>   DW_AT_stmt_list   : 0x9e1
 <1><dc6>: Abbrev Number: 2 (DW_TAG_base_type)
    <dc7>   DW_AT_byte_size   : 4
    <dc8>   DW_AT_encoding    : 4	(float)
    <dc9>   DW_AT_name        : (indirect string, offset: 0x50e): float
 <1><dcd>: Abbrev Number: 2 (DW_TAG_base_type)
    <dce>   DW_AT_byte_size   : 8
    <dcf>   DW_AT_encoding    : 7	(unsigned)
    <dd0>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><dd4>: Abbrev Number: 2 (DW_TAG_base_type)
    <dd5>   DW_AT_byte_size   : 1
    <dd6>   DW_AT_encoding    : 8	(unsigned char)
    <dd7>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><ddb>: Abbrev Number: 5 (DW_TAG_typedef)
    <ddc>   DW_AT_name        : (indirect string, offset: 0x4ec): __gnuc_va_list
    <de0>   DW_AT_decl_file   : 2
    <de1>   DW_AT_decl_line   : 40
    <de2>   DW_AT_decl_column : 27
    <de3>   DW_AT_type        : <0xde7>
 <1><de7>: Abbrev Number: 21 (DW_TAG_structure_type)
    <de8>   DW_AT_name        : (indirect string, offset: 0x558): __va_list
    <dec>   DW_AT_byte_size   : 4
    <ded>   DW_AT_decl_file   : 5
    <dee>   DW_AT_decl_line   : 0
    <def>   DW_AT_sibling     : <0xdfe>
 <2><df3>: Abbrev Number: 22 (DW_TAG_member)
    <df4>   DW_AT_name        : (indirect string, offset: 0x540): __ap
    <df8>   DW_AT_type        : <0xdfe>
    <dfc>   DW_AT_data_member_location: 0
    <dfd>   DW_AT_artificial  : 1
 <2><dfd>: Abbrev Number: 0
 <1><dfe>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <dff>   DW_AT_byte_size   : 4
 <1><e00>: Abbrev Number: 5 (DW_TAG_typedef)
    <e01>   DW_AT_name        : (indirect string, offset: 0x55a): va_list
    <e05>   DW_AT_decl_file   : 2
    <e06>   DW_AT_decl_line   : 103
    <e07>   DW_AT_decl_column : 24
    <e08>   DW_AT_type        : <0xddb>
 <1><e0c>: Abbrev Number: 2 (DW_TAG_base_type)
    <e0d>   DW_AT_byte_size   : 1
    <e0e>   DW_AT_encoding    : 6	(signed char)
    <e0f>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><e13>: Abbrev Number: 2 (DW_TAG_base_type)
    <e14>   DW_AT_byte_size   : 2
    <e15>   DW_AT_encoding    : 5	(signed)
    <e16>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><e1a>: Abbrev Number: 2 (DW_TAG_base_type)
    <e1b>   DW_AT_byte_size   : 2
    <e1c>   DW_AT_encoding    : 7	(unsigned)
    <e1d>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><e21>: Abbrev Number: 5 (DW_TAG_typedef)
    <e22>   DW_AT_name        : (indirect string, offset: 0x2df): __int32_t
    <e26>   DW_AT_decl_file   : 3
    <e27>   DW_AT_decl_line   : 77
    <e28>   DW_AT_decl_column : 24
    <e29>   DW_AT_type        : <0xe2d>
 <1><e2d>: Abbrev Number: 2 (DW_TAG_base_type)
    <e2e>   DW_AT_byte_size   : 4
    <e2f>   DW_AT_encoding    : 5	(signed)
    <e30>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><e34>: Abbrev Number: 5 (DW_TAG_typedef)
    <e35>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <e39>   DW_AT_decl_file   : 3
    <e3a>   DW_AT_decl_line   : 79
    <e3b>   DW_AT_decl_column : 25
    <e3c>   DW_AT_type        : <0xe40>
 <1><e40>: Abbrev Number: 2 (DW_TAG_base_type)
    <e41>   DW_AT_byte_size   : 4
    <e42>   DW_AT_encoding    : 7	(unsigned)
    <e43>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><e47>: Abbrev Number: 2 (DW_TAG_base_type)
    <e48>   DW_AT_byte_size   : 8
    <e49>   DW_AT_encoding    : 5	(signed)
    <e4a>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><e4e>: Abbrev Number: 24 (DW_TAG_base_type)
    <e4f>   DW_AT_byte_size   : 4
    <e50>   DW_AT_encoding    : 5	(signed)
    <e51>   DW_AT_name        : int
 <1><e55>: Abbrev Number: 2 (DW_TAG_base_type)
    <e56>   DW_AT_byte_size   : 4
    <e57>   DW_AT_encoding    : 7	(unsigned)
    <e58>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><e5c>: Abbrev Number: 5 (DW_TAG_typedef)
    <e5d>   DW_AT_name        : (indirect string, offset: 0x2e1): int32_t
    <e61>   DW_AT_decl_file   : 4
    <e62>   DW_AT_decl_line   : 44
    <e63>   DW_AT_decl_column : 19
    <e64>   DW_AT_type        : <0xe21>
 <1><e68>: Abbrev Number: 5 (DW_TAG_typedef)
    <e69>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <e6d>   DW_AT_decl_file   : 4
    <e6e>   DW_AT_decl_line   : 48
    <e6f>   DW_AT_decl_column : 20
    <e70>   DW_AT_type        : <0xe34>
 <1><e74>: Abbrev Number: 6 (DW_TAG_subprogram)
    <e75>   DW_AT_external    : 1
    <e75>   DW_AT_name        : (indirect string, offset: 0x2a8): printlf
    <e79>   DW_AT_decl_file   : 1
    <e79>   DW_AT_decl_line   : 117
    <e7a>   DW_AT_decl_column : 6
    <e7a>   DW_AT_prototyped  : 1
    <e7a>   DW_AT_low_pc      : 0xb74
    <e7e>   DW_AT_high_pc     : 0xea
    <e82>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <e84>   DW_AT_call_all_calls: 1
    <e84>   DW_AT_sibling     : <0xf4f>
 <2><e88>: Abbrev Number: 25 (DW_TAG_formal_parameter)
    <e89>   DW_AT_name        : (indirect string, offset: 0x514): format
    <e8d>   DW_AT_decl_file   : 1
    <e8e>   DW_AT_decl_line   : 117
    <e8f>   DW_AT_decl_column : 19
    <e90>   DW_AT_type        : <0xf4f>
    <e94>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><e97>: Abbrev Number: 26 (DW_TAG_unspecified_parameters)
 <2><e98>: Abbrev Number: 11 (DW_TAG_variable)
    <e99>   DW_AT_name        : (indirect string, offset: 0x562): args
    <e9d>   DW_AT_decl_file   : 1
    <e9d>   DW_AT_decl_line   : 118
    <e9e>   DW_AT_decl_column : 10
    <e9f>   DW_AT_type        : <0xe00>
    <ea3>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><ea6>: Abbrev Number: 14 (DW_TAG_variable)
    <ea7>   DW_AT_name        : str
    <eab>   DW_AT_decl_file   : 1
    <eab>   DW_AT_decl_line   : 121
    <eac>   DW_AT_decl_column : 8
    <ead>   DW_AT_type        : <0xf4f>
 <2><eb1>: Abbrev Number: 14 (DW_TAG_variable)
    <eb2>   DW_AT_name        : num
    <eb6>   DW_AT_decl_file   : 1
    <eb6>   DW_AT_decl_line   : 122
    <eb7>   DW_AT_decl_column : 10
    <eb8>   DW_AT_type        : <0xe5c>
 <2><ebc>: Abbrev Number: 27 (DW_TAG_variable)
    <ebd>   DW_AT_name        : (indirect string, offset: 0x4fb): numu
    <ec1>   DW_AT_decl_file   : 1
    <ec2>   DW_AT_decl_line   : 123
    <ec3>   DW_AT_decl_column : 11
    <ec4>   DW_AT_type        : <0xe68>
 <2><ec8>: Abbrev Number: 11 (DW_TAG_variable)
    <ec9>   DW_AT_name        : (indirect string, offset: 0x553): numf
    <ecd>   DW_AT_decl_file   : 1
    <ecd>   DW_AT_decl_line   : 124
    <ece>   DW_AT_decl_column : 9
    <ecf>   DW_AT_type        : <0xf60>
    <ed3>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
 <2><ed5>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <ed6>   DW_AT_low_pc      : 0xb82
    <eda>   DW_AT_high_pc     : 0xd2
 <3><ede>: Abbrev Number: 8 (DW_TAG_variable)
    <edf>   DW_AT_name        : i
    <ee1>   DW_AT_decl_file   : 1
    <ee1>   DW_AT_decl_line   : 126
    <ee2>   DW_AT_decl_column : 10
    <ee3>   DW_AT_type        : <0xe4e>
    <ee7>   DW_AT_location    : 0x39f (location list)
    <eeb>   DW_AT_GNU_locviews: 0x391
 <3><eef>: Abbrev Number: 3 (DW_TAG_call_site)
    <ef0>   DW_AT_call_return_pc: 0xb92
    <ef4>   DW_AT_call_origin : <0x10c5>
 <3><ef8>: Abbrev Number: 3 (DW_TAG_call_site)
    <ef9>   DW_AT_call_return_pc: 0xba2
    <efd>   DW_AT_call_origin : <0x1079>
 <3><f01>: Abbrev Number: 4 (DW_TAG_call_site)
    <f02>   DW_AT_call_return_pc: 0xbac
    <f06>   DW_AT_call_origin : <0x118a>
    <f0a>   DW_AT_sibling     : <0xf15>
 <4><f0e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f0f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f11>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><f14>: Abbrev Number: 0
 <3><f15>: Abbrev Number: 3 (DW_TAG_call_site)
    <f16>   DW_AT_call_return_pc: 0xbba
    <f1a>   DW_AT_call_origin : <0x1134>
 <3><f1e>: Abbrev Number: 3 (DW_TAG_call_site)
    <f1f>   DW_AT_call_return_pc: 0xbce
    <f23>   DW_AT_call_origin : <0xf65>
 <3><f27>: Abbrev Number: 4 (DW_TAG_call_site)
    <f28>   DW_AT_call_return_pc: 0xbd8
    <f2c>   DW_AT_call_origin : <0x118a>
    <f30>   DW_AT_sibling     : <0xf3b>
 <4><f34>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f35>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f37>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><f3a>: Abbrev Number: 0
 <3><f3b>: Abbrev Number: 3 (DW_TAG_call_site)
    <f3c>   DW_AT_call_return_pc: 0xbde
    <f40>   DW_AT_call_origin : <0x118a>
 <3><f44>: Abbrev Number: 3 (DW_TAG_call_site)
    <f45>   DW_AT_call_return_pc: 0xbe6
    <f49>   DW_AT_call_origin : <0x118a>
 <3><f4d>: Abbrev Number: 0
 <2><f4e>: Abbrev Number: 0
 <1><f4f>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <f50>   DW_AT_byte_size   : 4
    <f50>   DW_AT_type        : <0xf54>
 <1><f54>: Abbrev Number: 2 (DW_TAG_base_type)
    <f55>   DW_AT_byte_size   : 1
    <f56>   DW_AT_encoding    : 8	(unsigned char)
    <f57>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><f5b>: Abbrev Number: 16 (DW_TAG_const_type)
    <f5c>   DW_AT_type        : <0xf54>
 <1><f60>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <f61>   DW_AT_byte_size   : 4
    <f61>   DW_AT_type        : <0xdc6>
 <1><f65>: Abbrev Number: 6 (DW_TAG_subprogram)
    <f66>   DW_AT_external    : 1
    <f66>   DW_AT_name        : (indirect string, offset: 0x508): print_float
    <f6a>   DW_AT_decl_file   : 1
    <f6a>   DW_AT_decl_line   : 74
    <f6b>   DW_AT_decl_column : 6
    <f6b>   DW_AT_prototyped  : 1
    <f6b>   DW_AT_low_pc      : 0xa54
    <f6f>   DW_AT_high_pc     : 0x120
    <f73>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <f75>   DW_AT_call_all_calls: 1
    <f75>   DW_AT_sibling     : <0x1069>
 <2><f79>: Abbrev Number: 28 (DW_TAG_formal_parameter)
    <f7a>   DW_AT_name        : (indirect string, offset: 0x54c): number
    <f7e>   DW_AT_decl_file   : 1
    <f7f>   DW_AT_decl_line   : 74
    <f80>   DW_AT_decl_column : 24
    <f81>   DW_AT_type        : <0xdc6>
    <f85>   DW_AT_location    : 0x3e0 (location list)
    <f89>   DW_AT_GNU_locviews: 0x3cc
 <2><f8d>: Abbrev Number: 17 (DW_TAG_variable)
    <f8e>   DW_AT_name        : buf
    <f92>   DW_AT_decl_file   : 1
    <f92>   DW_AT_decl_line   : 91
    <f93>   DW_AT_decl_column : 7
    <f93>   DW_AT_type        : <0x1069>
    <f97>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><f9a>: Abbrev Number: 9 (DW_TAG_variable)
    <f9b>   DW_AT_name        : (indirect string, offset: 0x4a2): integerPart
    <f9f>   DW_AT_decl_file   : 1
    <f9f>   DW_AT_decl_line   : 98
    <fa0>   DW_AT_decl_column : 11
    <fa1>   DW_AT_type        : <0xe68>
    <fa5>   DW_AT_location    : 0x448 (location list)
    <fa9>   DW_AT_GNU_locviews: 0x444
 <2><fad>: Abbrev Number: 9 (DW_TAG_variable)
    <fae>   DW_AT_name        : (indirect string, offset: 0x4cf): decimalPart
    <fb2>   DW_AT_decl_file   : 1
    <fb2>   DW_AT_decl_line   : 99
    <fb3>   DW_AT_decl_column : 11
    <fb4>   DW_AT_type        : <0xe68>
    <fb8>   DW_AT_location    : 0x461 (location list)
    <fbc>   DW_AT_GNU_locviews: 0x45b
 <2><fc0>: Abbrev Number: 9 (DW_TAG_variable)
    <fc1>   DW_AT_name        : (indirect string, offset: 0x545): places
    <fc5>   DW_AT_decl_file   : 1
    <fc5>   DW_AT_decl_line   : 101
    <fc6>   DW_AT_decl_column : 6
    <fc7>   DW_AT_type        : <0xe4e>
    <fcb>   DW_AT_location    : 0x484 (location list)
    <fcf>   DW_AT_GNU_locviews: 0x476
 <2><fd3>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <fd4>   DW_AT_ranges      : 0xde
    <fd8>   DW_AT_sibling     : <0xfee>
 <3><fdc>: Abbrev Number: 8 (DW_TAG_variable)
    <fdd>   DW_AT_name        : i
    <fdf>   DW_AT_decl_file   : 1
    <fdf>   DW_AT_decl_line   : 103
    <fe0>   DW_AT_decl_column : 10
    <fe1>   DW_AT_type        : <0xe4e>
    <fe5>   DW_AT_location    : 0x4b9 (location list)
    <fe9>   DW_AT_GNU_locviews: 0x4b5
 <3><fed>: Abbrev Number: 0
 <2><fee>: Abbrev Number: 4 (DW_TAG_call_site)
    <fef>   DW_AT_call_return_pc: 0xadc
    <ff3>   DW_AT_call_origin : <0x1134>
    <ff7>   DW_AT_sibling     : <0x1005>
 <3><ffb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ffc>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ffe>   DW_AT_call_value  : 5 byte block: 3 34 d 0 0 	(DW_OP_addr: d34)
 <3><1004>: Abbrev Number: 0
 <2><1005>: Abbrev Number: 4 (DW_TAG_call_site)
    <1006>   DW_AT_call_return_pc: 0xae4
    <100a>   DW_AT_call_origin : <0x1134>
    <100e>   DW_AT_sibling     : <0x101c>
 <3><1012>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1013>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1015>   DW_AT_call_value  : 5 byte block: 3 38 d 0 0 	(DW_OP_addr: d38)
 <3><101b>: Abbrev Number: 0
 <2><101c>: Abbrev Number: 4 (DW_TAG_call_site)
    <101d>   DW_AT_call_return_pc: 0xaf2
    <1021>   DW_AT_call_origin : <0x1134>
    <1025>   DW_AT_sibling     : <0x1033>
 <3><1029>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <102a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <102c>   DW_AT_call_value  : 5 byte block: 3 3c d 0 0 	(DW_OP_addr: d3c)
 <3><1032>: Abbrev Number: 0
 <2><1033>: Abbrev Number: 4 (DW_TAG_call_site)
    <1034>   DW_AT_call_return_pc: 0xafa
    <1038>   DW_AT_call_origin : <0x118a>
    <103c>   DW_AT_sibling     : <0x1047>
 <3><1040>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1041>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1043>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><1046>: Abbrev Number: 0
 <2><1047>: Abbrev Number: 3 (DW_TAG_call_site)
    <1048>   DW_AT_call_return_pc: 0xb40
    <104c>   DW_AT_call_origin : <0x10c5>
 <2><1050>: Abbrev Number: 13 (DW_TAG_call_site)
    <1051>   DW_AT_call_return_pc: 0xb52
    <1055>   DW_AT_call_origin : <0x118a>
 <3><1059>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <105a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <105c>   DW_AT_call_value  : 10 byte block: 91 0 74 0 22 8 20 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_const1u: 32; DW_OP_minus; DW_OP_deref_size: 1)
 <3><1067>: Abbrev Number: 0
 <2><1068>: Abbrev Number: 0
 <1><1069>: Abbrev Number: 18 (DW_TAG_array_type)
    <106a>   DW_AT_type        : <0xf54>
    <106e>   DW_AT_sibling     : <0x1079>
 <2><1072>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <1073>   DW_AT_type        : <0xe55>
    <1077>   DW_AT_upper_bound : 14
 <2><1078>: Abbrev Number: 0
 <1><1079>: Abbrev Number: 6 (DW_TAG_subprogram)
    <107a>   DW_AT_external    : 1
    <107a>   DW_AT_name        : (indirect string, offset: 0x532): print_decimal
    <107e>   DW_AT_decl_file   : 1
    <107e>   DW_AT_decl_line   : 64
    <107f>   DW_AT_decl_column : 6
    <107f>   DW_AT_prototyped  : 1
    <107f>   DW_AT_low_pc      : 0xa3c
    <1083>   DW_AT_high_pc     : 0x18
    <1087>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1089>   DW_AT_call_all_calls: 1
    <1089>   DW_AT_sibling     : <0x10c5>
 <2><108d>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <108e>   DW_AT_name        : num
    <1092>   DW_AT_decl_file   : 1
    <1092>   DW_AT_decl_line   : 64
    <1093>   DW_AT_decl_column : 28
    <1094>   DW_AT_type        : <0xe5c>
    <1098>   DW_AT_location    : 0x4d2 (location list)
    <109c>   DW_AT_GNU_locviews: 0x4ca
 <2><10a0>: Abbrev Number: 4 (DW_TAG_call_site)
    <10a1>   DW_AT_call_return_pc: 0xa48
    <10a5>   DW_AT_call_origin : <0x10c5>
    <10a9>   DW_AT_sibling     : <0x10b4>
 <3><10ad>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10ae>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10b0>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><10b3>: Abbrev Number: 0
 <2><10b4>: Abbrev Number: 13 (DW_TAG_call_site)
    <10b5>   DW_AT_call_return_pc: 0xa50
    <10b9>   DW_AT_call_origin : <0x118a>
 <3><10bd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10be>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10c0>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><10c3>: Abbrev Number: 0
 <2><10c4>: Abbrev Number: 0
 <1><10c5>: Abbrev Number: 6 (DW_TAG_subprogram)
    <10c6>   DW_AT_external    : 1
    <10c6>   DW_AT_name        : (indirect string, offset: 0x51b): print_unsigned_decimal
    <10ca>   DW_AT_decl_file   : 1
    <10ca>   DW_AT_decl_line   : 48
    <10cb>   DW_AT_decl_column : 6
    <10cb>   DW_AT_prototyped  : 1
    <10cb>   DW_AT_low_pc      : 0x9f0
    <10cf>   DW_AT_high_pc     : 0x4c
    <10d3>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <10d5>   DW_AT_call_all_calls: 1
    <10d5>   DW_AT_sibling     : <0x1124>
 <2><10d9>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <10da>   DW_AT_name        : num
    <10de>   DW_AT_decl_file   : 1
    <10de>   DW_AT_decl_line   : 48
    <10df>   DW_AT_decl_column : 38
    <10e0>   DW_AT_type        : <0xe68>
    <10e4>   DW_AT_location    : 0x4f0 (location list)
    <10e8>   DW_AT_GNU_locviews: 0x4ec
 <2><10ec>: Abbrev Number: 17 (DW_TAG_variable)
    <10ed>   DW_AT_name        : buf
    <10f1>   DW_AT_decl_file   : 1
    <10f1>   DW_AT_decl_line   : 50
    <10f2>   DW_AT_decl_column : 7
    <10f2>   DW_AT_type        : <0x1124>
    <10f6>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><10f9>: Abbrev Number: 9 (DW_TAG_variable)
    <10fa>   DW_AT_name        : (indirect string, offset: 0x545): places
    <10fe>   DW_AT_decl_file   : 1
    <10fe>   DW_AT_decl_line   : 52
    <10ff>   DW_AT_decl_column : 6
    <1100>   DW_AT_type        : <0xe4e>
    <1104>   DW_AT_location    : 0x50c (location list)
    <1108>   DW_AT_GNU_locviews: 0x500
 <2><110c>: Abbrev Number: 13 (DW_TAG_call_site)
    <110d>   DW_AT_call_return_pc: 0xa30
    <1111>   DW_AT_call_origin : <0x118a>
 <3><1115>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1116>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1118>   DW_AT_call_value  : 9 byte block: 91 0 74 0 22 44 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_lit20; DW_OP_minus; DW_OP_deref_size: 1)
 <3><1122>: Abbrev Number: 0
 <2><1123>: Abbrev Number: 0
 <1><1124>: Abbrev Number: 18 (DW_TAG_array_type)
    <1125>   DW_AT_type        : <0xf54>
    <1129>   DW_AT_sibling     : <0x1134>
 <2><112d>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <112e>   DW_AT_type        : <0xe55>
    <1132>   DW_AT_upper_bound : 10
 <2><1133>: Abbrev Number: 0
 <1><1134>: Abbrev Number: 6 (DW_TAG_subprogram)
    <1135>   DW_AT_external    : 1
    <1135>   DW_AT_name        : (indirect string, offset: 0x4ae): print_string
    <1139>   DW_AT_decl_file   : 1
    <1139>   DW_AT_decl_line   : 42
    <113a>   DW_AT_decl_column : 6
    <113a>   DW_AT_prototyped  : 1
    <113a>   DW_AT_low_pc      : 0x9d8
    <113e>   DW_AT_high_pc     : 0x16
    <1142>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1144>   DW_AT_call_all_calls: 1
    <1144>   DW_AT_sibling     : <0x1180>
 <2><1148>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <1149>   DW_AT_name        : str
    <114d>   DW_AT_decl_file   : 1
    <114d>   DW_AT_decl_line   : 42
    <114e>   DW_AT_decl_column : 38
    <114f>   DW_AT_type        : <0x1185>
    <1153>   DW_AT_location    : 0x539 (location list)
    <1157>   DW_AT_GNU_locviews: 0x535
 <2><115b>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <115c>   DW_AT_low_pc      : 0x9dc
    <1160>   DW_AT_high_pc     : 0x10
 <3><1164>: Abbrev Number: 8 (DW_TAG_variable)
    <1165>   DW_AT_name        : i
    <1167>   DW_AT_decl_file   : 1
    <1167>   DW_AT_decl_line   : 43
    <1168>   DW_AT_decl_column : 10
    <1169>   DW_AT_type        : <0xe4e>
    <116d>   DW_AT_location    : 0x54d (location list)
    <1171>   DW_AT_GNU_locviews: 0x549
 <3><1175>: Abbrev Number: 3 (DW_TAG_call_site)
    <1176>   DW_AT_call_return_pc: 0x9e4
    <117a>   DW_AT_call_origin : <0x118a>
 <3><117e>: Abbrev Number: 0
 <2><117f>: Abbrev Number: 0
 <1><1180>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <1181>   DW_AT_byte_size   : 4
    <1181>   DW_AT_type        : <0xf5b>
 <1><1185>: Abbrev Number: 16 (DW_TAG_const_type)
    <1186>   DW_AT_type        : <0x1180>
 <1><118a>: Abbrev Number: 6 (DW_TAG_subprogram)
    <118b>   DW_AT_external    : 1
    <118b>   DW_AT_name        : (indirect string, offset: 0x500): putchar
    <118f>   DW_AT_decl_file   : 1
    <118f>   DW_AT_decl_line   : 27
    <1190>   DW_AT_decl_column : 6
    <1190>   DW_AT_prototyped  : 1
    <1190>   DW_AT_low_pc      : 0x990
    <1194>   DW_AT_high_pc     : 0x48
    <1198>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <119a>   DW_AT_call_all_calls: 1
    <119a>   DW_AT_sibling     : <0x120f>
 <2><119e>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <119f>   DW_AT_name        : c
    <11a1>   DW_AT_decl_file   : 1
    <11a1>   DW_AT_decl_line   : 27
    <11a2>   DW_AT_decl_column : 19
    <11a3>   DW_AT_type        : <0xf54>
    <11a7>   DW_AT_location    : 0x564 (location list)
    <11ab>   DW_AT_GNU_locviews: 0x55e
 <2><11af>: Abbrev Number: 11 (DW_TAG_variable)
    <11b0>   DW_AT_name        : (indirect string, offset: 0x4bb): chars_sent_recently
    <11b4>   DW_AT_decl_file   : 1
    <11b4>   DW_AT_decl_line   : 28
    <11b5>   DW_AT_decl_column : 13
    <11b6>   DW_AT_type        : <0xe4e>
    <11ba>   DW_AT_location    : 5 byte block: 3 ac 8 0 20 	(DW_OP_addr: 200008ac)
 <2><11c0>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <11c1>   DW_AT_low_pc      : 0x9c0
    <11c5>   DW_AT_high_pc     : 0xc
    <11c9>   DW_AT_sibling     : <0x11df>
 <3><11cd>: Abbrev Number: 8 (DW_TAG_variable)
    <11ce>   DW_AT_name        : i
    <11d0>   DW_AT_decl_file   : 1
    <11d0>   DW_AT_decl_line   : 36
    <11d1>   DW_AT_decl_column : 11
    <11d2>   DW_AT_type        : <0xe4e>
    <11d6>   DW_AT_location    : 0x586 (location list)
    <11da>   DW_AT_GNU_locviews: 0x582
 <3><11de>: Abbrev Number: 0
 <2><11df>: Abbrev Number: 7 (DW_TAG_call_site)
    <11e0>   DW_AT_call_return_pc: 0x9a0
    <11e4>   DW_AT_sibling     : <0x11ff>
 <3><11e8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11e9>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <11eb>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><11f1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11f2>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <11f4>   DW_AT_call_value  : 9 byte block: a3 3 a5 0 2d a8 34 a8 0 	(DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xdcd>); DW_OP_convert <0xdd4>; DW_OP_convert <0>)
 <3><11fe>: Abbrev Number: 0
 <2><11ff>: Abbrev Number: 31 (DW_TAG_call_site)
    <1200>   DW_AT_call_return_pc: 0x9ac
 <3><1204>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1205>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1207>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><120d>: Abbrev Number: 0
 <2><120e>: Abbrev Number: 0
 <1><120f>: Abbrev Number: 32 (DW_TAG_subprogram)
    <1210>   DW_AT_external    : 1
    <1210>   DW_AT_name        : (indirect string, offset: 0x3fc): setup_uart_printer
    <1214>   DW_AT_decl_file   : 1
    <1215>   DW_AT_decl_line   : 15
    <1216>   DW_AT_decl_column : 6
    <1217>   DW_AT_prototyped  : 1
    <1217>   DW_AT_low_pc      : 0x914
    <121b>   DW_AT_high_pc     : 0x7c
    <121f>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1221>   DW_AT_call_all_tail_calls: 1
 <2><1221>: Abbrev Number: 7 (DW_TAG_call_site)
    <1222>   DW_AT_call_return_pc: 0x922
    <1226>   DW_AT_sibling     : <0x1235>
 <3><122a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <122b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <122d>   DW_AT_call_value  : 6 byte block: 11 80 90 80 80 7f 	(DW_OP_consts: -268433408)
 <3><1234>: Abbrev Number: 0
 <2><1235>: Abbrev Number: 7 (DW_TAG_call_site)
    <1236>   DW_AT_call_return_pc: 0x92a
    <123a>   DW_AT_sibling     : <0x1249>
 <3><123e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <123f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1241>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><1248>: Abbrev Number: 0
 <2><1249>: Abbrev Number: 7 (DW_TAG_call_site)
    <124a>   DW_AT_call_return_pc: 0x938
    <124e>   DW_AT_sibling     : <0x125d>
 <3><1252>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1253>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1255>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><125c>: Abbrev Number: 0
 <2><125d>: Abbrev Number: 33 (DW_TAG_call_site)
    <125e>   DW_AT_call_return_pc: 0x950
    <1262>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
    <1265>   DW_AT_sibling     : <0x1283>
 <3><1269>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <126a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <126c>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><1272>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1273>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <1275>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><1277>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1278>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <127a>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><127d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <127e>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <1280>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><1282>: Abbrev Number: 0
 <2><1283>: Abbrev Number: 7 (DW_TAG_call_site)
    <1284>   DW_AT_call_return_pc: 0x95e
    <1288>   DW_AT_sibling     : <0x12a0>
 <3><128c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <128d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <128f>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><1295>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1296>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <1298>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><129a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <129b>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <129d>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><129f>: Abbrev Number: 0
 <2><12a0>: Abbrev Number: 7 (DW_TAG_call_site)
    <12a1>   DW_AT_call_return_pc: 0x96a
    <12a5>   DW_AT_sibling     : <0x12b5>
 <3><12a9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12aa>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <12ac>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><12af>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12b0>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <12b2>   DW_AT_call_value  : 1 byte block: 30 	(DW_OP_lit0)
 <3><12b4>: Abbrev Number: 0
 <2><12b5>: Abbrev Number: 34 (DW_TAG_call_site)
    <12b6>   DW_AT_call_return_pc: 0x97e
    <12ba>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
 <3><12bd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12be>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <12c0>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><12c3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12c4>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <12c6>   DW_AT_call_value  : 5 byte block: c 0 9 3d 0 	(DW_OP_const4u: 4000000)
 <3><12cc>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <12cd>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <12cf>   DW_AT_call_value  : 2 byte block: 8 68 	(DW_OP_const1u: 104)
 <3><12d2>: Abbrev Number: 0
 <2><12d3>: Abbrev Number: 0
 <1><12d4>: Abbrev Number: 0
  Compilation Unit @ offset 0x12d5:
   Length:        0x193 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x6da
   Pointer Size:  4
 <0><12e1>: Abbrev Number: 10 (DW_TAG_compile_unit)
    <12e2>   DW_AT_producer    : (indirect string, offset: 0x1ad): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=gnu17 -ffunction-sections -fno-builtin -fdata-sections
    <12e6>   DW_AT_language    : 29	(C11)
    <12e7>   DW_AT_name        : (indirect string, offset: 0x59e): sys/startup_gcc.c
    <12eb>   DW_AT_comp_dir    : (indirect string, offset: 0x329): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <12ef>   DW_AT_ranges      : 0x126
    <12f3>   DW_AT_low_pc      : 0
    <12f7>   DW_AT_stmt_list   : 0xe06
 <1><12fb>: Abbrev Number: 1 (DW_TAG_base_type)
    <12fc>   DW_AT_byte_size   : 1
    <12fd>   DW_AT_encoding    : 6	(signed char)
    <12fe>   DW_AT_name        : (indirect string, offset: 0x282): signed char
 <1><1302>: Abbrev Number: 1 (DW_TAG_base_type)
    <1303>   DW_AT_byte_size   : 1
    <1304>   DW_AT_encoding    : 8	(unsigned char)
    <1305>   DW_AT_name        : (indirect string, offset: 0x280): unsigned char
 <1><1309>: Abbrev Number: 1 (DW_TAG_base_type)
    <130a>   DW_AT_byte_size   : 2
    <130b>   DW_AT_encoding    : 5	(signed)
    <130c>   DW_AT_name        : (indirect string, offset: 0x28e): short int
 <1><1310>: Abbrev Number: 1 (DW_TAG_base_type)
    <1311>   DW_AT_byte_size   : 2
    <1312>   DW_AT_encoding    : 7	(unsigned)
    <1313>   DW_AT_name        : (indirect string, offset: 0x133): short unsigned int
 <1><1317>: Abbrev Number: 1 (DW_TAG_base_type)
    <1318>   DW_AT_byte_size   : 4
    <1319>   DW_AT_encoding    : 5	(signed)
    <131a>   DW_AT_name        : (indirect string, offset: 0x8c): long int
 <1><131e>: Abbrev Number: 4 (DW_TAG_typedef)
    <131f>   DW_AT_name        : (indirect string, offset: 0xd7): __uint32_t
    <1323>   DW_AT_decl_file   : 2
    <1324>   DW_AT_decl_line   : 79
    <1325>   DW_AT_decl_column : 25
    <1326>   DW_AT_type        : <0x132a>
 <1><132a>: Abbrev Number: 1 (DW_TAG_base_type)
    <132b>   DW_AT_byte_size   : 4
    <132c>   DW_AT_encoding    : 7	(unsigned)
    <132d>   DW_AT_name        : (indirect string, offset: 0x55): long unsigned int
 <1><1331>: Abbrev Number: 1 (DW_TAG_base_type)
    <1332>   DW_AT_byte_size   : 8
    <1333>   DW_AT_encoding    : 5	(signed)
    <1334>   DW_AT_name        : (indirect string, offset: 0x87): long long int
 <1><1338>: Abbrev Number: 1 (DW_TAG_base_type)
    <1339>   DW_AT_byte_size   : 8
    <133a>   DW_AT_encoding    : 7	(unsigned)
    <133b>   DW_AT_name        : (indirect string, offset: 0x50): long long unsigned int
 <1><133f>: Abbrev Number: 11 (DW_TAG_base_type)
    <1340>   DW_AT_byte_size   : 4
    <1341>   DW_AT_encoding    : 5	(signed)
    <1342>   DW_AT_name        : int
 <1><1346>: Abbrev Number: 1 (DW_TAG_base_type)
    <1347>   DW_AT_byte_size   : 4
    <1348>   DW_AT_encoding    : 7	(unsigned)
    <1349>   DW_AT_name        : (indirect string, offset: 0x5a): unsigned int
 <1><134d>: Abbrev Number: 4 (DW_TAG_typedef)
    <134e>   DW_AT_name        : (indirect string, offset: 0xd9): uint32_t
    <1352>   DW_AT_decl_file   : 3
    <1353>   DW_AT_decl_line   : 48
    <1354>   DW_AT_decl_column : 20
    <1355>   DW_AT_type        : <0x131e>
 <1><1359>: Abbrev Number: 1 (DW_TAG_base_type)
    <135a>   DW_AT_byte_size   : 8
    <135b>   DW_AT_encoding    : 4	(float)
    <135c>   DW_AT_name        : (indirect string, offset: 0x257): long double
 <1><1360>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <1361>   DW_AT_byte_size   : 4
    <1361>   DW_AT_type        : <0x136a>
 <1><1365>: Abbrev Number: 6 (DW_TAG_const_type)
    <1366>   DW_AT_type        : <0x1360>
 <1><136a>: Abbrev Number: 12 (DW_TAG_subroutine_type)
    <136b>   DW_AT_prototyped  : 1
 <1><136b>: Abbrev Number: 1 (DW_TAG_base_type)
    <136c>   DW_AT_byte_size   : 1
    <136d>   DW_AT_encoding    : 8	(unsigned char)
    <136e>   DW_AT_name        : (indirect string, offset: 0x289): char
 <1><1372>: Abbrev Number: 7 (DW_TAG_array_type)
    <1373>   DW_AT_type        : <0x132a>
    <1377>   DW_AT_sibling     : <0x1382>
 <2><137b>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <137c>   DW_AT_type        : <0x1346>
    <1380>   DW_AT_upper_bound : 63
 <2><1381>: Abbrev Number: 0
 <1><1382>: Abbrev Number: 13 (DW_TAG_variable)
    <1383>   DW_AT_name        : (indirect string, offset: 0x56d): pulStack
    <1387>   DW_AT_decl_file   : 1
    <1388>   DW_AT_decl_line   : 33
    <1389>   DW_AT_decl_column : 22
    <138a>   DW_AT_type        : <0x1372>
    <138e>   DW_AT_location    : 5 byte block: 3 b0 8 0 20 	(DW_OP_addr: 200008b0)
 <1><1394>: Abbrev Number: 7 (DW_TAG_array_type)
    <1395>   DW_AT_type        : <0x1365>
    <1399>   DW_AT_sibling     : <0x13a4>
 <2><139d>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <139e>   DW_AT_type        : <0x1346>
    <13a2>   DW_AT_upper_bound : 154
 <2><13a3>: Abbrev Number: 0
 <1><13a4>: Abbrev Number: 6 (DW_TAG_const_type)
    <13a5>   DW_AT_type        : <0x1394>
 <1><13a9>: Abbrev Number: 14 (DW_TAG_variable)
    <13aa>   DW_AT_name        : (indirect string, offset: 0x5b9): g_pfnVectors
    <13ae>   DW_AT_decl_file   : 1
    <13af>   DW_AT_decl_line   : 42
    <13b0>   DW_AT_decl_column : 15
    <13b1>   DW_AT_type        : <0x13a4>
    <13b5>   DW_AT_external    : 1
    <13b5>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <1><13bb>: Abbrev Number: 2 (DW_TAG_variable)
    <13bc>   DW_AT_name        : (indirect string, offset: 0x590): _etext
    <13c0>   DW_AT_decl_file   : 1
    <13c0>   DW_AT_decl_line   : 209
    <13c1>   DW_AT_decl_column : 22
    <13c1>   DW_AT_type        : <0x132a>
    <13c5>   DW_AT_external    : 1
    <13c5>   DW_AT_declaration : 1
 <1><13c5>: Abbrev Number: 2 (DW_TAG_variable)
    <13c6>   DW_AT_name        : (indirect string, offset: 0x567): _data
    <13ca>   DW_AT_decl_file   : 1
    <13ca>   DW_AT_decl_line   : 210
    <13cb>   DW_AT_decl_column : 22
    <13cb>   DW_AT_type        : <0x132a>
    <13cf>   DW_AT_external    : 1
    <13cf>   DW_AT_declaration : 1
 <1><13cf>: Abbrev Number: 2 (DW_TAG_variable)
    <13d0>   DW_AT_name        : (indirect string, offset: 0x597): _edata
    <13d4>   DW_AT_decl_file   : 1
    <13d4>   DW_AT_decl_line   : 211
    <13d5>   DW_AT_decl_column : 22
    <13d5>   DW_AT_type        : <0x132a>
    <13d9>   DW_AT_external    : 1
    <13d9>   DW_AT_declaration : 1
 <1><13d9>: Abbrev Number: 15 (DW_TAG_subprogram)
    <13da>   DW_AT_external    : 1
    <13da>   DW_AT_name        : (indirect string, offset: 0x3d5): main
    <13de>   DW_AT_decl_file   : 1
    <13df>   DW_AT_decl_line   : 26
    <13e0>   DW_AT_decl_column : 12
    <13e1>   DW_AT_prototyped  : 1
    <13e1>   DW_AT_type        : <0x133f>
    <13e5>   DW_AT_declaration : 1
 <1><13e5>: Abbrev Number: 16 (DW_TAG_subprogram)
    <13e6>   DW_AT_external    : 1
    <13e6>   DW_AT_name        : (indirect string, offset: 0x45e): timeKeeperISR
    <13ea>   DW_AT_decl_file   : 4
    <13eb>   DW_AT_decl_line   : 7
    <13ec>   DW_AT_decl_column : 6
    <13ed>   DW_AT_prototyped  : 1
    <13ed>   DW_AT_declaration : 1
 <1><13ed>: Abbrev Number: 3 (DW_TAG_subprogram)
    <13ee>   DW_AT_name        : (indirect string, offset: 0x576): IntDefaultHandler
    <13f2>   DW_AT_decl_file   : 1
    <13f2>   DW_AT_decl_line   : 304
    <13f4>   DW_AT_decl_column : 1
    <13f4>   DW_AT_prototyped  : 1
    <13f4>   DW_AT_low_pc      : 0xc64
    <13f8>   DW_AT_high_pc     : 0x2
    <13fc>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <13fe>   DW_AT_call_all_calls: 1
 <1><13fe>: Abbrev Number: 3 (DW_TAG_subprogram)
    <13ff>   DW_AT_name        : (indirect string, offset: 0x5b0): FaultISR
    <1403>   DW_AT_decl_file   : 1
    <1403>   DW_AT_decl_line   : 286
    <1405>   DW_AT_decl_column : 1
    <1405>   DW_AT_prototyped  : 1
    <1405>   DW_AT_low_pc      : 0xc62
    <1409>   DW_AT_high_pc     : 0x2
    <140d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <140f>   DW_AT_call_all_calls: 1
 <1><140f>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1410>   DW_AT_name        : (indirect string, offset: 0x5d6): NmiSR
    <1414>   DW_AT_decl_file   : 1
    <1414>   DW_AT_decl_line   : 268
    <1416>   DW_AT_decl_column : 1
    <1416>   DW_AT_prototyped  : 1
    <1416>   DW_AT_low_pc      : 0xc60
    <141a>   DW_AT_high_pc     : 0x2
    <141e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1420>   DW_AT_call_all_calls: 1
 <1><1420>: Abbrev Number: 17 (DW_TAG_subprogram)
    <1421>   DW_AT_external    : 1
    <1421>   DW_AT_name        : (indirect string, offset: 0x5cd): ResetISR
    <1425>   DW_AT_decl_file   : 1
    <1426>   DW_AT_decl_line   : 226
    <1427>   DW_AT_decl_column : 1
    <1428>   DW_AT_prototyped  : 1
    <1428>   DW_AT_low_pc      : 0xc68
    <142c>   DW_AT_high_pc     : 0x48
    <1430>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1432>   DW_AT_call_all_calls: 1
    <1432>   DW_AT_sibling     : <0x1466>
 <2><1436>: Abbrev Number: 9 (DW_TAG_variable)
    <1437>   DW_AT_name        : (indirect string, offset: 0x5c6): pulSrc
    <143b>   DW_AT_decl_file   : 1
    <143b>   DW_AT_decl_line   : 228
    <143c>   DW_AT_decl_column : 20
    <143d>   DW_AT_type        : <0x1466>
    <1441>   DW_AT_location    : 0x5a9 (location list)
    <1445>   DW_AT_GNU_locviews: 0x5a3
 <2><1449>: Abbrev Number: 9 (DW_TAG_variable)
    <144a>   DW_AT_name        : (indirect string, offset: 0x588): pulDest
    <144e>   DW_AT_decl_file   : 1
    <144e>   DW_AT_decl_line   : 228
    <144f>   DW_AT_decl_column : 29
    <1450>   DW_AT_type        : <0x1466>
    <1454>   DW_AT_location    : 0x5c6 (location list)
    <1458>   DW_AT_GNU_locviews: 0x5c0
 <2><145c>: Abbrev Number: 18 (DW_TAG_call_site)
    <145d>   DW_AT_call_return_pc: 0xca0
    <1461>   DW_AT_call_origin : <0x13d9>
 <2><1465>: Abbrev Number: 0
 <1><1466>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <1467>   DW_AT_byte_size   : 4
    <1467>   DW_AT_type        : <0x132a>
 <1><146b>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 5
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_subprogram    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_enumeration_type    [has children]
    DW_AT_encoding     DW_FORM_implicit_const: 7
    DW_AT_byte_size    DW_FORM_implicit_const: 1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 5
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 10
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   35      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   36      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_bit_size     DW_FORM_data1
    DW_AT_data_bit_offset DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   37      DW_TAG_union_type    [has children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   38      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   39      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   40      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   41      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   42      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   43      DW_TAG_label    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   44      DW_TAG_label    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   45      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   46      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   47      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   48      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   49      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   50      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x2f2)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_implicit_const: 22
    DW_AT_decl_column  DW_FORM_implicit_const: 2
    DW_AT_type         DW_FORM_ref4
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x3fb)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x50f)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 7
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x6da)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 22
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_implicit_const: 1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subroutine_type    [no children]
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_loclists section:

    Offset   Begin            End              Expression

    0000000c v0000000 v0000001 location view pair
    0000000e v0000000 v0000001 location view pair
    00000010 v0000000 v0000000 location view pair
    00000012 v0000000 v0000000 location view pair

    00000014 000005ac (base address)
    00000019 v0000000 v0000001 views at 0000000c for:
             000005ac 000005b2 (DW_OP_reg6 (r6))
    0000001e v0000000 v0000001 views at 0000000e for:
             000005d0 00000616 (DW_OP_reg6 (r6))
    00000023 v0000000 v0000000 views at 00000010 for:
             00000636 000006be (DW_OP_reg6 (r6))
    0000002a v0000000 v0000000 views at 00000012 for:
             000006ee 00000728 (DW_OP_reg6 (r6))
    00000031 <End of list>

    00000032 v0000000 v0000000 location view pair
    00000034 v0000000 v0000000 location view pair

    00000036 00000698 (base address)
    0000003b v0000000 v0000000 views at 00000032 for:
             00000698 000006b0 (DW_OP_reg3 (r3))
    00000040 v0000000 v0000000 views at 00000034 for:
             000006b0 000006ee (DW_OP_reg5 (r5))
    00000045 <End of list>

    00000046 v0000000 v0000000 location view pair

    00000048 v0000000 v0000000 views at 00000046 for:
             000006be 000006cc (DW_OP_reg6 (r6))
    00000050 <End of list>

    00000051 v0000000 v0000000 location view pair

    00000053 v0000000 v0000000 views at 00000051 for:
             000006c4 000006cc (DW_OP_reg0 (r0))
    0000005b <End of list>

    0000005c v0000000 v0000000 location view pair
    0000005e v0000000 v0000000 location view pair

    00000060 00000582 (base address)
    00000065 v0000000 v0000000 views at 0000005c for:
             00000582 00000588 (DW_OP_reg0 (r0))
    0000006a v0000000 v0000000 views at 0000005e for:
             00000588 000005a6 (DW_OP_reg12 (r12))
    0000006f <End of list>

    00000070 v0000001 v0000000 location view pair
    00000072 v0000000 v0000000 location view pair
    00000074 v0000000 v0000000 location view pair

    00000076 00000584 (base address)
    0000007b v0000001 v0000000 views at 00000070 for:
             00000584 0000058a (DW_OP_lit0; DW_OP_stack_value)
    00000081 v0000000 v0000000 views at 00000072 for:
             0000058a 0000059e (DW_OP_reg0 (r0))
    00000086 v0000000 v0000000 views at 00000074 for:
             000005a0 000005a6 (DW_OP_reg0 (r0))
    0000008b <End of list>

    0000008c v0000003 v0000000 location view pair
    0000008e v0000000 v0000000 location view pair
    00000090 v0000001 v0000000 location view pair
    00000092 v0000000 v0000000 location view pair
    00000094 v0000000 v0000000 location view pair

    00000096 00000584 (base address)
    0000009b v0000003 v0000000 views at 0000008c for:
             00000584 0000058a (DW_OP_lit0; DW_OP_stack_value)
    000000a1 v0000000 v0000000 views at 0000008e for:
             0000058a 0000058c (DW_OP_reg2 (r2))
    000000a6 v0000001 v0000000 views at 00000090 for:
             00000590 00000596 (DW_OP_reg2 (r2))
    000000ab v0000000 v0000000 views at 00000092 for:
             00000596 000005a0 (DW_OP_breg2 (r2): -2; DW_OP_stack_value)
    000000b2 v0000000 v0000000 views at 00000094 for:
             000005a0 000005a6 (DW_OP_reg2 (r2))
    000000b7 <End of list>

    000000b8 v0000000 v0000000 location view pair
    000000ba v0000000 v0000000 location view pair

    000000bc 00000590 (base address)
    000000c1 v0000000 v0000000 views at 000000b8 for:
             00000590 0000059a (DW_OP_reg3 (r3))
    000000c6 v0000000 v0000000 views at 000000ba for:
             0000059a 000005a0 (DW_OP_breg12 (r12): 0; DW_OP_breg2 (r2): 0; DW_OP_plus; DW_OP_lit2; DW_OP_minus)
    000000d1 <End of list>

    000000d2 v0000000 v0000000 location view pair
    000000d4 v0000000 v0000000 location view pair
    000000d6 v0000000 v0000000 location view pair
    000000d8 v0000000 v0000000 location view pair
    000000da v0000000 v0000000 location view pair
    000000dc v0000000 v0000000 location view pair
    000000de v0000000 v0000000 location view pair
    000000e0 v0000000 v0000000 location view pair

    000000e2 00000558 (base address)
    000000e7 v0000000 v0000000 views at 000000d2 for:
             00000558 00000574 (DW_OP_reg0 (r0))
    000000ec v0000000 v0000000 views at 000000d4 for:
             00000574 00000576 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000fa v0000000 v0000000 views at 000000d6 for:
             00000576 00000578 (DW_OP_reg0 (r0))
    000000ff v0000000 v0000000 views at 000000d8 for:
             00000578 0000057a (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000010d v0000000 v0000000 views at 000000da for:
             0000057a 0000057c (DW_OP_reg0 (r0))
    00000112 v0000000 v0000000 views at 000000dc for:
             0000057c 0000057e (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000120 v0000000 v0000000 views at 000000de for:
             0000057e 00000580 (DW_OP_reg0 (r0))
    00000125 v0000000 v0000000 views at 000000e0 for:
             00000580 00000582 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000133 <End of list>

    00000134 v0000000 v0000000 location view pair
    00000136 v0000000 v0000000 location view pair

    00000138 00000554 (base address)
    0000013d v0000000 v0000000 views at 00000134 for:
             00000554 00000556 (DW_OP_reg0 (r0))
    00000142 v0000000 v0000000 views at 00000136 for:
             00000556 00000558 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    00000150 <End of list>

    00000151 v0000000 v0000000 location view pair
    00000153 v0000000 v0000000 location view pair
    00000155 v0000000 v0000000 location view pair
    00000157 v0000000 v0000000 location view pair
    00000159 v0000000 v0000000 location view pair
    0000015b v0000000 v0000000 location view pair
    0000015d v0000000 v0000000 location view pair
    0000015f v0000000 v0000000 location view pair

    00000161 000004d0 (base address)
    00000166 v0000000 v0000000 views at 00000151 for:
             000004d0 00000538 (DW_OP_reg0 (r0))
    0000016b v0000000 v0000000 views at 00000153 for:
             00000538 0000053a (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    00000179 v0000000 v0000000 views at 00000155 for:
             0000053a 0000053e (DW_OP_reg0 (r0))
    0000017e v0000000 v0000000 views at 00000157 for:
             0000053e 00000540 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    0000018c v0000000 v0000000 views at 00000159 for:
             00000540 00000544 (DW_OP_reg0 (r0))
    00000191 v0000000 v0000000 views at 0000015b for:
             00000544 00000546 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    0000019f v0000000 v0000000 views at 0000015d for:
             00000546 0000054a (DW_OP_reg0 (r0))
    000001a4 v0000000 v0000000 views at 0000015f for:
             0000054a 00000554 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x34>; DW_OP_convert <0>; DW_OP_stack_value)
    000001b3 <End of list>

    000001b4 v0000000 v0000000 location view pair
    000001b6 v0000000 v0000000 location view pair
    000001b8 v0000000 v0000000 location view pair

    000001ba 000004d0 (base address)
    000001bf v0000000 v0000000 views at 000001b4 for:
             000004d0 00000536 (DW_OP_reg3 (r3))
    000001c4 v0000000 v0000000 views at 000001b6 for:
             00000536 0000053a (DW_OP_regx: 77 (r77))
    000001ca v0000000 v0000000 views at 000001b8 for:
             0000053a 00000554 (DW_OP_reg3 (r3))
    000001d0 <End of list>

    000001d1 v0000000 v0000000 location view pair

    000001d3 v0000000 v0000000 views at 000001d1 for:
             00000500 00000554 (DW_OP_regx: 75 (r75))
    000001dc <End of list>

    000001dd v0000000 v0000000 location view pair
    000001df v0000000 v0000000 location view pair
    000001e1 v0000000 v0000000 location view pair

    000001e3 0000050c (base address)
    000001e8 v0000000 v0000000 views at 000001dd for:
             0000050c 00000532 (DW_OP_regx: 79 (r79))
    000001ee v0000000 v0000000 views at 000001df for:
             00000532 0000053a (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_convert <0x2d>; DW_OP_convert <0x3b>; DW_OP_const_type: <0x3b>  4 byte block: 0 0 80 3c ; DW_OP_mul; DW_OP_bregx: 77 (r77) 0; DW_OP_convert <0x42>; DW_OP_convert <0x3b>; DW_OP_regval_type: 75 (r75) <0x3b>; DW_OP_mul; DW_OP_plus; DW_OP_stack_value)
    00000214 v0000000 v0000000 views at 000001e1 for:
             0000053a 00000554 (DW_OP_regx: 79 (r79))
    0000021a <End of list>

    0000021b v0000000 v0000000 location view pair
    0000021d v0000000 v0000000 location view pair
    0000021f v0000000 v0000000 location view pair
    00000221 v0000000 v0000000 location view pair

    00000223 0000026c (base address)
    00000228 v0000000 v0000000 views at 0000021b for:
             0000026c 00000280 (DW_OP_reg0 (r0))
    0000022d v0000000 v0000000 views at 0000021d for:
             00000280 00000282 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000023b v0000000 v0000000 views at 0000021f for:
             00000282 00000284 (DW_OP_reg0 (r0))
    00000240 v0000000 v0000000 views at 00000221 for:
             00000284 00000286 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000024e <End of list>

    0000024f v0000003 v0000000 location view pair
    00000251 v0000000 v0000000 location view pair

    00000253 0000026c (base address)
    00000258 v0000003 v0000000 views at 0000024f for:
             0000026c 0000026e (DW_OP_lit0; DW_OP_stack_value)
    0000025e v0000000 v0000000 views at 00000251 for:
             0000026e 00000286 (DW_OP_reg3 (r3))
    00000263 <End of list>

    00000264 v0000002 v0000000 location view pair
    00000266 v0000000 v0000000 location view pair

    00000268 00000288 (base address)
    0000026d v0000002 v0000000 views at 00000264 for:
             00000288 0000028e (DW_OP_lit0; DW_OP_stack_value)
    00000273 v0000000 v0000000 views at 00000266 for:
             0000028e 000002ac (DW_OP_reg0 (r0))
    00000278 <End of list>

    00000279 v0000004 v0000000 location view pair
    0000027b v0000000 v0000000 location view pair

    0000027d 00000288 (base address)
    00000282 v0000004 v0000000 views at 00000279 for:
             00000288 0000028e (DW_OP_lit0; DW_OP_stack_value)
    00000288 v0000000 v0000000 views at 0000027b for:
             0000028e 000002ac (DW_OP_reg3 (r3))
    0000028d <End of list>

    0000028e v0000000 v0000000 location view pair
    00000290 v0000000 v0000000 location view pair

    00000292 000002ac (base address)
    00000297 v0000000 v0000000 views at 0000028e for:
             000002ac 000002b2 (DW_OP_reg0 (r0))
    0000029c v0000000 v0000000 views at 00000290 for:
             000002b2 000002cc (DW_OP_reg0 (r0))
    000002a1 <End of list>

    000002a2 v0000000 v0000000 location view pair

    000002a4 v0000000 v0000000 views at 000002a2 for:
             000002e6 000002f8 (DW_OP_reg3 (r3))
    000002ac <End of list>

    000002ad v0000000 v0000000 location view pair

    000002af v0000000 v0000000 views at 000002ad for:
             0000030a 00000320 (DW_OP_reg3 (r3))
    000002b7 <End of list>

    000002b8 v0000002 v0000000 location view pair
    000002ba v0000000 v0000000 location view pair
    000002bc v0000002 v0000000 location view pair
    000002be v0000001 v0000000 location view pair
    000002c0 v0000000 v0000000 location view pair

    000002c2 00000320 (base address)
    000002c7 v0000002 v0000000 views at 000002b8 for:
             00000320 00000322 (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    000002ce v0000000 v0000000 views at 000002ba for:
             00000322 00000334 (DW_OP_reg4 (r4))
    000002d3 v0000002 v0000000 views at 000002bc for:
             00000346 00000362 (DW_OP_reg5 (r5))
    000002d8 v0000001 v0000000 views at 000002be for:
             00000376 00000378 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000002df v0000000 v0000000 views at 000002c0 for:
             00000378 0000037a (DW_OP_reg4 (r4))
    000002e4 <End of list>

    000002e5 v0000000 v0000001 location view pair
    000002e7 v0000001 v0000000 location view pair
    000002e9 v0000000 v0000003 location view pair
    000002eb v0000003 v0000000 location view pair

    000002ed 00000334 (base address)
    000002f2 v0000000 v0000001 views at 000002e5 for:
             00000334 00000334 (DW_OP_reg4 (r4))
    000002f7 v0000001 v0000000 views at 000002e7 for:
             00000334 00000336 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000002fe v0000000 v0000003 views at 000002e9 for:
             00000336 00000346 (DW_OP_reg4 (r4))
    00000303 v0000003 v0000000 views at 000002eb for:
             00000346 00000348 (DW_OP_reg0 (r0))
    00000308 <End of list>

    00000309 v0000000 v0000000 location view pair

    0000030b v0000000 v0000000 views at 00000309 for:
             00000358 00000362 (DW_OP_reg0 (r0))
    00000313 <End of list>

    00000314 v0000000 v0000000 location view pair

    00000316 v0000000 v0000000 views at 00000314 for:
             0000034c 00000350 (DW_OP_reg0 (r0))
    0000031e <End of list>

    0000031f v0000000 v0000000 location view pair

    00000321 v0000000 v0000000 views at 0000031f for:
             0000037e 00000392 (DW_OP_reg3 (r3))
    00000329 <End of list>

    00000336 v0000001 v0000000 location view pair
    00000338 v0000000 v0000000 location view pair
    0000033a v0000000 v0000000 location view pair
    0000033c v0000000 v0000000 location view pair

    0000033e 000007d8 (base address)
    00000343 v0000001 v0000000 views at 00000336 for:
             000007d8 000007da (DW_OP_lit0; DW_OP_stack_value)
    00000349 v0000000 v0000000 views at 00000338 for:
             000007da 000007f8 (DW_OP_reg4 (r4))
    0000034e v0000000 v0000000 views at 0000033a for:
             000007f8 00000804 (DW_OP_breg2 (r2): -1; DW_OP_stack_value)
    00000355 v0000000 v0000000 views at 0000033c for:
             00000804 00000834 (DW_OP_reg4 (r4))
    0000035a <End of list>

    00000367 v0000000 v0000000 location view pair
    00000369 v0000000 v0000000 location view pair

    0000036b 00000000 (base address)
    00000370 v0000000 v0000000 views at 00000367 for:
             00000000 0000001a (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    0000037a v0000000 v0000000 views at 00000369 for:
             0000002a 00000046 (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    00000384 <End of list>

    00000391 v0000006 v0000000 location view pair
    00000393 v0000000 v0000001 location view pair
    00000395 v0000001 v0000000 location view pair
    00000397 v0000000 v0000000 location view pair
    00000399 v0000000 v0000000 location view pair
    0000039b v0000000 v0000000 location view pair
    0000039d v0000000 v0000000 location view pair

    0000039f 00000b82 (base address)
    000003a4 v0000006 v0000000 views at 00000391 for:
             00000b82 00000b86 (DW_OP_lit0; DW_OP_stack_value)
    000003aa v0000000 v0000001 views at 00000393 for:
             00000b86 00000bac (DW_OP_reg6 (r6))
    000003af v0000001 v0000000 views at 00000395 for:
             00000bac 00000bae (DW_OP_reg4 (r4))
    000003b4 v0000000 v0000000 views at 00000397 for:
             00000bae 00000be2 (DW_OP_reg6 (r6))
    000003b9 v0000000 v0000000 views at 00000399 for:
             00000be2 00000bf2 (DW_OP_reg4 (r4))
    000003be v0000000 v0000000 views at 0000039b for:
             00000bf2 00000c54 (DW_OP_reg6 (r6))
    000003c4 v0000000 v0000000 views at 0000039d for:
             00000c54 00000c5a (DW_OP_reg4 (r4))
    000003cb <End of list>

    000003cc v0000000 v0000000 location view pair
    000003ce v0000000 v0000000 location view pair
    000003d0 v0000000 v0000000 location view pair
    000003d2 v0000000 v0000000 location view pair
    000003d4 v0000000 v0000001 location view pair
    000003d6 v0000000 v0000000 location view pair
    000003d8 v0000000 v0000000 location view pair
    000003da v0000000 v0000000 location view pair
    000003dc v0000000 v0000001 location view pair
    000003de v0000001 v0000000 location view pair

    000003e0 00000a54 (base address)
    000003e5 v0000000 v0000000 views at 000003cc for:
             00000a54 00000ac0 (DW_OP_regx: 64 (r64))
    000003eb v0000000 v0000000 views at 000003ce for:
             00000ad6 00000adb (DW_OP_regx: 64 (r64))
    000003f3 v0000000 v0000000 views at 000003d0 for:
             00000adb 00000ade (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xdc6>); DW_OP_stack_value)
    000003ff v0000000 v0000000 views at 000003d2 for:
             00000ade 00000ae3 (DW_OP_regx: 64 (r64))
    00000407 v0000000 v0000001 views at 000003d4 for:
             00000ae3 00000ae4 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xdc6>); DW_OP_stack_value)
    00000413 v0000000 v0000000 views at 000003d6 for:
             00000aec 00000af1 (DW_OP_regx: 64 (r64))
    0000041b v0000000 v0000000 views at 000003d8 for:
             00000af1 00000af4 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xdc6>); DW_OP_stack_value)
    00000427 v0000000 v0000000 views at 000003da for:
             00000af4 00000af9 (DW_OP_regx: 64 (r64))
    0000042f v0000000 v0000001 views at 000003dc for:
             00000af9 00000afa (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xdc6>); DW_OP_stack_value)
    0000043b v0000001 v0000000 views at 000003de for:
             00000afa 00000b00 (DW_OP_regx: 80 (r80))
    00000443 <End of list>

    00000444 v0000000 v0000000 location view pair
    00000446 v0000000 v0000000 location view pair

    00000448 00000ab8 (base address)
    0000044d v0000000 v0000000 views at 00000444 for:
             00000ab8 00000ad6 (DW_OP_regx: 79 (r79))
    00000453 v0000000 v0000000 views at 00000446 for:
             00000b00 00000b3f (DW_OP_regx: 79 (r79))
    0000045a <End of list>

    0000045b v0000000 v0000000 location view pair
    0000045d v0000000 v0000000 location view pair
    0000045f v0000000 v0000000 location view pair

    00000461 00000ad0 (base address)
    00000466 v0000000 v0000000 views at 0000045b for:
             00000ad0 00000ad6 (DW_OP_reg3 (r3))
    0000046b v0000000 v0000000 views at 0000045d for:
             00000b00 00000b18 (DW_OP_reg3 (r3))
    00000470 v0000000 v0000000 views at 0000045f for:
             00000b20 00000b2e (DW_OP_reg3 (r3))
    00000475 <End of list>

    00000476 v0000001 v0000000 location view pair
    00000478 v0000000 v0000000 location view pair
    0000047a v0000000 v0000000 location view pair
    0000047c v0000000 v0000000 location view pair
    0000047e v0000000 v0000000 location view pair
    00000480 v0000000 v0000001 location view pair
    00000482 v0000001 v0000000 location view pair

    00000484 00000ad0 (base address)
    00000489 v0000001 v0000000 views at 00000476 for:
             00000ad0 00000ad6 (DW_OP_lit0; DW_OP_stack_value)
    0000048f v0000000 v0000000 views at 00000478 for:
             00000b00 00000b12 (DW_OP_reg1 (r1))
    00000494 v0000000 v0000000 views at 0000047a for:
             00000b12 00000b24 (DW_OP_breg1 (r1): 1; DW_OP_stack_value)
    0000049b v0000000 v0000000 views at 0000047c for:
             00000b24 00000b2a (DW_OP_reg1 (r1))
    000004a0 v0000000 v0000000 views at 0000047e for:
             00000b2a 00000b44 (DW_OP_reg4 (r4))
    000004a5 v0000000 v0000001 views at 00000480 for:
             00000b44 00000b52 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000004ad v0000001 v0000000 views at 00000482 for:
             00000b52 00000b74 (DW_OP_reg4 (r4))
    000004b4 <End of list>

    000004b5 v0000003 v0000000 location view pair
    000004b7 v0000000 v0000000 location view pair

    000004b9 00000ad0 (base address)
    000004be v0000003 v0000000 views at 000004b5 for:
             00000ad0 00000ad6 (DW_OP_lit0; DW_OP_stack_value)
    000004c4 v0000000 v0000000 views at 000004b7 for:
             00000b00 00000b3c (DW_OP_reg0 (r0))
    000004c9 <End of list>

    000004ca v0000000 v0000000 location view pair
    000004cc v0000000 v0000000 location view pair
    000004ce v0000000 v0000000 location view pair
    000004d0 v0000000 v0000000 location view pair

    000004d2 00000a3c (base address)
    000004d7 v0000000 v0000000 views at 000004ca for:
             00000a3c 00000a42 (DW_OP_reg0 (r0))
    000004dc v0000000 v0000000 views at 000004cc for:
             00000a42 00000a4a (DW_OP_reg4 (r4))
    000004e1 v0000000 v0000000 views at 000004ce for:
             00000a4a 00000a4c (DW_OP_reg0 (r0))
    000004e6 v0000000 v0000000 views at 000004d0 for:
             00000a4c 00000a54 (DW_OP_reg4 (r4))
    000004eb <End of list>

    000004ec v0000000 v0000000 location view pair
    000004ee v0000000 v0000000 location view pair

    000004f0 000009f0 (base address)
    000004f5 v0000000 v0000000 views at 000004ec for:
             000009f0 000009f6 (DW_OP_reg0 (r0))
    000004fa v0000000 v0000000 views at 000004ee for:
             000009f6 00000a20 (DW_OP_reg0 (r0))
    000004ff <End of list>

    00000500 v0000002 v0000000 location view pair
    00000502 v0000000 v0000000 location view pair
    00000504 v0000000 v0000000 location view pair
    00000506 v0000000 v0000000 location view pair
    00000508 v0000000 v0000001 location view pair
    0000050a v0000001 v0000000 location view pair

    0000050c 000009f4 (base address)
    00000511 v0000002 v0000000 views at 00000500 for:
             000009f4 000009f6 (DW_OP_lit0; DW_OP_stack_value)
    00000517 v0000000 v0000000 views at 00000502 for:
             000009f6 00000a12 (DW_OP_reg4 (r4))
    0000051c v0000000 v0000000 views at 00000504 for:
             00000a12 00000a20 (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    00000523 v0000000 v0000000 views at 00000506 for:
             00000a20 00000a22 (DW_OP_reg4 (r4))
    00000528 v0000000 v0000001 views at 00000508 for:
             00000a22 00000a30 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    0000052f v0000001 v0000000 views at 0000050a for:
             00000a30 00000a38 (DW_OP_reg4 (r4))
    00000534 <End of list>

    00000535 v0000000 v0000000 location view pair
    00000537 v0000000 v0000000 location view pair

    00000539 000009d8 (base address)
    0000053e v0000000 v0000000 views at 00000535 for:
             000009d8 000009e0 (DW_OP_reg0 (r0))
    00000543 v0000000 v0000000 views at 00000537 for:
             000009e0 000009ee (DW_OP_reg5 (r5))
    00000548 <End of list>

    00000549 v0000002 v0000000 location view pair
    0000054b v0000000 v0000000 location view pair

    0000054d 000009dc (base address)
    00000552 v0000002 v0000000 views at 00000549 for:
             000009dc 000009e0 (DW_OP_lit0; DW_OP_stack_value)
    00000558 v0000000 v0000000 views at 0000054b for:
             000009e0 000009ee (DW_OP_reg4 (r4))
    0000055d <End of list>

    0000055e v0000000 v0000000 location view pair
    00000560 v0000000 v0000000 location view pair
    00000562 v0000000 v0000000 location view pair

    00000564 00000990 (base address)
    00000569 v0000000 v0000000 views at 0000055e for:
             00000990 0000099e (DW_OP_reg0 (r0))
    0000056e v0000000 v0000000 views at 00000560 for:
             0000099e 0000099f (DW_OP_reg1 (r1))
    00000573 v0000000 v0000000 views at 00000562 for:
             0000099f 000009d8 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xdcd>); DW_OP_convert <0xdd4>; DW_OP_convert <0>; DW_OP_stack_value)
    00000581 <End of list>

    00000582 v0000002 v0000000 location view pair
    00000584 v0000000 v0000000 location view pair

    00000586 000009c0 (base address)
    0000058b v0000002 v0000000 views at 00000582 for:
             000009c0 000009c2 (DW_OP_lit0; DW_OP_stack_value)
    00000591 v0000000 v0000000 views at 00000584 for:
             000009c2 000009cc (DW_OP_reg3 (r3))
    00000596 <End of list>

    000005a3 v0000000 v0000001 location view pair
    000005a5 v0000001 v0000000 location view pair
    000005a7 v0000000 v0000000 location view pair

    000005a9 00000c70 (base address)
    000005ae v0000000 v0000001 views at 000005a3 for:
             00000c70 00000c70 (DW_OP_reg2 (r2))
    000005b3 v0000001 v0000000 views at 000005a5 for:
             00000c70 00000c74 (DW_OP_breg2 (r2): 4; DW_OP_stack_value)
    000005ba v0000000 v0000000 views at 000005a7 for:
             00000c74 00000c98 (DW_OP_reg2 (r2))
    000005bf <End of list>

    000005c0 v0000000 v0000001 location view pair
    000005c2 v0000001 v0000000 location view pair
    000005c4 v0000000 v0000000 location view pair

    000005c6 00000c70 (base address)
    000005cb v0000000 v0000001 views at 000005c0 for:
             00000c70 00000c70 (DW_OP_reg3 (r3))
    000005d0 v0000001 v0000000 views at 000005c2 for:
             00000c70 00000c78 (DW_OP_breg3 (r3): 4; DW_OP_stack_value)
    000005d7 v0000000 v0000000 views at 000005c4 for:
             00000c78 00000c94 (DW_OP_reg3 (r3))
    000005dc <End of list>

Contents of the .debug_aranges section:

  Length:                   124
  Version:                  2
  Offset into .debug_info:  0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000026c 0000001a
    00000288 00000024
    000002ac 00000028
    000002d4 000000d4
    000003a8 000000b0
    00000458 00000024
    0000047c 00000024
    000004a0 00000030
    000004d0 00000084
    00000554 00000004
    00000558 0000002a
    00000582 00000024
    000005a8 00000180
    00000000 00000000
  Length:                   28
  Version:                  2
  Offset into .debug_info:  0x918
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000728 0000010c
    00000000 00000000
  Length:                   44
  Version:                  2
  Offset into .debug_info:  0xc22
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000834 0000007c
    000008b0 00000064
    00000000 00000058
    00000000 00000000
  Length:                   76
  Version:                  2
  Offset into .debug_info:  0xda0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000914 0000007c
    00000990 00000048
    000009d8 00000016
    000009f0 0000004c
    00000a3c 00000018
    00000a54 00000120
    00000b74 000000ea
    00000000 00000000
  Length:                   52
  Version:                  2
  Offset into .debug_info:  0x12d5
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000c60 00000002
    00000c62 00000002
    00000c64 00000002
    00000c68 00000048
    00000000 00000000

Contents of the .debug_rnglists section:

 Table at Offset: 0:
  Length:          0x9b
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xc, Index: 0
    Offset   Begin    End
    0000000c 0000026c (base address)
    00000011 0000026c 0000027e 
    00000014 00000280 00000284 
    00000017 <End of list>

 Table at Offset: 0x9f:
  Length:          0x10
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xab, Index: 0
    Offset   Begin    End
    000000ab 00000728 00000834 
    000000b2 <End of list>

 Table at Offset: 0xb3:
  Length:          0x1b
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xbf, Index: 0
    Offset   Begin    End
    000000bf 00000834 000008b0 
    000000c5 000008b0 00000914 
    000000cb 00000000 00000058 
    000000d1 <End of list>

 Table at Offset: 0xd2:
  Length:          0x44
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xde, Index: 0
    Offset   Begin    End
    000000de 00000ad0 (base address)
    000000e3 00000ad0 00000ad2 
    000000e6 00000ad4 00000ad6 
    000000e9 00000b00 00000b28 
    000000ec <End of list>

 Table at Offset: 0x11a:
  Length:          0x21
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x126, Index: 0
    Offset   Begin    End
    00000126 00000c60 00000c62 
    0000012c 00000c62 00000c64 
    00000132 00000c64 00000c66 
    00000138 00000c68 00000cb0 
    0000013e <End of list>

Raw dump of debug contents of section .debug_line:

  Offset:                      0
  Length:                      1772
  DWARF Version:               3
  Prologue Length:             226
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	/usr/lib/gcc/arm-none-eabi/13.2.0/include

 The File Name Table (offset 0x8c):
  Entry	Dir	Time	Size	Name
  1	1	0	0	lidar.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	stddef.h
  5	1	0	0	lidar.h
  6	1	0	0	timers.h
  7	1	0	0	uart_print.h

 Line Number Statements:
  [0x000000ec]  Set column to 35
  [0x000000ee]  Extended opcode 2: set Address to 0x26c
  [0x000000f5]  Advance Line by 45 to 46
  [0x000000f7]  Copy
  [0x000000f8]  Set column to 3
  [0x000000fa]  Special opcode 6: advance Address by 0 to 0x26c and Line by 1 to 47 (view 1)
  [0x000000fb]  Set column to 7
  [0x000000fd]  Copy (view 2)
  [0x000000fe]  Set column to 11
  [0x00000100]  Set is_stmt to 0
  [0x00000101]  Copy (view 3)
  [0x00000102]  Set column to 20
  [0x00000104]  Extended opcode 4: set Discriminator to 4
  [0x00000108]  Set is_stmt to 1
  [0x00000109]  Special opcode 19: advance Address by 2 to 0x26e and Line by 0 to 47
  [0x0000010a]  Set column to 32
  [0x0000010c]  Extended opcode 4: set Discriminator to 5
  [0x00000110]  Special opcode 47: advance Address by 6 to 0x274 and Line by 0 to 47
  [0x00000111]  Set column to 42
  [0x00000113]  Extended opcode 4: set Discriminator to 5
  [0x00000117]  Set is_stmt to 0
  [0x00000118]  Copy (view 1)
  [0x00000119]  Set column to 34
  [0x0000011b]  Extended opcode 4: set Discriminator to 5
  [0x0000011f]  Special opcode 33: advance Address by 4 to 0x278 and Line by 0 to 47
  [0x00000120]  Set column to 28
  [0x00000122]  Extended opcode 4: set Discriminator to 3
  [0x00000126]  Set is_stmt to 1
  [0x00000127]  Special opcode 19: advance Address by 2 to 0x27a and Line by 0 to 47
  [0x00000128]  Extended opcode 4: set Discriminator to 3
  [0x0000012c]  Set is_stmt to 0
  [0x0000012d]  Special opcode 19: advance Address by 2 to 0x27c and Line by 0 to 47
  [0x0000012e]  Extended opcode 4: set Discriminator to 3
  [0x00000132]  Special opcode 19: advance Address by 2 to 0x27e and Line by 0 to 47
  [0x00000133]  Set column to 10
  [0x00000135]  Special opcode 6: advance Address by 0 to 0x27e and Line by 1 to 48 (view 1)
  [0x00000136]  Special opcode 19: advance Address by 2 to 0x280 and Line by 0 to 48
  [0x00000137]  Set column to 54
  [0x00000139]  Extended opcode 4: set Discriminator to 2
  [0x0000013d]  Special opcode 18: advance Address by 2 to 0x282 and Line by -1 to 47
  [0x0000013e]  Extended opcode 4: set Discriminator to 2
  [0x00000142]  Special opcode 19: advance Address by 2 to 0x284 and Line by 0 to 47
  [0x00000143]  Set column to 2
  [0x00000145]  Special opcode 7: advance Address by 0 to 0x284 and Line by 2 to 49 (view 1)
  [0x00000146]  Advance PC by 2 to 0x286
  [0x00000148]  Extended opcode 1: End of Sequence

  [0x0000014b]  Set column to 25
  [0x0000014d]  Extended opcode 2: set Address to 0x288
  [0x00000154]  Advance Line by 50 to 51
  [0x00000156]  Copy
  [0x00000157]  Set column to 3
  [0x00000159]  Special opcode 6: advance Address by 0 to 0x288 and Line by 1 to 52 (view 1)
  [0x0000015a]  Special opcode 6: advance Address by 0 to 0x288 and Line by 1 to 53 (view 2)
  [0x0000015b]  Set column to 7
  [0x0000015d]  Copy (view 3)
  [0x0000015e]  Set column to 11
  [0x00000160]  Set is_stmt to 0
  [0x00000161]  Copy (view 4)
  [0x00000162]  Set column to 7
  [0x00000164]  Special opcode 18: advance Address by 2 to 0x28a and Line by -1 to 52
  [0x00000165]  Set column to 3
  [0x00000167]  Special opcode 20: advance Address by 2 to 0x28c and Line by 1 to 53
  [0x00000168]  Set column to 28
  [0x0000016a]  Extended opcode 4: set Discriminator to 2
  [0x0000016e]  Set is_stmt to 1
  [0x0000016f]  Special opcode 19: advance Address by 2 to 0x28e and Line by 0 to 53
  [0x00000170]  Set column to 20
  [0x00000172]  Extended opcode 4: set Discriminator to 1
  [0x00000176]  Special opcode 19: advance Address by 2 to 0x290 and Line by 0 to 53
  [0x00000177]  Set column to 4
  [0x00000179]  Special opcode 48: advance Address by 6 to 0x296 and Line by 1 to 54
  [0x0000017a]  Set column to 15
  [0x0000017c]  Set is_stmt to 0
  [0x0000017d]  Copy (view 1)
  [0x0000017e]  Set column to 6
  [0x00000180]  Special opcode 47: advance Address by 6 to 0x29c and Line by 0 to 54
  [0x00000181]  Set column to 5
  [0x00000183]  Set is_stmt to 1
  [0x00000184]  Special opcode 34: advance Address by 4 to 0x2a0 and Line by 1 to 55
  [0x00000185]  Set column to 10
  [0x00000187]  Set is_stmt to 0
  [0x00000188]  Copy (view 1)
  [0x00000189]  Special opcode 19: advance Address by 2 to 0x2a2 and Line by 0 to 55
  [0x0000018a]  Special opcode 19: advance Address by 2 to 0x2a4 and Line by 0 to 55
  [0x0000018b]  Set column to 3
  [0x0000018d]  Set is_stmt to 1
  [0x0000018e]  Special opcode 8: advance Address by 0 to 0x2a4 and Line by 3 to 58 (view 1)
  [0x0000018f]  Set column to 2
  [0x00000191]  Set is_stmt to 0
  [0x00000192]  Special opcode 6: advance Address by 0 to 0x2a4 and Line by 1 to 59 (view 2)
  [0x00000193]  Advance PC by 8 to 0x2ac
  [0x00000195]  Extended opcode 1: End of Sequence

  [0x00000198]  Set column to 27
  [0x0000019a]  Extended opcode 2: set Address to 0x2ac
  [0x000001a1]  Advance Line by 61 to 62
  [0x000001a3]  Copy
  [0x000001a4]  Set column to 3
  [0x000001a6]  Special opcode 6: advance Address by 0 to 0x2ac and Line by 1 to 63 (view 1)
  [0x000001a7]  Set column to 8
  [0x000001a9]  Set is_stmt to 0
  [0x000001aa]  Copy (view 2)
  [0x000001ab]  Set column to 18
  [0x000001ad]  Extended opcode 4: set Discriminator to 2
  [0x000001b1]  Set is_stmt to 1
  [0x000001b2]  Special opcode 19: advance Address by 2 to 0x2ae and Line by 0 to 63
  [0x000001b3]  Set column to 22
  [0x000001b5]  Extended opcode 4: set Discriminator to 2
  [0x000001b9]  Set is_stmt to 0
  [0x000001ba]  Copy (view 1)
  [0x000001bb]  Set column to 13
  [0x000001bd]  Extended opcode 4: set Discriminator to 1
  [0x000001c1]  Set is_stmt to 1
  [0x000001c2]  Special opcode 33: advance Address by 4 to 0x2b2 and Line by 0 to 63
  [0x000001c3]  Set column to 3
  [0x000001c5]  Special opcode 34: advance Address by 4 to 0x2b6 and Line by 1 to 64
  [0x000001c6]  Set column to 14
  [0x000001c8]  Set is_stmt to 0
  [0x000001c9]  Copy (view 1)
  [0x000001ca]  Set column to 2
  [0x000001cc]  Special opcode 104: advance Address by 14 to 0x2c4 and Line by 1 to 65
  [0x000001cd]  Special opcode 61: advance Address by 8 to 0x2cc and Line by 0 to 65
  [0x000001ce]  Advance PC by 8 to 0x2d4
  [0x000001d0]  Extended opcode 1: End of Sequence

  [0x000001d3]  Set column to 22
  [0x000001d5]  Extended opcode 2: set Address to 0x2d4
  [0x000001dc]  Advance Line by 42 to 43
  [0x000001de]  Copy
  [0x000001df]  Set column to 2
  [0x000001e1]  Special opcode 20: advance Address by 2 to 0x2d6 and Line by 1 to 44
  [0x000001e2]  Special opcode 7: advance Address by 0 to 0x2d6 and Line by 2 to 46 (view 1)
  [0x000001e3]  Special opcode 10: advance Address by 0 to 0x2d6 and Line by 5 to 51 (view 2)
  [0x000001e4]  Advance Line by 11 to 62
  [0x000001e6]  Copy (view 3)
  [0x000001e7]  Special opcode 11: advance Address by 0 to 0x2d6 and Line by 6 to 68 (view 4)
  [0x000001e8]  Set column to 15
  [0x000001ea]  Set is_stmt to 0
  [0x000001eb]  Copy (view 5)
  [0x000001ec]  Set column to 4
  [0x000001ee]  Special opcode 61: advance Address by 8 to 0x2de and Line by 0 to 68
  [0x000001ef]  Set column to 11
  [0x000001f1]  Special opcode 35: advance Address by 4 to 0x2e2 and Line by 2 to 70
  [0x000001f2]  Set column to 4
  [0x000001f4]  Set is_stmt to 1
  [0x000001f5]  Special opcode 34: advance Address by 4 to 0x2e6 and Line by 1 to 71
  [0x000001f6]  Set column to 16
  [0x000001f8]  Set is_stmt to 0
  [0x000001f9]  Copy (view 1)
  [0x000001fa]  Set column to 28
  [0x000001fc]  Extended opcode 4: set Discriminator to 3
  [0x00000200]  Set is_stmt to 1
  [0x00000201]  Special opcode 60: advance Address by 8 to 0x2ee and Line by -1 to 70
  [0x00000202]  Set column to 20
  [0x00000204]  Extended opcode 4: set Discriminator to 1
  [0x00000208]  Special opcode 19: advance Address by 2 to 0x2f0 and Line by 0 to 70
  [0x00000209]  Set column to 3
  [0x0000020b]  Special opcode 50: advance Address by 6 to 0x2f6 and Line by 3 to 73
  [0x0000020c]  Set column to 13
  [0x0000020e]  Set is_stmt to 0
  [0x0000020f]  Copy (view 1)
  [0x00000210]  Special opcode 19: advance Address by 2 to 0x2f8 and Line by 0 to 73
  [0x00000211]  Set column to 2
  [0x00000213]  Set is_stmt to 1
  [0x00000214]  Special opcode 50: advance Address by 6 to 0x2fe and Line by 3 to 76
  [0x00000215]  Set column to 5
  [0x00000217]  Set is_stmt to 0
  [0x00000218]  Copy (view 1)
  [0x00000219]  Set column to 4
  [0x0000021b]  Extended opcode 4: set Discriminator to 1
  [0x0000021f]  Special opcode 33: advance Address by 4 to 0x302 and Line by 0 to 76
  [0x00000220]  Set column to 10
  [0x00000222]  Special opcode 36: advance Address by 4 to 0x306 and Line by 3 to 79
  [0x00000223]  Set column to 31
  [0x00000225]  Extended opcode 4: set Discriminator to 3
  [0x00000229]  Set is_stmt to 1
  [0x0000022a]  Special opcode 33: advance Address by 4 to 0x30a and Line by 0 to 79
  [0x0000022b]  Set column to 49
  [0x0000022d]  Extended opcode 4: set Discriminator to 3
  [0x00000231]  Set is_stmt to 0
  [0x00000232]  Copy (view 1)
  [0x00000233]  Set column to 39
  [0x00000235]  Extended opcode 4: set Discriminator to 3
  [0x00000239]  Special opcode 47: advance Address by 6 to 0x310 and Line by 0 to 79
  [0x0000023a]  Set column to 27
  [0x0000023c]  Extended opcode 4: set Discriminator to 3
  [0x00000240]  Set is_stmt to 1
  [0x00000241]  Special opcode 47: advance Address by 6 to 0x316 and Line by 0 to 79
  [0x00000242]  Set column to 19
  [0x00000244]  Extended opcode 4: set Discriminator to 1
  [0x00000248]  Special opcode 19: advance Address by 2 to 0x318 and Line by 0 to 79
  [0x00000249]  Extended opcode 4: set Discriminator to 1
  [0x0000024d]  Set is_stmt to 0
  [0x0000024e]  Special opcode 61: advance Address by 8 to 0x320 and Line by 0 to 79
  [0x0000024f]  Set column to 9
  [0x00000251]  Extended opcode 4: set Discriminator to 1
  [0x00000255]  Set is_stmt to 1
  [0x00000256]  Special opcode 11: advance Address by 0 to 0x320 and Line by 6 to 85 (view 1)
  [0x00000257]  Set column to 15
  [0x00000259]  Extended opcode 4: set Discriminator to 1
  [0x0000025d]  Set is_stmt to 0
  [0x0000025e]  Copy (view 2)
  [0x0000025f]  Extended opcode 4: set Discriminator to 1
  [0x00000263]  Special opcode 19: advance Address by 2 to 0x322 and Line by 0 to 85
  [0x00000264]  Set column to 14
  [0x00000266]  Extended opcode 4: set Discriminator to 1
  [0x0000026a]  Special opcode 61: advance Address by 8 to 0x32a and Line by 0 to 85
  [0x0000026b]  Set column to 9
  [0x0000026d]  Extended opcode 4: set Discriminator to 1
  [0x00000271]  Special opcode 47: advance Address by 6 to 0x330 and Line by 0 to 85
  [0x00000272]  Extended opcode 4: set Discriminator to 1
  [0x00000276]  Set is_stmt to 1
  [0x00000277]  Special opcode 36: advance Address by 4 to 0x334 and Line by 3 to 88
  [0x00000278]  Set column to 15
  [0x0000027a]  Extended opcode 4: set Discriminator to 1
  [0x0000027e]  Set is_stmt to 0
  [0x0000027f]  Copy (view 1)
  [0x00000280]  Extended opcode 4: set Discriminator to 1
  [0x00000284]  Special opcode 19: advance Address by 2 to 0x336 and Line by 0 to 88
  [0x00000285]  Set column to 14
  [0x00000287]  Extended opcode 4: set Discriminator to 1
  [0x0000028b]  Special opcode 47: advance Address by 6 to 0x33c and Line by 0 to 88
  [0x0000028c]  Set column to 9
  [0x0000028e]  Extended opcode 4: set Discriminator to 1
  [0x00000292]  Special opcode 47: advance Address by 6 to 0x342 and Line by 0 to 88
  [0x00000293]  Set column to 3
  [0x00000295]  Set is_stmt to 1
  [0x00000296]  Special opcode 34: advance Address by 4 to 0x346 and Line by 1 to 89
  [0x00000297]  Special opcode 6: advance Address by 0 to 0x346 and Line by 1 to 90 (view 1)
  [0x00000298]  Special opcode 6: advance Address by 0 to 0x346 and Line by 1 to 91 (view 2)
  [0x00000299]  Special opcode 6: advance Address by 0 to 0x346 and Line by 1 to 92 (view 3)
  [0x0000029a]  Set column to 14
  [0x0000029c]  Set is_stmt to 0
  [0x0000029d]  Copy (view 4)
  [0x0000029e]  Special opcode 19: advance Address by 2 to 0x348 and Line by 0 to 92
  [0x0000029f]  Set column to 3
  [0x000002a1]  Set is_stmt to 1
  [0x000002a2]  Special opcode 34: advance Address by 4 to 0x34c and Line by 1 to 93
  [0x000002a3]  Set column to 32
  [0x000002a5]  Set is_stmt to 0
  [0x000002a6]  Copy (view 1)
  [0x000002a7]  Set column to 9
  [0x000002a9]  Special opcode 33: advance Address by 4 to 0x350 and Line by 0 to 93
  [0x000002aa]  Set column to 3
  [0x000002ac]  Set is_stmt to 1
  [0x000002ad]  Special opcode 62: advance Address by 8 to 0x358 and Line by 1 to 94
  [0x000002ae]  Set column to 41
  [0x000002b0]  Set is_stmt to 0
  [0x000002b1]  Copy (view 1)
  [0x000002b2]  Set column to 7
  [0x000002b4]  Special opcode 33: advance Address by 4 to 0x35c and Line by 0 to 94
  [0x000002b5]  Set column to 13
  [0x000002b7]  Special opcode 19: advance Address by 2 to 0x35e and Line by 0 to 94
  [0x000002b8]  Special opcode 33: advance Address by 4 to 0x362 and Line by 0 to 94
  [0x000002b9]  Set column to 8
  [0x000002bb]  Set is_stmt to 1
  [0x000002bc]  Advance Line by -13 to 81
  [0x000002be]  Copy (view 1)
  [0x000002bf]  Extended opcode 4: set Discriminator to 1
  [0x000002c3]  Set is_stmt to 0
  [0x000002c4]  Special opcode 47: advance Address by 6 to 0x368 and Line by 0 to 81
  [0x000002c5]  Set column to 7
  [0x000002c7]  Special opcode 20: advance Address by 2 to 0x36a and Line by 1 to 82
  [0x000002c8]  Set column to 9
  [0x000002ca]  Extended opcode 4: set Discriminator to 1
  [0x000002ce]  Set is_stmt to 1
  [0x000002cf]  Special opcode 21: advance Address by 2 to 0x36c and Line by 2 to 84
  [0x000002d0]  Set column to 13
  [0x000002d2]  Extended opcode 4: set Discriminator to 1
  [0x000002d6]  Set is_stmt to 0
  [0x000002d7]  Copy (view 1)
  [0x000002d8]  Set column to 9
  [0x000002da]  Extended opcode 4: set Discriminator to 1
  [0x000002de]  Special opcode 47: advance Address by 6 to 0x372 and Line by 0 to 84
  [0x000002df]  Set column to 21
  [0x000002e1]  Extended opcode 4: set Discriminator to 2
  [0x000002e5]  Set is_stmt to 1
  [0x000002e6]  Special opcode 33: advance Address by 4 to 0x376 and Line by 0 to 84
  [0x000002e7]  Set column to 25
  [0x000002e9]  Extended opcode 4: set Discriminator to 2
  [0x000002ed]  Set is_stmt to 0
  [0x000002ee]  Copy (view 1)
  [0x000002ef]  Extended opcode 4: set Discriminator to 2
  [0x000002f3]  Special opcode 19: advance Address by 2 to 0x378 and Line by 0 to 84
  [0x000002f4]  Extended opcode 4: set Discriminator to 2
  [0x000002f8]  Special opcode 19: advance Address by 2 to 0x37a and Line by 0 to 84
  [0x000002f9]  Set column to 10
  [0x000002fb]  Advance Line by 12 to 96
  [0x000002fd]  Copy (view 1)
  [0x000002fe]  Set column to 31
  [0x00000300]  Extended opcode 4: set Discriminator to 3
  [0x00000304]  Set is_stmt to 1
  [0x00000305]  Special opcode 33: advance Address by 4 to 0x37e and Line by 0 to 96
  [0x00000306]  Set column to 61
  [0x00000308]  Extended opcode 4: set Discriminator to 3
  [0x0000030c]  Set is_stmt to 0
  [0x0000030d]  Copy (view 1)
  [0x0000030e]  Set column to 55
  [0x00000310]  Extended opcode 4: set Discriminator to 3
  [0x00000314]  Special opcode 47: advance Address by 6 to 0x384 and Line by 0 to 96
  [0x00000315]  Set column to 27
  [0x00000317]  Extended opcode 4: set Discriminator to 3
  [0x0000031b]  Set is_stmt to 1
  [0x0000031c]  Special opcode 47: advance Address by 6 to 0x38a and Line by 0 to 96
  [0x0000031d]  Set column to 19
  [0x0000031f]  Extended opcode 4: set Discriminator to 1
  [0x00000323]  Special opcode 19: advance Address by 2 to 0x38c and Line by 0 to 96
  [0x00000324]  Extended opcode 4: set Discriminator to 1
  [0x00000328]  Set is_stmt to 0
  [0x00000329]  Special opcode 47: advance Address by 6 to 0x392 and Line by 0 to 96
  [0x0000032a]  Set column to 1
  [0x0000032c]  Special opcode 6: advance Address by 0 to 0x392 and Line by 1 to 97 (view 1)
  [0x0000032d]  Advance PC by 22 to 0x3a8
  [0x0000032f]  Extended opcode 1: End of Sequence

  [0x00000332]  Set column to 29
  [0x00000334]  Extended opcode 2: set Address to 0x3a8
  [0x0000033b]  Advance Line by 98 to 99
  [0x0000033e]  Copy
  [0x0000033f]  Set column to 2
  [0x00000341]  Special opcode 20: advance Address by 2 to 0x3aa and Line by 1 to 100
  [0x00000342]  Special opcode 90: advance Address by 12 to 0x3b6 and Line by 1 to 101
  [0x00000343]  Special opcode 62: advance Address by 8 to 0x3be and Line by 1 to 102
  [0x00000344]  Set column to 57
  [0x00000346]  Extended opcode 4: set Discriminator to 1
  [0x0000034a]  Copy (view 1)
  [0x0000034b]  Set column to 8
  [0x0000034d]  Extended opcode 4: set Discriminator to 1
  [0x00000351]  Copy (view 2)
  [0x00000352]  Set column to 9
  [0x00000354]  Extended opcode 4: set Discriminator to 1
  [0x00000358]  Set is_stmt to 0
  [0x00000359]  Copy (view 3)
  [0x0000035a]  Set column to 8
  [0x0000035c]  Extended opcode 4: set Discriminator to 1
  [0x00000360]  Special opcode 103: advance Address by 14 to 0x3cc and Line by 0 to 102
  [0x00000361]  Set column to 58
  [0x00000363]  Extended opcode 4: set Discriminator to 2
  [0x00000367]  Set is_stmt to 1
  [0x00000368]  Special opcode 33: advance Address by 4 to 0x3d0 and Line by 0 to 102
  [0x00000369]  Set column to 2
  [0x0000036b]  Special opcode 6: advance Address by 0 to 0x3d0 and Line by 1 to 103 (view 1)
  [0x0000036c]  Set column to 20
  [0x0000036e]  Set is_stmt to 0
  [0x0000036f]  Copy (view 2)
  [0x00000370]  Set column to 2
  [0x00000372]  Set is_stmt to 1
  [0x00000373]  Special opcode 62: advance Address by 8 to 0x3d8 and Line by 1 to 104
  [0x00000374]  Set column to 18
  [0x00000376]  Set is_stmt to 0
  [0x00000377]  Special opcode 33: advance Address by 4 to 0x3dc and Line by 0 to 104
  [0x00000378]  Set column to 2
  [0x0000037a]  Set is_stmt to 1
  [0x0000037b]  Special opcode 62: advance Address by 8 to 0x3e4 and Line by 1 to 105
  [0x0000037c]  Set column to 19
  [0x0000037e]  Set is_stmt to 0
  [0x0000037f]  Special opcode 33: advance Address by 4 to 0x3e8 and Line by 0 to 105
  [0x00000380]  Set column to 2
  [0x00000382]  Set is_stmt to 1
  [0x00000383]  Special opcode 62: advance Address by 8 to 0x3f0 and Line by 1 to 106
  [0x00000384]  Set column to 23
  [0x00000386]  Set is_stmt to 0
  [0x00000387]  Copy (view 1)
  [0x00000388]  Set column to 41
  [0x0000038a]  Special opcode 33: advance Address by 4 to 0x3f4 and Line by 0 to 106
  [0x0000038b]  Set column to 102
  [0x0000038d]  Special opcode 33: advance Address by 4 to 0x3f8 and Line by 0 to 106
  [0x0000038e]  Set column to 20
  [0x00000390]  Special opcode 33: advance Address by 4 to 0x3fc and Line by 0 to 106
  [0x00000391]  Set column to 2
  [0x00000393]  Set is_stmt to 1
  [0x00000394]  Special opcode 34: advance Address by 4 to 0x400 and Line by 1 to 107
  [0x00000395]  Special opcode 132: advance Address by 18 to 0x412 and Line by 1 to 108
  [0x00000396]  Special opcode 104: advance Address by 14 to 0x420 and Line by 1 to 109
  [0x00000397]  Special opcode 91: advance Address by 12 to 0x42c and Line by 2 to 111
  [0x00000398]  Set column to 36
  [0x0000039a]  Set is_stmt to 0
  [0x0000039b]  Special opcode 33: advance Address by 4 to 0x430 and Line by 0 to 111
  [0x0000039c]  Set column to 2
  [0x0000039e]  Special opcode 33: advance Address by 4 to 0x434 and Line by 0 to 111
  [0x0000039f]  Extended opcode 4: set Discriminator to 1
  [0x000003a3]  Special opcode 33: advance Address by 4 to 0x438 and Line by 0 to 111
  [0x000003a4]  Set column to 1
  [0x000003a6]  Special opcode 77: advance Address by 10 to 0x442 and Line by 2 to 113
  [0x000003a7]  Advance PC by 22 to 0x458
  [0x000003a9]  Extended opcode 1: End of Sequence

  [0x000003ac]  Set column to 29
  [0x000003ae]  Extended opcode 2: set Address to 0x458
  [0x000003b5]  Advance Line by 114 to 115
  [0x000003b8]  Copy
  [0x000003b9]  Set column to 2
  [0x000003bb]  Special opcode 20: advance Address by 2 to 0x45a and Line by 1 to 116
  [0x000003bc]  Special opcode 118: advance Address by 16 to 0x46a and Line by 1 to 117
  [0x000003bd]  Set column to 1
  [0x000003bf]  Set is_stmt to 0
  [0x000003c0]  Special opcode 76: advance Address by 10 to 0x474 and Line by 1 to 118
  [0x000003c1]  Advance PC by 8 to 0x47c
  [0x000003c3]  Extended opcode 1: End of Sequence

  [0x000003c6]  Set column to 28
  [0x000003c8]  Extended opcode 2: set Address to 0x47c
  [0x000003cf]  Advance Line by 119 to 120
  [0x000003d2]  Copy
  [0x000003d3]  Set column to 2
  [0x000003d5]  Special opcode 20: advance Address by 2 to 0x47e and Line by 1 to 121
  [0x000003d6]  Special opcode 118: advance Address by 16 to 0x48e and Line by 1 to 122
  [0x000003d7]  Set column to 1
  [0x000003d9]  Set is_stmt to 0
  [0x000003da]  Special opcode 76: advance Address by 10 to 0x498 and Line by 1 to 123
  [0x000003db]  Advance PC by 8 to 0x4a0
  [0x000003dd]  Extended opcode 1: End of Sequence

  [0x000003e0]  Set column to 26
  [0x000003e2]  Extended opcode 2: set Address to 0x4a0
  [0x000003e9]  Advance Line by 124 to 125
  [0x000003ec]  Copy
  [0x000003ed]  Set column to 2
  [0x000003ef]  Special opcode 20: advance Address by 2 to 0x4a2 and Line by 1 to 126
  [0x000003f0]  Set column to 7
  [0x000003f2]  Set is_stmt to 0
  [0x000003f3]  Copy (view 1)
  [0x000003f4]  Set column to 3
  [0x000003f6]  Set is_stmt to 1
  [0x000003f7]  Special opcode 20: advance Address by 2 to 0x4a4 and Line by 1 to 127
  [0x000003f8]  Special opcode 104: advance Address by 14 to 0x4b2 and Line by 1 to 128
  [0x000003f9]  Set column to 8
  [0x000003fb]  Special opcode 59: advance Address by 8 to 0x4ba and Line by -2 to 126
  [0x000003fc]  Extended opcode 4: set Discriminator to 1
  [0x00000400]  Set is_stmt to 0
  [0x00000401]  Special opcode 89: advance Address by 12 to 0x4c6 and Line by 0 to 126
  [0x00000402]  Set column to 1
  [0x00000404]  Special opcode 37: advance Address by 4 to 0x4ca and Line by 4 to 130
  [0x00000405]  Advance PC by 6 to 0x4d0
  [0x00000407]  Extended opcode 1: End of Sequence

  [0x0000040a]  Set column to 83
  [0x0000040c]  Extended opcode 2: set Address to 0x4d0
  [0x00000413]  Advance Line by 131 to 132
  [0x00000416]  Copy
  [0x00000417]  Set is_stmt to 0
  [0x00000418]  Copy (view 1)
  [0x00000419]  Set column to 2
  [0x0000041b]  Set is_stmt to 1
  [0x0000041c]  Special opcode 118: advance Address by 16 to 0x4e0 and Line by 1 to 133
  [0x0000041d]  Set column to 18
  [0x0000041f]  Set is_stmt to 0
  [0x00000420]  Copy (view 1)
  [0x00000421]  Set column to 29
  [0x00000423]  Special opcode 33: advance Address by 4 to 0x4e4 and Line by 0 to 133
  [0x00000424]  Set column to 39
  [0x00000426]  Special opcode 61: advance Address by 8 to 0x4ec and Line by 0 to 133
  [0x00000427]  Set column to 52
  [0x00000429]  Special opcode 33: advance Address by 4 to 0x4f0 and Line by 0 to 133
  [0x0000042a]  Set column to 36
  [0x0000042c]  Special opcode 33: advance Address by 4 to 0x4f4 and Line by 0 to 133
  [0x0000042d]  Set column to 60
  [0x0000042f]  Special opcode 33: advance Address by 4 to 0x4f8 and Line by 0 to 133
  [0x00000430]  Set column to 8
  [0x00000432]  Special opcode 33: advance Address by 4 to 0x4fc and Line by 0 to 133
  [0x00000433]  Set column to 2
  [0x00000435]  Set is_stmt to 1
  [0x00000436]  Special opcode 34: advance Address by 4 to 0x500 and Line by 1 to 134
  [0x00000437]  Set column to 47
  [0x00000439]  Set is_stmt to 0
  [0x0000043a]  Copy (view 1)
  [0x0000043b]  Set column to 8
  [0x0000043d]  Special opcode 61: advance Address by 8 to 0x508 and Line by 0 to 134
  [0x0000043e]  Set column to 2
  [0x00000440]  Set is_stmt to 1
  [0x00000441]  Special opcode 34: advance Address by 4 to 0x50c and Line by 1 to 135
  [0x00000442]  Set column to 4
  [0x00000444]  Set is_stmt to 0
  [0x00000445]  Copy (view 1)
  [0x00000446]  Set column to 15
  [0x00000448]  Extended opcode 4: set Discriminator to 2
  [0x0000044c]  Special opcode 75: advance Address by 10 to 0x516 and Line by 0 to 135
  [0x0000044d]  Set column to 29
  [0x0000044f]  Extended opcode 4: set Discriminator to 4
  [0x00000453]  Special opcode 75: advance Address by 10 to 0x520 and Line by 0 to 135
  [0x00000454]  Set column to 2
  [0x00000456]  Set is_stmt to 1
  [0x00000457]  Special opcode 104: advance Address by 14 to 0x52e and Line by 1 to 136
  [0x00000458]  Set column to 9
  [0x0000045a]  Set is_stmt to 0
  [0x0000045b]  Copy (view 1)
  [0x0000045c]  Special opcode 33: advance Address by 4 to 0x532 and Line by 0 to 136
  [0x0000045d]  Special opcode 33: advance Address by 4 to 0x536 and Line by 0 to 136
  [0x0000045e]  Special opcode 19: advance Address by 2 to 0x538 and Line by 0 to 136
  [0x0000045f]  Set column to 53
  [0x00000461]  Extended opcode 4: set Discriminator to 5
  [0x00000465]  Special opcode 18: advance Address by 2 to 0x53a and Line by -1 to 135
  [0x00000466]  Extended opcode 4: set Discriminator to 5
  [0x0000046a]  Special opcode 33: advance Address by 4 to 0x53e and Line by 0 to 135
  [0x0000046b]  Extended opcode 4: set Discriminator to 5
  [0x0000046f]  Special opcode 19: advance Address by 2 to 0x540 and Line by 0 to 135
  [0x00000470]  Extended opcode 4: set Discriminator to 5
  [0x00000474]  Special opcode 33: advance Address by 4 to 0x544 and Line by 0 to 135
  [0x00000475]  Extended opcode 4: set Discriminator to 5
  [0x00000479]  Special opcode 19: advance Address by 2 to 0x546 and Line by 0 to 135
  [0x0000047a]  Set column to 1
  [0x0000047c]  Special opcode 35: advance Address by 4 to 0x54a and Line by 2 to 137
  [0x0000047d]  Advance PC by 10 to 0x554
  [0x0000047f]  Extended opcode 1: End of Sequence

  [0x00000482]  Set column to 39
  [0x00000484]  Extended opcode 2: set Address to 0x554
  [0x0000048b]  Advance Line by 138 to 139
  [0x0000048e]  Copy
  [0x0000048f]  Set column to 2
  [0x00000491]  Special opcode 6: advance Address by 0 to 0x554 and Line by 1 to 140 (view 1)
  [0x00000492]  Set column to 1
  [0x00000494]  Set is_stmt to 0
  [0x00000495]  Special opcode 6: advance Address by 0 to 0x554 and Line by 1 to 141 (view 2)
  [0x00000496]  Special opcode 19: advance Address by 2 to 0x556 and Line by 0 to 141
  [0x00000497]  Advance PC by 2 to 0x558
  [0x00000499]  Extended opcode 1: End of Sequence

  [0x0000049c]  Set column to 37
  [0x0000049e]  Extended opcode 2: set Address to 0x558
  [0x000004a5]  Advance Line by 143 to 144
  [0x000004a8]  Copy
  [0x000004a9]  Set column to 2
  [0x000004ab]  Special opcode 7: advance Address by 0 to 0x558 and Line by 2 to 146 (view 1)
  [0x000004ac]  Set column to 17
  [0x000004ae]  Set is_stmt to 0
  [0x000004af]  Copy (view 2)
  [0x000004b0]  Set column to 4
  [0x000004b2]  Special opcode 19: advance Address by 2 to 0x55a and Line by 0 to 146
  [0x000004b3]  Set column to 2
  [0x000004b5]  Set is_stmt to 1
  [0x000004b6]  Special opcode 63: advance Address by 8 to 0x562 and Line by 2 to 148
  [0x000004b7]  Set column to 19
  [0x000004b9]  Set is_stmt to 0
  [0x000004ba]  Copy (view 1)
  [0x000004bb]  Set column to 4
  [0x000004bd]  Special opcode 19: advance Address by 2 to 0x564 and Line by 0 to 148
  [0x000004be]  Set column to 2
  [0x000004c0]  Set is_stmt to 1
  [0x000004c1]  Special opcode 49: advance Address by 6 to 0x56a and Line by 2 to 150
  [0x000004c2]  Set column to 19
  [0x000004c4]  Set is_stmt to 0
  [0x000004c5]  Copy (view 1)
  [0x000004c6]  Set column to 4
  [0x000004c8]  Special opcode 19: advance Address by 2 to 0x56c and Line by 0 to 150
  [0x000004c9]  Set column to 9
  [0x000004cb]  Special opcode 48: advance Address by 6 to 0x572 and Line by 1 to 151
  [0x000004cc]  Special opcode 19: advance Address by 2 to 0x574 and Line by 0 to 151
  [0x000004cd]  Set column to 51
  [0x000004cf]  Extended opcode 4: set Discriminator to 1
  [0x000004d3]  Special opcode 14: advance Address by 2 to 0x576 and Line by -5 to 146
  [0x000004d4]  Extended opcode 4: set Discriminator to 1
  [0x000004d8]  Special opcode 19: advance Address by 2 to 0x578 and Line by 0 to 146
  [0x000004d9]  Set column to 47
  [0x000004db]  Extended opcode 4: set Discriminator to 1
  [0x000004df]  Special opcode 21: advance Address by 2 to 0x57a and Line by 2 to 148
  [0x000004e0]  Extended opcode 4: set Discriminator to 1
  [0x000004e4]  Special opcode 19: advance Address by 2 to 0x57c and Line by 0 to 148
  [0x000004e5]  Set column to 45
  [0x000004e7]  Extended opcode 4: set Discriminator to 1
  [0x000004eb]  Special opcode 21: advance Address by 2 to 0x57e and Line by 2 to 150
  [0x000004ec]  Set column to 1
  [0x000004ee]  Special opcode 21: advance Address by 2 to 0x580 and Line by 2 to 152
  [0x000004ef]  Advance PC by 2 to 0x582
  [0x000004f1]  Extended opcode 1: End of Sequence

  [0x000004f4]  Set column to 44
  [0x000004f6]  Extended opcode 2: set Address to 0x582
  [0x000004fd]  Advance Line by 154 to 155
  [0x00000500]  Copy
  [0x00000501]  Set is_stmt to 0
  [0x00000502]  Copy (view 1)
  [0x00000503]  Set column to 2
  [0x00000505]  Set is_stmt to 1
  [0x00000506]  Special opcode 20: advance Address by 2 to 0x584 and Line by 1 to 156
  [0x00000507]  Special opcode 7: advance Address by 0 to 0x584 and Line by 2 to 158 (view 1)
  [0x00000508]  Set column to 6
  [0x0000050a]  Copy (view 2)
  [0x0000050b]  Set column to 13
  [0x0000050d]  Set is_stmt to 0
  [0x0000050e]  Copy (view 3)
  [0x0000050f]  Set column to 11
  [0x00000511]  Special opcode 17: advance Address by 2 to 0x586 and Line by -2 to 156
  [0x00000512]  Set column to 2
  [0x00000514]  Special opcode 21: advance Address by 2 to 0x588 and Line by 2 to 158
  [0x00000515]  Set column to 3
  [0x00000517]  Set is_stmt to 1
  [0x00000518]  Special opcode 20: advance Address by 2 to 0x58a and Line by 1 to 159
  [0x00000519]  Set column to 30
  [0x0000051b]  Set is_stmt to 0
  [0x0000051c]  Copy (view 1)
  [0x0000051d]  Set column to 11
  [0x0000051f]  Special opcode 19: advance Address by 2 to 0x58c and Line by 0 to 159
  [0x00000520]  Set column to 3
  [0x00000522]  Set is_stmt to 1
  [0x00000523]  Special opcode 34: advance Address by 4 to 0x590 and Line by 1 to 160
  [0x00000524]  Set column to 11
  [0x00000526]  Set is_stmt to 0
  [0x00000527]  Copy (view 1)
  [0x00000528]  Set column to 3
  [0x0000052a]  Set is_stmt to 1
  [0x0000052b]  Special opcode 48: advance Address by 6 to 0x596 and Line by 1 to 161
  [0x0000052c]  Set column to 27
  [0x0000052e]  Set is_stmt to 0
  [0x0000052f]  Copy (view 1)
  [0x00000530]  Special opcode 33: advance Address by 4 to 0x59a and Line by 0 to 161
  [0x00000531]  Set column to 12
  [0x00000533]  Special opcode 19: advance Address by 2 to 0x59c and Line by 0 to 161
  [0x00000534]  Special opcode 19: advance Address by 2 to 0x59e and Line by 0 to 161
  [0x00000535]  Special opcode 19: advance Address by 2 to 0x5a0 and Line by 0 to 161
  [0x00000536]  Set column to 22
  [0x00000538]  Extended opcode 4: set Discriminator to 1
  [0x0000053c]  Set is_stmt to 1
  [0x0000053d]  Special opcode 2: advance Address by 0 to 0x5a0 and Line by -3 to 158 (view 1)
  [0x0000053e]  Set column to 2
  [0x00000540]  Special opcode 39: advance Address by 4 to 0x5a4 and Line by 6 to 164
  [0x00000541]  Set column to 1
  [0x00000543]  Set is_stmt to 0
  [0x00000544]  Special opcode 6: advance Address by 0 to 0x5a4 and Line by 1 to 165 (view 1)
  [0x00000545]  Advance PC by 2 to 0x5a6
  [0x00000547]  Extended opcode 1: End of Sequence

  [0x0000054a]  Set column to 28
  [0x0000054c]  Extended opcode 2: set Address to 0x5a8
  [0x00000553]  Advance Line by 166 to 167
  [0x00000556]  Copy
  [0x00000557]  Set column to 2
  [0x00000559]  Special opcode 20: advance Address by 2 to 0x5aa and Line by 1 to 168
  [0x0000055a]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 169 (view 1)
  [0x0000055b]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 170 (view 2)
  [0x0000055c]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 171 (view 3)
  [0x0000055d]  Special opcode 6: advance Address by 0 to 0x5aa and Line by 1 to 172 (view 4)
  [0x0000055e]  Special opcode 7: advance Address by 0 to 0x5aa and Line by 2 to 174 (view 5)
  [0x0000055f]  Set column to 7
  [0x00000561]  Set is_stmt to 0
  [0x00000562]  Copy (view 6)
  [0x00000563]  Set column to 4
  [0x00000565]  Set is_stmt to 1
  [0x00000566]  Special opcode 23: advance Address by 2 to 0x5ac and Line by 4 to 178
  [0x00000567]  Special opcode 49: advance Address by 6 to 0x5b2 and Line by 2 to 180
  [0x00000568]  Set is_stmt to 0
  [0x00000569]  Copy (view 1)
  [0x0000056a]  Set column to 2
  [0x0000056c]  Set is_stmt to 1
  [0x0000056d]  Advance Line by 82 to 262
  [0x00000570]  Copy (view 2)
  [0x00000571]  Special opcode 90: advance Address by 12 to 0x5be and Line by 1 to 263
  [0x00000572]  Set column to 15
  [0x00000574]  Set is_stmt to 0
  [0x00000575]  Copy (view 1)
  [0x00000576]  Set column to 2
  [0x00000578]  Set is_stmt to 1
  [0x00000579]  Special opcode 48: advance Address by 6 to 0x5c4 and Line by 1 to 264
  [0x0000057a]  Set column to 16
  [0x0000057c]  Set is_stmt to 0
  [0x0000057d]  Copy (view 1)
  [0x0000057e]  Set column to 2
  [0x00000580]  Set is_stmt to 1
  [0x00000581]  Special opcode 34: advance Address by 4 to 0x5c8 and Line by 1 to 265
  [0x00000582]  Set column to 13
  [0x00000584]  Set is_stmt to 0
  [0x00000585]  Copy (view 1)
  [0x00000586]  Set column to 1
  [0x00000588]  Special opcode 51: advance Address by 6 to 0x5ce and Line by 4 to 269
  [0x00000589]  Set column to 7
  [0x0000058b]  Set is_stmt to 1
  [0x0000058c]  Advance Line by -80 to 189
  [0x0000058f]  Special opcode 19: advance Address by 2 to 0x5d0 and Line by 0 to 189
  [0x00000590]  Set column to 9
  [0x00000592]  Set is_stmt to 0
  [0x00000593]  Copy (view 1)
  [0x00000594]  Set column to 7
  [0x00000596]  Set is_stmt to 1
  [0x00000597]  Special opcode 35: advance Address by 4 to 0x5d4 and Line by 2 to 191
  [0x00000598]  Set column to 29
  [0x0000059a]  Set is_stmt to 0
  [0x0000059b]  Copy (view 1)
  [0x0000059c]  Set column to 6
  [0x0000059e]  Set is_stmt to 1
  [0x0000059f]  Special opcode 34: advance Address by 4 to 0x5d8 and Line by 1 to 192
  [0x000005a0]  Set column to 5
  [0x000005a2]  Advance Line by 12 to 204
  [0x000005a4]  Special opcode 19: advance Address by 2 to 0x5da and Line by 0 to 204
  [0x000005a5]  Set column to 36
  [0x000005a7]  Set is_stmt to 0
  [0x000005a8]  Copy (view 1)
  [0x000005a9]  Set column to 40
  [0x000005ab]  Special opcode 61: advance Address by 8 to 0x5e2 and Line by 0 to 204
  [0x000005ac]  Set column to 5
  [0x000005ae]  Set is_stmt to 1
  [0x000005af]  Special opcode 36: advance Address by 4 to 0x5e6 and Line by 3 to 207
  [0x000005b0]  Set column to 7
  [0x000005b2]  Set is_stmt to 0
  [0x000005b3]  Copy (view 1)
  [0x000005b4]  Set column to 5
  [0x000005b6]  Set is_stmt to 1
  [0x000005b7]  Special opcode 35: advance Address by 4 to 0x5ea and Line by 2 to 209
  [0x000005b8]  Set column to 8
  [0x000005ba]  Set is_stmt to 0
  [0x000005bb]  Copy (view 1)
  [0x000005bc]  Set column to 7
  [0x000005be]  Extended opcode 4: set Discriminator to 1
  [0x000005c2]  Special opcode 47: advance Address by 6 to 0x5f0 and Line by 0 to 209
  [0x000005c3]  Set column to 5
  [0x000005c5]  Set is_stmt to 1
  [0x000005c6]  Special opcode 36: advance Address by 4 to 0x5f4 and Line by 3 to 212
  [0x000005c7]  Set column to 27
  [0x000005c9]  Set is_stmt to 0
  [0x000005ca]  Copy (view 1)
  [0x000005cb]  Set column to 7
  [0x000005cd]  Special opcode 33: advance Address by 4 to 0x5f8 and Line by 0 to 212
  [0x000005ce]  Set column to 5
  [0x000005d0]  Set is_stmt to 1
  [0x000005d1]  Special opcode 39: advance Address by 4 to 0x5fc and Line by 6 to 218
  [0x000005d2]  Set column to 18
  [0x000005d4]  Set is_stmt to 0
  [0x000005d5]  Copy (view 1)
  [0x000005d6]  Set column to 5
  [0x000005d8]  Set is_stmt to 1
  [0x000005d9]  Special opcode 48: advance Address by 6 to 0x602 and Line by 1 to 219
  [0x000005da]  Set column to 19
  [0x000005dc]  Set is_stmt to 0
  [0x000005dd]  Copy (view 1)
  [0x000005de]  Set column to 5
  [0x000005e0]  Set is_stmt to 1
  [0x000005e1]  Special opcode 34: advance Address by 4 to 0x606 and Line by 1 to 220
  [0x000005e2]  Set column to 16
  [0x000005e4]  Set is_stmt to 0
  [0x000005e5]  Copy (view 1)
  [0x000005e6]  Set column to 14
  [0x000005e8]  Extended opcode 4: set Discriminator to 1
  [0x000005ec]  Special opcode 47: advance Address by 6 to 0x60c and Line by 0 to 220
  [0x000005ed]  Set column to 5
  [0x000005ef]  Set is_stmt to 1
  [0x000005f0]  Special opcode 34: advance Address by 4 to 0x610 and Line by 1 to 221
  [0x000005f1]  Set column to 16
  [0x000005f3]  Set is_stmt to 0
  [0x000005f4]  Copy (view 1)
  [0x000005f5]  Set column to 6
  [0x000005f7]  Set is_stmt to 1
  [0x000005f8]  Special opcode 48: advance Address by 6 to 0x616 and Line by 1 to 222
  [0x000005f9]  Set is_stmt to 0
  [0x000005fa]  Copy (view 1)
  [0x000005fb]  Set column to 8
  [0x000005fd]  Set is_stmt to 1
  [0x000005fe]  Advance Line by -48 to 174
  [0x00000600]  Copy (view 2)
  [0x00000601]  Extended opcode 4: set Discriminator to 1
  [0x00000605]  Set is_stmt to 0
  [0x00000606]  Special opcode 89: advance Address by 12 to 0x622 and Line by 0 to 174
  [0x00000607]  Set column to 3
  [0x00000609]  Set is_stmt to 1
  [0x0000060a]  Special opcode 34: advance Address by 4 to 0x626 and Line by 1 to 175
  [0x0000060b]  Set column to 22
  [0x0000060d]  Set is_stmt to 0
  [0x0000060e]  Copy (view 1)
  [0x0000060f]  Set column to 11
  [0x00000611]  Extended opcode 4: set Discriminator to 1
  [0x00000615]  Special opcode 103: advance Address by 14 to 0x634 and Line by 0 to 175
  [0x00000616]  Set column to 3
  [0x00000618]  Set is_stmt to 1
  [0x00000619]  Special opcode 20: advance Address by 2 to 0x636 and Line by 1 to 176
  [0x0000061a]  Set column to 6
  [0x0000061c]  Set is_stmt to 0
  [0x0000061d]  Copy (view 1)
  [0x0000061e]  Set column to 5
  [0x00000620]  Extended opcode 4: set Discriminator to 1
  [0x00000624]  Special opcode 61: advance Address by 8 to 0x63e and Line by 0 to 176
  [0x00000625]  Set column to 3
  [0x00000627]  Set is_stmt to 1
  [0x00000628]  Special opcode 40: advance Address by 4 to 0x642 and Line by 7 to 183
  [0x00000629]  Set column to 5
  [0x0000062b]  Special opcode 121: advance Address by 16 to 0x652 and Line by 4 to 187
  [0x0000062c]  Set column to 24
  [0x0000062e]  Set is_stmt to 0
  [0x0000062f]  Copy (view 1)
  [0x00000630]  Set column to 7
  [0x00000632]  Set is_stmt to 1
  [0x00000633]  Special opcode 125: advance Address by 16 to 0x662 and Line by 8 to 195
  [0x00000634]  Set column to 9
  [0x00000636]  Set is_stmt to 0
  [0x00000637]  Copy (view 1)
  [0x00000638]  Set column to 7
  [0x0000063a]  Set is_stmt to 1
  [0x0000063b]  Special opcode 34: advance Address by 4 to 0x666 and Line by 1 to 196
  [0x0000063c]  Set column to 29
  [0x0000063e]  Set is_stmt to 0
  [0x0000063f]  Copy (view 1)
  [0x00000640]  Set column to 7
  [0x00000642]  Set is_stmt to 1
  [0x00000643]  Special opcode 34: advance Address by 4 to 0x66a and Line by 1 to 197
  [0x00000644]  Set column to 18
  [0x00000646]  Set is_stmt to 0
  [0x00000647]  Copy (view 1)
  [0x00000648]  Set column to 6
  [0x0000064a]  Set is_stmt to 1
  [0x0000064b]  Special opcode 49: advance Address by 6 to 0x670 and Line by 2 to 199
  [0x0000064c]  Advance Line by 14 to 213
  [0x0000064e]  Special opcode 19: advance Address by 2 to 0x672 and Line by 0 to 213
  [0x0000064f]  Special opcode 34: advance Address by 4 to 0x676 and Line by 1 to 214
  [0x00000650]  Set column to 5
  [0x00000652]  Advance Line by 11 to 225
  [0x00000654]  Special opcode 19: advance Address by 2 to 0x678 and Line by 0 to 225
  [0x00000655]  Special opcode 7: advance Address by 0 to 0x678 and Line by 2 to 227 (view 1)
  [0x00000656]  Set column to 7
  [0x00000658]  Special opcode 96: advance Address by 12 to 0x684 and Line by 7 to 234
  [0x00000659]  Set column to 20
  [0x0000065b]  Set is_stmt to 0
  [0x0000065c]  Copy (view 1)
  [0x0000065d]  Set column to 7
  [0x0000065f]  Set is_stmt to 1
  [0x00000660]  Special opcode 48: advance Address by 6 to 0x68a and Line by 1 to 235
  [0x00000661]  Set column to 12
  [0x00000663]  Set is_stmt to 0
  [0x00000664]  Copy (view 1)
  [0x00000665]  Set column to 7
  [0x00000667]  Set is_stmt to 1
  [0x00000668]  Special opcode 34: advance Address by 4 to 0x68e and Line by 1 to 236
  [0x00000669]  Set column to 43
  [0x0000066b]  Set is_stmt to 0
  [0x0000066c]  Copy (view 1)
  [0x0000066d]  Set column to 16
  [0x0000066f]  Special opcode 61: advance Address by 8 to 0x696 and Line by 0 to 236
  [0x00000670]  Set column to 7
  [0x00000672]  Set is_stmt to 1
  [0x00000673]  Special opcode 20: advance Address by 2 to 0x698 and Line by 1 to 237
  [0x00000674]  Set column to 16
  [0x00000676]  Set is_stmt to 0
  [0x00000677]  Copy (view 1)
  [0x00000678]  Set column to 7
  [0x0000067a]  Set is_stmt to 1
  [0x0000067b]  Special opcode 76: advance Address by 10 to 0x6a2 and Line by 1 to 238
  [0x0000067c]  Set column to 9
  [0x0000067e]  Set is_stmt to 0
  [0x0000067f]  Copy (view 1)
  [0x00000680]  Set column to 7
  [0x00000682]  Set is_stmt to 1
  [0x00000683]  Special opcode 48: advance Address by 6 to 0x6a8 and Line by 1 to 239
  [0x00000684]  Set column to 57
  [0x00000686]  Set is_stmt to 0
  [0x00000687]  Copy (view 1)
  [0x00000688]  Set column to 93
  [0x0000068a]  Special opcode 33: advance Address by 4 to 0x6ac and Line by 0 to 239
  [0x0000068b]  Set column to 24
  [0x0000068d]  Special opcode 19: advance Address by 2 to 0x6ae and Line by 0 to 239
  [0x0000068e]  Special opcode 19: advance Address by 2 to 0x6b0 and Line by 0 to 239
  [0x0000068f]  Set column to 7
  [0x00000691]  Set is_stmt to 1
  [0x00000692]  Special opcode 106: advance Address by 14 to 0x6be and Line by 3 to 242
  [0x00000693]  Set column to 22
  [0x00000695]  Set is_stmt to 0
  [0x00000696]  Copy (view 1)
  [0x00000697]  Set column to 7
  [0x00000699]  Set is_stmt to 1
  [0x0000069a]  Special opcode 50: advance Address by 6 to 0x6c4 and Line by 3 to 245
  [0x0000069b]  Set column to 9
  [0x0000069d]  Set is_stmt to 0
  [0x0000069e]  Copy (view 1)
  [0x0000069f]  Set column to 15
  [0x000006a1]  Extended opcode 4: set Discriminator to 1
  [0x000006a5]  Set is_stmt to 1
  [0x000006a6]  Special opcode 19: advance Address by 2 to 0x6c6 and Line by 0 to 245
  [0x000006a7]  Set column to 31
  [0x000006a9]  Extended opcode 4: set Discriminator to 1
  [0x000006ad]  Set is_stmt to 0
  [0x000006ae]  Copy (view 1)
  [0x000006af]  Set column to 7
  [0x000006b1]  Set is_stmt to 1
  [0x000006b2]  Special opcode 50: advance Address by 6 to 0x6cc and Line by 3 to 248
  [0x000006b3]  Set column to 10
  [0x000006b5]  Set is_stmt to 0
  [0x000006b6]  Copy (view 1)
  [0x000006b7]  Set column to 9
  [0x000006b9]  Special opcode 47: advance Address by 6 to 0x6d2 and Line by 0 to 248
  [0x000006ba]  Set column to 48
  [0x000006bc]  Special opcode 19: advance Address by 2 to 0x6d4 and Line by 0 to 248
  [0x000006bd]  Set column to 9
  [0x000006bf]  Special opcode 33: advance Address by 4 to 0x6d8 and Line by 0 to 248
  [0x000006c0]  Set column to 8
  [0x000006c2]  Set is_stmt to 1
  [0x000006c3]  Special opcode 34: advance Address by 4 to 0x6dc and Line by 1 to 249
  [0x000006c4]  Set column to 42
  [0x000006c6]  Set is_stmt to 0
  [0x000006c7]  Copy (view 1)
  [0x000006c8]  Set column to 10
  [0x000006ca]  Special opcode 33: advance Address by 4 to 0x6e0 and Line by 0 to 249
  [0x000006cb]  Set column to 53
  [0x000006cd]  Extended opcode 4: set Discriminator to 1
  [0x000006d1]  Set is_stmt to 1
  [0x000006d2]  Special opcode 47: advance Address by 6 to 0x6e6 and Line by 0 to 249
  [0x000006d3]  Set column to 8
  [0x000006d5]  Special opcode 48: advance Address by 6 to 0x6ec and Line by 1 to 250
  [0x000006d6]  Set column to 7
  [0x000006d8]  Advance Line by -21 to 229
  [0x000006da]  Special opcode 19: advance Address by 2 to 0x6ee and Line by 0 to 229
  [0x000006db]  Set column to 11
  [0x000006dd]  Set is_stmt to 0
  [0x000006de]  Copy (view 1)
  [0x000006df]  Set column to 7
  [0x000006e1]  Set is_stmt to 1
  [0x000006e2]  Special opcode 34: advance Address by 4 to 0x6f2 and Line by 1 to 230
  [0x000006e3]  Set column to 20
  [0x000006e5]  Set is_stmt to 0
  [0x000006e6]  Copy (view 1)
  [0x000006e7]  Set column to 6
  [0x000006e9]  Set is_stmt to 1
  [0x000006ea]  Special opcode 48: advance Address by 6 to 0x6f8 and Line by 1 to 231
  [0x000006eb]  Advance PC by 48 to 0x728
  [0x000006ed]  Extended opcode 1: End of Sequence


  Offset:                      0x6f0
  Length:                      249
  DWARF Version:               3
  Prologue Length:             159
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x70b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x752):
  Entry	Dir	Time	Size	Name
  1	1	0	0	main.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x00000799]  Set column to 17
  [0x0000079b]  Extended opcode 2: set Address to 0x728
  [0x000007a2]  Advance Line by 19 to 20
  [0x000007a4]  Copy
  [0x000007a5]  Set column to 2
  [0x000007a7]  Special opcode 20: advance Address by 2 to 0x72a and Line by 1 to 21
  [0x000007a8]  Special opcode 90: advance Address by 12 to 0x736 and Line by 1 to 22
  [0x000007a9]  Special opcode 34: advance Address by 4 to 0x73a and Line by 1 to 23
  [0x000007aa]  Special opcode 34: advance Address by 4 to 0x73e and Line by 1 to 24
  [0x000007ab]  Special opcode 48: advance Address by 6 to 0x744 and Line by 1 to 25
  [0x000007ac]  Special opcode 34: advance Address by 4 to 0x748 and Line by 1 to 26
  [0x000007ad]  Special opcode 48: advance Address by 6 to 0x74e and Line by 1 to 27
  [0x000007ae]  Special opcode 34: advance Address by 4 to 0x752 and Line by 1 to 28
  [0x000007af]  Special opcode 48: advance Address by 6 to 0x758 and Line by 1 to 29
  [0x000007b0]  Special opcode 90: advance Address by 12 to 0x764 and Line by 1 to 30
  [0x000007b1]  Special opcode 34: advance Address by 4 to 0x768 and Line by 1 to 31
  [0x000007b2]  Special opcode 90: advance Address by 12 to 0x774 and Line by 1 to 32
  [0x000007b3]  Special opcode 76: advance Address by 10 to 0x77e and Line by 1 to 33
  [0x000007b4]  Special opcode 76: advance Address by 10 to 0x788 and Line by 1 to 34
  [0x000007b5]  Special opcode 76: advance Address by 10 to 0x792 and Line by 1 to 35
  [0x000007b6]  Special opcode 76: advance Address by 10 to 0x79c and Line by 1 to 36
  [0x000007b7]  Special opcode 76: advance Address by 10 to 0x7a6 and Line by 1 to 37
  [0x000007b8]  Special opcode 76: advance Address by 10 to 0x7b0 and Line by 1 to 38
  [0x000007b9]  Special opcode 76: advance Address by 10 to 0x7ba and Line by 1 to 39
  [0x000007ba]  Special opcode 34: advance Address by 4 to 0x7be and Line by 1 to 40
  [0x000007bb]  Special opcode 76: advance Address by 10 to 0x7c8 and Line by 1 to 41
  [0x000007bc]  Special opcode 48: advance Address by 6 to 0x7ce and Line by 1 to 42
  [0x000007bd]  Special opcode 34: advance Address by 4 to 0x7d2 and Line by 1 to 43
  [0x000007be]  Special opcode 48: advance Address by 6 to 0x7d8 and Line by 1 to 44
  [0x000007bf]  Set column to 6
  [0x000007c1]  Set is_stmt to 0
  [0x000007c2]  Copy (view 1)
  [0x000007c3]  Set column to 2
  [0x000007c5]  Set is_stmt to 1
  [0x000007c6]  Special opcode 20: advance Address by 2 to 0x7da and Line by 1 to 45
  [0x000007c7]  Set column to 3
  [0x000007c9]  Special opcode 8: advance Address by 0 to 0x7da and Line by 3 to 48 (view 1)
  [0x000007ca]  Special opcode 104: advance Address by 14 to 0x7e8 and Line by 1 to 49
  [0x000007cb]  Extended opcode 4: set Discriminator to 1
  [0x000007cf]  Special opcode 34: advance Address by 4 to 0x7ec and Line by 1 to 50
  [0x000007d0]  Set column to 9
  [0x000007d2]  Extended opcode 4: set Discriminator to 1
  [0x000007d6]  Set is_stmt to 0
  [0x000007d7]  Copy (view 1)
  [0x000007d8]  Set column to 5
  [0x000007da]  Extended opcode 4: set Discriminator to 1
  [0x000007de]  Special opcode 19: advance Address by 2 to 0x7ee and Line by 0 to 50
  [0x000007df]  Extended opcode 4: set Discriminator to 1
  [0x000007e3]  Special opcode 75: advance Address by 10 to 0x7f8 and Line by 0 to 50
  [0x000007e4]  Set column to 7
  [0x000007e6]  Set is_stmt to 1
  [0x000007e7]  Special opcode 84: advance Address by 12 to 0x804 and Line by -5 to 45
  [0x000007e8]  Advance PC by 48 to 0x834
  [0x000007ea]  Extended opcode 1: End of Sequence


  Offset:                      0x7ed
  Length:                      496
  DWARF Version:               3
  Prologue Length:             146
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x808):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x84f):
  Entry	Dir	Time	Size	Name
  1	1	0	0	timers.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	timers.h

 Line Number Statements:
  [0x00000889]  Set column to 35
  [0x0000088b]  Extended opcode 2: set Address to 0x834
  [0x00000892]  Advance Line by 15 to 16
  [0x00000894]  Copy
  [0x00000895]  Set column to 2
  [0x00000897]  Special opcode 21: advance Address by 2 to 0x836 and Line by 2 to 18
  [0x00000898]  Set column to 21
  [0x0000089a]  Set is_stmt to 0
  [0x0000089b]  Special opcode 47: advance Address by 6 to 0x83c and Line by 0 to 18
  [0x0000089c]  Set column to 2
  [0x0000089e]  Set is_stmt to 1
  [0x0000089f]  Special opcode 63: advance Address by 8 to 0x844 and Line by 2 to 20
  [0x000008a0]  Set column to 53
  [0x000008a2]  Extended opcode 4: set Discriminator to 1
  [0x000008a6]  Copy (view 1)
  [0x000008a7]  Set column to 9
  [0x000008a9]  Extended opcode 4: set Discriminator to 1
  [0x000008ad]  Copy (view 2)
  [0x000008ae]  Set column to 11
  [0x000008b0]  Extended opcode 4: set Discriminator to 1
  [0x000008b4]  Set is_stmt to 0
  [0x000008b5]  Copy (view 3)
  [0x000008b6]  Set column to 9
  [0x000008b8]  Extended opcode 4: set Discriminator to 1
  [0x000008bc]  Special opcode 47: advance Address by 6 to 0x84a and Line by 0 to 20
  [0x000008bd]  Set column to 2
  [0x000008bf]  Set is_stmt to 1
  [0x000008c0]  Special opcode 49: advance Address by 6 to 0x850 and Line by 2 to 22
  [0x000008c1]  Set column to 15
  [0x000008c3]  Set is_stmt to 0
  [0x000008c4]  Special opcode 33: advance Address by 4 to 0x854 and Line by 0 to 22
  [0x000008c5]  Set column to 2
  [0x000008c7]  Set is_stmt to 1
  [0x000008c8]  Special opcode 48: advance Address by 6 to 0x85a and Line by 1 to 23
  [0x000008c9]  Set column to 15
  [0x000008cb]  Set is_stmt to 0
  [0x000008cc]  Special opcode 19: advance Address by 2 to 0x85c and Line by 0 to 23
  [0x000008cd]  Set column to 2
  [0x000008cf]  Set is_stmt to 1
  [0x000008d0]  Special opcode 48: advance Address by 6 to 0x862 and Line by 1 to 24
  [0x000008d1]  Set column to 15
  [0x000008d3]  Set is_stmt to 0
  [0x000008d4]  Copy (view 1)
  [0x000008d5]  Set column to 2
  [0x000008d7]  Set is_stmt to 1
  [0x000008d8]  Special opcode 34: advance Address by 4 to 0x866 and Line by 1 to 25
  [0x000008d9]  Set column to 16
  [0x000008db]  Set is_stmt to 0
  [0x000008dc]  Special opcode 19: advance Address by 2 to 0x868 and Line by 0 to 25
  [0x000008dd]  Set column to 2
  [0x000008df]  Set is_stmt to 1
  [0x000008e0]  Special opcode 48: advance Address by 6 to 0x86e and Line by 1 to 26
  [0x000008e1]  Set column to 19
  [0x000008e3]  Set is_stmt to 0
  [0x000008e4]  Copy (view 1)
  [0x000008e5]  Extended opcode 4: set Discriminator to 1
  [0x000008e9]  Special opcode 75: advance Address by 10 to 0x878 and Line by 0 to 26
  [0x000008ea]  Set column to 31
  [0x000008ec]  Extended opcode 4: set Discriminator to 1
  [0x000008f0]  Special opcode 19: advance Address by 2 to 0x87a and Line by 0 to 26
  [0x000008f1]  Set column to 17
  [0x000008f3]  Extended opcode 4: set Discriminator to 1
  [0x000008f7]  Special opcode 19: advance Address by 2 to 0x87c and Line by 0 to 26
  [0x000008f8]  Set column to 2
  [0x000008fa]  Set is_stmt to 1
  [0x000008fb]  Special opcode 20: advance Address by 2 to 0x87e and Line by 1 to 27
  [0x000008fc]  Set column to 16
  [0x000008fe]  Set is_stmt to 0
  [0x000008ff]  Copy (view 1)
  [0x00000900]  Set column to 2
  [0x00000902]  Set is_stmt to 1
  [0x00000903]  Special opcode 20: advance Address by 2 to 0x880 and Line by 1 to 28
  [0x00000904]  Set column to 15
  [0x00000906]  Set is_stmt to 0
  [0x00000907]  Special opcode 19: advance Address by 2 to 0x882 and Line by 0 to 28
  [0x00000908]  Set column to 2
  [0x0000090a]  Set is_stmt to 1
  [0x0000090b]  Special opcode 48: advance Address by 6 to 0x888 and Line by 1 to 29
  [0x0000090c]  Set column to 15
  [0x0000090e]  Set is_stmt to 0
  [0x0000090f]  Special opcode 19: advance Address by 2 to 0x88a and Line by 0 to 29
  [0x00000910]  Set column to 2
  [0x00000912]  Set is_stmt to 1
  [0x00000913]  Special opcode 48: advance Address by 6 to 0x890 and Line by 1 to 30
  [0x00000914]  Set column to 13
  [0x00000916]  Set is_stmt to 0
  [0x00000917]  Copy (view 1)
  [0x00000918]  Set column to 2
  [0x0000091a]  Set is_stmt to 1
  [0x0000091b]  Special opcode 90: advance Address by 12 to 0x89c and Line by 1 to 31
  [0x0000091c]  Set column to 15
  [0x0000091e]  Set is_stmt to 0
  [0x0000091f]  Special opcode 19: advance Address by 2 to 0x89e and Line by 0 to 31
  [0x00000920]  Set column to 1
  [0x00000922]  Special opcode 48: advance Address by 6 to 0x8a4 and Line by 1 to 32
  [0x00000923]  Advance PC by 12 to 0x8b0
  [0x00000925]  Extended opcode 1: End of Sequence

  [0x00000928]  Set column to 27
  [0x0000092a]  Extended opcode 2: set Address to 0x8b0
  [0x00000931]  Advance Line by 33 to 34
  [0x00000933]  Copy
  [0x00000934]  Set column to 2
  [0x00000936]  Special opcode 20: advance Address by 2 to 0x8b2 and Line by 1 to 35
  [0x00000937]  Special opcode 6: advance Address by 0 to 0x8b2 and Line by 1 to 36 (view 1)
  [0x00000938]  Special opcode 7: advance Address by 0 to 0x8b2 and Line by 2 to 38 (view 2)
  [0x00000939]  Set column to 15
  [0x0000093b]  Set is_stmt to 0
  [0x0000093c]  Special opcode 33: advance Address by 4 to 0x8b6 and Line by 0 to 38
  [0x0000093d]  Set column to 2
  [0x0000093f]  Set is_stmt to 1
  [0x00000940]  Special opcode 48: advance Address by 6 to 0x8bc and Line by 1 to 39
  [0x00000941]  Set column to 15
  [0x00000943]  Set is_stmt to 0
  [0x00000944]  Special opcode 19: advance Address by 2 to 0x8be and Line by 0 to 39
  [0x00000945]  Set column to 2
  [0x00000947]  Set is_stmt to 1
  [0x00000948]  Special opcode 49: advance Address by 6 to 0x8c4 and Line by 2 to 41
  [0x00000949]  Set column to 23
  [0x0000094b]  Set is_stmt to 0
  [0x0000094c]  Copy (view 1)
  [0x0000094d]  Set column to 2
  [0x0000094f]  Set is_stmt to 1
  [0x00000950]  Special opcode 120: advance Address by 16 to 0x8d4 and Line by 3 to 44
  [0x00000951]  Set column to 5
  [0x00000953]  Set is_stmt to 0
  [0x00000954]  Copy (view 1)
  [0x00000955]  Set column to 4
  [0x00000957]  Special opcode 61: advance Address by 8 to 0x8dc and Line by 0 to 44
  [0x00000958]  Set column to 2
  [0x0000095a]  Set is_stmt to 1
  [0x0000095b]  Special opcode 52: advance Address by 6 to 0x8e2 and Line by 5 to 49
  [0x0000095c]  Set column to 15
  [0x0000095e]  Set is_stmt to 0
  [0x0000095f]  Special opcode 33: advance Address by 4 to 0x8e6 and Line by 0 to 49
  [0x00000960]  Set column to 1
  [0x00000962]  Special opcode 48: advance Address by 6 to 0x8ec and Line by 1 to 50
  [0x00000963]  Set column to 3
  [0x00000965]  Set is_stmt to 1
  [0x00000966]  Special opcode 42: advance Address by 6 to 0x8f2 and Line by -5 to 45
  [0x00000967]  Set column to 17
  [0x00000969]  Set is_stmt to 0
  [0x0000096a]  Copy (view 1)
  [0x0000096b]  Set column to 3
  [0x0000096d]  Set is_stmt to 1
  [0x0000096e]  Special opcode 62: advance Address by 8 to 0x8fa and Line by 1 to 46
  [0x0000096f]  Set column to 18
  [0x00000971]  Set is_stmt to 0
  [0x00000972]  Copy (view 1)
  [0x00000973]  Advance PC by 26 to 0x914
  [0x00000975]  Extended opcode 1: End of Sequence

  [0x00000978]  Set column to 34
  [0x0000097a]  Extended opcode 2: set Address to 0
  [0x00000981]  Advance Line by 51 to 52
  [0x00000983]  Copy
  [0x00000984]  Set column to 3
  [0x00000986]  Special opcode 39: advance Address by 4 to 0x4 and Line by 6 to 58
  [0x00000987]  Set column to 22
  [0x00000989]  Set is_stmt to 0
  [0x0000098a]  Copy (view 1)
  [0x0000098b]  Set column to 3
  [0x0000098d]  Set is_stmt to 1
  [0x0000098e]  Special opcode 48: advance Address by 6 to 0xa and Line by 1 to 59
  [0x0000098f]  Set column to 16
  [0x00000991]  Set is_stmt to 0
  [0x00000992]  Copy (view 1)
  [0x00000993]  Set column to 31
  [0x00000995]  Extended opcode 4: set Discriminator to 1
  [0x00000999]  Special opcode 75: advance Address by 10 to 0x14 and Line by 0 to 59
  [0x0000099a]  Set column to 14
  [0x0000099c]  Extended opcode 4: set Discriminator to 1
  [0x000009a0]  Special opcode 33: advance Address by 4 to 0x18 and Line by 0 to 59
  [0x000009a1]  Set column to 11
  [0x000009a3]  Set is_stmt to 1
  [0x000009a4]  Special opcode 35: advance Address by 4 to 0x1c and Line by 2 to 61
  [0x000009a5]  Set column to 2
  [0x000009a7]  Advance Line by -8 to 53
  [0x000009a9]  Special opcode 61: advance Address by 8 to 0x24 and Line by 0 to 53
  [0x000009aa]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 54 (view 1)
  [0x000009ab]  Special opcode 7: advance Address by 0 to 0x24 and Line by 2 to 56 (view 2)
  [0x000009ac]  Set column to 3
  [0x000009ae]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 57 (view 3)
  [0x000009af]  Set column to 6
  [0x000009b1]  Set is_stmt to 0
  [0x000009b2]  Copy (view 4)
  [0x000009b3]  Set column to 5
  [0x000009b5]  Special opcode 33: advance Address by 4 to 0x28 and Line by 0 to 57
  [0x000009b6]  Set column to 28
  [0x000009b8]  Extended opcode 4: set Discriminator to 1
  [0x000009bc]  Set is_stmt to 1
  [0x000009bd]  Special opcode 47: advance Address by 6 to 0x2e and Line by 0 to 57
  [0x000009be]  Set column to 2
  [0x000009c0]  Special opcode 53: advance Address by 6 to 0x34 and Line by 6 to 63
  [0x000009c1]  Set column to 10
  [0x000009c3]  Set is_stmt to 0
  [0x000009c4]  Copy (view 1)
  [0x000009c5]  Extended opcode 4: set Discriminator to 1
  [0x000009c9]  Special opcode 75: advance Address by 10 to 0x3e and Line by 0 to 63
  [0x000009ca]  Set column to 23
  [0x000009cc]  Extended opcode 4: set Discriminator to 1
  [0x000009d0]  Special opcode 19: advance Address by 2 to 0x40 and Line by 0 to 63
  [0x000009d1]  Set column to 45
  [0x000009d3]  Extended opcode 4: set Discriminator to 1
  [0x000009d7]  Special opcode 61: advance Address by 8 to 0x48 and Line by 0 to 63
  [0x000009d8]  Set column to 1
  [0x000009da]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 64
  [0x000009db]  Special opcode 47: advance Address by 6 to 0x50 and Line by 0 to 64
  [0x000009dc]  Advance PC by 8 to 0x58
  [0x000009de]  Extended opcode 1: End of Sequence


  Offset:                      0x9e1
  Length:                      1057
  DWARF Version:               3
  Prologue Length:             206
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x9fc):
  1	src
  2	/usr/lib/gcc/arm-none-eabi/13.2.0/include
  3	/usr/arm-none-eabi/include/machine
  4	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0xa6d):
  Entry	Dir	Time	Size	Name
  1	1	0	0	uart_print.c
  2	2	0	0	stdarg.h
  3	3	0	0	_default_types.h
  4	4	0	0	_stdint.h
  5	0	0	0	<built-in>

 Line Number Statements:
  [0x00000ab9]  Set column to 30
  [0x00000abb]  Extended opcode 2: set Address to 0x914
  [0x00000ac2]  Advance Line by 14 to 15
  [0x00000ac4]  Copy
  [0x00000ac5]  Set column to 2
  [0x00000ac7]  Special opcode 20: advance Address by 2 to 0x916 and Line by 1 to 16
  [0x00000ac8]  Special opcode 90: advance Address by 12 to 0x922 and Line by 1 to 17
  [0x00000ac9]  Special opcode 62: advance Address by 8 to 0x92a and Line by 1 to 18
  [0x00000aca]  Set column to 57
  [0x00000acc]  Extended opcode 4: set Discriminator to 1
  [0x00000ad0]  Copy (view 1)
  [0x00000ad1]  Set column to 8
  [0x00000ad3]  Extended opcode 4: set Discriminator to 1
  [0x00000ad7]  Copy (view 2)
  [0x00000ad8]  Set column to 9
  [0x00000ada]  Extended opcode 4: set Discriminator to 1
  [0x00000ade]  Set is_stmt to 0
  [0x00000adf]  Copy (view 3)
  [0x00000ae0]  Set column to 8
  [0x00000ae2]  Extended opcode 4: set Discriminator to 1
  [0x00000ae6]  Special opcode 103: advance Address by 14 to 0x938 and Line by 0 to 18
  [0x00000ae7]  Set column to 58
  [0x00000ae9]  Extended opcode 4: set Discriminator to 2
  [0x00000aed]  Set is_stmt to 1
  [0x00000aee]  Special opcode 33: advance Address by 4 to 0x93c and Line by 0 to 18
  [0x00000aef]  Set column to 2
  [0x00000af1]  Special opcode 7: advance Address by 0 to 0x93c and Line by 2 to 20 (view 1)
  [0x00000af2]  Special opcode 146: advance Address by 20 to 0x950 and Line by 1 to 21
  [0x00000af3]  Special opcode 104: advance Address by 14 to 0x95e and Line by 1 to 22
  [0x00000af4]  Special opcode 90: advance Address by 12 to 0x96a and Line by 1 to 23
  [0x00000af5]  Set column to 38
  [0x00000af7]  Set is_stmt to 0
  [0x00000af8]  Special opcode 33: advance Address by 4 to 0x96e and Line by 0 to 23
  [0x00000af9]  Set column to 2
  [0x00000afb]  Special opcode 33: advance Address by 4 to 0x972 and Line by 0 to 23
  [0x00000afc]  Extended opcode 4: set Discriminator to 1
  [0x00000b00]  Special opcode 33: advance Address by 4 to 0x976 and Line by 0 to 23
  [0x00000b01]  Set column to 1
  [0x00000b03]  Special opcode 63: advance Address by 8 to 0x97e and Line by 2 to 25
  [0x00000b04]  Advance PC by 18 to 0x990
  [0x00000b06]  Extended opcode 1: End of Sequence

  [0x00000b09]  Set column to 22
  [0x00000b0b]  Extended opcode 2: set Address to 0x990
  [0x00000b12]  Advance Line by 26 to 27
  [0x00000b14]  Copy
  [0x00000b15]  Set is_stmt to 0
  [0x00000b16]  Copy (view 1)
  [0x00000b17]  Set column to 2
  [0x00000b19]  Set is_stmt to 1
  [0x00000b1a]  Special opcode 34: advance Address by 4 to 0x994 and Line by 1 to 28
  [0x00000b1b]  Special opcode 6: advance Address by 0 to 0x994 and Line by 1 to 29 (view 1)
  [0x00000b1c]  Set is_stmt to 0
  [0x00000b1d]  Special opcode 75: advance Address by 10 to 0x99e and Line by 0 to 29
  [0x00000b1e]  Set is_stmt to 1
  [0x00000b1f]  Special opcode 20: advance Address by 2 to 0x9a0 and Line by 1 to 30
  [0x00000b20]  Set column to 35
  [0x00000b22]  Extended opcode 4: set Discriminator to 1
  [0x00000b26]  Copy (view 1)
  [0x00000b27]  Set column to 8
  [0x00000b29]  Extended opcode 4: set Discriminator to 1
  [0x00000b2d]  Copy (view 2)
  [0x00000b2e]  Set column to 36
  [0x00000b30]  Extended opcode 4: set Discriminator to 2
  [0x00000b34]  Special opcode 117: advance Address by 16 to 0x9b0 and Line by 0 to 30
  [0x00000b35]  Set column to 2
  [0x00000b37]  Special opcode 8: advance Address by 0 to 0x9b0 and Line by 3 to 33 (view 1)
  [0x00000b38]  Set column to 5
  [0x00000b3a]  Set is_stmt to 0
  [0x00000b3b]  Copy (view 2)
  [0x00000b3c]  Set column to 4
  [0x00000b3e]  Special opcode 47: advance Address by 6 to 0x9b6 and Line by 0 to 33
  [0x00000b3f]  Set column to 3
  [0x00000b41]  Set is_stmt to 1
  [0x00000b42]  Special opcode 48: advance Address by 6 to 0x9bc and Line by 1 to 34
  [0x00000b43]  Set column to 23
  [0x00000b45]  Set is_stmt to 0
  [0x00000b46]  Copy (view 1)
  [0x00000b47]  Set column to 3
  [0x00000b49]  Set is_stmt to 1
  [0x00000b4a]  Special opcode 35: advance Address by 4 to 0x9c0 and Line by 2 to 36
  [0x00000b4b]  Set column to 7
  [0x00000b4d]  Copy (view 1)
  [0x00000b4e]  Set column to 3
  [0x00000b50]  Set is_stmt to 0
  [0x00000b51]  Copy (view 2)
  [0x00000b52]  Set column to 4
  [0x00000b54]  Set is_stmt to 1
  [0x00000b55]  Special opcode 20: advance Address by 2 to 0x9c2 and Line by 1 to 37
  [0x00000b56]  Set column to 28
  [0x00000b58]  Extended opcode 4: set Discriminator to 3
  [0x00000b5c]  Special opcode 18: advance Address by 2 to 0x9c4 and Line by -1 to 36
  [0x00000b5d]  Set column to 20
  [0x00000b5f]  Extended opcode 4: set Discriminator to 1
  [0x00000b63]  Special opcode 19: advance Address by 2 to 0x9c6 and Line by 0 to 36
  [0x00000b64]  Extended opcode 4: set Discriminator to 1
  [0x00000b68]  Set is_stmt to 0
  [0x00000b69]  Special opcode 47: advance Address by 6 to 0x9cc and Line by 0 to 36
  [0x00000b6a]  Set column to 1
  [0x00000b6c]  Special opcode 9: advance Address by 0 to 0x9cc and Line by 4 to 40 (view 1)
  [0x00000b6d]  Advance PC by 12 to 0x9d8
  [0x00000b6f]  Extended opcode 1: End of Sequence

  [0x00000b72]  Set column to 43
  [0x00000b74]  Extended opcode 2: set Address to 0x9d8
  [0x00000b7b]  Advance Line by 41 to 42
  [0x00000b7d]  Copy
  [0x00000b7e]  Set is_stmt to 0
  [0x00000b7f]  Copy (view 1)
  [0x00000b80]  Set column to 2
  [0x00000b82]  Set is_stmt to 1
  [0x00000b83]  Special opcode 34: advance Address by 4 to 0x9dc and Line by 1 to 43
  [0x00000b84]  Set column to 6
  [0x00000b86]  Copy (view 1)
  [0x00000b87]  Set column to 10
  [0x00000b89]  Set is_stmt to 0
  [0x00000b8a]  Copy (view 2)
  [0x00000b8b]  Set column to 2
  [0x00000b8d]  Special opcode 19: advance Address by 2 to 0x9de and Line by 0 to 43
  [0x00000b8e]  Set column to 3
  [0x00000b90]  Set is_stmt to 1
  [0x00000b91]  Special opcode 20: advance Address by 2 to 0x9e0 and Line by 1 to 44
  [0x00000b92]  Set column to 34
  [0x00000b94]  Extended opcode 4: set Discriminator to 3
  [0x00000b98]  Special opcode 32: advance Address by 4 to 0x9e4 and Line by -1 to 43
  [0x00000b99]  Set column to 24
  [0x00000b9b]  Extended opcode 4: set Discriminator to 1
  [0x00000b9f]  Special opcode 19: advance Address by 2 to 0x9e6 and Line by 0 to 43
  [0x00000ba0]  Set column to 20
  [0x00000ba2]  Extended opcode 4: set Discriminator to 1
  [0x00000ba6]  Set is_stmt to 0
  [0x00000ba7]  Copy (view 1)
  [0x00000ba8]  Set column to 24
  [0x00000baa]  Extended opcode 4: set Discriminator to 1
  [0x00000bae]  Special opcode 19: advance Address by 2 to 0x9e8 and Line by 0 to 43
  [0x00000baf]  Set column to 1
  [0x00000bb1]  Special opcode 36: advance Address by 4 to 0x9ec and Line by 3 to 46
  [0x00000bb2]  Special opcode 19: advance Address by 2 to 0x9ee and Line by 0 to 46
  [0x00000bb3]  Extended opcode 1: End of Sequence

  [0x00000bb6]  Set column to 42
  [0x00000bb8]  Extended opcode 2: set Address to 0x9f0
  [0x00000bbf]  Advance Line by 47 to 48
  [0x00000bc1]  Copy
  [0x00000bc2]  Set is_stmt to 0
  [0x00000bc3]  Copy (view 1)
  [0x00000bc4]  Set column to 2
  [0x00000bc6]  Set is_stmt to 1
  [0x00000bc7]  Special opcode 35: advance Address by 4 to 0x9f4 and Line by 2 to 50
  [0x00000bc8]  Special opcode 7: advance Address by 0 to 0x9f4 and Line by 2 to 52 (view 1)
  [0x00000bc9]  Set column to 6
  [0x00000bcb]  Set is_stmt to 0
  [0x00000bcc]  Copy (view 2)
  [0x00000bcd]  Set column to 2
  [0x00000bcf]  Set is_stmt to 1
  [0x00000bd0]  Special opcode 21: advance Address by 2 to 0x9f6 and Line by 2 to 54
  [0x00000bd1]  Set column to 3
  [0x00000bd3]  Special opcode 6: advance Address by 0 to 0x9f6 and Line by 1 to 55 (view 1)
  [0x00000bd4]  Set column to 37
  [0x00000bd6]  Set is_stmt to 0
  [0x00000bd7]  Copy (view 2)
  [0x00000bd8]  Set column to 19
  [0x00000bda]  Special opcode 145: advance Address by 20 to 0xa0a and Line by 0 to 55
  [0x00000bdb]  Set column to 17
  [0x00000bdd]  Special opcode 19: advance Address by 2 to 0xa0c and Line by 0 to 55
  [0x00000bde]  Special opcode 47: advance Address by 6 to 0xa12 and Line by 0 to 55
  [0x00000bdf]  Set column to 3
  [0x00000be1]  Set is_stmt to 1
  [0x00000be2]  Special opcode 34: advance Address by 4 to 0xa16 and Line by 1 to 56
  [0x00000be3]  Set column to 7
  [0x00000be5]  Set is_stmt to 0
  [0x00000be6]  Special opcode 19: advance Address by 2 to 0xa18 and Line by 0 to 56
  [0x00000be7]  Set column to 15
  [0x00000be9]  Extended opcode 4: set Discriminator to 1
  [0x00000bed]  Set is_stmt to 1
  [0x00000bee]  Special opcode 20: advance Address by 2 to 0xa1a and Line by 1 to 57
  [0x00000bef]  Set column to 3
  [0x00000bf1]  Special opcode 50: advance Address by 6 to 0xa20 and Line by 3 to 60
  [0x00000bf2]  Set column to 22
  [0x00000bf4]  Set is_stmt to 0
  [0x00000bf5]  Copy (view 1)
  [0x00000bf6]  Set column to 3
  [0x00000bf8]  Special opcode 19: advance Address by 2 to 0xa22 and Line by 0 to 60
  [0x00000bf9]  Set column to 22
  [0x00000bfb]  Extended opcode 4: set Discriminator to 2
  [0x00000bff]  Set is_stmt to 1
  [0x00000c00]  Special opcode 102: advance Address by 14 to 0xa30 and Line by -1 to 59
  [0x00000c01]  Set column to 8
  [0x00000c03]  Extended opcode 4: set Discriminator to 1
  [0x00000c07]  Copy (view 1)
  [0x00000c08]  Set column to 1
  [0x00000c0a]  Set is_stmt to 0
  [0x00000c0b]  Special opcode 36: advance Address by 4 to 0xa34 and Line by 3 to 62
  [0x00000c0c]  Special opcode 33: advance Address by 4 to 0xa38 and Line by 0 to 62
  [0x00000c0d]  Advance PC by 4 to 0xa3c
  [0x00000c0f]  Extended opcode 1: End of Sequence

  [0x00000c12]  Set column to 32
  [0x00000c14]  Extended opcode 2: set Address to 0xa3c
  [0x00000c1b]  Advance Line by 63 to 64
  [0x00000c1d]  Copy
  [0x00000c1e]  Set is_stmt to 0
  [0x00000c1f]  Copy (view 1)
  [0x00000c20]  Set column to 2
  [0x00000c22]  Set is_stmt to 1
  [0x00000c23]  Special opcode 21: advance Address by 2 to 0xa3e and Line by 2 to 66
  [0x00000c24]  Set column to 5
  [0x00000c26]  Set is_stmt to 0
  [0x00000c27]  Copy (view 1)
  [0x00000c28]  Set column to 2
  [0x00000c2a]  Set is_stmt to 1
  [0x00000c2b]  Special opcode 38: advance Address by 4 to 0xa42 and Line by 5 to 71
  [0x00000c2c]  Set column to 1
  [0x00000c2e]  Set is_stmt to 0
  [0x00000c2f]  Special opcode 48: advance Address by 6 to 0xa48 and Line by 1 to 72
  [0x00000c30]  Set column to 3
  [0x00000c32]  Set is_stmt to 1
  [0x00000c33]  Special opcode 14: advance Address by 2 to 0xa4a and Line by -5 to 67
  [0x00000c34]  Set is_stmt to 0
  [0x00000c35]  Special opcode 19: advance Address by 2 to 0xa4c and Line by 0 to 67
  [0x00000c36]  Set is_stmt to 1
  [0x00000c37]  Special opcode 34: advance Address by 4 to 0xa50 and Line by 1 to 68
  [0x00000c38]  Set column to 7
  [0x00000c3a]  Set is_stmt to 0
  [0x00000c3b]  Copy (view 1)
  [0x00000c3c]  Special opcode 19: advance Address by 2 to 0xa52 and Line by 0 to 68
  [0x00000c3d]  Advance PC by 2 to 0xa54
  [0x00000c3f]  Extended opcode 1: End of Sequence

  [0x00000c42]  Set column to 32
  [0x00000c44]  Extended opcode 2: set Address to 0xa54
  [0x00000c4b]  Advance Line by 73 to 74
  [0x00000c4e]  Copy
  [0x00000c4f]  Set is_stmt to 0
  [0x00000c50]  Copy (view 1)
  [0x00000c51]  Set column to 2
  [0x00000c53]  Set is_stmt to 1
  [0x00000c54]  Special opcode 63: advance Address by 8 to 0xa5c and Line by 2 to 76
  [0x00000c55]  Set column to 4
  [0x00000c57]  Set is_stmt to 0
  [0x00000c58]  Copy (view 1)
  [0x00000c59]  Set column to 2
  [0x00000c5b]  Set is_stmt to 1
  [0x00000c5c]  Special opcode 80: advance Address by 10 to 0xa66 and Line by 5 to 81
  [0x00000c5d]  Set column to 15
  [0x00000c5f]  Set is_stmt to 0
  [0x00000c60]  Copy (view 1)
  [0x00000c61]  Set column to 4
  [0x00000c63]  Special opcode 89: advance Address by 12 to 0xa72 and Line by 0 to 81
  [0x00000c64]  Set column to 24
  [0x00000c66]  Extended opcode 4: set Discriminator to 1
  [0x00000c6a]  Special opcode 75: advance Address by 10 to 0xa7c and Line by 0 to 81
  [0x00000c6b]  Set column to 2
  [0x00000c6d]  Set is_stmt to 1
  [0x00000c6e]  Special opcode 108: advance Address by 14 to 0xa8a and Line by 5 to 86
  [0x00000c6f]  Set column to 4
  [0x00000c71]  Set is_stmt to 0
  [0x00000c72]  Copy (view 1)
  [0x00000c73]  Set column to 30
  [0x00000c75]  Extended opcode 4: set Discriminator to 1
  [0x00000c79]  Special opcode 103: advance Address by 14 to 0xa98 and Line by 0 to 86
  [0x00000c7a]  Set column to 25
  [0x00000c7c]  Extended opcode 4: set Discriminator to 1
  [0x00000c80]  Special opcode 61: advance Address by 8 to 0xaa0 and Line by 0 to 86
  [0x00000c81]  Set column to 2
  [0x00000c83]  Set is_stmt to 1
  [0x00000c84]  Special opcode 80: advance Address by 10 to 0xaaa and Line by 5 to 91
  [0x00000c85]  Special opcode 7: advance Address by 0 to 0xaaa and Line by 2 to 93 (view 1)
  [0x00000c86]  Set column to 4
  [0x00000c88]  Set is_stmt to 0
  [0x00000c89]  Copy (view 2)
  [0x00000c8a]  Set column to 2
  [0x00000c8c]  Set is_stmt to 1
  [0x00000c8d]  Special opcode 80: advance Address by 10 to 0xab4 and Line by 5 to 98
  [0x00000c8e]  Set column to 11
  [0x00000c90]  Set is_stmt to 0
  [0x00000c91]  Copy (view 1)
  [0x00000c92]  Set column to 2
  [0x00000c94]  Set is_stmt to 1
  [0x00000c95]  Special opcode 34: advance Address by 4 to 0xab8 and Line by 1 to 99
  [0x00000c96]  Set column to 44
  [0x00000c98]  Set is_stmt to 0
  [0x00000c99]  Copy (view 1)
  [0x00000c9a]  Set column to 59
  [0x00000c9c]  Special opcode 61: advance Address by 8 to 0xac0 and Line by 0 to 99
  [0x00000c9d]  Set column to 11
  [0x00000c9f]  Special opcode 61: advance Address by 8 to 0xac8 and Line by 0 to 99
  [0x00000ca0]  Set column to 2
  [0x00000ca2]  Set is_stmt to 1
  [0x00000ca3]  Special opcode 63: advance Address by 8 to 0xad0 and Line by 2 to 101
  [0x00000ca4]  Special opcode 7: advance Address by 0 to 0xad0 and Line by 2 to 103 (view 1)
  [0x00000ca5]  Set column to 6
  [0x00000ca7]  Copy (view 2)
  [0x00000ca8]  Set column to 10
  [0x00000caa]  Set is_stmt to 0
  [0x00000cab]  Copy (view 3)
  [0x00000cac]  Set column to 6
  [0x00000cae]  Special opcode 17: advance Address by 2 to 0xad2 and Line by -2 to 101
  [0x00000caf]  Set column to 2
  [0x00000cb1]  Special opcode 21: advance Address by 2 to 0xad4 and Line by 2 to 103
  [0x00000cb2]  Special opcode 19: advance Address by 2 to 0xad6 and Line by 0 to 103
  [0x00000cb3]  Set column to 3
  [0x00000cb5]  Set is_stmt to 1
  [0x00000cb6]  Advance Line by -26 to 77
  [0x00000cb8]  Copy (view 1)
  [0x00000cb9]  Special opcode 48: advance Address by 6 to 0xadc and Line by 1 to 78
  [0x00000cba]  Special opcode 23: advance Address by 2 to 0xade and Line by 4 to 82
  [0x00000cbb]  Special opcode 48: advance Address by 6 to 0xae4 and Line by 1 to 83
  [0x00000cbc]  Set column to 1
  [0x00000cbe]  Set is_stmt to 0
  [0x00000cbf]  Advance Line by 32 to 115
  [0x00000cc1]  Copy (view 1)
  [0x00000cc2]  Set column to 3
  [0x00000cc4]  Set is_stmt to 1
  [0x00000cc5]  Advance Line by -28 to 87
  [0x00000cc7]  Special opcode 61: advance Address by 8 to 0xaec and Line by 0 to 87
  [0x00000cc8]  Special opcode 48: advance Address by 6 to 0xaf2 and Line by 1 to 88
  [0x00000cc9]  Special opcode 25: advance Address by 2 to 0xaf4 and Line by 6 to 94
  [0x00000cca]  Special opcode 48: advance Address by 6 to 0xafa and Line by 1 to 95
  [0x00000ccb]  Set column to 10
  [0x00000ccd]  Set is_stmt to 0
  [0x00000cce]  Copy (view 1)
  [0x00000ccf]  Set column to 3
  [0x00000cd1]  Set is_stmt to 1
  [0x00000cd2]  Advance Line by 9 to 104
  [0x00000cd4]  Special opcode 47: advance Address by 6 to 0xb00 and Line by 0 to 104
  [0x00000cd5]  Set column to 44
  [0x00000cd7]  Set is_stmt to 0
  [0x00000cd8]  Copy (view 1)
  [0x00000cd9]  Set column to 19
  [0x00000cdb]  Special opcode 131: advance Address by 18 to 0xb12 and Line by 0 to 104
  [0x00000cdc]  Set column to 17
  [0x00000cde]  Special opcode 19: advance Address by 2 to 0xb14 and Line by 0 to 104
  [0x00000cdf]  Special opcode 33: advance Address by 4 to 0xb18 and Line by 0 to 104
  [0x00000ce0]  Set column to 3
  [0x00000ce2]  Set is_stmt to 1
  [0x00000ce3]  Special opcode 48: advance Address by 6 to 0xb1e and Line by 1 to 105
  [0x00000ce4]  Set column to 15
  [0x00000ce6]  Set is_stmt to 0
  [0x00000ce7]  Copy (view 1)
  [0x00000ce8]  Set column to 25
  [0x00000cea]  Extended opcode 4: set Discriminator to 3
  [0x00000cee]  Set is_stmt to 1
  [0x00000cef]  Special opcode 17: advance Address by 2 to 0xb20 and Line by -2 to 103
  [0x00000cf0]  Set column to 13
  [0x00000cf2]  Set is_stmt to 0
  [0x00000cf3]  Special opcode 20: advance Address by 2 to 0xb22 and Line by 1 to 104
  [0x00000cf4]  Set column to 19
  [0x00000cf6]  Extended opcode 4: set Discriminator to 1
  [0x00000cfa]  Set is_stmt to 1
  [0x00000cfb]  Special opcode 18: advance Address by 2 to 0xb24 and Line by -1 to 103
  [0x00000cfc]  Set column to 3
  [0x00000cfe]  Special opcode 36: advance Address by 4 to 0xb28 and Line by 3 to 106
  [0x00000cff]  Set column to 2
  [0x00000d01]  Special opcode 7: advance Address by 0 to 0xb28 and Line by 2 to 108 (view 1)
  [0x00000d02]  Set column to 12
  [0x00000d04]  Set is_stmt to 0
  [0x00000d05]  Copy (view 2)
  [0x00000d06]  Set column to 16
  [0x00000d08]  Special opcode 19: advance Address by 2 to 0xb2a and Line by 0 to 108
  [0x00000d09]  Special opcode 33: advance Address by 4 to 0xb2e and Line by 0 to 108
  [0x00000d0a]  Set column to 2
  [0x00000d0c]  Set is_stmt to 1
  [0x00000d0d]  Special opcode 77: advance Address by 10 to 0xb38 and Line by 2 to 110
  [0x00000d0e]  Set is_stmt to 0
  [0x00000d0f]  Special opcode 33: advance Address by 4 to 0xb3c and Line by 0 to 110
  [0x00000d10]  Set is_stmt to 1
  [0x00000d11]  Special opcode 35: advance Address by 4 to 0xb40 and Line by 2 to 112
  [0x00000d12]  Set column to 3
  [0x00000d14]  Special opcode 20: advance Address by 2 to 0xb42 and Line by 1 to 113
  [0x00000d15]  Set column to 22
  [0x00000d17]  Set is_stmt to 0
  [0x00000d18]  Copy (view 1)
  [0x00000d19]  Set column to 3
  [0x00000d1b]  Special opcode 19: advance Address by 2 to 0xb44 and Line by 0 to 113
  [0x00000d1c]  Set column to 22
  [0x00000d1e]  Extended opcode 4: set Discriminator to 2
  [0x00000d22]  Set is_stmt to 1
  [0x00000d23]  Special opcode 102: advance Address by 14 to 0xb52 and Line by -1 to 112
  [0x00000d24]  Set column to 8
  [0x00000d26]  Extended opcode 4: set Discriminator to 1
  [0x00000d2a]  Copy (view 1)
  [0x00000d2b]  Extended opcode 4: set Discriminator to 1
  [0x00000d2f]  Set is_stmt to 0
  [0x00000d30]  Special opcode 33: advance Address by 4 to 0xb56 and Line by 0 to 112
  [0x00000d31]  Advance PC by 30 to 0xb74
  [0x00000d33]  Extended opcode 1: End of Sequence

  [0x00000d36]  Set column to 34
  [0x00000d38]  Extended opcode 2: set Address to 0xb74
  [0x00000d3f]  Advance Line by 116 to 117
  [0x00000d42]  Copy
  [0x00000d43]  Set is_stmt to 0
  [0x00000d44]  Copy (view 1)
  [0x00000d45]  Set column to 2
  [0x00000d47]  Set is_stmt to 1
  [0x00000d48]  Special opcode 90: advance Address by 12 to 0xb80 and Line by 1 to 118
  [0x00000d49]  Special opcode 6: advance Address by 0 to 0xb80 and Line by 1 to 119 (view 1)
  [0x00000d4a]  Special opcode 21: advance Address by 2 to 0xb82 and Line by 2 to 121
  [0x00000d4b]  Special opcode 6: advance Address by 0 to 0xb82 and Line by 1 to 122 (view 1)
  [0x00000d4c]  Special opcode 6: advance Address by 0 to 0xb82 and Line by 1 to 123 (view 2)
  [0x00000d4d]  Special opcode 6: advance Address by 0 to 0xb82 and Line by 1 to 124 (view 3)
  [0x00000d4e]  Special opcode 7: advance Address by 0 to 0xb82 and Line by 2 to 126 (view 4)
  [0x00000d4f]  Set column to 6
  [0x00000d51]  Copy (view 5)
  [0x00000d52]  Set column to 10
  [0x00000d54]  Set is_stmt to 0
  [0x00000d55]  Copy (view 6)
  [0x00000d56]  Set column to 2
  [0x00000d58]  Special opcode 19: advance Address by 2 to 0xb84 and Line by 0 to 126
  [0x00000d59]  Set column to 7
  [0x00000d5b]  Set is_stmt to 1
  [0x00000d5c]  Special opcode 25: advance Address by 2 to 0xb86 and Line by 6 to 132
  [0x00000d5d]  Set column to 12
  [0x00000d5f]  Set is_stmt to 0
  [0x00000d60]  Copy (view 1)
  [0x00000d61]  Set column to 7
  [0x00000d63]  Set is_stmt to 1
  [0x00000d64]  Special opcode 48: advance Address by 6 to 0xb8c and Line by 1 to 133
  [0x00000d65]  Set column to 6
  [0x00000d67]  Special opcode 48: advance Address by 6 to 0xb92 and Line by 1 to 134
  [0x00000d68]  Set is_stmt to 0
  [0x00000d69]  Special opcode 0: advance Address by 0 to 0xb92 and Line by -5 to 129 (view 1)
  [0x00000d6a]  Special opcode 24: advance Address by 2 to 0xb94 and Line by 5 to 134
  [0x00000d6b]  Set column to 7
  [0x00000d6d]  Set is_stmt to 1
  [0x00000d6e]  Special opcode 22: advance Address by 2 to 0xb96 and Line by 3 to 137
  [0x00000d6f]  Set column to 11
  [0x00000d71]  Set is_stmt to 0
  [0x00000d72]  Copy (view 1)
  [0x00000d73]  Set column to 7
  [0x00000d75]  Set is_stmt to 1
  [0x00000d76]  Special opcode 48: advance Address by 6 to 0xb9c and Line by 1 to 138
  [0x00000d77]  Set column to 6
  [0x00000d79]  Special opcode 48: advance Address by 6 to 0xba2 and Line by 1 to 139
  [0x00000d7a]  Set is_stmt to 0
  [0x00000d7b]  Advance Line by -10 to 129
  [0x00000d7d]  Copy (view 1)
  [0x00000d7e]  Advance Line by 10 to 139
  [0x00000d80]  Special opcode 19: advance Address by 2 to 0xba4 and Line by 0 to 139
  [0x00000d81]  Set column to 7
  [0x00000d83]  Set is_stmt to 1
  [0x00000d84]  Special opcode 22: advance Address by 2 to 0xba6 and Line by 3 to 142
  [0x00000d85]  Special opcode 48: advance Address by 6 to 0xbac and Line by 1 to 143
  [0x00000d86]  Set column to 6
  [0x00000d88]  Special opcode 6: advance Address by 0 to 0xbac and Line by 1 to 144 (view 1)
  [0x00000d89]  Set column to 7
  [0x00000d8b]  Special opcode 22: advance Address by 2 to 0xbae and Line by 3 to 147
  [0x00000d8c]  Set column to 11
  [0x00000d8e]  Set is_stmt to 0
  [0x00000d8f]  Copy (view 1)
  [0x00000d90]  Set column to 7
  [0x00000d92]  Set is_stmt to 1
  [0x00000d93]  Special opcode 48: advance Address by 6 to 0xbb4 and Line by 1 to 148
  [0x00000d94]  Set column to 6
  [0x00000d96]  Special opcode 48: advance Address by 6 to 0xbba and Line by 1 to 149
  [0x00000d97]  Set is_stmt to 0
  [0x00000d98]  Advance Line by -20 to 129
  [0x00000d9a]  Copy (view 1)
  [0x00000d9b]  Advance Line by 20 to 149
  [0x00000d9d]  Special opcode 19: advance Address by 2 to 0xbbc and Line by 0 to 149
  [0x00000d9e]  Set column to 7
  [0x00000da0]  Set is_stmt to 1
  [0x00000da1]  Special opcode 22: advance Address by 2 to 0xbbe and Line by 3 to 152
  [0x00000da2]  Set column to 12
  [0x00000da4]  Set is_stmt to 0
  [0x00000da5]  Copy (view 1)
  [0x00000da6]  Set column to 7
  [0x00000da8]  Set is_stmt to 1
  [0x00000da9]  Special opcode 62: advance Address by 8 to 0xbc6 and Line by 1 to 153
  [0x00000daa]  Set column to 6
  [0x00000dac]  Special opcode 62: advance Address by 8 to 0xbce and Line by 1 to 154
  [0x00000dad]  Set is_stmt to 0
  [0x00000dae]  Advance Line by -25 to 129
  [0x00000db0]  Copy (view 1)
  [0x00000db1]  Advance Line by 25 to 154
  [0x00000db3]  Special opcode 19: advance Address by 2 to 0xbd0 and Line by 0 to 154
  [0x00000db4]  Set is_stmt to 1
  [0x00000db5]  Special opcode 22: advance Address by 2 to 0xbd2 and Line by 3 to 157
  [0x00000db6]  Special opcode 48: advance Address by 6 to 0xbd8 and Line by 1 to 158
  [0x00000db7]  Special opcode 48: advance Address by 6 to 0xbde and Line by 1 to 159
  [0x00000db8]  Set is_stmt to 0
  [0x00000db9]  Advance Line by -30 to 129
  [0x00000dbb]  Copy (view 1)
  [0x00000dbc]  Advance Line by 30 to 159
  [0x00000dbe]  Special opcode 19: advance Address by 2 to 0xbe0 and Line by 0 to 159
  [0x00000dbf]  Set column to 5
  [0x00000dc1]  Set is_stmt to 1
  [0x00000dc2]  Special opcode 24: advance Address by 2 to 0xbe2 and Line by 5 to 164
  [0x00000dc3]  Set column to 4
  [0x00000dc5]  Special opcode 34: advance Address by 4 to 0xbe6 and Line by 1 to 165
  [0x00000dc6]  Set column to 35
  [0x00000dc8]  Extended opcode 4: set Discriminator to 2
  [0x00000dcc]  Advance Line by -39 to 126
  [0x00000dce]  Copy (view 1)
  [0x00000dcf]  Set column to 25
  [0x00000dd1]  Extended opcode 4: set Discriminator to 1
  [0x00000dd5]  Special opcode 19: advance Address by 2 to 0xbe8 and Line by 0 to 126
  [0x00000dd6]  Set column to 21
  [0x00000dd8]  Extended opcode 4: set Discriminator to 1
  [0x00000ddc]  Set is_stmt to 0
  [0x00000ddd]  Copy (view 1)
  [0x00000dde]  Set column to 25
  [0x00000de0]  Extended opcode 4: set Discriminator to 1
  [0x00000de4]  Special opcode 19: advance Address by 2 to 0xbea and Line by 0 to 126
  [0x00000de5]  Set column to 3
  [0x00000de7]  Set is_stmt to 1
  [0x00000de8]  Special opcode 20: advance Address by 2 to 0xbec and Line by 1 to 127
  [0x00000de9]  Set column to 5
  [0x00000deb]  Special opcode 35: advance Address by 4 to 0xbf0 and Line by 2 to 129
  [0x00000dec]  Set column to 6
  [0x00000dee]  Set is_stmt to 0
  [0x00000def]  Copy (view 1)
  [0x00000df0]  Set column to 5
  [0x00000df2]  Set is_stmt to 1
  [0x00000df3]  Special opcode 20: advance Address by 2 to 0xbf2 and Line by 1 to 130
  [0x00000df4]  Set column to 18
  [0x00000df6]  Set is_stmt to 0
  [0x00000df7]  Copy (view 1)
  [0x00000df8]  Advance PC by 98 to 0xc54
  [0x00000dfa]  Special opcode 5: advance Address by 0 to 0xc54 and Line by 0 to 130
  [0x00000dfb]  Set column to 1
  [0x00000dfd]  Advance Line by 40 to 170
  [0x00000dff]  Copy (view 1)
  [0x00000e00]  Special opcode 47: advance Address by 6 to 0xc5a and Line by 0 to 170
  [0x00000e01]  Advance PC by 4 to 0xc5e
  [0x00000e03]  Extended opcode 1: End of Sequence


  Offset:                      0xe06
  Length:                      308
  DWARF Version:               3
  Prologue Length:             155
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0xe21):
  1	sys
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	src

 The File Name Table (offset 0xe6c):
  Entry	Dir	Time	Size	Name
  1	1	0	0	startup_gcc.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	timers.h

 Line Number Statements:
  [0x00000eab]  Set column to 1
  [0x00000ead]  Extended opcode 2: set Address to 0xc60
  [0x00000eb4]  Advance Line by 268 to 269
  [0x00000eb7]  Copy
  [0x00000eb8]  Set column to 5
  [0x00000eba]  Special opcode 9: advance Address by 0 to 0xc60 and Line by 4 to 273 (view 1)
  [0x00000ebb]  Special opcode 7: advance Address by 0 to 0xc60 and Line by 2 to 275 (view 2)
  [0x00000ebc]  Set column to 10
  [0x00000ebe]  Special opcode 3: advance Address by 0 to 0xc60 and Line by -2 to 273 (view 3)
  [0x00000ebf]  Advance PC by 2 to 0xc62
  [0x00000ec1]  Extended opcode 1: End of Sequence

  [0x00000ec4]  Set column to 1
  [0x00000ec6]  Extended opcode 2: set Address to 0xc62
  [0x00000ecd]  Advance Line by 286 to 287
  [0x00000ed0]  Copy
  [0x00000ed1]  Set column to 5
  [0x00000ed3]  Special opcode 9: advance Address by 0 to 0xc62 and Line by 4 to 291 (view 1)
  [0x00000ed4]  Special opcode 7: advance Address by 0 to 0xc62 and Line by 2 to 293 (view 2)
  [0x00000ed5]  Set column to 10
  [0x00000ed7]  Special opcode 3: advance Address by 0 to 0xc62 and Line by -2 to 291 (view 3)
  [0x00000ed8]  Advance PC by 2 to 0xc64
  [0x00000eda]  Extended opcode 1: End of Sequence

  [0x00000edd]  Set column to 1
  [0x00000edf]  Extended opcode 2: set Address to 0xc64
  [0x00000ee6]  Advance Line by 304 to 305
  [0x00000ee9]  Copy
  [0x00000eea]  Set column to 5
  [0x00000eec]  Special opcode 9: advance Address by 0 to 0xc64 and Line by 4 to 309 (view 1)
  [0x00000eed]  Special opcode 7: advance Address by 0 to 0xc64 and Line by 2 to 311 (view 2)
  [0x00000eee]  Set column to 10
  [0x00000ef0]  Special opcode 3: advance Address by 0 to 0xc64 and Line by -2 to 309 (view 3)
  [0x00000ef1]  Advance PC by 2 to 0xc66
  [0x00000ef3]  Extended opcode 1: End of Sequence

  [0x00000ef6]  Set column to 1
  [0x00000ef8]  Extended opcode 2: set Address to 0xc68
  [0x00000eff]  Advance Line by 226 to 227
  [0x00000f02]  Copy
  [0x00000f03]  Set column to 5
  [0x00000f05]  Special opcode 20: advance Address by 2 to 0xc6a and Line by 1 to 228
  [0x00000f06]  Special opcode 10: advance Address by 0 to 0xc6a and Line by 5 to 233 (view 1)
  [0x00000f07]  Special opcode 6: advance Address by 0 to 0xc6a and Line by 1 to 234 (view 2)
  [0x00000f08]  Set column to 17
  [0x00000f0a]  Set is_stmt to 0
  [0x00000f0b]  Copy (view 3)
  [0x00000f0c]  Set column to 12
  [0x00000f0e]  Special opcode 18: advance Address by 2 to 0xc6c and Line by -1 to 233
  [0x00000f0f]  Set column to 5
  [0x00000f11]  Special opcode 20: advance Address by 2 to 0xc6e and Line by 1 to 234
  [0x00000f12]  Set column to 9
  [0x00000f14]  Set is_stmt to 1
  [0x00000f15]  Special opcode 21: advance Address by 2 to 0xc70 and Line by 2 to 236
  [0x00000f16]  Set column to 22
  [0x00000f18]  Set is_stmt to 0
  [0x00000f19]  Copy (view 1)
  [0x00000f1a]  Set column to 20
  [0x00000f1c]  Special opcode 33: advance Address by 4 to 0xc74 and Line by 0 to 236
  [0x00000f1d]  Set column to 35
  [0x00000f1f]  Extended opcode 4: set Discriminator to 1
  [0x00000f23]  Set is_stmt to 1
  [0x00000f24]  Special opcode 31: advance Address by 4 to 0xc78 and Line by -2 to 234
  [0x00000f25]  Set column to 5
  [0x00000f27]  Special opcode 55: advance Address by 6 to 0xc7e and Line by 8 to 242
  [0x00000f28]  Advance Line by 14 to 256
  [0x00000f2a]  Special opcode 131: advance Address by 18 to 0xc90 and Line by 0 to 256
  [0x00000f2b]  Set column to 31
  [0x00000f2d]  Set is_stmt to 0
  [0x00000f2e]  Copy (view 1)
  [0x00000f2f]  Special opcode 33: advance Address by 4 to 0xc94 and Line by 0 to 256
  [0x00000f30]  Special opcode 33: advance Address by 4 to 0xc98 and Line by 0 to 256
  [0x00000f31]  Set column to 5
  [0x00000f33]  Set is_stmt to 1
  [0x00000f34]  Special opcode 34: advance Address by 4 to 0xc9c and Line by 1 to 257
  [0x00000f35]  Set column to 1
  [0x00000f37]  Set is_stmt to 0
  [0x00000f38]  Special opcode 34: advance Address by 4 to 0xca0 and Line by 1 to 258
  [0x00000f39]  Advance PC by 24 to 0xcb8
  [0x00000f3b]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 70726f63 6573735f 706f696e 74730072 process_points.r
  0x00000010 65736574 0073697a 655f7400 63686563 eset.size_t.chec
  0x00000020 6b73756d 005f5f75 696e7438 5f740074 ksum.__uint8_t.t
  0x00000030 79706500 63757272 656e745f 7363616e ype.current_scan
  0x00000040 00757074 696d655f 7365636f 6e647300 .uptime_seconds.
  0x00000050 6c6f6e67 206c6f6e 6720756e 7369676e long long unsign
  0x00000060 65642069 6e740064 69666600 64656c74 ed int.diff.delt
  0x00000070 6100636c 6561725f 6c696461 725f494f a.clear_lidar_IO
  0x00000080 00726967 6874006c 6f6e6720 6c6f6e67 .right.long long
  0x00000090 20696e74 00737461 72745f61 6e676c65  int.start_angle
  0x000000a0 00626f75 6e646564 5f696478 00536361 .bounded_idx.Sca
  0x000000b0 6e486561 64657200 74656d70 00627974 nHeader.temp.byt
  0x000000c0 65730052 45434549 56494e47 5f534341 es.RECEIVING_SCA
  0x000000d0 4e5f4441 5441005f 5f75696e 7433325f N_DATA.__uint32_
  0x000000e0 74005245 43454956 494e475f 48454144 t.RECEIVING_HEAD
  0x000000f0 45520052 45434549 56494e47 5f534341 ER.RECEIVING_SCA
  0x00000100 4e5f4845 41444552 00675f70 6f696e74 N_HEADER.g_point
  0x00000110 73005741 4954494e 475f5343 414e5f48 s.WAITING_SCAN_H
  0x00000120 45414445 52005354 4152545f 5041434b EADER.START_PACK
  0x00000130 45540073 686f7274 20756e73 69676e65 ET.short unsigne
  0x00000140 6420696e 74007374 6172745f 636f6465 d int.start_code
  0x00000150 006c6173 745f7469 6d650052 45434549 .last_time.RECEI
  0x00000160 56494e47 5f484541 4c54485f 5245504f VING_HEALTH_REPO
  0x00000170 52540063 75727265 6e745f62 79746500 RT.current_byte.
  0x00000180 63686563 6b73756d 5f686561 64657200 checksum_header.
  0x00000190 7372632f 6c696461 722e6300 5363616e src/lidar.c.Scan
  0x000001a0 48656164 65724669 656c6473 00474e55 HeaderFields.GNU
  0x000001b0 20433137 2031332e 322e3020 2d6d7468  C17 13.2.0 -mth
  0x000001c0 756d6220 2d6d6370 753d636f 72746578 umb -mcpu=cortex
  0x000001d0 2d6d3420 2d6d6670 753d6670 76342d73 -m4 -mfpu=fpv4-s
  0x000001e0 702d6431 36202d6d 666c6f61 742d6162 p-d16 -mfloat-ab
  0x000001f0 693d6861 7264202d 6d617263 683d6172 i=hard -march=ar
  0x00000200 6d763765 2d6d2b66 70202d67 202d4f67 mv7e-m+fp -g -Og
  0x00000210 202d7374 643d676e 75313720 2d666675  -std=gnu17 -ffu
  0x00000220 6e637469 6f6e2d73 65637469 6f6e7320 nction-sections 
  0x00000230 2d666e6f 2d627569 6c74696e 202d6664 -fno-builtin -fd
  0x00000240 6174612d 73656374 696f6e73 00656e64 ata-sections.end
  0x00000250 5f616e67 6c65006c 6f6e6720 646f7562 _angle.long doub
  0x00000260 6c650069 74657200 73657475 705f6c69 le.iter.setup_li
  0x00000270 6461725f 636f6d6d 73005f42 6f6f6c00 dar_comms._Bool.
  0x00000280 756e7369 676e6564 20636861 72007368 unsigned char.sh
  0x00000290 6f727420 696e7400 73746f70 5f6c6964 ort int.stop_lid
  0x000002a0 61725f73 63616e00 7072696e 746c6600 ar_scan.printlf.
  0x000002b0 6d61705f 746f5f64 65677265 65006865 map_to_degree.he
  0x000002c0 61640073 74617274 5f6c6964 61725f73 ad.start_lidar_s
  0x000002d0 63616e00 5f5f7569 6e743136 5f74005f can.__uint16_t._
  0x000002e0 5f696e74 33325f74 00434f4d 4d5f5741 _int32_t.COMM_WA
  0x000002f0 4954494e 47006869 67680068 61735f68 ITING.high.has_h
  0x00000300 6f6c6573 00736b69 7000675f 70745f62 oles.skip.g_pt_b
  0x00000310 75660063 6f756e74 5f706f69 6e747300 uf.count_points.
  0x00000320 72656365 69766564 002f686f 6d652f6a received./home/j
  0x00000330 6b6d756e 736f6e2f 776f726b 73706163 kmunson/workspac
  0x00000340 652f4545 4e473436 312f4545 4e473436 e/EENG461/EENG46
  0x00000350 315f4c49 44415200 675f636f 6e646974 1_LIDAR.g_condit
  0x00000360 696f6e65 645f706f 696e7473 0070726f ioned_points.pro
  0x00000370 63657373 5f706163 6b657473 0073616d cess_packets.sam
  0x00000380 706c655f 636f756e 7400636f 6e766572 ple_count.conver
  0x00000390 745f746f 5f6d6d00 63757272 656e745f t_to_mm.current_
  0x000003a0 706f696e 74006368 65636b5f 68656164 point.check_head
  0x000003b0 65720073 74617274 006c6566 7400636f er.start.left.co
  0x000003c0 6d6d5f73 74617465 00444154 415f5041 mm_state.DATA_PA
  0x000003d0 434b4554 006d6169 6e007372 632f6d61 CKET.main.src/ma
  0x000003e0 696e2e63 00636f6e 66696775 72654465 in.c.configureDe
  0x000003f0 626f756e 63655469 6d657200 73657475 bounceTimer.setu
  0x00000400 705f7561 72745f70 72696e74 65720073 p_uart_printer.s
  0x00000410 65636f6e 645f636f 756e7465 72006765 econd_counter.ge
  0x00000420 745f7570 74696d65 5f637963 6c657300 t_uptime_cycles.
  0x00000430 6379636c 65735f6e 6f770073 72632f74 cycles_now.src/t
  0x00000440 696d6572 732e6300 74696d65 72315f6f imers.c.timer1_o
  0x00000450 76657266 6c6f775f 636f756e 74007469 verflow_count.ti
  0x00000460 6d654b65 65706572 49535200 6f766572 meKeeperISR.over
  0x00000470 666c6f77 5f636f75 6e745f6e 6f77005f flow_count_now._
  0x00000480 5f75696e 7436345f 7400736f 6e69635f _uint64_t.sonic_
  0x00000490 73656e73 6f725f61 6374696f 6e5f6469 sensor_action_di
  0x000004a0 7600696e 74656765 72506172 74007072 v.integerPart.pr
  0x000004b0 696e745f 73747269 6e670063 68617273 int_string.chars
  0x000004c0 5f73656e 745f7265 63656e74 6c790064 _sent_recently.d
  0x000004d0 6563696d 616c5061 72740073 72632f75 ecimalPart.src/u
  0x000004e0 6172745f 7072696e 742e6300 5f5f676e art_print.c.__gn
  0x000004f0 75635f76 615f6c69 7374006e 756d7500 uc_va_list.numu.
  0x00000500 70757463 68617200 7072696e 745f666c putchar.print_fl
  0x00000510 6f617400 666f726d 61740070 72696e74 oat.format.print
  0x00000520 5f756e73 69676e65 645f6465 63696d61 _unsigned_decima
  0x00000530 6c007072 696e745f 64656369 6d616c00 l.print_decimal.
  0x00000540 5f5f6170 00706c61 63657300 6e756d62 __ap.places.numb
  0x00000550 6572006e 756d6600 5f5f7661 5f6c6973 er.numf.__va_lis
  0x00000560 74006172 6773005f 64617461 0070756c t.args._data.pul
  0x00000570 53746163 6b00496e 74446566 61756c74 Stack.IntDefault
  0x00000580 48616e64 6c657200 70756c44 65737400 Handler.pulDest.
  0x00000590 5f657465 7874005f 65646174 61007379 _etext._edata.sy
  0x000005a0 732f7374 61727475 705f6763 632e6300 s/startup_gcc.c.
  0x000005b0 4661756c 74495352 00675f70 666e5665 FaultISR.g_pfnVe
  0x000005c0 63746f72 73007075 6c537263 00526573 ctors.pulSrc.Res
  0x000005d0 65744953 52004e6d 69535200          etISR.NmiSR.

Contents of the .debug_frame section:


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 0000000c 00000000 FDE cie=00000000 pc=0000026c..00000286

00000020 0000000c 00000000 FDE cie=00000000 pc=00000288..000002ac

00000030 0000000c 00000000 FDE cie=00000000 pc=000002ac..000002d4

00000040 0000001c 00000000 FDE cie=00000000 pc=000002d4..000003a8
  DW_CFA_advance_loc: 2 to 000002d6
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r3 at cfa-24
  DW_CFA_offset: r4 at cfa-20
  DW_CFA_offset: r5 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000060 00000018 00000000 FDE cie=00000000 pc=000003a8..00000458
  DW_CFA_advance_loc: 2 to 000003aa
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000007c 00000018 00000000 FDE cie=00000000 pc=00000458..0000047c
  DW_CFA_advance_loc: 2 to 0000045a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000098 00000018 00000000 FDE cie=00000000 pc=0000047c..000004a0
  DW_CFA_advance_loc: 2 to 0000047e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000b4 00000018 00000000 FDE cie=00000000 pc=000004a0..000004d0
  DW_CFA_advance_loc: 2 to 000004a2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000d0 0000000c 00000000 FDE cie=00000000 pc=000004d0..00000554

000000e0 0000000c 00000000 FDE cie=00000000 pc=00000554..00000558

000000f0 0000000c 00000000 FDE cie=00000000 pc=00000558..00000582

00000100 0000000c 00000000 FDE cie=00000000 pc=00000582..000005a6

00000110 00000018 00000000 FDE cie=00000000 pc=000005a8..00000728
  DW_CFA_advance_loc: 2 to 000005aa
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000012c 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

0000013c 00000018 0000012c FDE cie=0000012c pc=00000728..00000834
  DW_CFA_advance_loc: 2 to 0000072a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000158 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000168 00000018 00000158 FDE cie=00000158 pc=00000834..000008b0
  DW_CFA_advance_loc: 2 to 00000836
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000184 00000018 00000158 FDE cie=00000158 pc=000008b0..00000914
  DW_CFA_advance_loc: 2 to 000008b2
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r4 at cfa-4
  DW_CFA_advance_loc: 62 to 000008f0
  DW_CFA_remember_state
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 0
  DW_CFA_advance_loc: 2 to 000008f2
  DW_CFA_restore_state

000001a0 00000018 00000158 FDE cie=00000158 pc=00000000..00000058
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001bc 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000001cc 00000018 000001bc FDE cie=000001bc pc=00000914..00000990
  DW_CFA_advance_loc: 2 to 00000916
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001e8 00000014 000001bc FDE cie=000001bc pc=00000990..000009d8
  DW_CFA_advance_loc: 2 to 00000992
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000200 00000018 000001bc FDE cie=000001bc pc=000009d8..000009ee
  DW_CFA_advance_loc: 2 to 000009da
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000021c 0000001c 000001bc FDE cie=000001bc pc=000009f0..00000a3c
  DW_CFA_advance_loc: 2 to 000009f2
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 000009f4
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 66 to 00000a36
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000023c 00000014 000001bc FDE cie=000001bc pc=00000a3c..00000a54
  DW_CFA_advance_loc: 2 to 00000a3e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000254 00000030 000001bc FDE cie=000001bc pc=00000a54..00000b74
  DW_CFA_advance_loc: 2 to 00000a56
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 00000a5a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset_extended: r80 at cfa-16
  DW_CFA_offset_extended: r81 at cfa-12
  DW_CFA_advance_loc: 2 to 00000a5c
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc1: 138 to 00000ae6
  DW_CFA_remember_state
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 4 to 00000aea
  DW_CFA_restore_extended: r80
  DW_CFA_restore_extended: r81
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000aec
  DW_CFA_restore_state
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000288 00000038 000001bc FDE cie=000001bc pc=00000b74..00000c5e
  DW_CFA_advance_loc: 2 to 00000b76
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r0 at cfa-16
  DW_CFA_offset: r1 at cfa-12
  DW_CFA_offset: r2 at cfa-8
  DW_CFA_offset: r3 at cfa-4
  DW_CFA_advance_loc: 2 to 00000b78
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r4 at cfa-32
  DW_CFA_offset: r5 at cfa-28
  DW_CFA_offset: r6 at cfa-24
  DW_CFA_offset: r14 at cfa-20
  DW_CFA_advance_loc: 2 to 00000b7a
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc1: 220 to 00000c56
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 4 to 00000c5a
  DW_CFA_restore: r14
  DW_CFA_restore: r6
  DW_CFA_restore: r5
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000c5c
  DW_CFA_restore: r3
  DW_CFA_restore: r2
  DW_CFA_restore: r1
  DW_CFA_restore: r0
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

000002c4 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000002d4 0000000c 000002c4 FDE cie=000002c4 pc=00000c60..00000c62

000002e4 0000000c 000002c4 FDE cie=000002c4 pc=00000c62..00000c64

000002f4 0000000c 000002c4 FDE cie=000002c4 pc=00000c64..00000c66

00000304 00000014 000002c4 FDE cie=000002c4 pc=00000c68..00000cb0
  DW_CFA_advance_loc: 2 to 00000c6a
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop


Disassembly of section .text:

00000000 <g_pfnVectors>:
	}
	
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
}

uint64_t get_uptime_cycles(void) {
   0:	b0 09 00 20 69 0c 00 00 61 0c 00 00 63 0c 00 00     ... i...a...c...
	uint64_t cycles_now;
	
	do {
		if(TIMER_ISR_IS_PENDING) timeKeeperISR();
		overflow_count_now = timer1_overflow_count;
		cycles_now = TIMER_CYCLES - TIMER1_TAR_R;
  10:	65 0c 00 00 65 0c 00 00 65 0c 00 00 00 00 00 00     e...e...e.......
	...
		if(TIMER_ISR_IS_PENDING) timeKeeperISR();
  2c:	65 0c 00 00 65 0c 00 00 00 00 00 00 65 0c 00 00     e...e.......e...
	// If the counter overflowed during this code block, then our reads of uptime and cycles are invalid. Re-do them.
	} while (TIMER_ISR_IS_PENDING); 
	
	return (TIMER_CYCLES * overflow_count_now) + cycles_now;
  3c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
}
  4c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  5c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  6c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  7c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  8c:	65 0c 00 00 65 0c 00 00 b1 08 00 00 65 0c 00 00     e...e.......e...
  9c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  ac:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  bc:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  cc:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  dc:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  ec:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
  fc:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 10c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 11c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 12c:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 13c:	65 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     e...............
 14c:	00 00 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     ....e...e...e...
 15c:	65 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     e...............
	...
 1b0:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 1c0:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 1d0:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 1e0:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 1f0:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 200:	65 0c 00 00 65 0c 00 00 65 0c 00 00 00 00 00 00     e...e...e.......
 210:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 220:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 230:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 240:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 250:	65 0c 00 00 65 0c 00 00 65 0c 00 00 65 0c 00 00     e...e...e...e...
 260:	65 0c 00 00 65 0c 00 00 65 0c 00 00                 e...e...e...

0000026c <has_holes.2>:
//VERY IMPORTANT: This function has a time budget of 40000 cycles, to avoid losing data in the fifo
void process_points(){
	static int32_t last_time = 0;
	//#### GNU extension: nested helper functions
	bool has_holes(uint16_t *points) {
		for(int i = 0; i < 360; i++) if(!points[i]) return true;
 26c:	2300      	movs	r3, #0
 26e:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 272:	da04      	bge.n	27e <has_holes.2+0x12>
 274:	f830 2013 	ldrh.w	r2, [r0, r3, lsl #1]
 278:	b11a      	cbz	r2, 282 <has_holes.2+0x16>
 27a:	3301      	adds	r3, #1
 27c:	e7f7      	b.n	26e <has_holes.2+0x2>
		return false;
 27e:	2000      	movs	r0, #0
 280:	4770      	bx	lr
		for(int i = 0; i < 360; i++) if(!points[i]) return true;
 282:	2001      	movs	r0, #1
	}
 284:	4770      	bx	lr
	...

00000288 <count_points.0>:
	
	int count_points(void) {
		int count = 0;
		for(int i = 0; i < 360; i++) {
 288:	2300      	movs	r3, #0
		int count = 0;
 28a:	4618      	mov	r0, r3
		for(int i = 0; i < 360; i++) {
 28c:	e000      	b.n	290 <count_points.0+0x8>
 28e:	3301      	adds	r3, #1
 290:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 294:	da06      	bge.n	2a4 <count_points.0+0x1c>
			if(g_points[i]) {
 296:	4a04      	ldr	r2, [pc, #16]	@ (2a8 <count_points.0+0x20>)
 298:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 29c:	2a00      	cmp	r2, #0
 29e:	d0f6      	beq.n	28e <count_points.0+0x6>
				count++;
 2a0:	3001      	adds	r0, #1
 2a2:	e7f4      	b.n	28e <count_points.0+0x6>
			}
		}
		return count;
	}
 2a4:	4770      	bx	lr
 2a6:	bf00      	nop
 2a8:	200005cc 	.word	0x200005cc

000002ac <bounded_idx.1>:
	
	//reminder, c does not have a modulo operator. It has a remainder operator.
	int bounded_idx(int idx) {
		while(idx < 0) idx += 360;
 2ac:	e001      	b.n	2b2 <bounded_idx.1+0x6>
 2ae:	f500 70b4 	add.w	r0, r0, #360	@ 0x168
 2b2:	2800      	cmp	r0, #0
 2b4:	dbfb      	blt.n	2ae <bounded_idx.1+0x2>
		return idx % 360;
 2b6:	4b06      	ldr	r3, [pc, #24]	@ (2d0 <bounded_idx.1+0x24>)
 2b8:	fb83 2300 	smull	r2, r3, r3, r0
 2bc:	4403      	add	r3, r0
 2be:	17c2      	asrs	r2, r0, #31
 2c0:	ebc2 2323 	rsb	r3, r2, r3, asr #8
	}
 2c4:	f44f 72b4 	mov.w	r2, #360	@ 0x168
 2c8:	fb02 0013 	mls	r0, r2, r3, r0
 2cc:	4770      	bx	lr
 2ce:	bf00      	nop
 2d0:	b60b60b7 	.word	0xb60b60b7

000002d4 <process_points>:
void process_points(){
 2d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	
	//Wipe the point buffer every second - prevent overly stale points accumulating
	if(last_time != uptime_seconds){
 2d6:	4b2f      	ldr	r3, [pc, #188]	@ (394 <process_points+0xc0>)
 2d8:	681a      	ldr	r2, [r3, #0]
 2da:	4b2f      	ldr	r3, [pc, #188]	@ (398 <process_points+0xc4>)
 2dc:	681b      	ldr	r3, [r3, #0]
 2de:	429a      	cmp	r2, r3
 2e0:	d00d      	beq.n	2fe <process_points+0x2a>
		//printlf("Wiping buffer\n");
		for(int j = 0; j < 360; j++) {
 2e2:	2300      	movs	r3, #0
 2e4:	e004      	b.n	2f0 <process_points+0x1c>
			g_points[j] = 0;
 2e6:	4a2d      	ldr	r2, [pc, #180]	@ (39c <process_points+0xc8>)
 2e8:	2100      	movs	r1, #0
 2ea:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for(int j = 0; j < 360; j++) {
 2ee:	3301      	adds	r3, #1
 2f0:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 2f4:	dbf7      	blt.n	2e6 <process_points+0x12>
		}
		last_time = uptime_seconds;
 2f6:	4b28      	ldr	r3, [pc, #160]	@ (398 <process_points+0xc4>)
 2f8:	681a      	ldr	r2, [r3, #0]
 2fa:	4b26      	ldr	r3, [pc, #152]	@ (394 <process_points+0xc0>)
 2fc:	601a      	str	r2, [r3, #0]
	}
	
	if(count_points() < 180) return; //Want at least this many points before we process this
 2fe:	f7ff ffc3 	bl	288 <count_points.0>
 302:	28b3      	cmp	r0, #179	@ 0xb3
 304:	dd45      	ble.n	392 <process_points+0xbe>

	uint16_t *temp = g_pt_buf;
	for(int i = 0; i < 360; i++) temp[i] = g_points[i];
 306:	2300      	movs	r3, #0
 308:	e006      	b.n	318 <process_points+0x44>
 30a:	4a24      	ldr	r2, [pc, #144]	@ (39c <process_points+0xc8>)
 30c:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 310:	4a23      	ldr	r2, [pc, #140]	@ (3a0 <process_points+0xcc>)
 312:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 316:	3301      	adds	r3, #1
 318:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 31c:	dbf5      	blt.n	30a <process_points+0x36>
 31e:	e020      	b.n	362 <process_points+0x8e>
	int iter = 0;
	while(has_holes(temp)) {
		int left = 0, right, mid; //indexes of start and end of a gap
		// find a point that is missing
		while(temp[left]) left++;
		while(!temp[bounded_idx(left-1)]) left--;
 320:	3c01      	subs	r4, #1
 322:	4620      	mov	r0, r4
 324:	f7ff ffc2 	bl	2ac <bounded_idx.1>
 328:	4605      	mov	r5, r0
 32a:	4b1d      	ldr	r3, [pc, #116]	@ (3a0 <process_points+0xcc>)
 32c:	f833 6010 	ldrh.w	r6, [r3, r0, lsl #1]
 330:	2e00      	cmp	r6, #0
 332:	d0f5      	beq.n	320 <process_points+0x4c>
		left -= 1;
		right = left;
		while(!temp[bounded_idx(right+1)]) right++; // walk to right, find last empty point
 334:	3401      	adds	r4, #1
 336:	4620      	mov	r0, r4
 338:	f7ff ffb8 	bl	2ac <bounded_idx.1>
 33c:	4b18      	ldr	r3, [pc, #96]	@ (3a0 <process_points+0xcc>)
 33e:	f833 7010 	ldrh.w	r7, [r3, r0, lsl #1]
 342:	2f00      	cmp	r7, #0
 344:	d0f6      	beq.n	334 <process_points+0x60>
		right += 1;
		left = bounded_idx(left);
		right = bounded_idx(right);
		int diff = bounded_idx(right - left);
 346:	1b40      	subs	r0, r0, r5
 348:	f7ff ffb0 	bl	2ac <bounded_idx.1>
		mid = bounded_idx(left + diff/2);
 34c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 350:	eb05 0060 	add.w	r0, r5, r0, asr #1
 354:	f7ff ffaa 	bl	2ac <bounded_idx.1>
		temp[mid] = (temp[left] + temp[right])/2;
 358:	443e      	add	r6, r7
 35a:	1076      	asrs	r6, r6, #1
 35c:	4b10      	ldr	r3, [pc, #64]	@ (3a0 <process_points+0xcc>)
 35e:	f823 6010 	strh.w	r6, [r3, r0, lsl #1]
	while(has_holes(temp)) {
 362:	480f      	ldr	r0, [pc, #60]	@ (3a0 <process_points+0xcc>)
 364:	f7ff ff82 	bl	26c <has_holes.2>
 368:	b138      	cbz	r0, 37a <process_points+0xa6>
		int left = 0, right, mid; //indexes of start and end of a gap
 36a:	2400      	movs	r4, #0
		while(temp[left]) left++;
 36c:	4b0c      	ldr	r3, [pc, #48]	@ (3a0 <process_points+0xcc>)
 36e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 372:	2b00      	cmp	r3, #0
 374:	d0d4      	beq.n	320 <process_points+0x4c>
 376:	3401      	adds	r4, #1
 378:	e7f8      	b.n	36c <process_points+0x98>
	}
	for(int i = 0; i < 360; i++) g_conditioned_points[i] = temp[i];
 37a:	2300      	movs	r3, #0
 37c:	e006      	b.n	38c <process_points+0xb8>
 37e:	4a08      	ldr	r2, [pc, #32]	@ (3a0 <process_points+0xcc>)
 380:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 384:	4a07      	ldr	r2, [pc, #28]	@ (3a4 <process_points+0xd0>)
 386:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 38a:	3301      	adds	r3, #1
 38c:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 390:	dbf5      	blt.n	37e <process_points+0xaa>
}
 392:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 394:	20000020 	.word	0x20000020
 398:	200008a8 	.word	0x200008a8
 39c:	200005cc 	.word	0x200005cc
 3a0:	20000024 	.word	0x20000024
 3a4:	200002f8 	.word	0x200002f8

000003a8 <setup_lidar_comms>:

void setup_lidar_comms(void){
 3a8:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
 3aa:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 3ae:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 3b0:	699b      	ldr	r3, [r3, #24]
 3b2:	4824      	ldr	r0, [pc, #144]	@ (444 <setup_lidar_comms+0x9c>)
 3b4:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART2);
 3b6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 3b8:	699b      	ldr	r3, [r3, #24]
 3ba:	4823      	ldr	r0, [pc, #140]	@ (448 <setup_lidar_comms+0xa0>)
 3bc:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART2)){};
 3be:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 3c2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 3c4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 3c8:	481f      	ldr	r0, [pc, #124]	@ (448 <setup_lidar_comms+0xa0>)
 3ca:	4798      	blx	r3
 3cc:	2800      	cmp	r0, #0
 3ce:	d0f6      	beq.n	3be <setup_lidar_comms+0x16>
	GPIO_PORTD_LOCK_R = 0x4C4F434B;
 3d0:	4c1e      	ldr	r4, [pc, #120]	@ (44c <setup_lidar_comms+0xa4>)
 3d2:	4b1f      	ldr	r3, [pc, #124]	@ (450 <setup_lidar_comms+0xa8>)
 3d4:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
	GPIO_PORTD_CR_R |= 0xFF;
 3d8:	f8d4 3524 	ldr.w	r3, [r4, #1316]	@ 0x524
 3dc:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 3e0:	f8c4 3524 	str.w	r3, [r4, #1316]	@ 0x524
	GPIO_PORTD_DEN_R |= 0xFF;
 3e4:	f8d4 351c 	ldr.w	r3, [r4, #1308]	@ 0x51c
 3e8:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 3ec:	f8c4 351c 	str.w	r3, [r4, #1308]	@ 0x51c
	GPIO_PORTD_PCTL_R = (GPIO_PORTD_PCTL_R & ~(GPIO_PCTL_PD7_M | GPIO_PCTL_PD6_M)) | GPIO_PCTL_PD7_U2TX | GPIO_PCTL_PD6_U2RX;
 3f0:	f8d4 352c 	ldr.w	r3, [r4, #1324]	@ 0x52c
 3f4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 3f8:	f043 5388 	orr.w	r3, r3, #285212672	@ 0x11000000
 3fc:	f8c4 352c 	str.w	r3, [r4, #1324]	@ 0x52c
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, LID_PINS, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 400:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 404:	6a2b      	ldr	r3, [r5, #32]
 406:	695e      	ldr	r6, [r3, #20]
 408:	2308      	movs	r3, #8
 40a:	2266      	movs	r2, #102	@ 0x66
 40c:	21c0      	movs	r1, #192	@ 0xc0
 40e:	4620      	mov	r0, r4
 410:	47b0      	blx	r6
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, RX_PIN, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD_WPU);
 412:	6a2b      	ldr	r3, [r5, #32]
 414:	695e      	ldr	r6, [r3, #20]
 416:	230a      	movs	r3, #10
 418:	2266      	movs	r2, #102	@ 0x66
 41a:	2140      	movs	r1, #64	@ 0x40
 41c:	4620      	mov	r0, r4
 41e:	47b0      	blx	r6
	ROM_GPIODirModeSet(GPIO_PORTD_BASE, LID_PINS, GPIO_DIR_MODE_HW);
 420:	6a2b      	ldr	r3, [r5, #32]
 422:	685b      	ldr	r3, [r3, #4]
 424:	2202      	movs	r2, #2
 426:	21c0      	movs	r1, #192	@ 0xc0
 428:	4620      	mov	r0, r4
 42a:	4798      	blx	r3
	//ROM_UARTClockSourceSet(LID_BASE, UART_CLOCK_SYSTEM);
	ROM_UARTConfigSetExpClk(LID_BASE, ROM_SysCtlClockGet(), LID_BAUD, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));
 42c:	696b      	ldr	r3, [r5, #20]
 42e:	695c      	ldr	r4, [r3, #20]
 430:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 432:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 434:	4798      	blx	r3
 436:	4601      	mov	r1, r0
 438:	2360      	movs	r3, #96	@ 0x60
 43a:	f44f 3261 	mov.w	r2, #230400	@ 0x38400
 43e:	4805      	ldr	r0, [pc, #20]	@ (454 <setup_lidar_comms+0xac>)
 440:	47a0      	blx	r4
	
}
 442:	bd70      	pop	{r4, r5, r6, pc}
 444:	f0000803 	.word	0xf0000803
 448:	f0001802 	.word	0xf0001802
 44c:	40007000 	.word	0x40007000
 450:	4c4f434b 	.word	0x4c4f434b
 454:	4000e000 	.word	0x4000e000

00000458 <start_lidar_scan>:

void start_lidar_scan(void) {
 458:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, COMMAND_MAGIC);
 45a:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 45e:	696b      	ldr	r3, [r5, #20]
 460:	681b      	ldr	r3, [r3, #0]
 462:	4c05      	ldr	r4, [pc, #20]	@ (478 <start_lidar_scan+0x20>)
 464:	21a5      	movs	r1, #165	@ 0xa5
 466:	4620      	mov	r0, r4
 468:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, COMMAND_START);
 46a:	696b      	ldr	r3, [r5, #20]
 46c:	681b      	ldr	r3, [r3, #0]
 46e:	2160      	movs	r1, #96	@ 0x60
 470:	4620      	mov	r0, r4
 472:	4798      	blx	r3
}
 474:	bd38      	pop	{r3, r4, r5, pc}
 476:	bf00      	nop
 478:	4000e000 	.word	0x4000e000

0000047c <stop_lidar_scan>:

void stop_lidar_scan(void) {
 47c:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, COMMAND_MAGIC);
 47e:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 482:	696b      	ldr	r3, [r5, #20]
 484:	681b      	ldr	r3, [r3, #0]
 486:	4c05      	ldr	r4, [pc, #20]	@ (49c <stop_lidar_scan+0x20>)
 488:	21a5      	movs	r1, #165	@ 0xa5
 48a:	4620      	mov	r0, r4
 48c:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, COMMAND_STOP);
 48e:	696b      	ldr	r3, [r5, #20]
 490:	681b      	ldr	r3, [r3, #0]
 492:	2165      	movs	r1, #101	@ 0x65
 494:	4620      	mov	r0, r4
 496:	4798      	blx	r3
}
 498:	bd38      	pop	{r3, r4, r5, pc}
 49a:	bf00      	nop
 49c:	4000e000 	.word	0x4000e000

000004a0 <clear_lidar_IO>:

void clear_lidar_IO(void){
 4a0:	b538      	push	{r3, r4, r5, lr}
	while(ROM_UARTCharsAvail(LID_BASE)){
 4a2:	e00a      	b.n	4ba <clear_lidar_IO+0x1a>
		ROM_UARTCharGet(LID_BASE);
 4a4:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 4a8:	696b      	ldr	r3, [r5, #20]
 4aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 4ac:	4c07      	ldr	r4, [pc, #28]	@ (4cc <clear_lidar_IO+0x2c>)
 4ae:	4620      	mov	r0, r4
 4b0:	4798      	blx	r3
		ROM_UARTRxErrorClear(LID_BASE);
 4b2:	696b      	ldr	r3, [r5, #20]
 4b4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 4b6:	4620      	mov	r0, r4
 4b8:	4798      	blx	r3
	while(ROM_UARTCharsAvail(LID_BASE)){
 4ba:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 4be:	695b      	ldr	r3, [r3, #20]
 4c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 4c2:	4802      	ldr	r0, [pc, #8]	@ (4cc <clear_lidar_IO+0x2c>)
 4c4:	4798      	blx	r3
 4c6:	2800      	cmp	r0, #0
 4c8:	d1ec      	bne.n	4a4 <clear_lidar_IO+0x4>
	}
}
 4ca:	bd38      	pop	{r3, r4, r5, pc}
 4cc:	4000e000 	.word	0x4000e000

000004d0 <map_to_degree>:

uint16_t map_to_degree(uint16_t start, uint16_t end, uint16_t count, uint16_t num){
 4d0:	ee07 0a90 	vmov	s15, r0
 4d4:	ee07 1a10 	vmov	s14, r1
 4d8:	ee06 2a10 	vmov	s12, r2
 4dc:	ee06 3a90 	vmov	s13, r3
	float delta = (((float)end)/64.0f - ((float)start)/64.0f)/(float)count;
 4e0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 4e4:	eddf 5a19 	vldr	s11, [pc, #100]	@ 54c <map_to_degree+0x7c>
 4e8:	ee27 7a25 	vmul.f32	s14, s14, s11
 4ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
 4f0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 4f4:	ee37 7a67 	vsub.f32	s14, s14, s15
 4f8:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 4fc:	eec7 5a06 	vdiv.f32	s11, s14, s12
	float degree = ((float)start)/64.0f + (delta * num);
 500:	eeb8 7ae6 	vcvt.f32.s32	s14, s13
 504:	ee27 7a25 	vmul.f32	s14, s14, s11
 508:	ee77 7a87 	vadd.f32	s15, s15, s14
	if(delta < 0 || degree < 0 || degree > 359) return 360; // 360 is a safe, do nothing location to write points that have angles that don't make sense.
 50c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 514:	d411      	bmi.n	53a <map_to_degree+0x6a>
 516:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 51a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 51e:	d40f      	bmi.n	540 <map_to_degree+0x70>
 520:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 550 <map_to_degree+0x80>
 524:	eef4 7ac7 	vcmpe.f32	s15, s14
 528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 52c:	dc0b      	bgt.n	546 <map_to_degree+0x76>
	return (uint16_t)degree;
 52e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 532:	ee17 3a90 	vmov	r3, s15
 536:	b298      	uxth	r0, r3
 538:	4770      	bx	lr
	if(delta < 0 || degree < 0 || degree > 359) return 360; // 360 is a safe, do nothing location to write points that have angles that don't make sense.
 53a:	f44f 70b4 	mov.w	r0, #360	@ 0x168
 53e:	4770      	bx	lr
 540:	f44f 70b4 	mov.w	r0, #360	@ 0x168
 544:	4770      	bx	lr
 546:	f44f 70b4 	mov.w	r0, #360	@ 0x168
}
 54a:	4770      	bx	lr
 54c:	3c800000 	.word	0x3c800000
 550:	43b38000 	.word	0x43b38000

00000554 <convert_to_mm>:

uint16_t convert_to_mm(uint16_t point){
	return point >> 2; //divide by 4
}
 554:	0880      	lsrs	r0, r0, #2
 556:	4770      	bx	lr

00000558 <check_header>:

//Returns true if header fails verification
bool check_header(ScanHeader *head) {
	//printlf("Magic\n");
	if(head->header.start_code != SCAN_MAGIC) return true; //incorret start word
 558:	8802      	ldrh	r2, [r0, #0]
 55a:	f245 53aa 	movw	r3, #21930	@ 0x55aa
 55e:	429a      	cmp	r2, r3
 560:	d109      	bne.n	576 <check_header+0x1e>
	//printlf("Start A\n");
	if(!(head->header.start_angle & 0x1)) return true; //incorrect angle data
 562:	8883      	ldrh	r3, [r0, #4]
 564:	f013 0f01 	tst.w	r3, #1
 568:	d007      	beq.n	57a <check_header+0x22>
	//printlf("End A\n");
	if(!(head->header.end_angle & 0x1)) return true; //incorrect angle data
 56a:	88c3      	ldrh	r3, [r0, #6]
 56c:	f013 0f01 	tst.w	r3, #1
 570:	d005      	beq.n	57e <check_header+0x26>
	return false;
 572:	2000      	movs	r0, #0
 574:	4770      	bx	lr
	if(head->header.start_code != SCAN_MAGIC) return true; //incorret start word
 576:	2001      	movs	r0, #1
 578:	4770      	bx	lr
	if(!(head->header.start_angle & 0x1)) return true; //incorrect angle data
 57a:	2001      	movs	r0, #1
 57c:	4770      	bx	lr
	if(!(head->header.end_angle & 0x1)) return true; //incorrect angle data
 57e:	2001      	movs	r0, #1
}
 580:	4770      	bx	lr

00000582 <checksum_header>:

//calculates checksum of header
uint16_t checksum_header(ScanHeader *head) {
 582:	4684      	mov	ip, r0
	uint16_t checksum = 0;
	//size minus 2 - don't include checksum word
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 584:	2200      	movs	r2, #0
	uint16_t checksum = 0;
 586:	4610      	mov	r0, r2
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 588:	e00a      	b.n	5a0 <checksum_header+0x1e>
		uint8_t low = head->bytes[i++];
 58a:	1c51      	adds	r1, r2, #1
 58c:	f81c 3002 	ldrb.w	r3, [ip, r2]
		uint8_t high = head->bytes[i++];
 590:	f81c 1001 	ldrb.w	r1, [ip, r1]
 594:	3202      	adds	r2, #2
		checksum ^= (high << 8) | low;
 596:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 59a:	b21b      	sxth	r3, r3
 59c:	4058      	eors	r0, r3
 59e:	b280      	uxth	r0, r0
	for(size_t i = 0; i < sizeof(*head) - 2; ) {
 5a0:	2a07      	cmp	r2, #7
 5a2:	d9f2      	bls.n	58a <checksum_header+0x8>
	}

	return checksum;
}
 5a4:	4770      	bx	lr
	...

000005a8 <process_packets>:

void process_packets(void) {
 5a8:	b570      	push	{r4, r5, r6, lr}
	static uint32_t current_byte = 0;
	static ScanHeader current_scan;
	static uint32_t current_point = 0;
	static uint16_t checksum = 0;
	
	while(ROM_UARTCharsAvail(LID_BASE)) {
 5aa:	e034      	b.n	616 <process_packets+0x6e>
		uint8_t received = ROM_UARTCharGet(LID_BASE);
		if(ROM_UARTRxErrorGet(UART2_BASE)) {
			#ifdef DEBUG_LID
			printlf("x");
 5ac:	4853      	ldr	r0, [pc, #332]	@ (6fc <process_packets+0x154>)
 5ae:	f000 fae1 	bl	b74 <printlf>
	}
	return;
	
	//HOT TAKE: Exception handling is just goto in fancy clothes
	reset:
	ROM_UARTRxErrorClear(LID_BASE);
 5b2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 5b6:	695b      	ldr	r3, [r3, #20]
 5b8:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 5ba:	4851      	ldr	r0, [pc, #324]	@ (700 <process_packets+0x158>)
 5bc:	4798      	blx	r3
	current_byte = 0;
 5be:	2300      	movs	r3, #0
 5c0:	4a50      	ldr	r2, [pc, #320]	@ (704 <process_packets+0x15c>)
 5c2:	6013      	str	r3, [r2, #0]
	current_point = 0;
 5c4:	4a50      	ldr	r2, [pc, #320]	@ (708 <process_packets+0x160>)
 5c6:	6013      	str	r3, [r2, #0]
	comm_state = WAITING_SCAN_HEADER;
 5c8:	4b50      	ldr	r3, [pc, #320]	@ (70c <process_packets+0x164>)
 5ca:	2202      	movs	r2, #2
 5cc:	701a      	strb	r2, [r3, #0]
	#ifdef DEBUG_LID
	//printlf("R\n");
	#endif
}
 5ce:	bd70      	pop	{r4, r5, r6, pc}
						if(received != SCAN_MAGIC_0) goto reset;
 5d0:	2eaa      	cmp	r6, #170	@ 0xaa
 5d2:	d1ee      	bne.n	5b2 <process_packets+0xa>
						current_scan.bytes[0] = received;
 5d4:	4b4e      	ldr	r3, [pc, #312]	@ (710 <process_packets+0x168>)
 5d6:	701e      	strb	r6, [r3, #0]
					break;
 5d8:	e01d      	b.n	616 <process_packets+0x6e>
				current_scan.bytes[current_byte++] = received;
 5da:	494a      	ldr	r1, [pc, #296]	@ (704 <process_packets+0x15c>)
 5dc:	680a      	ldr	r2, [r1, #0]
 5de:	1c53      	adds	r3, r2, #1
 5e0:	600b      	str	r3, [r1, #0]
 5e2:	494b      	ldr	r1, [pc, #300]	@ (710 <process_packets+0x168>)
 5e4:	548e      	strb	r6, [r1, r2]
				if(current_byte < sizeof(current_scan)) continue;
 5e6:	2b09      	cmp	r3, #9
 5e8:	d915      	bls.n	616 <process_packets+0x6e>
				if(check_header(&current_scan)) goto reset;
 5ea:	4608      	mov	r0, r1
 5ec:	f7ff ffb4 	bl	558 <check_header>
 5f0:	2800      	cmp	r0, #0
 5f2:	d1de      	bne.n	5b2 <process_packets+0xa>
				if(current_scan.header.type == START_PACKET) {
 5f4:	4b46      	ldr	r3, [pc, #280]	@ (710 <process_packets+0x168>)
 5f6:	789b      	ldrb	r3, [r3, #2]
 5f8:	2b01      	cmp	r3, #1
 5fa:	d03a      	beq.n	672 <process_packets+0xca>
				current_byte = 0;
 5fc:	2300      	movs	r3, #0
 5fe:	4a41      	ldr	r2, [pc, #260]	@ (704 <process_packets+0x15c>)
 600:	6013      	str	r3, [r2, #0]
				current_point = 0;
 602:	4a41      	ldr	r2, [pc, #260]	@ (708 <process_packets+0x160>)
 604:	6013      	str	r3, [r2, #0]
				checksum = checksum_header(&current_scan);
 606:	4842      	ldr	r0, [pc, #264]	@ (710 <process_packets+0x168>)
 608:	f7ff ffbb 	bl	582 <checksum_header>
 60c:	4b41      	ldr	r3, [pc, #260]	@ (714 <process_packets+0x16c>)
 60e:	8018      	strh	r0, [r3, #0]
				comm_state = RECEIVING_SCAN_DATA;
 610:	4b3e      	ldr	r3, [pc, #248]	@ (70c <process_packets+0x164>)
 612:	2204      	movs	r2, #4
 614:	701a      	strb	r2, [r3, #0]
	while(ROM_UARTCharsAvail(LID_BASE)) {
 616:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 61a:	695b      	ldr	r3, [r3, #20]
 61c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 61e:	4838      	ldr	r0, [pc, #224]	@ (700 <process_packets+0x158>)
 620:	4798      	blx	r3
 622:	2800      	cmp	r0, #0
 624:	d0d3      	beq.n	5ce <process_packets+0x26>
		uint8_t received = ROM_UARTCharGet(LID_BASE);
 626:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 62a:	696b      	ldr	r3, [r5, #20]
 62c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 62e:	4c34      	ldr	r4, [pc, #208]	@ (700 <process_packets+0x158>)
 630:	4620      	mov	r0, r4
 632:	4798      	blx	r3
 634:	b2c6      	uxtb	r6, r0
		if(ROM_UARTRxErrorGet(UART2_BASE)) {
 636:	696b      	ldr	r3, [r5, #20]
 638:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 63a:	4620      	mov	r0, r4
 63c:	4798      	blx	r3
 63e:	2800      	cmp	r0, #0
 640:	d1b4      	bne.n	5ac <process_packets+0x4>
		switch(comm_state) {
 642:	4b32      	ldr	r3, [pc, #200]	@ (70c <process_packets+0x164>)
 644:	781b      	ldrb	r3, [r3, #0]
 646:	2b03      	cmp	r3, #3
 648:	d0c7      	beq.n	5da <process_packets+0x32>
 64a:	2b04      	cmp	r3, #4
 64c:	d014      	beq.n	678 <process_packets+0xd0>
 64e:	2b02      	cmp	r3, #2
 650:	d1e1      	bne.n	616 <process_packets+0x6e>
				switch(current_byte++) {
 652:	4a2c      	ldr	r2, [pc, #176]	@ (704 <process_packets+0x15c>)
 654:	6813      	ldr	r3, [r2, #0]
 656:	1c59      	adds	r1, r3, #1
 658:	6011      	str	r1, [r2, #0]
 65a:	2b00      	cmp	r3, #0
 65c:	d0b8      	beq.n	5d0 <process_packets+0x28>
 65e:	2b01      	cmp	r3, #1
 660:	d1d9      	bne.n	616 <process_packets+0x6e>
						if(received != SCAN_MAGIC_1) goto reset;
 662:	2e55      	cmp	r6, #85	@ 0x55
 664:	d1a5      	bne.n	5b2 <process_packets+0xa>
						current_scan.bytes[1] = received;
 666:	4b2a      	ldr	r3, [pc, #168]	@ (710 <process_packets+0x168>)
 668:	705e      	strb	r6, [r3, #1]
						comm_state = RECEIVING_SCAN_HEADER;
 66a:	4b28      	ldr	r3, [pc, #160]	@ (70c <process_packets+0x164>)
 66c:	2203      	movs	r2, #3
 66e:	701a      	strb	r2, [r3, #0]
					break;
 670:	e7d1      	b.n	616 <process_packets+0x6e>
					process_points();
 672:	f7ff fe2f 	bl	2d4 <process_points>
					goto reset;
 676:	e79c      	b.n	5b2 <process_packets+0xa>
				switch(current_byte){
 678:	4b22      	ldr	r3, [pc, #136]	@ (704 <process_packets+0x15c>)
 67a:	681b      	ldr	r3, [r3, #0]
 67c:	2b00      	cmp	r3, #0
 67e:	d036      	beq.n	6ee <process_packets+0x146>
 680:	2b01      	cmp	r3, #1
 682:	d1c8      	bne.n	616 <process_packets+0x6e>
						current_byte = 0;
 684:	4b1f      	ldr	r3, [pc, #124]	@ (704 <process_packets+0x15c>)
 686:	2200      	movs	r2, #0
 688:	601a      	str	r2, [r3, #0]
						high = received;
 68a:	4b23      	ldr	r3, [pc, #140]	@ (718 <process_packets+0x170>)
 68c:	701e      	strb	r6, [r3, #0]
						uint16_t point = ((high&0xff) << 8) | low; //High is actually the 7 leftmost bits.
 68e:	4b23      	ldr	r3, [pc, #140]	@ (71c <process_packets+0x174>)
 690:	781b      	ldrb	r3, [r3, #0]
 692:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
 696:	461d      	mov	r5, r3
						checksum ^= point;
 698:	4a1e      	ldr	r2, [pc, #120]	@ (714 <process_packets+0x16c>)
 69a:	8814      	ldrh	r4, [r2, #0]
 69c:	405c      	eors	r4, r3
 69e:	b2a4      	uxth	r4, r4
 6a0:	8014      	strh	r4, [r2, #0]
						if(!(point & 0x80)) goto skip;
 6a2:	f013 0f80 	tst.w	r3, #128	@ 0x80
 6a6:	d011      	beq.n	6cc <process_packets+0x124>
						uint16_t angle = map_to_degree(current_scan.header.start_angle>>1, current_scan.header.end_angle>>1, current_scan.header.sample_count, current_point);
 6a8:	4a19      	ldr	r2, [pc, #100]	@ (710 <process_packets+0x168>)
 6aa:	8890      	ldrh	r0, [r2, #4]
 6ac:	88d1      	ldrh	r1, [r2, #6]
 6ae:	4b16      	ldr	r3, [pc, #88]	@ (708 <process_packets+0x160>)
 6b0:	881b      	ldrh	r3, [r3, #0]
 6b2:	78d2      	ldrb	r2, [r2, #3]
 6b4:	0849      	lsrs	r1, r1, #1
 6b6:	0840      	lsrs	r0, r0, #1
 6b8:	f7ff ff0a 	bl	4d0 <map_to_degree>
 6bc:	4606      	mov	r6, r0
						uint16_t tmp = convert_to_mm(point);
 6be:	4628      	mov	r0, r5
 6c0:	f7ff ff48 	bl	554 <convert_to_mm>
						if(tmp) g_points[angle] = tmp;
 6c4:	b110      	cbz	r0, 6cc <process_packets+0x124>
 6c6:	4a16      	ldr	r2, [pc, #88]	@ (720 <process_packets+0x178>)
 6c8:	f822 0016 	strh.w	r0, [r2, r6, lsl #1]
						if(++current_point >= current_scan.header.sample_count) {
 6cc:	4a0e      	ldr	r2, [pc, #56]	@ (708 <process_packets+0x160>)
 6ce:	6813      	ldr	r3, [r2, #0]
 6d0:	3301      	adds	r3, #1
 6d2:	6013      	str	r3, [r2, #0]
 6d4:	4a0e      	ldr	r2, [pc, #56]	@ (710 <process_packets+0x168>)
 6d6:	78d2      	ldrb	r2, [r2, #3]
 6d8:	4293      	cmp	r3, r2
 6da:	d39c      	bcc.n	616 <process_packets+0x6e>
							if(checksum != current_scan.header.checksum) printlf("Bad Checksum\n");
 6dc:	4b0c      	ldr	r3, [pc, #48]	@ (710 <process_packets+0x168>)
 6de:	891b      	ldrh	r3, [r3, #8]
 6e0:	429c      	cmp	r4, r3
 6e2:	f43f af66 	beq.w	5b2 <process_packets+0xa>
 6e6:	480f      	ldr	r0, [pc, #60]	@ (724 <process_packets+0x17c>)
 6e8:	f000 fa44 	bl	b74 <printlf>
							goto reset;
 6ec:	e761      	b.n	5b2 <process_packets+0xa>
						low = received;
 6ee:	4b0b      	ldr	r3, [pc, #44]	@ (71c <process_packets+0x174>)
 6f0:	701e      	strb	r6, [r3, #0]
						current_byte = 1;
 6f2:	4b04      	ldr	r3, [pc, #16]	@ (704 <process_packets+0x15c>)
 6f4:	2201      	movs	r2, #1
 6f6:	601a      	str	r2, [r3, #0]
					break;
 6f8:	e78d      	b.n	616 <process_packets+0x6e>
 6fa:	bf00      	nop
 6fc:	00000cb8 	.word	0x00000cb8
 700:	4000e000 	.word	0x4000e000
 704:	2000001c 	.word	0x2000001c
 708:	2000000c 	.word	0x2000000c
 70c:	20000000 	.word	0x20000000
 710:	20000010 	.word	0x20000010
 714:	2000000a 	.word	0x2000000a
 718:	20000008 	.word	0x20000008
 71c:	20000009 	.word	0x20000009
 720:	200005cc 	.word	0x200005cc
 724:	00000cbc 	.word	0x00000cbc

00000728 <main>:

#define Disable_Interrupts() __asm("CPSID I")
#define Enable_Interrupts() 


int main (void) {
 728:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlClockSet(SYSCTL_SYSDIV_2_5 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);
 72a:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 72e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 730:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 732:	4835      	ldr	r0, [pc, #212]	@ (808 <main+0xe0>)
 734:	4798      	blx	r3
	configureDebounceTimer();
 736:	f000 f87d 	bl	834 <configureDebounceTimer>
	setup_uart_printer();
 73a:	f000 f8eb 	bl	914 <setup_uart_printer>
	printlf("Init Lidar Comms\n");
 73e:	4833      	ldr	r0, [pc, #204]	@ (80c <main+0xe4>)
 740:	f000 fa18 	bl	b74 <printlf>
	setup_lidar_comms();
 744:	f7ff fe30 	bl	3a8 <setup_lidar_comms>
	printlf("Stopping Lidar scan\n");
 748:	4831      	ldr	r0, [pc, #196]	@ (810 <main+0xe8>)
 74a:	f000 fa13 	bl	b74 <printlf>
	stop_lidar_scan();
 74e:	f7ff fe95 	bl	47c <stop_lidar_scan>
	printlf("Flushing Lidar buffer\n");
 752:	4830      	ldr	r0, [pc, #192]	@ (814 <main+0xec>)
 754:	f000 fa0e 	bl	b74 <printlf>
	ROM_SysCtlDelay(1000000);
 758:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 75a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 75e:	4e2e      	ldr	r6, [pc, #184]	@ (818 <main+0xf0>)
 760:	4630      	mov	r0, r6
 762:	4798      	blx	r3
	clear_lidar_IO();
 764:	f7ff fe9c 	bl	4a0 <clear_lidar_IO>
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 768:	6963      	ldr	r3, [r4, #20]
 76a:	681b      	ldr	r3, [r3, #0]
 76c:	4d2b      	ldr	r5, [pc, #172]	@ (81c <main+0xf4>)
 76e:	21a5      	movs	r1, #165	@ 0xa5
 770:	4628      	mov	r0, r5
 772:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 774:	6963      	ldr	r3, [r4, #20]
 776:	681b      	ldr	r3, [r3, #0]
 778:	210b      	movs	r1, #11
 77a:	4628      	mov	r0, r5
 77c:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 77e:	6963      	ldr	r3, [r4, #20]
 780:	681b      	ldr	r3, [r3, #0]
 782:	21a5      	movs	r1, #165	@ 0xa5
 784:	4628      	mov	r0, r5
 786:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 788:	6963      	ldr	r3, [r4, #20]
 78a:	681b      	ldr	r3, [r3, #0]
 78c:	210b      	movs	r1, #11
 78e:	4628      	mov	r0, r5
 790:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 792:	6963      	ldr	r3, [r4, #20]
 794:	681b      	ldr	r3, [r3, #0]
 796:	21a5      	movs	r1, #165	@ 0xa5
 798:	4628      	mov	r0, r5
 79a:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 79c:	6963      	ldr	r3, [r4, #20]
 79e:	681b      	ldr	r3, [r3, #0]
 7a0:	210b      	movs	r1, #11
 7a2:	4628      	mov	r0, r5
 7a4:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 7a6:	6963      	ldr	r3, [r4, #20]
 7a8:	681b      	ldr	r3, [r3, #0]
 7aa:	21a5      	movs	r1, #165	@ 0xa5
 7ac:	4628      	mov	r0, r5
 7ae:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 7b0:	6963      	ldr	r3, [r4, #20]
 7b2:	681b      	ldr	r3, [r3, #0]
 7b4:	210b      	movs	r1, #11
 7b6:	4628      	mov	r0, r5
 7b8:	4798      	blx	r3
	clear_lidar_IO();
 7ba:	f7ff fe71 	bl	4a0 <clear_lidar_IO>
	ROM_SysCtlDelay(1000000);
 7be:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 7c0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 7c4:	4630      	mov	r0, r6
 7c6:	4798      	blx	r3
	printlf("Starting Scan\n");
 7c8:	4815      	ldr	r0, [pc, #84]	@ (820 <main+0xf8>)
 7ca:	f000 f9d3 	bl	b74 <printlf>
	start_lidar_scan();
 7ce:	f7ff fe43 	bl	458 <start_lidar_scan>
	printlf("Looping\n");
 7d2:	4814      	ldr	r0, [pc, #80]	@ (824 <main+0xfc>)
 7d4:	f000 f9ce 	bl	b74 <printlf>
	int i = 0;
 7d8:	2400      	movs	r4, #0
	while(1) {
		//if(g_conditioned_points[i]) 
		//printlf("%d:%d\n", i, g_points[i]);
		printlf("%d:%d\n", i, g_conditioned_points[i]);
 7da:	4b13      	ldr	r3, [pc, #76]	@ (828 <main+0x100>)
 7dc:	f833 2014 	ldrh.w	r2, [r3, r4, lsl #1]
 7e0:	4621      	mov	r1, r4
 7e2:	4812      	ldr	r0, [pc, #72]	@ (82c <main+0x104>)
 7e4:	f000 f9c6 	bl	b74 <printlf>
		process_packets();
 7e8:	f7ff fede 	bl	5a8 <process_packets>
		i = (i+1)%360;
 7ec:	1c62      	adds	r2, r4, #1
 7ee:	4b10      	ldr	r3, [pc, #64]	@ (830 <main+0x108>)
 7f0:	fb83 1302 	smull	r1, r3, r3, r2
 7f4:	4413      	add	r3, r2
 7f6:	17d4      	asrs	r4, r2, #31
 7f8:	ebc4 2423 	rsb	r4, r4, r3, asr #8
 7fc:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 800:	fb03 2414 	mls	r4, r3, r4, r2
	while(1) {
 804:	e7e9      	b.n	7da <main+0xb2>
 806:	bf00      	nop
 808:	c1000540 	.word	0xc1000540
 80c:	00000ccc 	.word	0x00000ccc
 810:	00000ce0 	.word	0x00000ce0
 814:	00000cf8 	.word	0x00000cf8
 818:	000f4240 	.word	0x000f4240
 81c:	4000e000 	.word	0x4000e000
 820:	00000d10 	.word	0x00000d10
 824:	00000d20 	.word	0x00000d20
 828:	200002f8 	.word	0x200002f8
 82c:	00000d2c 	.word	0x00000d2c
 830:	b60b60b7 	.word	0xb60b60b7

00000834 <configureDebounceTimer>:
void configureDebounceTimer(void) {
 834:	b538      	push	{r3, r4, r5, lr}
	SYSCTL_RCGCTIMER_R |= SYSCTL_RCGCTIMER_R1; //Enable Run Mode Clock Gating Control for Timer 0
 836:	4a1c      	ldr	r2, [pc, #112]	@ (8a8 <configureDebounceTimer+0x74>)
 838:	f8d2 3604 	ldr.w	r3, [r2, #1540]	@ 0x604
 83c:	f043 0302 	orr.w	r3, r3, #2
 840:	f8c2 3604 	str.w	r3, [r2, #1540]	@ 0x604
	while (!(SYSCTL_PRTIMER_R & SYSCTL_RCGCTIMER_R1)) {}
 844:	4b18      	ldr	r3, [pc, #96]	@ (8a8 <configureDebounceTimer+0x74>)
 846:	f8d3 3a04 	ldr.w	r3, [r3, #2564]	@ 0xa04
 84a:	f013 0f02 	tst.w	r3, #2
 84e:	d0f9      	beq.n	844 <configureDebounceTimer+0x10>
	TIMER1_CTL_R &= ~TIMER_CTL_TAEN; //Disable Timer
 850:	4c16      	ldr	r4, [pc, #88]	@ (8ac <configureDebounceTimer+0x78>)
 852:	68e3      	ldr	r3, [r4, #12]
 854:	f023 0301 	bic.w	r3, r3, #1
 858:	60e3      	str	r3, [r4, #12]
	TIMER1_CTL_R |= TIMER_CTL_TASTALL; //Stall for debug
 85a:	68e3      	ldr	r3, [r4, #12]
 85c:	f043 0302 	orr.w	r3, r3, #2
 860:	60e3      	str	r3, [r4, #12]
	TIMER1_CFG_R = TIMER_CFG_32_BIT_TIMER;
 862:	2500      	movs	r5, #0
 864:	6025      	str	r5, [r4, #0]
	TIMER1_TAMR_R |= TIMER_TAMR_TAMR_PERIOD; //Set Timer to count down periodically
 866:	6863      	ldr	r3, [r4, #4]
 868:	f043 0302 	orr.w	r3, r3, #2
 86c:	6063      	str	r3, [r4, #4]
	TIMER1_TAILR_R = TIMER_CYCLES-1;
 86e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 872:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 874:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 876:	4798      	blx	r3
 878:	0940      	lsrs	r0, r0, #5
 87a:	3801      	subs	r0, #1
 87c:	62a0      	str	r0, [r4, #40]	@ 0x28
	TIMER1_TAPR_R = 0;
 87e:	63a5      	str	r5, [r4, #56]	@ 0x38
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 880:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 882:	f043 0301 	orr.w	r3, r3, #1
 886:	6263      	str	r3, [r4, #36]	@ 0x24
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt as Timeout
 888:	69a3      	ldr	r3, [r4, #24]
 88a:	f043 0301 	orr.w	r3, r3, #1
 88e:	61a3      	str	r3, [r4, #24]
	NVIC_EN0_R = 1 << (INT_TIMER1A - 16);
 890:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 894:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 898:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
	TIMER1_CTL_R |= TIMER_CTL_TAEN; //Enable Timer
 89c:	68e3      	ldr	r3, [r4, #12]
 89e:	f043 0301 	orr.w	r3, r3, #1
 8a2:	60e3      	str	r3, [r4, #12]
}
 8a4:	bd38      	pop	{r3, r4, r5, pc}
 8a6:	bf00      	nop
 8a8:	400fe000 	.word	0x400fe000
 8ac:	40031000 	.word	0x40031000

000008b0 <timeKeeperISR>:
void timeKeeperISR (void) {
 8b0:	b410      	push	{r4}
	TIMER1_IMR_R &= ~TIMER_IMR_TATOIM; //Disable Interrupt
 8b2:	4b14      	ldr	r3, [pc, #80]	@ (904 <timeKeeperISR+0x54>)
 8b4:	699a      	ldr	r2, [r3, #24]
 8b6:	f022 0201 	bic.w	r2, r2, #1
 8ba:	619a      	str	r2, [r3, #24]
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 8bc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8be:	f042 0201 	orr.w	r2, r2, #1
 8c2:	625a      	str	r2, [r3, #36]	@ 0x24
	timer1_overflow_count++;
 8c4:	4c10      	ldr	r4, [pc, #64]	@ (908 <timeKeeperISR+0x58>)
 8c6:	e9d4 2300 	ldrd	r2, r3, [r4]
 8ca:	1c50      	adds	r0, r2, #1
 8cc:	f143 0100 	adc.w	r1, r3, #0
 8d0:	e9c4 0100 	strd	r0, r1, [r4]
	if(++second_counter == TIMER1_MULTIPLIER) {
 8d4:	4a0d      	ldr	r2, [pc, #52]	@ (90c <timeKeeperISR+0x5c>)
 8d6:	7813      	ldrb	r3, [r2, #0]
 8d8:	3301      	adds	r3, #1
 8da:	b2db      	uxtb	r3, r3
 8dc:	7013      	strb	r3, [r2, #0]
 8de:	2b20      	cmp	r3, #32
 8e0:	d007      	beq.n	8f2 <timeKeeperISR+0x42>
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
 8e2:	4a08      	ldr	r2, [pc, #32]	@ (904 <timeKeeperISR+0x54>)
 8e4:	6993      	ldr	r3, [r2, #24]
 8e6:	f043 0301 	orr.w	r3, r3, #1
 8ea:	6193      	str	r3, [r2, #24]
}
 8ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8f0:	4770      	bx	lr
		uptime_seconds++;
 8f2:	4a07      	ldr	r2, [pc, #28]	@ (910 <timeKeeperISR+0x60>)
 8f4:	6813      	ldr	r3, [r2, #0]
 8f6:	3301      	adds	r3, #1
 8f8:	6013      	str	r3, [r2, #0]
		second_counter = 0;
 8fa:	4b04      	ldr	r3, [pc, #16]	@ (90c <timeKeeperISR+0x5c>)
 8fc:	2200      	movs	r2, #0
 8fe:	701a      	strb	r2, [r3, #0]
 900:	e7ef      	b.n	8e2 <timeKeeperISR+0x32>
 902:	bf00      	nop
 904:	40031000 	.word	0x40031000
 908:	200008a0 	.word	0x200008a0
 90c:	2000089e 	.word	0x2000089e
 910:	200008a8 	.word	0x200008a8

00000914 <setup_uart_printer>:
#include <inc/hw_memmap.h>
#include <common/tm4c123gh6pm.h>

#define INFINITY 1.0f/0.f

void setup_uart_printer(void){
 914:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
 916:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 91a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 91c:	699b      	ldr	r3, [r3, #24]
 91e:	4818      	ldr	r0, [pc, #96]	@ (980 <setup_uart_printer+0x6c>)
 920:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
 922:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 924:	699b      	ldr	r3, [r3, #24]
 926:	4817      	ldr	r0, [pc, #92]	@ (984 <setup_uart_printer+0x70>)
 928:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART0)){};
 92a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 92e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 930:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 934:	4813      	ldr	r0, [pc, #76]	@ (984 <setup_uart_printer+0x70>)
 936:	4798      	blx	r3
 938:	2800      	cmp	r0, #0
 93a:	d0f6      	beq.n	92a <setup_uart_printer+0x16>
	
	ROM_GPIOPadConfigSet(GPIO_PORTA_BASE, 3, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 93c:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 940:	6a23      	ldr	r3, [r4, #32]
 942:	695d      	ldr	r5, [r3, #20]
 944:	2308      	movs	r3, #8
 946:	2266      	movs	r2, #102	@ 0x66
 948:	2103      	movs	r1, #3
 94a:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 94e:	47a8      	blx	r5
	ROM_GPIODirModeSet(GPIO_PORTA_BASE, 3, GPIO_DIR_MODE_HW);
 950:	6a23      	ldr	r3, [r4, #32]
 952:	685b      	ldr	r3, [r3, #4]
 954:	2202      	movs	r2, #2
 956:	2103      	movs	r1, #3
 958:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 95c:	4798      	blx	r3
	ROM_UARTClockSourceSet(UART0_BASE, UART_CLOCK_SYSTEM);
 95e:	6963      	ldr	r3, [r4, #20]
 960:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 962:	4d09      	ldr	r5, [pc, #36]	@ (988 <setup_uart_printer+0x74>)
 964:	2100      	movs	r1, #0
 966:	4628      	mov	r0, r5
 968:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(UART0_BASE, ROM_SysCtlClockGet(), 4000000,
 96a:	6963      	ldr	r3, [r4, #20]
 96c:	695e      	ldr	r6, [r3, #20]
 96e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 970:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 972:	4798      	blx	r3
 974:	4601      	mov	r1, r0
 976:	2368      	movs	r3, #104	@ 0x68
 978:	4a04      	ldr	r2, [pc, #16]	@ (98c <setup_uart_printer+0x78>)
 97a:	4628      	mov	r0, r5
 97c:	47b0      	blx	r6
                            (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_TWO | UART_CONFIG_PAR_NONE));
}
 97e:	bd70      	pop	{r4, r5, r6, pc}
 980:	f0000800 	.word	0xf0000800
 984:	f0001800 	.word	0xf0001800
 988:	4000c000 	.word	0x4000c000
 98c:	003d0900 	.word	0x003d0900

00000990 <putchar>:

void putchar(char c) {
 990:	b508      	push	{r3, lr}
 992:	4601      	mov	r1, r0
	static int chars_sent_recently = 0;
	ROM_UARTCharPut(UART0_BASE, c);
 994:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 998:	695b      	ldr	r3, [r3, #20]
 99a:	681b      	ldr	r3, [r3, #0]
 99c:	480c      	ldr	r0, [pc, #48]	@ (9d0 <putchar+0x40>)
 99e:	4798      	blx	r3
	while(ROM_UARTBusy(UART0_BASE)) {};
 9a0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 9a4:	695b      	ldr	r3, [r3, #20]
 9a6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 9a8:	4809      	ldr	r0, [pc, #36]	@ (9d0 <putchar+0x40>)
 9aa:	4798      	blx	r3
 9ac:	2800      	cmp	r0, #0
 9ae:	d1f7      	bne.n	9a0 <putchar+0x10>
	
	//Really dumb, but avoid overwhelming ICDI
	if(++chars_sent_recently > 7) {
 9b0:	4a08      	ldr	r2, [pc, #32]	@ (9d4 <putchar+0x44>)
 9b2:	6813      	ldr	r3, [r2, #0]
 9b4:	3301      	adds	r3, #1
 9b6:	6013      	str	r3, [r2, #0]
 9b8:	2b07      	cmp	r3, #7
 9ba:	dd07      	ble.n	9cc <putchar+0x3c>
		chars_sent_recently = 0;
 9bc:	2300      	movs	r3, #0
 9be:	6013      	str	r3, [r2, #0]
		//Yes, the delay has to be this long
		for(int i = 0; i < 280; i++) {
 9c0:	e001      	b.n	9c6 <putchar+0x36>
			__asm("mov r1,r1\n");
 9c2:	4609      	mov	r1, r1
		for(int i = 0; i < 280; i++) {
 9c4:	3301      	adds	r3, #1
 9c6:	f5b3 7f8c 	cmp.w	r3, #280	@ 0x118
 9ca:	dbfa      	blt.n	9c2 <putchar+0x32>
		}
	}
}
 9cc:	bd08      	pop	{r3, pc}
 9ce:	bf00      	nop
 9d0:	4000c000 	.word	0x4000c000
 9d4:	200008ac 	.word	0x200008ac

000009d8 <print_string>:

void print_string(const char * const str) {
 9d8:	b538      	push	{r3, r4, r5, lr}
 9da:	4605      	mov	r5, r0
	for(int i = 0; str[i] != '\0'; i++) {
 9dc:	2400      	movs	r4, #0
 9de:	e002      	b.n	9e6 <print_string+0xe>
		putchar( str[i]);
 9e0:	f7ff ffd6 	bl	990 <putchar>
	for(int i = 0; str[i] != '\0'; i++) {
 9e4:	3401      	adds	r4, #1
 9e6:	5d28      	ldrb	r0, [r5, r4]
 9e8:	2800      	cmp	r0, #0
 9ea:	d1f9      	bne.n	9e0 <print_string+0x8>
	}
}
 9ec:	bd38      	pop	{r3, r4, r5, pc}
	...

000009f0 <print_unsigned_decimal>:

void print_unsigned_decimal(uint32_t num){
 9f0:	b510      	push	{r4, lr}
 9f2:	b084      	sub	sp, #16
	
	char buf[11]; //Large enough to fit any value of num
	
	int places = 0;
 9f4:	2400      	movs	r4, #0
	
	do {
		buf[places++] = (char)('0' + (num % 10));
 9f6:	4b10      	ldr	r3, [pc, #64]	@ (a38 <print_unsigned_decimal+0x48>)
 9f8:	fba3 2300 	umull	r2, r3, r3, r0
 9fc:	08db      	lsrs	r3, r3, #3
 9fe:	4619      	mov	r1, r3
 a00:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 a04:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 a08:	4622      	mov	r2, r4
 a0a:	3330      	adds	r3, #48	@ 0x30
 a0c:	3210      	adds	r2, #16
 a0e:	446a      	add	r2, sp
 a10:	3401      	adds	r4, #1
 a12:	f802 3c0c 	strb.w	r3, [r2, #-12]
		num /= 10;
 a16:	4603      	mov	r3, r0
 a18:	4608      	mov	r0, r1
	} while (num > 0);
 a1a:	2b09      	cmp	r3, #9
 a1c:	d8eb      	bhi.n	9f6 <print_unsigned_decimal+0x6>
 a1e:	e007      	b.n	a30 <print_unsigned_decimal+0x40>
	
	for(; places; places--) {
		putchar( buf[places-1]);
 a20:	3c01      	subs	r4, #1
 a22:	f104 0310 	add.w	r3, r4, #16
 a26:	446b      	add	r3, sp
 a28:	f813 0c0c 	ldrb.w	r0, [r3, #-12]
 a2c:	f7ff ffb0 	bl	990 <putchar>
	for(; places; places--) {
 a30:	2c00      	cmp	r4, #0
 a32:	d1f5      	bne.n	a20 <print_unsigned_decimal+0x30>
	}
}
 a34:	b004      	add	sp, #16
 a36:	bd10      	pop	{r4, pc}
 a38:	cccccccd 	.word	0xcccccccd

00000a3c <print_decimal>:

void print_decimal(int32_t num){
 a3c:	b510      	push	{r4, lr}
	
	if (num < 0) {
 a3e:	1e04      	subs	r4, r0, #0
 a40:	db03      	blt.n	a4a <print_decimal+0xe>
		putchar( '-');
		num = 0 - num;
	}
	
	print_unsigned_decimal((uint32_t)num);
 a42:	4620      	mov	r0, r4
 a44:	f7ff ffd4 	bl	9f0 <print_unsigned_decimal>
}
 a48:	bd10      	pop	{r4, pc}
		putchar( '-');
 a4a:	202d      	movs	r0, #45	@ 0x2d
 a4c:	f7ff ffa0 	bl	990 <putchar>
		num = 0 - num;
 a50:	4264      	negs	r4, r4
 a52:	e7f6      	b.n	a42 <print_decimal+0x6>

00000a54 <print_float>:

void print_float(float number) {
 a54:	b510      	push	{r4, lr}
 a56:	ed2d 8b02 	vpush	{d8}
 a5a:	b084      	sub	sp, #16
	
	if(number != number) { //NaN is not equal to anything, including NaN
 a5c:	eeb4 0a40 	vcmp.f32	s0, s0
 a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a64:	d137      	bne.n	ad6 <print_float+0x82>
		print_string("NaN");
		return;
	}
	
	if(number == INFINITY || number == -INFINITY) {
 a66:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 a6a:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ b58 <print_float+0x104>
 a6e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 a72:	eef4 7a40 	vcmp.f32	s15, s0
 a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a7a:	d030      	beq.n	ade <print_float+0x8a>
 a7c:	eef1 7a67 	vneg.f32	s15, s15
 a80:	eef4 7a40 	vcmp.f32	s15, s0
 a84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a88:	d029      	beq.n	ade <print_float+0x8a>
		print_string("inf");
		return;
	}
	
	if(number > UINT32_MAX || (0-number) > UINT32_MAX) {
 a8a:	eddf 7a34 	vldr	s15, [pc, #208]	@ b5c <print_float+0x108>
 a8e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a96:	dc29      	bgt.n	aec <print_float+0x98>
 a98:	ed9f 8a2f 	vldr	s16, [pc, #188]	@ b58 <print_float+0x104>
 a9c:	ee38 8a40 	vsub.f32	s16, s16, s0
 aa0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 aa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 aa8:	dc20      	bgt.n	aec <print_float+0x98>
		return;
	}
	
	char buf[15]; // large enough to fit any value
	
	if(number < 0) {
 aaa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 ab2:	d41f      	bmi.n	af4 <print_float+0xa0>
		putchar( '-');
		number = 0 - number;
	}
	
	uint32_t integerPart = (uint32_t)number;
 ab4:	eefc 7ac0 	vcvt.u32.f32	s15, s0
	uint32_t decimalPart = (uint32_t)((number - integerPart) * 1000);
 ab8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 abc:	ee30 0a47 	vsub.f32	s0, s0, s14
 ac0:	ed9f 7a27 	vldr	s14, [pc, #156]	@ b60 <print_float+0x10c>
 ac4:	ee20 0a07 	vmul.f32	s0, s0, s14
 ac8:	eebc 7ac0 	vcvt.u32.f32	s14, s0
 acc:	ee17 3a10 	vmov	r3, s14
	
	int places = 0;
	
	for(int i = 0; i < 3; i++) {
 ad0:	2000      	movs	r0, #0
	int places = 0;
 ad2:	4601      	mov	r1, r0
	for(int i = 0; i < 3; i++) {
 ad4:	e026      	b.n	b24 <print_float+0xd0>
		print_string("NaN");
 ad6:	4823      	ldr	r0, [pc, #140]	@ (b64 <print_float+0x110>)
 ad8:	f7ff ff7e 	bl	9d8 <print_string>
		return;
 adc:	e002      	b.n	ae4 <print_float+0x90>
		print_string("inf");
 ade:	4822      	ldr	r0, [pc, #136]	@ (b68 <print_float+0x114>)
 ae0:	f7ff ff7a 	bl	9d8 <print_string>
	print_unsigned_decimal(integerPart);
	
	for(; places; places--) {
		putchar( buf[places-1]);
	}
}
 ae4:	b004      	add	sp, #16
 ae6:	ecbd 8b02 	vpop	{d8}
 aea:	bd10      	pop	{r4, pc}
		print_string("[out of range]");
 aec:	481f      	ldr	r0, [pc, #124]	@ (b6c <print_float+0x118>)
 aee:	f7ff ff73 	bl	9d8 <print_string>
		return;
 af2:	e7f7      	b.n	ae4 <print_float+0x90>
		putchar( '-');
 af4:	202d      	movs	r0, #45	@ 0x2d
 af6:	f7ff ff4b 	bl	990 <putchar>
		number = 0 - number;
 afa:	eeb0 0a48 	vmov.f32	s0, s16
 afe:	e7d9      	b.n	ab4 <print_float+0x60>
		buf[places++] = (char)('0' + decimalPart % 10);
 b00:	4a1b      	ldr	r2, [pc, #108]	@ (b70 <print_float+0x11c>)
 b02:	fba2 4203 	umull	r4, r2, r2, r3
 b06:	08d2      	lsrs	r2, r2, #3
 b08:	4614      	mov	r4, r2
 b0a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 b0e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
 b12:	3230      	adds	r2, #48	@ 0x30
 b14:	f101 0310 	add.w	r3, r1, #16
 b18:	446b      	add	r3, sp
 b1a:	f803 2c10 	strb.w	r2, [r3, #-16]
		decimalPart /= 10;
 b1e:	4623      	mov	r3, r4
	for(int i = 0; i < 3; i++) {
 b20:	3001      	adds	r0, #1
		buf[places++] = (char)('0' + decimalPart % 10);
 b22:	3101      	adds	r1, #1
	for(int i = 0; i < 3; i++) {
 b24:	2802      	cmp	r0, #2
 b26:	ddeb      	ble.n	b00 <print_float+0xac>
	buf[places++] = '.';
 b28:	1c4c      	adds	r4, r1, #1
 b2a:	f101 0310 	add.w	r3, r1, #16
 b2e:	eb0d 0103 	add.w	r1, sp, r3
 b32:	232e      	movs	r3, #46	@ 0x2e
 b34:	f801 3c10 	strb.w	r3, [r1, #-16]
	print_unsigned_decimal(integerPart);
 b38:	ee17 0a90 	vmov	r0, s15
 b3c:	f7ff ff58 	bl	9f0 <print_unsigned_decimal>
	for(; places; places--) {
 b40:	e007      	b.n	b52 <print_float+0xfe>
		putchar( buf[places-1]);
 b42:	3c01      	subs	r4, #1
 b44:	f104 0310 	add.w	r3, r4, #16
 b48:	446b      	add	r3, sp
 b4a:	f813 0c10 	ldrb.w	r0, [r3, #-16]
 b4e:	f7ff ff1f 	bl	990 <putchar>
	for(; places; places--) {
 b52:	2c00      	cmp	r4, #0
 b54:	d1f5      	bne.n	b42 <print_float+0xee>
 b56:	e7c5      	b.n	ae4 <print_float+0x90>
 b58:	00000000 	.word	0x00000000
 b5c:	4f800000 	.word	0x4f800000
 b60:	447a0000 	.word	0x447a0000
 b64:	00000d34 	.word	0x00000d34
 b68:	00000d38 	.word	0x00000d38
 b6c:	00000d3c 	.word	0x00000d3c
 b70:	cccccccd 	.word	0xcccccccd

00000b74 <printlf>:

void printlf(char format[], ...) {
 b74:	b40f      	push	{r0, r1, r2, r3}
 b76:	b570      	push	{r4, r5, r6, lr}
 b78:	b082      	sub	sp, #8
 b7a:	ab06      	add	r3, sp, #24
 b7c:	f853 5b04 	ldr.w	r5, [r3], #4
	va_list args;
	va_start(args, format);
 b80:	9301      	str	r3, [sp, #4]
	char *str;
	int32_t num;
	uint32_t numu;
	float *numf;
	
	for(int i=0; format[i] != '\0'; i++) {
 b82:	2400      	movs	r4, #0
 b84:	e030      	b.n	be8 <printlf+0x74>
		switch(format[i]) {
			case '%' :
				i++;
				switch(format[i]) {
					case 'u': //unsigned decimal number
						numu = va_arg(args, uint32_t);
 b86:	9b01      	ldr	r3, [sp, #4]
 b88:	1d1a      	adds	r2, r3, #4
 b8a:	9201      	str	r2, [sp, #4]
						print_unsigned_decimal(numu);
 b8c:	6818      	ldr	r0, [r3, #0]
 b8e:	f7ff ff2f 	bl	9f0 <print_unsigned_decimal>
				i++;
 b92:	4634      	mov	r4, r6
					break;
 b94:	e027      	b.n	be6 <printlf+0x72>
					
					case 'd': //signed decimal number
						num = va_arg(args, int32_t);
 b96:	9b01      	ldr	r3, [sp, #4]
 b98:	1d1a      	adds	r2, r3, #4
 b9a:	9201      	str	r2, [sp, #4]
						print_decimal(num);
 b9c:	6818      	ldr	r0, [r3, #0]
 b9e:	f7ff ff4d 	bl	a3c <print_decimal>
				i++;
 ba2:	4634      	mov	r4, r6
					break;
 ba4:	e01f      	b.n	be6 <printlf+0x72>
					
					case '\0': // End of string
						putchar( '%');
 ba6:	2025      	movs	r0, #37	@ 0x25
 ba8:	f7ff fef2 	bl	990 <putchar>
						i--; //let the for loop catch this
					break;
 bac:	e01b      	b.n	be6 <printlf+0x72>
					
					case 's': //string
						str = va_arg(args, char*);
 bae:	9b01      	ldr	r3, [sp, #4]
 bb0:	1d1a      	adds	r2, r3, #4
 bb2:	9201      	str	r2, [sp, #4]
						print_string(str);
 bb4:	6818      	ldr	r0, [r3, #0]
 bb6:	f7ff ff0f 	bl	9d8 <print_string>
				i++;
 bba:	4634      	mov	r4, r6
					break;
 bbc:	e013      	b.n	be6 <printlf+0x72>
					
					case 'f': //float
						numf = va_arg(args, float *);
 bbe:	9b01      	ldr	r3, [sp, #4]
 bc0:	1d1a      	adds	r2, r3, #4
 bc2:	9201      	str	r2, [sp, #4]
 bc4:	681b      	ldr	r3, [r3, #0]
						print_float(*numf);
 bc6:	ed93 0a00 	vldr	s0, [r3]
 bca:	f7ff ff43 	bl	a54 <print_float>
				i++;
 bce:	4634      	mov	r4, r6
					break;
 bd0:	e009      	b.n	be6 <printlf+0x72>
					
					default: //Not recognized
					putchar( '%');
 bd2:	2025      	movs	r0, #37	@ 0x25
 bd4:	f7ff fedc 	bl	990 <putchar>
					putchar( format[i]);
 bd8:	5da8      	ldrb	r0, [r5, r6]
 bda:	f7ff fed9 	bl	990 <putchar>
				i++;
 bde:	4634      	mov	r4, r6
					break;
 be0:	e001      	b.n	be6 <printlf+0x72>
				}
			break;
				
			default:
				putchar( format[i]);
 be2:	f7ff fed5 	bl	990 <putchar>
	for(int i=0; format[i] != '\0'; i++) {
 be6:	3401      	adds	r4, #1
 be8:	5d28      	ldrb	r0, [r5, r4]
 bea:	b398      	cbz	r0, c54 <printlf+0xe0>
		switch(format[i]) {
 bec:	2825      	cmp	r0, #37	@ 0x25
 bee:	d1f8      	bne.n	be2 <printlf+0x6e>
				i++;
 bf0:	1c66      	adds	r6, r4, #1
				switch(format[i]) {
 bf2:	5dab      	ldrb	r3, [r5, r6]
 bf4:	2b00      	cmp	r3, #0
 bf6:	d0d6      	beq.n	ba6 <printlf+0x32>
 bf8:	2b75      	cmp	r3, #117	@ 0x75
 bfa:	d8ea      	bhi.n	bd2 <printlf+0x5e>
 bfc:	2b64      	cmp	r3, #100	@ 0x64
 bfe:	d3e8      	bcc.n	bd2 <printlf+0x5e>
 c00:	3b64      	subs	r3, #100	@ 0x64
 c02:	2b11      	cmp	r3, #17
 c04:	d8e5      	bhi.n	bd2 <printlf+0x5e>
 c06:	a201      	add	r2, pc, #4	@ (adr r2, c0c <printlf+0x98>)
 c08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 c0c:	00000b97 	.word	0x00000b97
 c10:	00000bd3 	.word	0x00000bd3
 c14:	00000bbf 	.word	0x00000bbf
 c18:	00000bd3 	.word	0x00000bd3
 c1c:	00000bd3 	.word	0x00000bd3
 c20:	00000bd3 	.word	0x00000bd3
 c24:	00000bd3 	.word	0x00000bd3
 c28:	00000bd3 	.word	0x00000bd3
 c2c:	00000bd3 	.word	0x00000bd3
 c30:	00000bd3 	.word	0x00000bd3
 c34:	00000bd3 	.word	0x00000bd3
 c38:	00000bd3 	.word	0x00000bd3
 c3c:	00000bd3 	.word	0x00000bd3
 c40:	00000bd3 	.word	0x00000bd3
 c44:	00000bd3 	.word	0x00000bd3
 c48:	00000baf 	.word	0x00000baf
 c4c:	00000bd3 	.word	0x00000bd3
 c50:	00000b87 	.word	0x00000b87
			break;
		}
	}
	
	va_end(args);
}
 c54:	b002      	add	sp, #8
 c56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 c5a:	b004      	add	sp, #16
 c5c:	4770      	bx	lr
 c5e:	bf00      	nop

00000c60 <NmiSR>:
NmiSR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 c60:	e7fe      	b.n	c60 <NmiSR>

00000c62 <FaultISR>:
FaultISR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 c62:	e7fe      	b.n	c62 <FaultISR>

00000c64 <IntDefaultHandler>:
IntDefaultHandler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
 c64:	e7fe      	b.n	c64 <IntDefaultHandler>
	...

00000c68 <ResetISR>:
{
 c68:	b508      	push	{r3, lr}
    for(pulDest = &_data; pulDest < &_edata; )
 c6a:	4b0e      	ldr	r3, [pc, #56]	@ (ca4 <zero_loop+0x1e>)
    pulSrc = &_etext;
 c6c:	4a0e      	ldr	r2, [pc, #56]	@ (ca8 <zero_loop+0x22>)
    for(pulDest = &_data; pulDest < &_edata; )
 c6e:	e003      	b.n	c78 <ResetISR+0x10>
        *pulDest++ = *pulSrc++;
 c70:	f852 1b04 	ldr.w	r1, [r2], #4
 c74:	f843 1b04 	str.w	r1, [r3], #4
    for(pulDest = &_data; pulDest < &_edata; )
 c78:	490c      	ldr	r1, [pc, #48]	@ (cac <zero_loop+0x26>)
 c7a:	428b      	cmp	r3, r1
 c7c:	d3f8      	bcc.n	c70 <ResetISR+0x8>
    __asm("    ldr     r0, =_bss\n"
 c7e:	480c      	ldr	r0, [pc, #48]	@ (cb0 <zero_loop+0x2a>)
 c80:	490c      	ldr	r1, [pc, #48]	@ (cb4 <zero_loop+0x2e>)
 c82:	f04f 0200 	mov.w	r2, #0

00000c86 <zero_loop>:
 c86:	4288      	cmp	r0, r1
 c88:	bfb8      	it	lt
 c8a:	f840 2b04 	strlt.w	r2, [r0], #4
 c8e:	dbfa      	blt.n	c86 <zero_loop>
    *((uint32_t *)0xE000ED88) = 0xFFFFFFFF; //SPM376e pg 133 - enable FPU
 c90:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 c94:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 c98:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
    main();
 c9c:	f7ff fd44 	bl	728 <main>
}
 ca0:	bd08      	pop	{r3, pc}
 ca2:	bf00      	nop
 ca4:	20000000 	.word	0x20000000
 ca8:	00000d4b 	.word	0x00000d4b
 cac:	20000001 	.word	0x20000001
 cb0:	20000008 	.word	0x20000008
 cb4:	200009b0 	.word	0x200009b0
 cb8:	00000078 	.word	0x00000078
 cbc:	20646142 	.word	0x20646142
 cc0:	63656843 	.word	0x63656843
 cc4:	6d75736b 	.word	0x6d75736b
 cc8:	0000000a 	.word	0x0000000a
 ccc:	74696e49 	.word	0x74696e49
 cd0:	64694c20 	.word	0x64694c20
 cd4:	43207261 	.word	0x43207261
 cd8:	736d6d6f 	.word	0x736d6d6f
 cdc:	0000000a 	.word	0x0000000a
 ce0:	706f7453 	.word	0x706f7453
 ce4:	676e6970 	.word	0x676e6970
 ce8:	64694c20 	.word	0x64694c20
 cec:	73207261 	.word	0x73207261
 cf0:	0a6e6163 	.word	0x0a6e6163
 cf4:	00000000 	.word	0x00000000
 cf8:	73756c46 	.word	0x73756c46
 cfc:	676e6968 	.word	0x676e6968
 d00:	64694c20 	.word	0x64694c20
 d04:	62207261 	.word	0x62207261
 d08:	65666675 	.word	0x65666675
 d0c:	00000a72 	.word	0x00000a72
 d10:	72617453 	.word	0x72617453
 d14:	676e6974 	.word	0x676e6974
 d18:	61635320 	.word	0x61635320
 d1c:	00000a6e 	.word	0x00000a6e
 d20:	706f6f4c 	.word	0x706f6f4c
 d24:	0a676e69 	.word	0x0a676e69
 d28:	00000000 	.word	0x00000000
 d2c:	253a6425 	.word	0x253a6425
 d30:	00000a64 	.word	0x00000a64
 d34:	004e614e 	.word	0x004e614e
 d38:	00666e69 	.word	0x00666e69
 d3c:	74756f5b 	.word	0x74756f5b
 d40:	20666f20 	.word	0x20666f20
 d44:	676e6172 	.word	0x676e6172
 d48:	5d65      	.short	0x5d65
	...
