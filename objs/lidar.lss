
objs/lidar.axf:     file format elf32-littlearm

Contents of the .debug_info section:

  Compilation Unit @ offset 0:
   Length:        0x906 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0
   Pointer Size:  4
 <0><c>: Abbrev Number: 31 (DW_TAG_compile_unit)
    <d>   DW_AT_producer    : (indirect string, offset: 0x25a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <11>   DW_AT_language    : 29	(C11)
    <12>   DW_AT_name        : (indirect string, offset: 0x3b): src/lidar.c
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0x126): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1a>   DW_AT_ranges      : 0x26
    <1e>   DW_AT_low_pc      : 0
    <22>   DW_AT_stmt_list   : 0
 <1><26>: Abbrev Number: 4 (DW_TAG_base_type)
    <27>   DW_AT_byte_size   : 8
    <28>   DW_AT_encoding    : 7	(unsigned)
    <29>   DW_AT_name        : (indirect string, offset: 0x1ae): long long unsigned int
 <1><2d>: Abbrev Number: 4 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 4
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x1b8): unsigned int
 <1><34>: Abbrev Number: 4 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 1
    <36>   DW_AT_encoding    : 6	(signed char)
    <37>   DW_AT_name        : (indirect string, offset: 0x198): signed char
 <1><3b>: Abbrev Number: 6 (DW_TAG_typedef)
    <3c>   DW_AT_name        : (indirect string, offset: 0x409): __uint8_t
    <40>   DW_AT_decl_file   : 2
    <41>   DW_AT_decl_line   : 43
    <42>   DW_AT_decl_column : 24
    <43>   DW_AT_type        : <0x47>
 <1><47>: Abbrev Number: 4 (DW_TAG_base_type)
    <48>   DW_AT_byte_size   : 1
    <49>   DW_AT_encoding    : 8	(unsigned char)
    <4a>   DW_AT_name        : (indirect string, offset: 0x196): unsigned char
 <1><4e>: Abbrev Number: 4 (DW_TAG_base_type)
    <4f>   DW_AT_byte_size   : 2
    <50>   DW_AT_encoding    : 5	(signed)
    <51>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><55>: Abbrev Number: 6 (DW_TAG_typedef)
    <56>   DW_AT_name        : (indirect string, offset: 0x93): __uint16_t
    <5a>   DW_AT_decl_file   : 2
    <5b>   DW_AT_decl_line   : 57
    <5c>   DW_AT_decl_column : 25
    <5d>   DW_AT_type        : <0x61>
 <1><61>: Abbrev Number: 4 (DW_TAG_base_type)
    <62>   DW_AT_byte_size   : 2
    <63>   DW_AT_encoding    : 7	(unsigned)
    <64>   DW_AT_name        : (indirect string, offset: 0x1f2): short unsigned int
 <1><68>: Abbrev Number: 6 (DW_TAG_typedef)
    <69>   DW_AT_name        : (indirect string, offset: 0x35e): __int32_t
    <6d>   DW_AT_decl_file   : 2
    <6e>   DW_AT_decl_line   : 77
    <6f>   DW_AT_decl_column : 24
    <70>   DW_AT_type        : <0x74>
 <1><74>: Abbrev Number: 4 (DW_TAG_base_type)
    <75>   DW_AT_byte_size   : 4
    <76>   DW_AT_encoding    : 5	(signed)
    <77>   DW_AT_name        : (indirect string, offset: 0xec): long int
 <1><7b>: Abbrev Number: 6 (DW_TAG_typedef)
    <7c>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <80>   DW_AT_decl_file   : 2
    <81>   DW_AT_decl_line   : 79
    <82>   DW_AT_decl_column : 25
    <83>   DW_AT_type        : <0x87>
 <1><87>: Abbrev Number: 4 (DW_TAG_base_type)
    <88>   DW_AT_byte_size   : 4
    <89>   DW_AT_encoding    : 7	(unsigned)
    <8a>   DW_AT_name        : (indirect string, offset: 0x1b3): long unsigned int
 <1><8e>: Abbrev Number: 4 (DW_TAG_base_type)
    <8f>   DW_AT_byte_size   : 8
    <90>   DW_AT_encoding    : 5	(signed)
    <91>   DW_AT_name        : (indirect string, offset: 0xe7): long long int
 <1><95>: Abbrev Number: 32 (DW_TAG_base_type)
    <96>   DW_AT_byte_size   : 4
    <97>   DW_AT_encoding    : 5	(signed)
    <98>   DW_AT_name        : int
 <1><9c>: Abbrev Number: 6 (DW_TAG_typedef)
    <9d>   DW_AT_name        : (indirect string, offset: 0x40b): uint8_t
    <a1>   DW_AT_decl_file   : 3
    <a2>   DW_AT_decl_line   : 24
    <a3>   DW_AT_decl_column : 19
    <a4>   DW_AT_type        : <0x3b>
 <1><a8>: Abbrev Number: 6 (DW_TAG_typedef)
    <a9>   DW_AT_name        : (indirect string, offset: 0x95): uint16_t
    <ad>   DW_AT_decl_file   : 3
    <ae>   DW_AT_decl_line   : 36
    <af>   DW_AT_decl_column : 20
    <b0>   DW_AT_type        : <0x55>
 <1><b4>: Abbrev Number: 6 (DW_TAG_typedef)
    <b5>   DW_AT_name        : (indirect string, offset: 0x360): int32_t
    <b9>   DW_AT_decl_file   : 3
    <ba>   DW_AT_decl_line   : 44
    <bb>   DW_AT_decl_column : 19
    <bc>   DW_AT_type        : <0x68>
 <1><c0>: Abbrev Number: 33 (DW_TAG_const_type)
    <c1>   DW_AT_type        : <0xb4>
 <1><c5>: Abbrev Number: 6 (DW_TAG_typedef)
    <c6>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <ca>   DW_AT_decl_file   : 3
    <cb>   DW_AT_decl_line   : 48
    <cc>   DW_AT_decl_column : 20
    <cd>   DW_AT_type        : <0x7b>
 <1><d1>: Abbrev Number: 34 (DW_TAG_variable)
    <d2>   DW_AT_name        : (indirect string, offset: 0x112): active_point_buffer
    <d6>   DW_AT_decl_file   : 4
    <d7>   DW_AT_decl_line   : 5
    <d8>   DW_AT_decl_column : 18
    <d9>   DW_AT_type        : <0xdd>
    <dd>   DW_AT_external    : 1
    <dd>   DW_AT_declaration : 1
 <1><dd>: Abbrev Number: 25 (DW_TAG_pointer_type)
    <de>   DW_AT_byte_size   : 4
    <de>   DW_AT_type        : <0xc5>
 <1><e2>: Abbrev Number: 13 (DW_TAG_enumeration_type)
    <e3>   DW_AT_encoding    : 7	(unsigned)
    <e3>   DW_AT_byte_size   : 1
    <e3>   DW_AT_type        : <0x47>
    <e7>   DW_AT_decl_file   : 4
    <e8>   DW_AT_decl_line   : 10
    <e9>   DW_AT_decl_column : 7
    <ea>   DW_AT_sibling     : <0xfb>
 <2><ee>: Abbrev Number: 3 (DW_TAG_enumerator)
    <ef>   DW_AT_name        : (indirect string, offset: 0x2f8): MODE_SINGLE
    <f3>   DW_AT_const_value : 0
 <2><f4>: Abbrev Number: 3 (DW_TAG_enumerator)
    <f5>   DW_AT_name        : (indirect string, offset: 0x210): MODE_CONTINUOUS
    <f9>   DW_AT_const_value : 1
 <2><fa>: Abbrev Number: 0
 <1><fb>: Abbrev Number: 13 (DW_TAG_enumeration_type)
    <fc>   DW_AT_encoding    : 7	(unsigned)
    <fc>   DW_AT_byte_size   : 1
    <fc>   DW_AT_type        : <0x47>
    <100>   DW_AT_decl_file   : 4
    <101>   DW_AT_decl_line   : 11
    <102>   DW_AT_decl_column : 7
    <103>   DW_AT_sibling     : <0x114>
 <2><107>: Abbrev Number: 3 (DW_TAG_enumerator)
    <108>   DW_AT_name        : (indirect string, offset: 0x38c): TYPE_SCAN
    <10c>   DW_AT_const_value : 129
 <2><10d>: Abbrev Number: 3 (DW_TAG_enumerator)
    <10e>   DW_AT_name        : (indirect string, offset: 0x220): TYPE_HEALTH_STATUS
    <112>   DW_AT_const_value : 6
 <2><113>: Abbrev Number: 0
 <1><114>: Abbrev Number: 26 (DW_TAG_structure_type)
    <115>   DW_AT_name        : (indirect string, offset: 0xb): HeaderFields
    <119>   DW_AT_byte_size   : 7
    <11a>   DW_AT_decl_file   : 4
    <11a>   DW_AT_decl_line   : 7
    <11b>   DW_AT_decl_column : 32
    <11b>   DW_AT_sibling     : <0x153>
 <2><11f>: Abbrev Number: 8 (DW_TAG_member)
    <120>   DW_AT_name        : (indirect string, offset: 0xa3): start_code
    <124>   DW_AT_decl_file   : 4
    <124>   DW_AT_decl_line   : 8
    <125>   DW_AT_decl_column : 11
    <126>   DW_AT_type        : <0xa8>
    <12a>   DW_AT_data_member_location: 0
 <2><12b>: Abbrev Number: 14 (DW_TAG_member)
    <12c>   DW_AT_name        : (indirect string, offset: 0x18f): length
    <130>   DW_AT_decl_file   : 4
    <130>   DW_AT_decl_line   : 9
    <131>   DW_AT_decl_column : 11
    <132>   DW_AT_type        : <0xc5>
    <136>   DW_AT_bit_size    : 30
    <137>   DW_AT_data_bit_offset: 16
 <2><138>: Abbrev Number: 14 (DW_TAG_member)
    <139>   DW_AT_name        : (indirect string, offset: 0x78): mode
    <13d>   DW_AT_decl_file   : 4
    <13d>   DW_AT_decl_line   : 10
    <13e>   DW_AT_decl_column : 46
    <13f>   DW_AT_type        : <0xe2>
    <143>   DW_AT_bit_size    : 2
    <144>   DW_AT_data_bit_offset: 46
 <2><145>: Abbrev Number: 14 (DW_TAG_member)
    <146>   DW_AT_name        : (indirect string, offset: 0x242): type
    <14a>   DW_AT_decl_file   : 4
    <14a>   DW_AT_decl_line   : 11
    <14b>   DW_AT_decl_column : 49
    <14c>   DW_AT_type        : <0xfb>
    <150>   DW_AT_bit_size    : 8
    <151>   DW_AT_data_bit_offset: 48
 <2><152>: Abbrev Number: 0
 <1><153>: Abbrev Number: 27 (DW_TAG_union_type)
    <154>   DW_AT_byte_size   : 7
    <155>   DW_AT_decl_file   : 4
    <155>   DW_AT_decl_line   : 13
    <156>   DW_AT_decl_column : 9
    <156>   DW_AT_sibling     : <0x171>
 <2><15a>: Abbrev Number: 15 (DW_TAG_member)
    <15b>   DW_AT_name        : (indirect string, offset: 0x326): bytes
    <15f>   DW_AT_decl_file   : 4
    <15f>   DW_AT_decl_line   : 14
    <160>   DW_AT_decl_column : 10
    <161>   DW_AT_type        : <0x171>
 <2><165>: Abbrev Number: 15 (DW_TAG_member)
    <166>   DW_AT_name        : (indirect string, offset: 0): header
    <16a>   DW_AT_decl_file   : 4
    <16a>   DW_AT_decl_line   : 15
    <16b>   DW_AT_decl_column : 22
    <16c>   DW_AT_type        : <0x114>
 <2><170>: Abbrev Number: 0
 <1><171>: Abbrev Number: 20 (DW_TAG_array_type)
    <172>   DW_AT_type        : <0x9c>
    <176>   DW_AT_sibling     : <0x181>
 <2><17a>: Abbrev Number: 28 (DW_TAG_subrange_type)
    <17b>   DW_AT_type        : <0x2d>
    <17f>   DW_AT_upper_bound : 6
 <2><180>: Abbrev Number: 0
 <1><181>: Abbrev Number: 6 (DW_TAG_typedef)
    <182>   DW_AT_name        : (indirect string, offset: 0x343): PacketHeader
    <186>   DW_AT_decl_file   : 4
    <187>   DW_AT_decl_line   : 16
    <188>   DW_AT_decl_column : 3
    <189>   DW_AT_type        : <0x153>
 <1><18d>: Abbrev Number: 13 (DW_TAG_enumeration_type)
    <18e>   DW_AT_encoding    : 7	(unsigned)
    <18e>   DW_AT_byte_size   : 1
    <18e>   DW_AT_type        : <0x47>
    <192>   DW_AT_decl_file   : 4
    <193>   DW_AT_decl_line   : 21
    <194>   DW_AT_decl_column : 7
    <195>   DW_AT_sibling     : <0x1a6>
 <2><199>: Abbrev Number: 3 (DW_TAG_enumerator)
    <19a>   DW_AT_name        : (indirect string, offset: 0x86): START_PACKET
    <19e>   DW_AT_const_value : 1
 <2><19f>: Abbrev Number: 3 (DW_TAG_enumerator)
    <1a0>   DW_AT_name        : (indirect string, offset: 0xb6): DATA_PACKET
    <1a4>   DW_AT_const_value : 0
 <2><1a5>: Abbrev Number: 0
 <1><1a6>: Abbrev Number: 26 (DW_TAG_structure_type)
    <1a7>   DW_AT_name        : (indirect string, offset: 0x7): ScanHeaderFields
    <1ab>   DW_AT_byte_size   : 10
    <1ac>   DW_AT_decl_file   : 4
    <1ac>   DW_AT_decl_line   : 19
    <1ad>   DW_AT_decl_column : 32
    <1ad>   DW_AT_sibling     : <0x1fb>
 <2><1b1>: Abbrev Number: 8 (DW_TAG_member)
    <1b2>   DW_AT_name        : (indirect string, offset: 0xa3): start_code
    <1b6>   DW_AT_decl_file   : 4
    <1b6>   DW_AT_decl_line   : 20
    <1b7>   DW_AT_decl_column : 11
    <1b8>   DW_AT_type        : <0xa8>
    <1bc>   DW_AT_data_member_location: 0
 <2><1bd>: Abbrev Number: 14 (DW_TAG_member)
    <1be>   DW_AT_name        : (indirect string, offset: 0x242): type
    <1c2>   DW_AT_decl_file   : 4
    <1c2>   DW_AT_decl_line   : 21
    <1c3>   DW_AT_decl_column : 45
    <1c4>   DW_AT_type        : <0x18d>
    <1c8>   DW_AT_bit_size    : 8
    <1c9>   DW_AT_data_bit_offset: 16
 <2><1ca>: Abbrev Number: 8 (DW_TAG_member)
    <1cb>   DW_AT_name        : (indirect string, offset: 0x247): sample_count
    <1cf>   DW_AT_decl_file   : 4
    <1cf>   DW_AT_decl_line   : 22
    <1d0>   DW_AT_decl_column : 10
    <1d1>   DW_AT_type        : <0x9c>
    <1d5>   DW_AT_data_member_location: 3
 <2><1d6>: Abbrev Number: 8 (DW_TAG_member)
    <1d7>   DW_AT_name        : (indirect string, offset: 0x39f): start_angle
    <1db>   DW_AT_decl_file   : 4
    <1db>   DW_AT_decl_line   : 23
    <1dc>   DW_AT_decl_column : 11
    <1dd>   DW_AT_type        : <0xa8>
    <1e1>   DW_AT_data_member_location: 4
 <2><1e2>: Abbrev Number: 8 (DW_TAG_member)
    <1e3>   DW_AT_name        : (indirect string, offset: 0x1a4): end_angle
    <1e7>   DW_AT_decl_file   : 4
    <1e7>   DW_AT_decl_line   : 24
    <1e8>   DW_AT_decl_column : 11
    <1e9>   DW_AT_type        : <0xa8>
    <1ed>   DW_AT_data_member_location: 6
 <2><1ee>: Abbrev Number: 8 (DW_TAG_member)
    <1ef>   DW_AT_name        : (indirect string, offset: 0x383): checksum
    <1f3>   DW_AT_decl_file   : 4
    <1f3>   DW_AT_decl_line   : 25
    <1f4>   DW_AT_decl_column : 11
    <1f5>   DW_AT_type        : <0xa8>
    <1f9>   DW_AT_data_member_location: 8
 <2><1fa>: Abbrev Number: 0
 <1><1fb>: Abbrev Number: 27 (DW_TAG_union_type)
    <1fc>   DW_AT_byte_size   : 10
    <1fd>   DW_AT_decl_file   : 4
    <1fd>   DW_AT_decl_line   : 27
    <1fe>   DW_AT_decl_column : 9
    <1fe>   DW_AT_sibling     : <0x219>
 <2><202>: Abbrev Number: 15 (DW_TAG_member)
    <203>   DW_AT_name        : (indirect string, offset: 0x326): bytes
    <207>   DW_AT_decl_file   : 4
    <207>   DW_AT_decl_line   : 28
    <208>   DW_AT_decl_column : 10
    <209>   DW_AT_type        : <0x219>
 <2><20d>: Abbrev Number: 15 (DW_TAG_member)
    <20e>   DW_AT_name        : (indirect string, offset: 0): header
    <212>   DW_AT_decl_file   : 4
    <212>   DW_AT_decl_line   : 29
    <213>   DW_AT_decl_column : 26
    <214>   DW_AT_type        : <0x1a6>
 <2><218>: Abbrev Number: 0
 <1><219>: Abbrev Number: 20 (DW_TAG_array_type)
    <21a>   DW_AT_type        : <0x9c>
    <21e>   DW_AT_sibling     : <0x229>
 <2><222>: Abbrev Number: 28 (DW_TAG_subrange_type)
    <223>   DW_AT_type        : <0x2d>
    <227>   DW_AT_upper_bound : 9
 <2><228>: Abbrev Number: 0
 <1><229>: Abbrev Number: 6 (DW_TAG_typedef)
    <22a>   DW_AT_name        : (indirect string, offset: 0x378): ScanHeader
    <22e>   DW_AT_decl_file   : 4
    <22f>   DW_AT_decl_line   : 30
    <230>   DW_AT_decl_column : 3
    <231>   DW_AT_type        : <0x1fb>
 <1><235>: Abbrev Number: 20 (DW_TAG_array_type)
    <236>   DW_AT_type        : <0xc5>
    <23a>   DW_AT_sibling     : <0x246>
 <2><23e>: Abbrev Number: 35 (DW_TAG_subrange_type)
    <23f>   DW_AT_type        : <0x2d>
    <243>   DW_AT_upper_bound : 359
 <2><245>: Abbrev Number: 0
 <1><246>: Abbrev Number: 16 (DW_TAG_variable)
    <247>   DW_AT_name        : (indirect string, offset: 0x1c5): points_buf_0
    <24b>   DW_AT_decl_file   : 1
    <24b>   DW_AT_decl_line   : 33
    <24c>   DW_AT_decl_column : 10
    <24d>   DW_AT_type        : <0x235>
    <251>   DW_AT_external    : 1
    <251>   DW_AT_location    : 5 byte block: 3 68 b 0 20 	(DW_OP_addr: 20000b68)
 <1><257>: Abbrev Number: 16 (DW_TAG_variable)
    <258>   DW_AT_name        : (indirect string, offset: 0x1d2): points_buf_1
    <25c>   DW_AT_decl_file   : 1
    <25c>   DW_AT_decl_line   : 34
    <25d>   DW_AT_decl_column : 10
    <25e>   DW_AT_type        : <0x235>
    <262>   DW_AT_external    : 1
    <262>   DW_AT_location    : 5 byte block: 3 c8 5 0 20 	(DW_OP_addr: 200005c8)
 <1><268>: Abbrev Number: 16 (DW_TAG_variable)
    <269>   DW_AT_name        : (indirect string, offset: 0x350): points_smooth
    <26d>   DW_AT_decl_file   : 1
    <26d>   DW_AT_decl_line   : 35
    <26e>   DW_AT_decl_column : 10
    <26f>   DW_AT_type        : <0x235>
    <273>   DW_AT_external    : 1
    <273>   DW_AT_location    : 5 byte block: 3 28 0 0 20 	(DW_OP_addr: 20000028)
 <1><279>: Abbrev Number: 36 (DW_TAG_variable)
    <27a>   DW_AT_specification: <0xd1>
    <27e>   DW_AT_decl_file   : 1
    <27f>   DW_AT_decl_line   : 36
    <280>   DW_AT_decl_column : 11
    <281>   DW_AT_location    : 5 byte block: 3 24 0 0 20 	(DW_OP_addr: 20000024)
 <1><287>: Abbrev Number: 16 (DW_TAG_variable)
    <288>   DW_AT_name        : (indirect string, offset: 0x3f2): receiving_point_buffer
    <28c>   DW_AT_decl_file   : 1
    <28c>   DW_AT_decl_line   : 37
    <28d>   DW_AT_decl_column : 11
    <28e>   DW_AT_type        : <0xdd>
    <292>   DW_AT_external    : 1
    <292>   DW_AT_location    : 5 byte block: 3 20 0 0 20 	(DW_OP_addr: 20000020)
 <1><298>: Abbrev Number: 37 (DW_TAG_subprogram)
    <299>   DW_AT_external    : 1
    <299>   DW_AT_name        : (indirect string, offset: 0x155): printlf
    <29d>   DW_AT_decl_file   : 5
    <29e>   DW_AT_decl_line   : 10
    <29f>   DW_AT_decl_column : 6
    <2a0>   DW_AT_prototyped  : 1
    <2a0>   DW_AT_declaration : 1
    <2a0>   DW_AT_sibling     : <0x2ab>
 <2><2a4>: Abbrev Number: 38 (DW_TAG_formal_parameter)
    <2a5>   DW_AT_type        : <0x2ab>
 <2><2a9>: Abbrev Number: 39 (DW_TAG_unspecified_parameters)
 <2><2aa>: Abbrev Number: 0
 <1><2ab>: Abbrev Number: 25 (DW_TAG_pointer_type)
    <2ac>   DW_AT_byte_size   : 4
    <2ac>   DW_AT_type        : <0x2b0>
 <1><2b0>: Abbrev Number: 4 (DW_TAG_base_type)
    <2b1>   DW_AT_byte_size   : 1
    <2b2>   DW_AT_encoding    : 8	(unsigned char)
    <2b3>   DW_AT_name        : (indirect string, offset: 0x19f): char
 <1><2b7>: Abbrev Number: 9 (DW_TAG_subprogram)
    <2b8>   DW_AT_external    : 1
    <2b8>   DW_AT_name        : (indirect string, offset: 0x304): process_packets
    <2bc>   DW_AT_decl_file   : 1
    <2bc>   DW_AT_decl_line   : 151
    <2bd>   DW_AT_decl_column : 6
    <2bd>   DW_AT_prototyped  : 1
    <2bd>   DW_AT_low_pc      : 0x508
    <2c1>   DW_AT_high_pc     : 0x2a0
    <2c5>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <2c7>   DW_AT_call_all_calls: 1
    <2c7>   DW_AT_sibling     : <0x575>
 <2><2cb>: Abbrev Number: 13 (DW_TAG_enumeration_type)
    <2cc>   DW_AT_encoding    : 7	(unsigned)
    <2cc>   DW_AT_byte_size   : 1
    <2cc>   DW_AT_type        : <0x47>
    <2d0>   DW_AT_decl_file   : 1
    <2d1>   DW_AT_decl_line   : 152
    <2d2>   DW_AT_decl_column : 14
    <2d3>   DW_AT_sibling     : <0x2fc>
 <3><2d7>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2d8>   DW_AT_name        : (indirect string, offset: 0x1df): COMM_WAITING
    <2dc>   DW_AT_const_value : 0
 <3><2dd>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2de>   DW_AT_name        : (indirect string, offset: 0x3be): RECEIVING_HEADER
    <2e2>   DW_AT_const_value : 1
 <3><2e3>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2e4>   DW_AT_name        : (indirect string, offset: 0x18): WAITING_SCAN_HEADER
    <2e8>   DW_AT_const_value : 2
 <3><2e9>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2ea>   DW_AT_name        : (indirect string, offset: 0xcc): RECEIVING_SCAN_HEADER
    <2ee>   DW_AT_const_value : 3
 <3><2ef>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2f0>   DW_AT_name        : (indirect string, offset: 0x16a): RECEIVING_SCAN_DATA
    <2f4>   DW_AT_const_value : 4
 <3><2f5>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2f6>   DW_AT_name        : (indirect string, offset: 0x3da): RECEIVING_HEALTH_REPORT
    <2fa>   DW_AT_const_value : 5
 <3><2fb>: Abbrev Number: 0
 <2><2fc>: Abbrev Number: 10 (DW_TAG_variable)
    <2fd>   DW_AT_name        : (indirect string, offset: 0x3cf): comm_state
    <301>   DW_AT_decl_file   : 1
    <301>   DW_AT_decl_line   : 152
    <302>   DW_AT_decl_column : 137
    <303>   DW_AT_type        : <0x2cb>
    <307>   DW_AT_location    : 5 byte block: 3 1e 0 0 20 	(DW_OP_addr: 2000001e)
 <2><30d>: Abbrev Number: 10 (DW_TAG_variable)
    <30e>   DW_AT_name        : (indirect string, offset: 0x15d): current_byte
    <312>   DW_AT_decl_file   : 1
    <312>   DW_AT_decl_line   : 153
    <313>   DW_AT_decl_column : 18
    <314>   DW_AT_type        : <0xa8>
    <318>   DW_AT_location    : 5 byte block: 3 1c 0 0 20 	(DW_OP_addr: 2000001c)
 <2><31e>: Abbrev Number: 10 (DW_TAG_variable)
    <31f>   DW_AT_name        : (indirect string, offset: 0x32c): current_message
    <323>   DW_AT_decl_file   : 1
    <323>   DW_AT_decl_line   : 154
    <324>   DW_AT_decl_column : 22
    <325>   DW_AT_type        : <0x181>
    <329>   DW_AT_location    : 5 byte block: 3 14 0 0 20 	(DW_OP_addr: 20000014)
 <2><32f>: Abbrev Number: 10 (DW_TAG_variable)
    <330>   DW_AT_name        : (indirect string, offset: 0x105): current_scan
    <334>   DW_AT_decl_file   : 1
    <334>   DW_AT_decl_line   : 155
    <335>   DW_AT_decl_column : 20
    <336>   DW_AT_type        : <0x229>
    <33a>   DW_AT_location    : 5 byte block: 3 8 0 0 20 	(DW_OP_addr: 20000008)
 <2><340>: Abbrev Number: 10 (DW_TAG_variable)
    <341>   DW_AT_name        : (indirect string, offset: 0x205): scan_count
    <345>   DW_AT_decl_file   : 1
    <345>   DW_AT_decl_line   : 156
    <346>   DW_AT_decl_column : 13
    <347>   DW_AT_type        : <0x95>
    <34b>   DW_AT_location    : 5 byte block: 3 4 0 0 20 	(DW_OP_addr: 20000004)
 <2><351>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <352>   DW_AT_low_pc      : 0x50c
    <356>   DW_AT_high_pc     : 0x2e
    <35a>   DW_AT_sibling     : <0x397>
 <3><35e>: Abbrev Number: 12 (DW_TAG_variable)
    <35f>   DW_AT_name        : tmp
    <363>   DW_AT_decl_file   : 1
    <363>   DW_AT_decl_line   : 165
    <364>   DW_AT_decl_column : 10
    <364>   DW_AT_type        : <0x2b0>
    <368>   DW_AT_location    : 0xe (location list)
    <36c>   DW_AT_GNU_locviews: 0xc
 <3><370>: Abbrev Number: 2 (DW_TAG_call_site)
    <371>   DW_AT_call_return_pc: 0x518
    <375>   DW_AT_sibling     : <0x383>
 <4><379>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <37a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <37c>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <4><382>: Abbrev Number: 0
 <3><383>: Abbrev Number: 17 (DW_TAG_call_site)
    <384>   DW_AT_call_return_pc: 0x53a
    <388>   DW_AT_call_origin : <0x298>
 <4><38c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <38d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <38f>   DW_AT_call_value  : 5 byte block: 3 80 c 0 0 	(DW_OP_addr: c80)
 <4><395>: Abbrev Number: 0
 <3><396>: Abbrev Number: 0
 <2><397>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <398>   DW_AT_low_pc      : 0x644
    <39c>   DW_AT_high_pc     : 0x48
    <3a0>   DW_AT_sibling     : <0x3f3>
 <3><3a4>: Abbrev Number: 7 (DW_TAG_variable)
    <3a5>   DW_AT_name        : (indirect string, offset: 0xe2): temp
    <3a9>   DW_AT_decl_file   : 1
    <3a9>   DW_AT_decl_line   : 239
    <3aa>   DW_AT_decl_column : 16
    <3ab>   DW_AT_type        : <0xdd>
    <3af>   DW_AT_location    : 0x19 (location list)
    <3b3>   DW_AT_GNU_locviews: 0x17
 <3><3b7>: Abbrev Number: 2 (DW_TAG_call_site)
    <3b8>   DW_AT_call_return_pc: 0x652
    <3bc>   DW_AT_sibling     : <0x3c7>
 <4><3c0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3c1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3c3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><3c6>: Abbrev Number: 0
 <3><3c7>: Abbrev Number: 2 (DW_TAG_call_site)
    <3c8>   DW_AT_call_return_pc: 0x65a
    <3cc>   DW_AT_sibling     : <0x3d7>
 <4><3d0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <3d1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <3d3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><3d6>: Abbrev Number: 0
 <3><3d7>: Abbrev Number: 5 (DW_TAG_call_site)
    <3d8>   DW_AT_call_return_pc: 0x66e
    <3dc>   DW_AT_call_origin : <0x823>
 <3><3e0>: Abbrev Number: 5 (DW_TAG_call_site)
    <3e1>   DW_AT_call_return_pc: 0x682
    <3e5>   DW_AT_call_origin : <0x8dc>
 <3><3e9>: Abbrev Number: 5 (DW_TAG_call_site)
    <3ea>   DW_AT_call_return_pc: 0x68c
    <3ee>   DW_AT_call_origin : <0x575>
 <3><3f2>: Abbrev Number: 0
 <2><3f3>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <3f4>   DW_AT_low_pc      : 0x68e
    <3f8>   DW_AT_high_pc     : 0x8c
    <3fc>   DW_AT_sibling     : <0x484>
 <3><400>: Abbrev Number: 29 (DW_TAG_variable)
    <401>   DW_AT_name        : lsb
    <405>   DW_AT_decl_file   : 1
    <405>   DW_AT_decl_line   : 256
    <405>   DW_AT_decl_column : 20
    <406>   DW_AT_type        : <0x9c>
    <40a>   DW_AT_location    : 5 byte block: 3 1 0 0 20 	(DW_OP_addr: 20000001)
 <3><410>: Abbrev Number: 29 (DW_TAG_variable)
    <411>   DW_AT_name        : msb
    <415>   DW_AT_decl_file   : 1
    <415>   DW_AT_decl_line   : 256
    <415>   DW_AT_decl_column : 25
    <416>   DW_AT_type        : <0x9c>
    <41a>   DW_AT_location    : 5 byte block: 3 0 0 0 20 	(DW_OP_addr: 20000000)
 <3><420>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <421>   DW_AT_low_pc      : 0x6bc
    <425>   DW_AT_high_pc     : 0x5e
 <4><429>: Abbrev Number: 40 (DW_TAG_variable)
    <42a>   DW_AT_name        : val
    <42e>   DW_AT_decl_file   : 1
    <42f>   DW_AT_decl_line   : 264
    <431>   DW_AT_decl_column : 16
    <432>   DW_AT_type        : <0xc5>
    <436>   DW_AT_location    : 0x24 (location list)
    <43a>   DW_AT_GNU_locviews: 0x22
 <4><43e>: Abbrev Number: 41 (DW_TAG_variable)
    <43f>   DW_AT_name        : (indirect string, offset: 0x1a8): angle
    <443>   DW_AT_decl_file   : 1
    <444>   DW_AT_decl_line   : 266
    <446>   DW_AT_decl_column : 11
    <447>   DW_AT_type        : <0x95>
    <44b>   DW_AT_location    : 0x2f (location list)
    <44f>   DW_AT_GNU_locviews: 0x2d
 <4><453>: Abbrev Number: 2 (DW_TAG_call_site)
    <454>   DW_AT_call_return_pc: 0x6c8
    <458>   DW_AT_sibling     : <0x466>
 <5><45c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <45d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <45f>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <5><465>: Abbrev Number: 0
 <4><466>: Abbrev Number: 2 (DW_TAG_call_site)
    <467>   DW_AT_call_return_pc: 0x6da
    <46b>   DW_AT_sibling     : <0x479>
 <5><46f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <470>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <472>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <5><478>: Abbrev Number: 0
 <4><479>: Abbrev Number: 5 (DW_TAG_call_site)
    <47a>   DW_AT_call_return_pc: 0x708
    <47e>   DW_AT_call_origin : <0x5d4>
 <4><482>: Abbrev Number: 0
 <3><483>: Abbrev Number: 0
 <2><484>: Abbrev Number: 2 (DW_TAG_call_site)
    <485>   DW_AT_call_return_pc: 0x548
    <489>   DW_AT_sibling     : <0x497>
 <3><48d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <48e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <490>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><496>: Abbrev Number: 0
 <2><497>: Abbrev Number: 18 (DW_TAG_call_site)
    <498>   DW_AT_call_return_pc: 0x56c
    <49c>   DW_AT_call_origin : <0x298>
    <4a0>   DW_AT_sibling     : <0x4ae>
 <3><4a4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4a5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4a7>   DW_AT_call_value  : 5 byte block: 3 90 c 0 0 	(DW_OP_addr: c90)
 <3><4ad>: Abbrev Number: 0
 <2><4ae>: Abbrev Number: 5 (DW_TAG_call_site)
    <4af>   DW_AT_call_return_pc: 0x570
    <4b3>   DW_AT_call_origin : <0x696>
 <2><4b7>: Abbrev Number: 5 (DW_TAG_call_site)
    <4b8>   DW_AT_call_return_pc: 0x574
    <4bc>   DW_AT_call_origin : <0x65f>
 <2><4c0>: Abbrev Number: 2 (DW_TAG_call_site)
    <4c1>   DW_AT_call_return_pc: 0x584
    <4c5>   DW_AT_sibling     : <0x4d1>
 <3><4c9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4ca>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4cc>   DW_AT_call_value  : 3 byte block: a 20 4e 	(DW_OP_const2u: 20000)
 <3><4d0>: Abbrev Number: 0
 <2><4d1>: Abbrev Number: 5 (DW_TAG_call_site)
    <4d2>   DW_AT_call_return_pc: 0x588
    <4d6>   DW_AT_call_origin : <0x65f>
 <2><4da>: Abbrev Number: 5 (DW_TAG_call_site)
    <4db>   DW_AT_call_return_pc: 0x58c
    <4df>   DW_AT_call_origin : <0x6d3>
 <2><4e3>: Abbrev Number: 18 (DW_TAG_call_site)
    <4e4>   DW_AT_call_return_pc: 0x59a
    <4e8>   DW_AT_call_origin : <0x298>
    <4ec>   DW_AT_sibling     : <0x4fa>
 <3><4f0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4f1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4f3>   DW_AT_call_value  : 5 byte block: 3 b4 c 0 0 	(DW_OP_addr: cb4)
 <3><4f9>: Abbrev Number: 0
 <2><4fa>: Abbrev Number: 18 (DW_TAG_call_site)
    <4fb>   DW_AT_call_return_pc: 0x5b8
    <4ff>   DW_AT_call_origin : <0x298>
    <503>   DW_AT_sibling     : <0x511>
 <3><507>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <508>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <50a>   DW_AT_call_value  : 5 byte block: 3 c8 c 0 0 	(DW_OP_addr: cc8)
 <3><510>: Abbrev Number: 0
 <2><511>: Abbrev Number: 18 (DW_TAG_call_site)
    <512>   DW_AT_call_return_pc: 0x5c8
    <516>   DW_AT_call_origin : <0x298>
    <51a>   DW_AT_sibling     : <0x528>
 <3><51e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <51f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <521>   DW_AT_call_value  : 5 byte block: 3 e4 c 0 0 	(DW_OP_addr: ce4)
 <3><527>: Abbrev Number: 0
 <2><528>: Abbrev Number: 2 (DW_TAG_call_site)
    <529>   DW_AT_call_return_pc: 0x5dc
    <52d>   DW_AT_sibling     : <0x53b>
 <3><531>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <532>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <534>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><53a>: Abbrev Number: 0
 <2><53b>: Abbrev Number: 2 (DW_TAG_call_site)
    <53c>   DW_AT_call_return_pc: 0x602
    <540>   DW_AT_sibling     : <0x54e>
 <3><544>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <545>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <547>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><54d>: Abbrev Number: 0
 <2><54e>: Abbrev Number: 2 (DW_TAG_call_site)
    <54f>   DW_AT_call_return_pc: 0x72c
    <553>   DW_AT_sibling     : <0x561>
 <3><557>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <558>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <55a>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><560>: Abbrev Number: 0
 <2><561>: Abbrev Number: 17 (DW_TAG_call_site)
    <562>   DW_AT_call_return_pc: 0x75e
    <566>   DW_AT_call_origin : <0x298>
 <3><56a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <56b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <56d>   DW_AT_call_value  : 5 byte block: 3 10 d 0 0 	(DW_OP_addr: d10)
 <3><573>: Abbrev Number: 0
 <2><574>: Abbrev Number: 0
 <1><575>: Abbrev Number: 9 (DW_TAG_subprogram)
    <576>   DW_AT_external    : 1
    <576>   DW_AT_name        : (indirect string, offset: 0x6b): print_angles
    <57a>   DW_AT_decl_file   : 1
    <57a>   DW_AT_decl_line   : 143
    <57b>   DW_AT_decl_column : 6
    <57b>   DW_AT_prototyped  : 1
    <57b>   DW_AT_low_pc      : 0x4d4
    <57f>   DW_AT_high_pc     : 0x34
    <583>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <585>   DW_AT_call_all_calls: 1
    <585>   DW_AT_sibling     : <0x5d4>
 <2><589>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <58a>   DW_AT_low_pc      : 0x4dc
    <58e>   DW_AT_high_pc     : 0x1c
    <592>   DW_AT_sibling     : <0x5c0>
 <3><596>: Abbrev Number: 12 (DW_TAG_variable)
    <597>   DW_AT_name        : i
    <599>   DW_AT_decl_file   : 1
    <599>   DW_AT_decl_line   : 146
    <59a>   DW_AT_decl_column : 10
    <59a>   DW_AT_type        : <0x95>
    <59e>   DW_AT_location    : 0x3c (location list)
    <5a2>   DW_AT_GNU_locviews: 0x38
 <3><5a6>: Abbrev Number: 17 (DW_TAG_call_site)
    <5a7>   DW_AT_call_return_pc: 0x4f0
    <5ab>   DW_AT_call_origin : <0x298>
 <4><5af>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5b0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5b2>   DW_AT_call_value  : 5 byte block: 3 78 c 0 0 	(DW_OP_addr: c78)
 <4><5b8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5b9>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5bb>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><5be>: Abbrev Number: 0
 <3><5bf>: Abbrev Number: 0
 <2><5c0>: Abbrev Number: 17 (DW_TAG_call_site)
    <5c1>   DW_AT_call_return_pc: 0x4dc
    <5c5>   DW_AT_call_origin : <0x298>
 <3><5c9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5ca>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5cc>   DW_AT_call_value  : 5 byte block: 3 74 c 0 0 	(DW_OP_addr: c74)
 <3><5d2>: Abbrev Number: 0
 <2><5d3>: Abbrev Number: 0
 <1><5d4>: Abbrev Number: 42 (DW_TAG_subprogram)
    <5d5>   DW_AT_external    : 1
    <5d5>   DW_AT_name        : (indirect string, offset: 0xc2): angle_map
    <5d9>   DW_AT_decl_file   : 1
    <5da>   DW_AT_decl_line   : 137
    <5db>   DW_AT_decl_column : 5
    <5dc>   DW_AT_prototyped  : 1
    <5dc>   DW_AT_type        : <0x95>
    <5e0>   DW_AT_low_pc      : 0x49c
    <5e4>   DW_AT_high_pc     : 0x38
    <5e8>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <5ea>   DW_AT_call_all_calls: 1
    <5ea>   DW_AT_sibling     : <0x65f>
 <2><5ee>: Abbrev Number: 21 (DW_TAG_formal_parameter)
    <5ef>   DW_AT_name        : (indirect string, offset: 0x1ec): start
    <5f3>   DW_AT_decl_file   : 1
    <5f3>   DW_AT_decl_line   : 137
    <5f3>   DW_AT_decl_column : 23
    <5f4>   DW_AT_type        : <0xb4>
    <5f8>   DW_AT_location    : 0x53 (location list)
    <5fc>   DW_AT_GNU_locviews: 0x4d
 <2><600>: Abbrev Number: 43 (DW_TAG_formal_parameter)
    <601>   DW_AT_name        : end
    <605>   DW_AT_decl_file   : 1
    <606>   DW_AT_decl_line   : 137
    <607>   DW_AT_decl_column : 38
    <608>   DW_AT_type        : <0xb4>
    <60c>   DW_AT_location    : 0x79 (location list)
    <610>   DW_AT_GNU_locviews: 0x71
 <2><614>: Abbrev Number: 21 (DW_TAG_formal_parameter)
    <615>   DW_AT_name        : (indirect string, offset: 0x24e): count
    <619>   DW_AT_decl_file   : 1
    <619>   DW_AT_decl_line   : 137
    <619>   DW_AT_decl_column : 47
    <61a>   DW_AT_type        : <0x95>
    <61e>   DW_AT_location    : 0xad (location list)
    <622>   DW_AT_GNU_locviews: 0xa5
 <2><626>: Abbrev Number: 21 (DW_TAG_formal_parameter)
    <627>   DW_AT_name        : (indirect string, offset: 0x396): position
    <62b>   DW_AT_decl_file   : 1
    <62b>   DW_AT_decl_line   : 137
    <62b>   DW_AT_decl_column : 58
    <62c>   DW_AT_type        : <0x95>
    <630>   DW_AT_location    : 0xe1 (location list)
    <634>   DW_AT_GNU_locviews: 0xd9
 <2><638>: Abbrev Number: 7 (DW_TAG_variable)
    <639>   DW_AT_name        : (indirect string, offset: 0x5a): delta
    <63d>   DW_AT_decl_file   : 1
    <63d>   DW_AT_decl_line   : 138
    <63e>   DW_AT_decl_column : 16
    <63f>   DW_AT_type        : <0xc0>
    <643>   DW_AT_location    : 0x111 (location list)
    <647>   DW_AT_GNU_locviews: 0x10d
 <2><64b>: Abbrev Number: 7 (DW_TAG_variable)
    <64c>   DW_AT_name        : (indirect string, offset: 0xf5): delta_per_count
    <650>   DW_AT_decl_file   : 1
    <650>   DW_AT_decl_line   : 139
    <651>   DW_AT_decl_column : 16
    <652>   DW_AT_type        : <0xc0>
    <656>   DW_AT_location    : 0x125 (location list)
    <65a>   DW_AT_GNU_locviews: 0x121
 <2><65e>: Abbrev Number: 0
 <1><65f>: Abbrev Number: 9 (DW_TAG_subprogram)
    <660>   DW_AT_external    : 1
    <660>   DW_AT_name        : (indirect string, offset: 0x233): clear_lidar_IO
    <664>   DW_AT_decl_file   : 1
    <664>   DW_AT_decl_line   : 131
    <665>   DW_AT_decl_column : 6
    <665>   DW_AT_prototyped  : 1
    <665>   DW_AT_low_pc      : 0x474
    <669>   DW_AT_high_pc     : 0x28
    <66d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <66f>   DW_AT_call_all_calls: 1
    <66f>   DW_AT_sibling     : <0x696>
 <2><673>: Abbrev Number: 2 (DW_TAG_call_site)
    <674>   DW_AT_call_return_pc: 0x484
    <678>   DW_AT_sibling     : <0x686>
 <3><67c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <67d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <67f>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><685>: Abbrev Number: 0
 <2><686>: Abbrev Number: 22 (DW_TAG_call_site)
    <687>   DW_AT_call_return_pc: 0x490
 <3><68b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <68c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <68e>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><694>: Abbrev Number: 0
 <2><695>: Abbrev Number: 0
 <1><696>: Abbrev Number: 9 (DW_TAG_subprogram)
    <697>   DW_AT_external    : 1
    <697>   DW_AT_name        : (indirect string, offset: 0x368): stop_lidar_scan
    <69b>   DW_AT_decl_file   : 1
    <69b>   DW_AT_decl_line   : 126
    <69c>   DW_AT_decl_column : 6
    <69c>   DW_AT_prototyped  : 1
    <69c>   DW_AT_low_pc      : 0x450
    <6a0>   DW_AT_high_pc     : 0x24
    <6a4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6a6>   DW_AT_call_all_calls: 1
    <6a6>   DW_AT_sibling     : <0x6d3>
 <2><6aa>: Abbrev Number: 2 (DW_TAG_call_site)
    <6ab>   DW_AT_call_return_pc: 0x462
    <6af>   DW_AT_sibling     : <0x6c0>
 <3><6b3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6b4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6b6>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6b9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6ba>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6bc>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><6bf>: Abbrev Number: 0
 <2><6c0>: Abbrev Number: 22 (DW_TAG_call_site)
    <6c1>   DW_AT_call_return_pc: 0x46c
 <3><6c5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6c6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6c8>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6cb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6cc>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6ce>   DW_AT_call_value  : 2 byte block: 8 65 	(DW_OP_const1u: 101)
 <3><6d1>: Abbrev Number: 0
 <2><6d2>: Abbrev Number: 0
 <1><6d3>: Abbrev Number: 9 (DW_TAG_subprogram)
    <6d4>   DW_AT_external    : 1
    <6d4>   DW_AT_name        : (indirect string, offset: 0x17e): start_lidar_scan
    <6d8>   DW_AT_decl_file   : 1
    <6d8>   DW_AT_decl_line   : 121
    <6d9>   DW_AT_decl_column : 6
    <6d9>   DW_AT_prototyped  : 1
    <6d9>   DW_AT_low_pc      : 0x42c
    <6dd>   DW_AT_high_pc     : 0x24
    <6e1>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6e3>   DW_AT_call_all_calls: 1
    <6e3>   DW_AT_sibling     : <0x710>
 <2><6e7>: Abbrev Number: 2 (DW_TAG_call_site)
    <6e8>   DW_AT_call_return_pc: 0x43e
    <6ec>   DW_AT_sibling     : <0x6fd>
 <3><6f0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6f1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6f3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6f6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6f7>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6f9>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><6fc>: Abbrev Number: 0
 <2><6fd>: Abbrev Number: 22 (DW_TAG_call_site)
    <6fe>   DW_AT_call_return_pc: 0x448
 <3><702>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <703>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <705>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><708>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <709>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <70b>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><70e>: Abbrev Number: 0
 <2><70f>: Abbrev Number: 0
 <1><710>: Abbrev Number: 44 (DW_TAG_subprogram)
    <711>   DW_AT_external    : 1
    <711>   DW_AT_name        : (indirect string, offset: 0x314): setup_lidar_comms
    <715>   DW_AT_decl_file   : 1
    <716>   DW_AT_decl_line   : 94
    <717>   DW_AT_decl_column : 6
    <718>   DW_AT_prototyped  : 1
    <718>   DW_AT_low_pc      : 0x330
    <71c>   DW_AT_high_pc     : 0xfc
    <720>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <722>   DW_AT_call_all_tail_calls: 1
    <722>   DW_AT_sibling     : <0x823>
 <2><726>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <727>   DW_AT_low_pc      : 0x3ca
    <72b>   DW_AT_high_pc     : 0x16
    <72f>   DW_AT_sibling     : <0x744>
 <3><733>: Abbrev Number: 12 (DW_TAG_variable)
    <734>   DW_AT_name        : i
    <736>   DW_AT_decl_file   : 1
    <736>   DW_AT_decl_line   : 107
    <737>   DW_AT_decl_column : 10
    <737>   DW_AT_type        : <0x95>
    <73b>   DW_AT_location    : 0x139 (location list)
    <73f>   DW_AT_GNU_locviews: 0x135
 <3><743>: Abbrev Number: 0
 <2><744>: Abbrev Number: 2 (DW_TAG_call_site)
    <745>   DW_AT_call_return_pc: 0x33e
    <749>   DW_AT_sibling     : <0x758>
 <3><74d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <74e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <750>   DW_AT_call_value  : 6 byte block: 11 83 90 80 80 7f 	(DW_OP_consts: -268433405)
 <3><757>: Abbrev Number: 0
 <2><758>: Abbrev Number: 2 (DW_TAG_call_site)
    <759>   DW_AT_call_return_pc: 0x346
    <75d>   DW_AT_sibling     : <0x76c>
 <3><761>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <762>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <764>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><76b>: Abbrev Number: 0
 <2><76c>: Abbrev Number: 2 (DW_TAG_call_site)
    <76d>   DW_AT_call_return_pc: 0x354
    <771>   DW_AT_sibling     : <0x780>
 <3><775>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <776>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <778>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><77f>: Abbrev Number: 0
 <2><780>: Abbrev Number: 23 (DW_TAG_call_site)
    <781>   DW_AT_call_return_pc: 0x39a
    <785>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <788>   DW_AT_sibling     : <0x7a4>
 <3><78c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <78d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <78f>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><792>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <793>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <795>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><798>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <799>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <79b>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><79e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <79f>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <7a1>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><7a3>: Abbrev Number: 0
 <2><7a4>: Abbrev Number: 23 (DW_TAG_call_site)
    <7a5>   DW_AT_call_return_pc: 0x3a8
    <7a9>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <7ac>   DW_AT_sibling     : <0x7c8>
 <3><7b0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7b1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7b3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><7b6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7b7>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <7b9>   DW_AT_call_value  : 2 byte block: 8 40 	(DW_OP_const1u: 64)
 <3><7bc>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7bd>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7bf>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><7c2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7c3>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <7c5>   DW_AT_call_value  : 1 byte block: 3a 	(DW_OP_lit10)
 <3><7c7>: Abbrev Number: 0
 <2><7c8>: Abbrev Number: 2 (DW_TAG_call_site)
    <7c9>   DW_AT_call_return_pc: 0x3b4
    <7cd>   DW_AT_sibling     : <0x7e3>
 <3><7d1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7d2>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7d4>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><7d7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7d8>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <7da>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><7dd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7de>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7e0>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><7e2>: Abbrev Number: 0
 <2><7e3>: Abbrev Number: 23 (DW_TAG_call_site)
    <7e4>   DW_AT_call_return_pc: 0x3ca
    <7e8>   DW_AT_call_target : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
    <7eb>   DW_AT_sibling     : <0x807>
 <3><7ef>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7f0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7f2>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><7f8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7f9>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7fb>   DW_AT_call_value  : 4 byte block: 8 e1 3a 24 	(DW_OP_const1u: 225; DW_OP_lit10; DW_OP_shl)
 <3><800>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <801>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <803>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><806>: Abbrev Number: 0
 <2><807>: Abbrev Number: 5 (DW_TAG_call_site)
    <808>   DW_AT_call_return_pc: 0x3ea
    <80c>   DW_AT_call_origin : <0x8dc>
 <2><810>: Abbrev Number: 5 (DW_TAG_call_site)
    <811>   DW_AT_call_return_pc: 0x3f4
    <815>   DW_AT_call_origin : <0x823>
 <2><819>: Abbrev Number: 5 (DW_TAG_call_site)
    <81a>   DW_AT_call_return_pc: 0x400
    <81e>   DW_AT_call_origin : <0x8dc>
 <2><822>: Abbrev Number: 0
 <1><823>: Abbrev Number: 45 (DW_TAG_subprogram)
    <824>   DW_AT_external    : 1
    <824>   DW_AT_name        : (indirect string, offset: 0x3ab): process_point_buff
    <828>   DW_AT_decl_file   : 1
    <829>   DW_AT_decl_line   : 47
    <82a>   DW_AT_decl_column : 6
    <82b>   DW_AT_low_pc      : 0x288
    <82f>   DW_AT_high_pc     : 0xa8
    <833>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <835>   DW_AT_call_all_calls: 1
    <835>   DW_AT_sibling     : <0x8d5>
 <2><839>: Abbrev Number: 46 (DW_TAG_lexical_block)
    <83a>   DW_AT_ranges      : 0xc
    <83e>   DW_AT_sibling     : <0x8a5>
 <3><842>: Abbrev Number: 12 (DW_TAG_variable)
    <843>   DW_AT_name        : i
    <845>   DW_AT_decl_file   : 1
    <845>   DW_AT_decl_line   : 49
    <846>   DW_AT_decl_column : 10
    <846>   DW_AT_type        : <0x95>
    <84a>   DW_AT_location    : 0x14e (location list)
    <84e>   DW_AT_GNU_locviews: 0x14a
 <3><852>: Abbrev Number: 47 (DW_TAG_lexical_block)
    <853>   DW_AT_ranges      : 0x19
 <4><857>: Abbrev Number: 7 (DW_TAG_variable)
    <858>   DW_AT_name        : (indirect string, offset: 0xae): leftidx
    <85c>   DW_AT_decl_file   : 1
    <85c>   DW_AT_decl_line   : 53
    <85d>   DW_AT_decl_column : 7
    <85e>   DW_AT_type        : <0x95>
    <862>   DW_AT_location    : 0x16c (location list)
    <866>   DW_AT_GNU_locviews: 0x160
 <4><86a>: Abbrev Number: 7 (DW_TAG_variable)
    <86b>   DW_AT_name        : (indirect string, offset: 0x51): from_top
    <86f>   DW_AT_decl_file   : 1
    <86f>   DW_AT_decl_line   : 54
    <870>   DW_AT_decl_column : 8
    <871>   DW_AT_type        : <0x8d5>
    <875>   DW_AT_location    : 0x19c (location list)
    <879>   DW_AT_GNU_locviews: 0x194
 <4><87d>: Abbrev Number: 7 (DW_TAG_variable)
    <87e>   DW_AT_name        : (indirect string, offset: 0x7d): rightidx
    <882>   DW_AT_decl_file   : 1
    <882>   DW_AT_decl_line   : 69
    <883>   DW_AT_decl_column : 7
    <884>   DW_AT_type        : <0x95>
    <888>   DW_AT_location    : 0x1be (location list)
    <88c>   DW_AT_GNU_locviews: 0x1b8
 <4><890>: Abbrev Number: 7 (DW_TAG_variable)
    <891>   DW_AT_name        : (indirect string, offset: 0x33c): from_0
    <895>   DW_AT_decl_file   : 1
    <895>   DW_AT_decl_line   : 70
    <896>   DW_AT_decl_column : 8
    <897>   DW_AT_type        : <0x8d5>
    <89b>   DW_AT_location    : 0x1d9 (location list)
    <89f>   DW_AT_GNU_locviews: 0x1d3
 <4><8a3>: Abbrev Number: 0
 <3><8a4>: Abbrev Number: 0
 <2><8a5>: Abbrev Number: 19 (DW_TAG_lexical_block)
 <3><8a6>: Abbrev Number: 24 (DW_TAG_variable)
    <8a7>   DW_AT_name        : j
    <8a9>   DW_AT_decl_file   : 1
    <8a9>   DW_AT_decl_line   : 85
    <8aa>   DW_AT_decl_column : 10
    <8ab>   DW_AT_type        : <0x95>
 <3><8af>: Abbrev Number: 19 (DW_TAG_lexical_block)
 <4><8b0>: Abbrev Number: 24 (DW_TAG_variable)
    <8b1>   DW_AT_name        : i
    <8b3>   DW_AT_decl_file   : 1
    <8b3>   DW_AT_decl_line   : 86
    <8b4>   DW_AT_decl_column : 11
    <8b5>   DW_AT_type        : <0x95>
 <4><8b9>: Abbrev Number: 19 (DW_TAG_lexical_block)
 <5><8ba>: Abbrev Number: 48 (DW_TAG_variable)
    <8bb>   DW_AT_name        : (indirect string, offset: 0x9e): near
    <8bf>   DW_AT_decl_file   : 1
    <8c0>   DW_AT_decl_line   : 87
    <8c1>   DW_AT_decl_column : 13
    <8c2>   DW_AT_type        : <0xc5>
 <5><8c6>: Abbrev Number: 19 (DW_TAG_lexical_block)
 <6><8c7>: Abbrev Number: 24 (DW_TAG_variable)
    <8c8>   DW_AT_name        : k
    <8ca>   DW_AT_decl_file   : 1
    <8ca>   DW_AT_decl_line   : 88
    <8cb>   DW_AT_decl_column : 12
    <8cc>   DW_AT_type        : <0x95>
 <6><8d0>: Abbrev Number: 0
 <5><8d1>: Abbrev Number: 0
 <4><8d2>: Abbrev Number: 0
 <3><8d3>: Abbrev Number: 0
 <2><8d4>: Abbrev Number: 0
 <1><8d5>: Abbrev Number: 4 (DW_TAG_base_type)
    <8d6>   DW_AT_byte_size   : 1
    <8d7>   DW_AT_encoding    : 2	(boolean)
    <8d8>   DW_AT_name        : (indirect string, offset: 0x254): _Bool
 <1><8dc>: Abbrev Number: 49 (DW_TAG_subprogram)
    <8dd>   DW_AT_external    : 1
    <8dd>   DW_AT_name        : (indirect string, offset: 0x2c): zero_point_buf
    <8e1>   DW_AT_decl_file   : 1
    <8e2>   DW_AT_decl_line   : 39
    <8e3>   DW_AT_decl_column : 6
    <8e4>   DW_AT_prototyped  : 1
    <8e4>   DW_AT_low_pc      : 0x26c
    <8e8>   DW_AT_high_pc     : 0x1c
    <8ec>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <8ee>   DW_AT_call_all_calls: 1
 <2><8ee>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <8ef>   DW_AT_low_pc      : 0x26c
    <8f3>   DW_AT_high_pc     : 0x16
 <3><8f7>: Abbrev Number: 12 (DW_TAG_variable)
    <8f8>   DW_AT_name        : i
    <8fa>   DW_AT_decl_file   : 1
    <8fa>   DW_AT_decl_line   : 40
    <8fb>   DW_AT_decl_column : 10
    <8fb>   DW_AT_type        : <0x95>
    <8ff>   DW_AT_location    : 0x1f2 (location list)
    <903>   DW_AT_GNU_locviews: 0x1ee
 <3><907>: Abbrev Number: 0
 <2><908>: Abbrev Number: 0
 <1><909>: Abbrev Number: 0
  Compilation Unit @ offset 0x90a:
   Length:        0x26a (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x2e9
   Pointer Size:  4
 <0><916>: Abbrev Number: 8 (DW_TAG_compile_unit)
    <917>   DW_AT_producer    : (indirect string, offset: 0x25a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <91b>   DW_AT_language    : 29	(C11)
    <91c>   DW_AT_name        : (indirect string, offset: 0x42b): src/main.c
    <920>   DW_AT_comp_dir    : (indirect string, offset: 0x126): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <924>   DW_AT_ranges      : 0x6c
    <928>   DW_AT_low_pc      : 0
    <92c>   DW_AT_stmt_list   : 0x5f0
 <1><930>: Abbrev Number: 3 (DW_TAG_base_type)
    <931>   DW_AT_byte_size   : 1
    <932>   DW_AT_encoding    : 6	(signed char)
    <933>   DW_AT_name        : (indirect string, offset: 0x198): signed char
 <1><937>: Abbrev Number: 3 (DW_TAG_base_type)
    <938>   DW_AT_byte_size   : 1
    <939>   DW_AT_encoding    : 8	(unsigned char)
    <93a>   DW_AT_name        : (indirect string, offset: 0x196): unsigned char
 <1><93e>: Abbrev Number: 3 (DW_TAG_base_type)
    <93f>   DW_AT_byte_size   : 2
    <940>   DW_AT_encoding    : 5	(signed)
    <941>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><945>: Abbrev Number: 3 (DW_TAG_base_type)
    <946>   DW_AT_byte_size   : 2
    <947>   DW_AT_encoding    : 7	(unsigned)
    <948>   DW_AT_name        : (indirect string, offset: 0x1f2): short unsigned int
 <1><94c>: Abbrev Number: 3 (DW_TAG_base_type)
    <94d>   DW_AT_byte_size   : 4
    <94e>   DW_AT_encoding    : 5	(signed)
    <94f>   DW_AT_name        : (indirect string, offset: 0xec): long int
 <1><953>: Abbrev Number: 7 (DW_TAG_typedef)
    <954>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <958>   DW_AT_decl_file   : 2
    <959>   DW_AT_decl_line   : 79
    <95a>   DW_AT_decl_column : 25
    <95b>   DW_AT_type        : <0x95f>
 <1><95f>: Abbrev Number: 3 (DW_TAG_base_type)
    <960>   DW_AT_byte_size   : 4
    <961>   DW_AT_encoding    : 7	(unsigned)
    <962>   DW_AT_name        : (indirect string, offset: 0x1b3): long unsigned int
 <1><966>: Abbrev Number: 3 (DW_TAG_base_type)
    <967>   DW_AT_byte_size   : 8
    <968>   DW_AT_encoding    : 5	(signed)
    <969>   DW_AT_name        : (indirect string, offset: 0xe7): long long int
 <1><96d>: Abbrev Number: 3 (DW_TAG_base_type)
    <96e>   DW_AT_byte_size   : 8
    <96f>   DW_AT_encoding    : 7	(unsigned)
    <970>   DW_AT_name        : (indirect string, offset: 0x1ae): long long unsigned int
 <1><974>: Abbrev Number: 9 (DW_TAG_base_type)
    <975>   DW_AT_byte_size   : 4
    <976>   DW_AT_encoding    : 5	(signed)
    <977>   DW_AT_name        : int
 <1><97b>: Abbrev Number: 3 (DW_TAG_base_type)
    <97c>   DW_AT_byte_size   : 4
    <97d>   DW_AT_encoding    : 7	(unsigned)
    <97e>   DW_AT_name        : (indirect string, offset: 0x1b8): unsigned int
 <1><982>: Abbrev Number: 7 (DW_TAG_typedef)
    <983>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <987>   DW_AT_decl_file   : 3
    <988>   DW_AT_decl_line   : 48
    <989>   DW_AT_decl_column : 20
    <98a>   DW_AT_type        : <0x953>
 <1><98e>: Abbrev Number: 5 (DW_TAG_subprogram)
    <98f>   DW_AT_external    : 1
    <98f>   DW_AT_name        : (indirect string, offset: 0x304): process_packets
    <993>   DW_AT_decl_file   : 4
    <994>   DW_AT_decl_line   : 36
    <995>   DW_AT_decl_column : 6
    <995>   DW_AT_prototyped  : 1
    <995>   DW_AT_declaration : 1
 <1><995>: Abbrev Number: 5 (DW_TAG_subprogram)
    <996>   DW_AT_external    : 1
    <996>   DW_AT_name        : (indirect string, offset: 0x17e): start_lidar_scan
    <99a>   DW_AT_decl_file   : 4
    <99b>   DW_AT_decl_line   : 34
    <99c>   DW_AT_decl_column : 6
    <99c>   DW_AT_prototyped  : 1
    <99c>   DW_AT_declaration : 1
 <1><99c>: Abbrev Number: 5 (DW_TAG_subprogram)
    <99d>   DW_AT_external    : 1
    <99d>   DW_AT_name        : (indirect string, offset: 0x233): clear_lidar_IO
    <9a1>   DW_AT_decl_file   : 4
    <9a2>   DW_AT_decl_line   : 37
    <9a3>   DW_AT_decl_column : 6
    <9a3>   DW_AT_prototyped  : 1
    <9a3>   DW_AT_declaration : 1
 <1><9a3>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9a4>   DW_AT_external    : 1
    <9a4>   DW_AT_name        : (indirect string, offset: 0x368): stop_lidar_scan
    <9a8>   DW_AT_decl_file   : 4
    <9a9>   DW_AT_decl_line   : 35
    <9aa>   DW_AT_decl_column : 6
    <9aa>   DW_AT_prototyped  : 1
    <9aa>   DW_AT_declaration : 1
 <1><9aa>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9ab>   DW_AT_external    : 1
    <9ab>   DW_AT_name        : (indirect string, offset: 0x314): setup_lidar_comms
    <9af>   DW_AT_decl_file   : 4
    <9b0>   DW_AT_decl_line   : 33
    <9b1>   DW_AT_decl_column : 6
    <9b1>   DW_AT_prototyped  : 1
    <9b1>   DW_AT_declaration : 1
 <1><9b1>: Abbrev Number: 10 (DW_TAG_subprogram)
    <9b2>   DW_AT_external    : 1
    <9b2>   DW_AT_name        : (indirect string, offset: 0x155): printlf
    <9b6>   DW_AT_decl_file   : 5
    <9b7>   DW_AT_decl_line   : 10
    <9b8>   DW_AT_decl_column : 6
    <9b9>   DW_AT_prototyped  : 1
    <9b9>   DW_AT_declaration : 1
    <9b9>   DW_AT_sibling     : <0x9c4>
 <2><9bd>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <9be>   DW_AT_type        : <0x9c4>
 <2><9c2>: Abbrev Number: 12 (DW_TAG_unspecified_parameters)
 <2><9c3>: Abbrev Number: 0
 <1><9c4>: Abbrev Number: 13 (DW_TAG_pointer_type)
    <9c5>   DW_AT_byte_size   : 4
    <9c6>   DW_AT_type        : <0x9ca>
 <1><9ca>: Abbrev Number: 3 (DW_TAG_base_type)
    <9cb>   DW_AT_byte_size   : 1
    <9cc>   DW_AT_encoding    : 8	(unsigned char)
    <9cd>   DW_AT_name        : (indirect string, offset: 0x19f): char
 <1><9d1>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9d2>   DW_AT_external    : 1
    <9d2>   DW_AT_name        : (indirect string, offset: 0x413): setup_uart_printer
    <9d6>   DW_AT_decl_file   : 5
    <9d7>   DW_AT_decl_line   : 1
    <9d8>   DW_AT_decl_column : 6
    <9d8>   DW_AT_prototyped  : 1
    <9d8>   DW_AT_declaration : 1
 <1><9d8>: Abbrev Number: 14 (DW_TAG_subprogram)
    <9d9>   DW_AT_external    : 1
    <9d9>   DW_AT_name        : (indirect string, offset: 0x426): main
    <9dd>   DW_AT_decl_file   : 1
    <9de>   DW_AT_decl_line   : 20
    <9df>   DW_AT_decl_column : 5
    <9e0>   DW_AT_prototyped  : 1
    <9e0>   DW_AT_type        : <0x974>
    <9e4>   DW_AT_low_pc      : 0x7a8
    <9e8>   DW_AT_high_pc     : 0xd0
    <9ec>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <9ee>   DW_AT_call_all_calls: 1
 <2><9ee>: Abbrev Number: 2 (DW_TAG_call_site)
    <9ef>   DW_AT_call_return_pc: 0x7b6
    <9f3>   DW_AT_sibling     : <0xa02>
 <3><9f7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <9f8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <9fa>   DW_AT_call_value  : 6 byte block: 11 c0 8a 80 88 7c 	(DW_OP_consts: -1056963264)
 <3><a01>: Abbrev Number: 0
 <2><a02>: Abbrev Number: 4 (DW_TAG_call_site)
    <a03>   DW_AT_call_return_pc: 0x7ba
    <a07>   DW_AT_call_origin : <0x9d1>
 <2><a0b>: Abbrev Number: 6 (DW_TAG_call_site)
    <a0c>   DW_AT_call_return_pc: 0x7c0
    <a10>   DW_AT_call_origin : <0x9b1>
    <a14>   DW_AT_sibling     : <0xa22>
 <3><a18>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <a19>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a1b>   DW_AT_call_value  : 5 byte block: 3 30 d 0 0 	(DW_OP_addr: d30)
 <3><a21>: Abbrev Number: 0
 <2><a22>: Abbrev Number: 4 (DW_TAG_call_site)
    <a23>   DW_AT_call_return_pc: 0x7c4
    <a27>   DW_AT_call_origin : <0x9aa>
 <2><a2b>: Abbrev Number: 6 (DW_TAG_call_site)
    <a2c>   DW_AT_call_return_pc: 0x7ca
    <a30>   DW_AT_call_origin : <0x9b1>
    <a34>   DW_AT_sibling     : <0xa42>
 <3><a38>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <a39>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a3b>   DW_AT_call_value  : 5 byte block: 3 44 d 0 0 	(DW_OP_addr: d44)
 <3><a41>: Abbrev Number: 0
 <2><a42>: Abbrev Number: 4 (DW_TAG_call_site)
    <a43>   DW_AT_call_return_pc: 0x7ce
    <a47>   DW_AT_call_origin : <0x9a3>
 <2><a4b>: Abbrev Number: 6 (DW_TAG_call_site)
    <a4c>   DW_AT_call_return_pc: 0x7d4
    <a50>   DW_AT_call_origin : <0x9b1>
    <a54>   DW_AT_sibling     : <0xa62>
 <3><a58>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <a59>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a5b>   DW_AT_call_value  : 5 byte block: 3 5c d 0 0 	(DW_OP_addr: d5c)
 <3><a61>: Abbrev Number: 0
 <2><a62>: Abbrev Number: 4 (DW_TAG_call_site)
    <a63>   DW_AT_call_return_pc: 0x7d8
    <a67>   DW_AT_call_origin : <0x99c>
 <2><a6b>: Abbrev Number: 2 (DW_TAG_call_site)
    <a6c>   DW_AT_call_return_pc: 0x7e4
    <a70>   DW_AT_sibling     : <0xa7e>
 <3><a74>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <a75>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a77>   DW_AT_call_value  : 5 byte block: c 0 2d 31 1 	(DW_OP_const4u: 20000000)
 <3><a7d>: Abbrev Number: 0
 <2><a7e>: Abbrev Number: 6 (DW_TAG_call_site)
    <a7f>   DW_AT_call_return_pc: 0x7ea
    <a83>   DW_AT_call_origin : <0x9b1>
    <a87>   DW_AT_sibling     : <0xa95>
 <3><a8b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <a8c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a8e>   DW_AT_call_value  : 5 byte block: 3 74 d 0 0 	(DW_OP_addr: d74)
 <3><a94>: Abbrev Number: 0
 <2><a95>: Abbrev Number: 4 (DW_TAG_call_site)
    <a96>   DW_AT_call_return_pc: 0x7ee
    <a9a>   DW_AT_call_origin : <0x99c>
 <2><a9e>: Abbrev Number: 2 (DW_TAG_call_site)
    <a9f>   DW_AT_call_return_pc: 0x7fa
    <aa3>   DW_AT_sibling     : <0xaaf>
 <3><aa7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <aa8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <aaa>   DW_AT_call_value  : 3 byte block: a 20 4e 	(DW_OP_const2u: 20000)
 <3><aae>: Abbrev Number: 0
 <2><aaf>: Abbrev Number: 2 (DW_TAG_call_site)
    <ab0>   DW_AT_call_return_pc: 0x806
    <ab4>   DW_AT_sibling     : <0xac5>
 <3><ab8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ab9>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <abb>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><abe>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <abf>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <ac1>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><ac4>: Abbrev Number: 0
 <2><ac5>: Abbrev Number: 2 (DW_TAG_call_site)
    <ac6>   DW_AT_call_return_pc: 0x810
    <aca>   DW_AT_sibling     : <0xada>
 <3><ace>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <acf>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ad1>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><ad4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ad5>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <ad7>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><ad9>: Abbrev Number: 0
 <2><ada>: Abbrev Number: 2 (DW_TAG_call_site)
    <adb>   DW_AT_call_return_pc: 0x81a
    <adf>   DW_AT_sibling     : <0xaf0>
 <3><ae3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <ae4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <ae6>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><ae9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <aea>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <aec>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><aef>: Abbrev Number: 0
 <2><af0>: Abbrev Number: 2 (DW_TAG_call_site)
    <af1>   DW_AT_call_return_pc: 0x824
    <af5>   DW_AT_sibling     : <0xb05>
 <3><af9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <afa>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <afc>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><aff>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b00>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b02>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><b04>: Abbrev Number: 0
 <2><b05>: Abbrev Number: 2 (DW_TAG_call_site)
    <b06>   DW_AT_call_return_pc: 0x82e
    <b0a>   DW_AT_sibling     : <0xb1b>
 <3><b0e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b0f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b11>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b14>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b15>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b17>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><b1a>: Abbrev Number: 0
 <2><b1b>: Abbrev Number: 2 (DW_TAG_call_site)
    <b1c>   DW_AT_call_return_pc: 0x838
    <b20>   DW_AT_sibling     : <0xb30>
 <3><b24>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b25>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b27>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b2a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b2b>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b2d>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><b2f>: Abbrev Number: 0
 <2><b30>: Abbrev Number: 2 (DW_TAG_call_site)
    <b31>   DW_AT_call_return_pc: 0x842
    <b35>   DW_AT_sibling     : <0xb46>
 <3><b39>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b3a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b3c>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b3f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b40>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b42>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><b45>: Abbrev Number: 0
 <2><b46>: Abbrev Number: 2 (DW_TAG_call_site)
    <b47>   DW_AT_call_return_pc: 0x84c
    <b4b>   DW_AT_sibling     : <0xb5b>
 <3><b4f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b50>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <b52>   DW_AT_call_value  : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><b55>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <b56>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <b58>   DW_AT_call_value  : 1 byte block: 3b 	(DW_OP_lit11)
 <3><b5a>: Abbrev Number: 0
 <2><b5b>: Abbrev Number: 4 (DW_TAG_call_site)
    <b5c>   DW_AT_call_return_pc: 0x850
    <b60>   DW_AT_call_origin : <0x99c>
 <2><b64>: Abbrev Number: 4 (DW_TAG_call_site)
    <b65>   DW_AT_call_return_pc: 0x854
    <b69>   DW_AT_call_origin : <0x995>
 <2><b6d>: Abbrev Number: 4 (DW_TAG_call_site)
    <b6e>   DW_AT_call_return_pc: 0x858
    <b72>   DW_AT_call_origin : <0x98e>
 <2><b76>: Abbrev Number: 0
 <1><b77>: Abbrev Number: 0
  Compilation Unit @ offset 0xb78:
   Length:        0x17a (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x3a1
   Pointer Size:  4
 <0><b84>: Abbrev Number: 4 (DW_TAG_compile_unit)
    <b85>   DW_AT_producer    : (indirect string, offset: 0x25a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <b89>   DW_AT_language    : 29	(C11)
    <b8a>   DW_AT_name        : (indirect string, offset: 0x462): src/timers.c
    <b8e>   DW_AT_comp_dir    : (indirect string, offset: 0x126): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <b92>   DW_AT_ranges      : 0x80
    <b96>   DW_AT_low_pc      : 0
    <b9a>   DW_AT_stmt_list   : 0x6ce
 <1><b9e>: Abbrev Number: 1 (DW_TAG_base_type)
    <b9f>   DW_AT_byte_size   : 1
    <ba0>   DW_AT_encoding    : 6	(signed char)
    <ba1>   DW_AT_name        : (indirect string, offset: 0x198): signed char
 <1><ba5>: Abbrev Number: 1 (DW_TAG_base_type)
    <ba6>   DW_AT_byte_size   : 1
    <ba7>   DW_AT_encoding    : 8	(unsigned char)
    <ba8>   DW_AT_name        : (indirect string, offset: 0x196): unsigned char
 <1><bac>: Abbrev Number: 1 (DW_TAG_base_type)
    <bad>   DW_AT_byte_size   : 2
    <bae>   DW_AT_encoding    : 5	(signed)
    <baf>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><bb3>: Abbrev Number: 1 (DW_TAG_base_type)
    <bb4>   DW_AT_byte_size   : 2
    <bb5>   DW_AT_encoding    : 7	(unsigned)
    <bb6>   DW_AT_name        : (indirect string, offset: 0x1f2): short unsigned int
 <1><bba>: Abbrev Number: 2 (DW_TAG_typedef)
    <bbb>   DW_AT_name        : (indirect string, offset: 0x35e): __int32_t
    <bbf>   DW_AT_decl_file   : 2
    <bc0>   DW_AT_decl_line   : 77
    <bc1>   DW_AT_decl_column : 24
    <bc2>   DW_AT_type        : <0xbc6>
 <1><bc6>: Abbrev Number: 1 (DW_TAG_base_type)
    <bc7>   DW_AT_byte_size   : 4
    <bc8>   DW_AT_encoding    : 5	(signed)
    <bc9>   DW_AT_name        : (indirect string, offset: 0xec): long int
 <1><bcd>: Abbrev Number: 2 (DW_TAG_typedef)
    <bce>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <bd2>   DW_AT_decl_file   : 2
    <bd3>   DW_AT_decl_line   : 79
    <bd4>   DW_AT_decl_column : 25
    <bd5>   DW_AT_type        : <0xbd9>
 <1><bd9>: Abbrev Number: 1 (DW_TAG_base_type)
    <bda>   DW_AT_byte_size   : 4
    <bdb>   DW_AT_encoding    : 7	(unsigned)
    <bdc>   DW_AT_name        : (indirect string, offset: 0x1b3): long unsigned int
 <1><be0>: Abbrev Number: 1 (DW_TAG_base_type)
    <be1>   DW_AT_byte_size   : 8
    <be2>   DW_AT_encoding    : 5	(signed)
    <be3>   DW_AT_name        : (indirect string, offset: 0xe7): long long int
 <1><be7>: Abbrev Number: 2 (DW_TAG_typedef)
    <be8>   DW_AT_name        : (indirect string, offset: 0x4b5): __uint64_t
    <bec>   DW_AT_decl_file   : 2
    <bed>   DW_AT_decl_line   : 105
    <bee>   DW_AT_decl_column : 25
    <bef>   DW_AT_type        : <0xbf3>
 <1><bf3>: Abbrev Number: 1 (DW_TAG_base_type)
    <bf4>   DW_AT_byte_size   : 8
    <bf5>   DW_AT_encoding    : 7	(unsigned)
    <bf6>   DW_AT_name        : (indirect string, offset: 0x1ae): long long unsigned int
 <1><bfa>: Abbrev Number: 5 (DW_TAG_base_type)
    <bfb>   DW_AT_byte_size   : 4
    <bfc>   DW_AT_encoding    : 5	(signed)
    <bfd>   DW_AT_name        : int
 <1><c01>: Abbrev Number: 1 (DW_TAG_base_type)
    <c02>   DW_AT_byte_size   : 4
    <c03>   DW_AT_encoding    : 7	(unsigned)
    <c04>   DW_AT_name        : (indirect string, offset: 0x1b8): unsigned int
 <1><c08>: Abbrev Number: 2 (DW_TAG_typedef)
    <c09>   DW_AT_name        : (indirect string, offset: 0x360): int32_t
    <c0d>   DW_AT_decl_file   : 3
    <c0e>   DW_AT_decl_line   : 44
    <c0f>   DW_AT_decl_column : 19
    <c10>   DW_AT_type        : <0xbba>
 <1><c14>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <c15>   DW_AT_type        : <0xc08>
 <1><c19>: Abbrev Number: 2 (DW_TAG_typedef)
    <c1a>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <c1e>   DW_AT_decl_file   : 3
    <c1f>   DW_AT_decl_line   : 48
    <c20>   DW_AT_decl_column : 20
    <c21>   DW_AT_type        : <0xbcd>
 <1><c25>: Abbrev Number: 2 (DW_TAG_typedef)
    <c26>   DW_AT_name        : (indirect string, offset: 0x4b7): uint64_t
    <c2a>   DW_AT_decl_file   : 3
    <c2b>   DW_AT_decl_line   : 60
    <c2c>   DW_AT_decl_column : 20
    <c2d>   DW_AT_type        : <0xbe7>
 <1><c31>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <c32>   DW_AT_type        : <0xc25>
 <1><c36>: Abbrev Number: 6 (DW_TAG_variable)
    <c37>   DW_AT_name        : (indirect string, offset: 0x46f): uptime_seconds
    <c3b>   DW_AT_decl_file   : 4
    <c3c>   DW_AT_decl_line   : 4
    <c3d>   DW_AT_decl_column : 25
    <c3e>   DW_AT_type        : <0xc14>
    <c42>   DW_AT_external    : 1
    <c42>   DW_AT_declaration : 1
 <1><c42>: Abbrev Number: 7 (DW_TAG_variable)
    <c43>   DW_AT_specification: <0xc36>
    <c47>   DW_AT_decl_file   : 1
    <c48>   DW_AT_decl_line   : 11
    <c49>   DW_AT_decl_column : 18
    <c4a>   DW_AT_location    : 5 byte block: 3 18 11 0 20 	(DW_OP_addr: 20001118)
 <1><c50>: Abbrev Number: 8 (DW_TAG_variable)
    <c51>   DW_AT_name        : (indirect string, offset: 0x47e): timer1_overflow_count
    <c55>   DW_AT_decl_file   : 1
    <c56>   DW_AT_decl_line   : 12
    <c57>   DW_AT_decl_column : 19
    <c58>   DW_AT_type        : <0xc31>
    <c5c>   DW_AT_external    : 1
    <c5c>   DW_AT_location    : 5 byte block: 3 10 11 0 20 	(DW_OP_addr: 20001110)
 <1><c62>: Abbrev Number: 9 (DW_TAG_subprogram)
    <c63>   DW_AT_external    : 1
    <c63>   DW_AT_name        : (indirect string, offset: 0x445): get_uptime_cycles
    <c67>   DW_AT_decl_file   : 1
    <c68>   DW_AT_decl_line   : 52
    <c69>   DW_AT_decl_column : 10
    <c6a>   DW_AT_prototyped  : 1
    <c6a>   DW_AT_type        : <0xc25>
    <c6e>   DW_AT_low_pc      : 0
    <c72>   DW_AT_high_pc     : 0x58
    <c76>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <c78>   DW_AT_call_all_tail_calls: 1
    <c78>   DW_AT_sibling     : <0xca6>
 <2><c7c>: Abbrev Number: 10 (DW_TAG_variable)
    <c7d>   DW_AT_name        : (indirect string, offset: 0x4a2): overflow_count_now
    <c81>   DW_AT_decl_file   : 1
    <c82>   DW_AT_decl_line   : 53
    <c83>   DW_AT_decl_column : 11
    <c84>   DW_AT_type        : <0xc25>
    <c88>   DW_AT_location    : 0x213 (location list)
    <c8c>   DW_AT_GNU_locviews: 0x20f
 <2><c90>: Abbrev Number: 11 (DW_TAG_variable)
    <c91>   DW_AT_name        : (indirect string, offset: 0x457): cycles_now
    <c95>   DW_AT_decl_file   : 1
    <c96>   DW_AT_decl_line   : 54
    <c97>   DW_AT_decl_column : 11
    <c98>   DW_AT_type        : <0xc25>
 <2><c9c>: Abbrev Number: 12 (DW_TAG_call_site)
    <c9d>   DW_AT_call_return_pc: 0
    <ca1>   DW_AT_call_origin : <0xca6>
 <2><ca5>: Abbrev Number: 0
 <1><ca6>: Abbrev Number: 13 (DW_TAG_subprogram)
    <ca7>   DW_AT_external    : 1
    <ca7>   DW_AT_name        : (indirect string, offset: 0x494): timeKeeperISR
    <cab>   DW_AT_decl_file   : 1
    <cac>   DW_AT_decl_line   : 34
    <cad>   DW_AT_decl_column : 6
    <cae>   DW_AT_prototyped  : 1
    <cae>   DW_AT_low_pc      : 0x878
    <cb2>   DW_AT_high_pc     : 0x64
    <cb6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <cb8>   DW_AT_call_all_calls: 1
    <cb8>   DW_AT_sibling     : <0xcdc>
 <2><cbc>: Abbrev Number: 14 (DW_TAG_variable)
    <cbd>   DW_AT_name        : (indirect string, offset: 0x436): second_counter
    <cc1>   DW_AT_decl_file   : 1
    <cc2>   DW_AT_decl_line   : 35
    <cc3>   DW_AT_decl_column : 14
    <cc4>   DW_AT_type        : <0xcdc>
    <cc8>   DW_AT_location    : 5 byte block: 3 8 11 0 20 	(DW_OP_addr: 20001108)
 <2><cce>: Abbrev Number: 15 (DW_TAG_variable)
    <ccf>   DW_AT_name        : (indirect string, offset: 0x4c0): sonic_sensor_action_div
    <cd3>   DW_AT_decl_file   : 1
    <cd4>   DW_AT_decl_line   : 36
    <cd5>   DW_AT_decl_column : 14
    <cd6>   DW_AT_type        : <0xcdc>
    <cda>   DW_AT_const_value : 0
 <2><cdb>: Abbrev Number: 0
 <1><cdc>: Abbrev Number: 1 (DW_TAG_base_type)
    <cdd>   DW_AT_byte_size   : 1
    <cde>   DW_AT_encoding    : 8	(unsigned char)
    <cdf>   DW_AT_name        : (indirect string, offset: 0x19f): char
 <1><ce3>: Abbrev Number: 16 (DW_TAG_subprogram)
    <ce4>   DW_AT_external    : 1
    <ce4>   DW_AT_name        : (indirect string, offset: 0x4d8): configureDebounceTimer
    <ce8>   DW_AT_decl_file   : 1
    <ce9>   DW_AT_decl_line   : 16
    <cea>   DW_AT_decl_column : 6
    <ceb>   DW_AT_prototyped  : 1
    <ceb>   DW_AT_low_pc      : 0
    <cef>   DW_AT_high_pc     : 0x7c
    <cf3>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <cf5>   DW_AT_call_all_tail_calls: 1
 <1><cf5>: Abbrev Number: 0
  Compilation Unit @ offset 0xcf6:
   Length:        0x51f (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x4b5
   Pointer Size:  4
 <0><d02>: Abbrev Number: 20 (DW_TAG_compile_unit)
    <d03>   DW_AT_producer    : (indirect string, offset: 0x25a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <d07>   DW_AT_language    : 29	(C11)
    <d08>   DW_AT_name        : (indirect string, offset: 0x550): src/uart_print.c
    <d0c>   DW_AT_comp_dir    : (indirect string, offset: 0x126): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <d10>   DW_AT_ranges      : 0xae
    <d14>   DW_AT_low_pc      : 0
    <d18>   DW_AT_stmt_list   : 0x8c2
 <1><d1c>: Abbrev Number: 2 (DW_TAG_base_type)
    <d1d>   DW_AT_byte_size   : 4
    <d1e>   DW_AT_encoding    : 4	(float)
    <d1f>   DW_AT_name        : (indirect string, offset: 0x54a): float
 <1><d23>: Abbrev Number: 2 (DW_TAG_base_type)
    <d24>   DW_AT_byte_size   : 8
    <d25>   DW_AT_encoding    : 7	(unsigned)
    <d26>   DW_AT_name        : (indirect string, offset: 0x1ae): long long unsigned int
 <1><d2a>: Abbrev Number: 2 (DW_TAG_base_type)
    <d2b>   DW_AT_byte_size   : 1
    <d2c>   DW_AT_encoding    : 8	(unsigned char)
    <d2d>   DW_AT_name        : (indirect string, offset: 0x196): unsigned char
 <1><d31>: Abbrev Number: 5 (DW_TAG_typedef)
    <d32>   DW_AT_name        : (indirect string, offset: 0x528): __gnuc_va_list
    <d36>   DW_AT_decl_file   : 2
    <d37>   DW_AT_decl_line   : 40
    <d38>   DW_AT_decl_column : 27
    <d39>   DW_AT_type        : <0xd3d>
 <1><d3d>: Abbrev Number: 21 (DW_TAG_structure_type)
    <d3e>   DW_AT_name        : (indirect string, offset: 0x5a5): __va_list
    <d42>   DW_AT_byte_size   : 4
    <d43>   DW_AT_decl_file   : 5
    <d44>   DW_AT_decl_line   : 0
    <d45>   DW_AT_sibling     : <0xd54>
 <2><d49>: Abbrev Number: 22 (DW_TAG_member)
    <d4a>   DW_AT_name        : (indirect string, offset: 0x58d): __ap
    <d4e>   DW_AT_type        : <0xd54>
    <d52>   DW_AT_data_member_location: 0
    <d53>   DW_AT_artificial  : 1
 <2><d53>: Abbrev Number: 0
 <1><d54>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <d55>   DW_AT_byte_size   : 4
 <1><d56>: Abbrev Number: 5 (DW_TAG_typedef)
    <d57>   DW_AT_name        : (indirect string, offset: 0x5a7): va_list
    <d5b>   DW_AT_decl_file   : 2
    <d5c>   DW_AT_decl_line   : 103
    <d5d>   DW_AT_decl_column : 24
    <d5e>   DW_AT_type        : <0xd31>
 <1><d62>: Abbrev Number: 2 (DW_TAG_base_type)
    <d63>   DW_AT_byte_size   : 1
    <d64>   DW_AT_encoding    : 6	(signed char)
    <d65>   DW_AT_name        : (indirect string, offset: 0x198): signed char
 <1><d69>: Abbrev Number: 2 (DW_TAG_base_type)
    <d6a>   DW_AT_byte_size   : 2
    <d6b>   DW_AT_encoding    : 5	(signed)
    <d6c>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><d70>: Abbrev Number: 2 (DW_TAG_base_type)
    <d71>   DW_AT_byte_size   : 2
    <d72>   DW_AT_encoding    : 7	(unsigned)
    <d73>   DW_AT_name        : (indirect string, offset: 0x1f2): short unsigned int
 <1><d77>: Abbrev Number: 5 (DW_TAG_typedef)
    <d78>   DW_AT_name        : (indirect string, offset: 0x35e): __int32_t
    <d7c>   DW_AT_decl_file   : 3
    <d7d>   DW_AT_decl_line   : 77
    <d7e>   DW_AT_decl_column : 24
    <d7f>   DW_AT_type        : <0xd83>
 <1><d83>: Abbrev Number: 2 (DW_TAG_base_type)
    <d84>   DW_AT_byte_size   : 4
    <d85>   DW_AT_encoding    : 5	(signed)
    <d86>   DW_AT_name        : (indirect string, offset: 0xec): long int
 <1><d8a>: Abbrev Number: 5 (DW_TAG_typedef)
    <d8b>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <d8f>   DW_AT_decl_file   : 3
    <d90>   DW_AT_decl_line   : 79
    <d91>   DW_AT_decl_column : 25
    <d92>   DW_AT_type        : <0xd96>
 <1><d96>: Abbrev Number: 2 (DW_TAG_base_type)
    <d97>   DW_AT_byte_size   : 4
    <d98>   DW_AT_encoding    : 7	(unsigned)
    <d99>   DW_AT_name        : (indirect string, offset: 0x1b3): long unsigned int
 <1><d9d>: Abbrev Number: 2 (DW_TAG_base_type)
    <d9e>   DW_AT_byte_size   : 8
    <d9f>   DW_AT_encoding    : 5	(signed)
    <da0>   DW_AT_name        : (indirect string, offset: 0xe7): long long int
 <1><da4>: Abbrev Number: 24 (DW_TAG_base_type)
    <da5>   DW_AT_byte_size   : 4
    <da6>   DW_AT_encoding    : 5	(signed)
    <da7>   DW_AT_name        : int
 <1><dab>: Abbrev Number: 2 (DW_TAG_base_type)
    <dac>   DW_AT_byte_size   : 4
    <dad>   DW_AT_encoding    : 7	(unsigned)
    <dae>   DW_AT_name        : (indirect string, offset: 0x1b8): unsigned int
 <1><db2>: Abbrev Number: 5 (DW_TAG_typedef)
    <db3>   DW_AT_name        : (indirect string, offset: 0x360): int32_t
    <db7>   DW_AT_decl_file   : 4
    <db8>   DW_AT_decl_line   : 44
    <db9>   DW_AT_decl_column : 19
    <dba>   DW_AT_type        : <0xd77>
 <1><dbe>: Abbrev Number: 5 (DW_TAG_typedef)
    <dbf>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <dc3>   DW_AT_decl_file   : 4
    <dc4>   DW_AT_decl_line   : 48
    <dc5>   DW_AT_decl_column : 20
    <dc6>   DW_AT_type        : <0xd8a>
 <1><dca>: Abbrev Number: 6 (DW_TAG_subprogram)
    <dcb>   DW_AT_external    : 1
    <dcb>   DW_AT_name        : (indirect string, offset: 0x155): printlf
    <dcf>   DW_AT_decl_file   : 1
    <dcf>   DW_AT_decl_line   : 115
    <dd0>   DW_AT_decl_column : 6
    <dd0>   DW_AT_prototyped  : 1
    <dd0>   DW_AT_low_pc      : 0xb30
    <dd4>   DW_AT_high_pc     : 0xea
    <dd8>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <dda>   DW_AT_call_all_calls: 1
    <dda>   DW_AT_sibling     : <0xea5>
 <2><dde>: Abbrev Number: 25 (DW_TAG_formal_parameter)
    <ddf>   DW_AT_name        : (indirect string, offset: 0x561): format
    <de3>   DW_AT_decl_file   : 1
    <de4>   DW_AT_decl_line   : 115
    <de5>   DW_AT_decl_column : 19
    <de6>   DW_AT_type        : <0xea5>
    <dea>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><ded>: Abbrev Number: 26 (DW_TAG_unspecified_parameters)
 <2><dee>: Abbrev Number: 11 (DW_TAG_variable)
    <def>   DW_AT_name        : (indirect string, offset: 0x5af): args
    <df3>   DW_AT_decl_file   : 1
    <df3>   DW_AT_decl_line   : 116
    <df4>   DW_AT_decl_column : 10
    <df5>   DW_AT_type        : <0xd56>
    <df9>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><dfc>: Abbrev Number: 14 (DW_TAG_variable)
    <dfd>   DW_AT_name        : str
    <e01>   DW_AT_decl_file   : 1
    <e01>   DW_AT_decl_line   : 119
    <e02>   DW_AT_decl_column : 8
    <e03>   DW_AT_type        : <0xea5>
 <2><e07>: Abbrev Number: 14 (DW_TAG_variable)
    <e08>   DW_AT_name        : num
    <e0c>   DW_AT_decl_file   : 1
    <e0c>   DW_AT_decl_line   : 120
    <e0d>   DW_AT_decl_column : 10
    <e0e>   DW_AT_type        : <0xdb2>
 <2><e12>: Abbrev Number: 27 (DW_TAG_variable)
    <e13>   DW_AT_name        : (indirect string, offset: 0x537): numu
    <e17>   DW_AT_decl_file   : 1
    <e18>   DW_AT_decl_line   : 121
    <e19>   DW_AT_decl_column : 11
    <e1a>   DW_AT_type        : <0xdbe>
 <2><e1e>: Abbrev Number: 11 (DW_TAG_variable)
    <e1f>   DW_AT_name        : (indirect string, offset: 0x5a0): numf
    <e23>   DW_AT_decl_file   : 1
    <e23>   DW_AT_decl_line   : 122
    <e24>   DW_AT_decl_column : 9
    <e25>   DW_AT_type        : <0xeb6>
    <e29>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
 <2><e2b>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <e2c>   DW_AT_low_pc      : 0xb3e
    <e30>   DW_AT_high_pc     : 0xd2
 <3><e34>: Abbrev Number: 8 (DW_TAG_variable)
    <e35>   DW_AT_name        : i
    <e37>   DW_AT_decl_file   : 1
    <e37>   DW_AT_decl_line   : 124
    <e38>   DW_AT_decl_column : 10
    <e39>   DW_AT_type        : <0xda4>
    <e3d>   DW_AT_location    : 0x247 (location list)
    <e41>   DW_AT_GNU_locviews: 0x239
 <3><e45>: Abbrev Number: 3 (DW_TAG_call_site)
    <e46>   DW_AT_call_return_pc: 0xb4e
    <e4a>   DW_AT_call_origin : <0x101b>
 <3><e4e>: Abbrev Number: 3 (DW_TAG_call_site)
    <e4f>   DW_AT_call_return_pc: 0xb5e
    <e53>   DW_AT_call_origin : <0xfcf>
 <3><e57>: Abbrev Number: 4 (DW_TAG_call_site)
    <e58>   DW_AT_call_return_pc: 0xb68
    <e5c>   DW_AT_call_origin : <0x10e0>
    <e60>   DW_AT_sibling     : <0xe6b>
 <4><e64>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e65>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e67>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><e6a>: Abbrev Number: 0
 <3><e6b>: Abbrev Number: 3 (DW_TAG_call_site)
    <e6c>   DW_AT_call_return_pc: 0xb76
    <e70>   DW_AT_call_origin : <0x108a>
 <3><e74>: Abbrev Number: 3 (DW_TAG_call_site)
    <e75>   DW_AT_call_return_pc: 0xb8a
    <e79>   DW_AT_call_origin : <0xebb>
 <3><e7d>: Abbrev Number: 4 (DW_TAG_call_site)
    <e7e>   DW_AT_call_return_pc: 0xb94
    <e82>   DW_AT_call_origin : <0x10e0>
    <e86>   DW_AT_sibling     : <0xe91>
 <4><e8a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e8b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e8d>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><e90>: Abbrev Number: 0
 <3><e91>: Abbrev Number: 3 (DW_TAG_call_site)
    <e92>   DW_AT_call_return_pc: 0xb9a
    <e96>   DW_AT_call_origin : <0x10e0>
 <3><e9a>: Abbrev Number: 3 (DW_TAG_call_site)
    <e9b>   DW_AT_call_return_pc: 0xba2
    <e9f>   DW_AT_call_origin : <0x10e0>
 <3><ea3>: Abbrev Number: 0
 <2><ea4>: Abbrev Number: 0
 <1><ea5>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <ea6>   DW_AT_byte_size   : 4
    <ea6>   DW_AT_type        : <0xeaa>
 <1><eaa>: Abbrev Number: 2 (DW_TAG_base_type)
    <eab>   DW_AT_byte_size   : 1
    <eac>   DW_AT_encoding    : 8	(unsigned char)
    <ead>   DW_AT_name        : (indirect string, offset: 0x19f): char
 <1><eb1>: Abbrev Number: 16 (DW_TAG_const_type)
    <eb2>   DW_AT_type        : <0xeaa>
 <1><eb6>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <eb7>   DW_AT_byte_size   : 4
    <eb7>   DW_AT_type        : <0xd1c>
 <1><ebb>: Abbrev Number: 6 (DW_TAG_subprogram)
    <ebc>   DW_AT_external    : 1
    <ebc>   DW_AT_name        : (indirect string, offset: 0x544): print_float
    <ec0>   DW_AT_decl_file   : 1
    <ec0>   DW_AT_decl_line   : 72
    <ec1>   DW_AT_decl_column : 6
    <ec1>   DW_AT_prototyped  : 1
    <ec1>   DW_AT_low_pc      : 0xa10
    <ec5>   DW_AT_high_pc     : 0x120
    <ec9>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <ecb>   DW_AT_call_all_calls: 1
    <ecb>   DW_AT_sibling     : <0xfbf>
 <2><ecf>: Abbrev Number: 28 (DW_TAG_formal_parameter)
    <ed0>   DW_AT_name        : (indirect string, offset: 0x599): number
    <ed4>   DW_AT_decl_file   : 1
    <ed5>   DW_AT_decl_line   : 72
    <ed6>   DW_AT_decl_column : 24
    <ed7>   DW_AT_type        : <0xd1c>
    <edb>   DW_AT_location    : 0x288 (location list)
    <edf>   DW_AT_GNU_locviews: 0x274
 <2><ee3>: Abbrev Number: 17 (DW_TAG_variable)
    <ee4>   DW_AT_name        : buf
    <ee8>   DW_AT_decl_file   : 1
    <ee8>   DW_AT_decl_line   : 89
    <ee9>   DW_AT_decl_column : 7
    <ee9>   DW_AT_type        : <0xfbf>
    <eed>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><ef0>: Abbrev Number: 9 (DW_TAG_variable)
    <ef1>   DW_AT_name        : (indirect string, offset: 0x4ef): integerPart
    <ef5>   DW_AT_decl_file   : 1
    <ef5>   DW_AT_decl_line   : 96
    <ef6>   DW_AT_decl_column : 11
    <ef7>   DW_AT_type        : <0xdbe>
    <efb>   DW_AT_location    : 0x2f0 (location list)
    <eff>   DW_AT_GNU_locviews: 0x2ec
 <2><f03>: Abbrev Number: 9 (DW_TAG_variable)
    <f04>   DW_AT_name        : (indirect string, offset: 0x51c): decimalPart
    <f08>   DW_AT_decl_file   : 1
    <f08>   DW_AT_decl_line   : 97
    <f09>   DW_AT_decl_column : 11
    <f0a>   DW_AT_type        : <0xdbe>
    <f0e>   DW_AT_location    : 0x309 (location list)
    <f12>   DW_AT_GNU_locviews: 0x303
 <2><f16>: Abbrev Number: 9 (DW_TAG_variable)
    <f17>   DW_AT_name        : (indirect string, offset: 0x592): places
    <f1b>   DW_AT_decl_file   : 1
    <f1b>   DW_AT_decl_line   : 99
    <f1c>   DW_AT_decl_column : 6
    <f1d>   DW_AT_type        : <0xda4>
    <f21>   DW_AT_location    : 0x32c (location list)
    <f25>   DW_AT_GNU_locviews: 0x31e
 <2><f29>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <f2a>   DW_AT_ranges      : 0x9f
    <f2e>   DW_AT_sibling     : <0xf44>
 <3><f32>: Abbrev Number: 8 (DW_TAG_variable)
    <f33>   DW_AT_name        : i
    <f35>   DW_AT_decl_file   : 1
    <f35>   DW_AT_decl_line   : 101
    <f36>   DW_AT_decl_column : 10
    <f37>   DW_AT_type        : <0xda4>
    <f3b>   DW_AT_location    : 0x361 (location list)
    <f3f>   DW_AT_GNU_locviews: 0x35d
 <3><f43>: Abbrev Number: 0
 <2><f44>: Abbrev Number: 4 (DW_TAG_call_site)
    <f45>   DW_AT_call_return_pc: 0xa98
    <f49>   DW_AT_call_origin : <0x108a>
    <f4d>   DW_AT_sibling     : <0xf5b>
 <3><f51>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f52>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f54>   DW_AT_call_value  : 5 byte block: 3 a0 d 0 0 	(DW_OP_addr: da0)
 <3><f5a>: Abbrev Number: 0
 <2><f5b>: Abbrev Number: 4 (DW_TAG_call_site)
    <f5c>   DW_AT_call_return_pc: 0xaa0
    <f60>   DW_AT_call_origin : <0x108a>
    <f64>   DW_AT_sibling     : <0xf72>
 <3><f68>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f69>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f6b>   DW_AT_call_value  : 5 byte block: 3 a4 d 0 0 	(DW_OP_addr: da4)
 <3><f71>: Abbrev Number: 0
 <2><f72>: Abbrev Number: 4 (DW_TAG_call_site)
    <f73>   DW_AT_call_return_pc: 0xaae
    <f77>   DW_AT_call_origin : <0x108a>
    <f7b>   DW_AT_sibling     : <0xf89>
 <3><f7f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f80>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f82>   DW_AT_call_value  : 5 byte block: 3 a8 d 0 0 	(DW_OP_addr: da8)
 <3><f88>: Abbrev Number: 0
 <2><f89>: Abbrev Number: 4 (DW_TAG_call_site)
    <f8a>   DW_AT_call_return_pc: 0xab6
    <f8e>   DW_AT_call_origin : <0x10e0>
    <f92>   DW_AT_sibling     : <0xf9d>
 <3><f96>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f97>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f99>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><f9c>: Abbrev Number: 0
 <2><f9d>: Abbrev Number: 3 (DW_TAG_call_site)
    <f9e>   DW_AT_call_return_pc: 0xafc
    <fa2>   DW_AT_call_origin : <0x101b>
 <2><fa6>: Abbrev Number: 13 (DW_TAG_call_site)
    <fa7>   DW_AT_call_return_pc: 0xb0e
    <fab>   DW_AT_call_origin : <0x10e0>
 <3><faf>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <fb0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <fb2>   DW_AT_call_value  : 10 byte block: 91 0 74 0 22 8 20 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_const1u: 32; DW_OP_minus; DW_OP_deref_size: 1)
 <3><fbd>: Abbrev Number: 0
 <2><fbe>: Abbrev Number: 0
 <1><fbf>: Abbrev Number: 18 (DW_TAG_array_type)
    <fc0>   DW_AT_type        : <0xeaa>
    <fc4>   DW_AT_sibling     : <0xfcf>
 <2><fc8>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <fc9>   DW_AT_type        : <0xdab>
    <fcd>   DW_AT_upper_bound : 14
 <2><fce>: Abbrev Number: 0
 <1><fcf>: Abbrev Number: 6 (DW_TAG_subprogram)
    <fd0>   DW_AT_external    : 1
    <fd0>   DW_AT_name        : (indirect string, offset: 0x57f): print_decimal
    <fd4>   DW_AT_decl_file   : 1
    <fd4>   DW_AT_decl_line   : 62
    <fd5>   DW_AT_decl_column : 6
    <fd5>   DW_AT_prototyped  : 1
    <fd5>   DW_AT_low_pc      : 0x9f8
    <fd9>   DW_AT_high_pc     : 0x18
    <fdd>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <fdf>   DW_AT_call_all_calls: 1
    <fdf>   DW_AT_sibling     : <0x101b>
 <2><fe3>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <fe4>   DW_AT_name        : num
    <fe8>   DW_AT_decl_file   : 1
    <fe8>   DW_AT_decl_line   : 62
    <fe9>   DW_AT_decl_column : 28
    <fea>   DW_AT_type        : <0xdb2>
    <fee>   DW_AT_location    : 0x37a (location list)
    <ff2>   DW_AT_GNU_locviews: 0x372
 <2><ff6>: Abbrev Number: 4 (DW_TAG_call_site)
    <ff7>   DW_AT_call_return_pc: 0xa04
    <ffb>   DW_AT_call_origin : <0x101b>
    <fff>   DW_AT_sibling     : <0x100a>
 <3><1003>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1004>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1006>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><1009>: Abbrev Number: 0
 <2><100a>: Abbrev Number: 13 (DW_TAG_call_site)
    <100b>   DW_AT_call_return_pc: 0xa0c
    <100f>   DW_AT_call_origin : <0x10e0>
 <3><1013>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1014>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1016>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><1019>: Abbrev Number: 0
 <2><101a>: Abbrev Number: 0
 <1><101b>: Abbrev Number: 6 (DW_TAG_subprogram)
    <101c>   DW_AT_external    : 1
    <101c>   DW_AT_name        : (indirect string, offset: 0x568): print_unsigned_decimal
    <1020>   DW_AT_decl_file   : 1
    <1020>   DW_AT_decl_line   : 46
    <1021>   DW_AT_decl_column : 6
    <1021>   DW_AT_prototyped  : 1
    <1021>   DW_AT_low_pc      : 0x9ac
    <1025>   DW_AT_high_pc     : 0x4c
    <1029>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <102b>   DW_AT_call_all_calls: 1
    <102b>   DW_AT_sibling     : <0x107a>
 <2><102f>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <1030>   DW_AT_name        : num
    <1034>   DW_AT_decl_file   : 1
    <1034>   DW_AT_decl_line   : 46
    <1035>   DW_AT_decl_column : 38
    <1036>   DW_AT_type        : <0xdbe>
    <103a>   DW_AT_location    : 0x398 (location list)
    <103e>   DW_AT_GNU_locviews: 0x394
 <2><1042>: Abbrev Number: 17 (DW_TAG_variable)
    <1043>   DW_AT_name        : buf
    <1047>   DW_AT_decl_file   : 1
    <1047>   DW_AT_decl_line   : 48
    <1048>   DW_AT_decl_column : 7
    <1048>   DW_AT_type        : <0x107a>
    <104c>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><104f>: Abbrev Number: 9 (DW_TAG_variable)
    <1050>   DW_AT_name        : (indirect string, offset: 0x592): places
    <1054>   DW_AT_decl_file   : 1
    <1054>   DW_AT_decl_line   : 50
    <1055>   DW_AT_decl_column : 6
    <1056>   DW_AT_type        : <0xda4>
    <105a>   DW_AT_location    : 0x3b4 (location list)
    <105e>   DW_AT_GNU_locviews: 0x3a8
 <2><1062>: Abbrev Number: 13 (DW_TAG_call_site)
    <1063>   DW_AT_call_return_pc: 0x9ec
    <1067>   DW_AT_call_origin : <0x10e0>
 <3><106b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <106c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <106e>   DW_AT_call_value  : 9 byte block: 91 0 74 0 22 44 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_lit20; DW_OP_minus; DW_OP_deref_size: 1)
 <3><1078>: Abbrev Number: 0
 <2><1079>: Abbrev Number: 0
 <1><107a>: Abbrev Number: 18 (DW_TAG_array_type)
    <107b>   DW_AT_type        : <0xeaa>
    <107f>   DW_AT_sibling     : <0x108a>
 <2><1083>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <1084>   DW_AT_type        : <0xdab>
    <1088>   DW_AT_upper_bound : 10
 <2><1089>: Abbrev Number: 0
 <1><108a>: Abbrev Number: 6 (DW_TAG_subprogram)
    <108b>   DW_AT_external    : 1
    <108b>   DW_AT_name        : (indirect string, offset: 0x4fb): print_string
    <108f>   DW_AT_decl_file   : 1
    <108f>   DW_AT_decl_line   : 40
    <1090>   DW_AT_decl_column : 6
    <1090>   DW_AT_prototyped  : 1
    <1090>   DW_AT_low_pc      : 0x994
    <1094>   DW_AT_high_pc     : 0x16
    <1098>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <109a>   DW_AT_call_all_calls: 1
    <109a>   DW_AT_sibling     : <0x10d6>
 <2><109e>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <109f>   DW_AT_name        : str
    <10a3>   DW_AT_decl_file   : 1
    <10a3>   DW_AT_decl_line   : 40
    <10a4>   DW_AT_decl_column : 38
    <10a5>   DW_AT_type        : <0x10db>
    <10a9>   DW_AT_location    : 0x3e1 (location list)
    <10ad>   DW_AT_GNU_locviews: 0x3dd
 <2><10b1>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <10b2>   DW_AT_low_pc      : 0x998
    <10b6>   DW_AT_high_pc     : 0x10
 <3><10ba>: Abbrev Number: 8 (DW_TAG_variable)
    <10bb>   DW_AT_name        : i
    <10bd>   DW_AT_decl_file   : 1
    <10bd>   DW_AT_decl_line   : 41
    <10be>   DW_AT_decl_column : 10
    <10bf>   DW_AT_type        : <0xda4>
    <10c3>   DW_AT_location    : 0x3f5 (location list)
    <10c7>   DW_AT_GNU_locviews: 0x3f1
 <3><10cb>: Abbrev Number: 3 (DW_TAG_call_site)
    <10cc>   DW_AT_call_return_pc: 0x9a0
    <10d0>   DW_AT_call_origin : <0x10e0>
 <3><10d4>: Abbrev Number: 0
 <2><10d5>: Abbrev Number: 0
 <1><10d6>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <10d7>   DW_AT_byte_size   : 4
    <10d7>   DW_AT_type        : <0xeb1>
 <1><10db>: Abbrev Number: 16 (DW_TAG_const_type)
    <10dc>   DW_AT_type        : <0x10d6>
 <1><10e0>: Abbrev Number: 6 (DW_TAG_subprogram)
    <10e1>   DW_AT_external    : 1
    <10e1>   DW_AT_name        : (indirect string, offset: 0x53c): putchar
    <10e5>   DW_AT_decl_file   : 1
    <10e5>   DW_AT_decl_line   : 26
    <10e6>   DW_AT_decl_column : 6
    <10e6>   DW_AT_prototyped  : 1
    <10e6>   DW_AT_low_pc      : 0x94c
    <10ea>   DW_AT_high_pc     : 0x48
    <10ee>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <10f0>   DW_AT_call_all_calls: 1
    <10f0>   DW_AT_sibling     : <0x1165>
 <2><10f4>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <10f5>   DW_AT_name        : c
    <10f7>   DW_AT_decl_file   : 1
    <10f7>   DW_AT_decl_line   : 26
    <10f8>   DW_AT_decl_column : 19
    <10f9>   DW_AT_type        : <0xeaa>
    <10fd>   DW_AT_location    : 0x40c (location list)
    <1101>   DW_AT_GNU_locviews: 0x406
 <2><1105>: Abbrev Number: 11 (DW_TAG_variable)
    <1106>   DW_AT_name        : (indirect string, offset: 0x508): chars_sent_recently
    <110a>   DW_AT_decl_file   : 1
    <110a>   DW_AT_decl_line   : 27
    <110b>   DW_AT_decl_column : 13
    <110c>   DW_AT_type        : <0xda4>
    <1110>   DW_AT_location    : 5 byte block: 3 1c 11 0 20 	(DW_OP_addr: 2000111c)
 <2><1116>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <1117>   DW_AT_low_pc      : 0x97c
    <111b>   DW_AT_high_pc     : 0xc
    <111f>   DW_AT_sibling     : <0x1135>
 <3><1123>: Abbrev Number: 8 (DW_TAG_variable)
    <1124>   DW_AT_name        : i
    <1126>   DW_AT_decl_file   : 1
    <1126>   DW_AT_decl_line   : 34
    <1127>   DW_AT_decl_column : 11
    <1128>   DW_AT_type        : <0xda4>
    <112c>   DW_AT_location    : 0x42e (location list)
    <1130>   DW_AT_GNU_locviews: 0x42a
 <3><1134>: Abbrev Number: 0
 <2><1135>: Abbrev Number: 7 (DW_TAG_call_site)
    <1136>   DW_AT_call_return_pc: 0x95c
    <113a>   DW_AT_sibling     : <0x1155>
 <3><113e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <113f>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1141>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><1147>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1148>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <114a>   DW_AT_call_value  : 9 byte block: a3 3 a5 0 2d a8 34 a8 0 	(DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xd23>); DW_OP_convert <0xd2a>; DW_OP_convert <0>)
 <3><1154>: Abbrev Number: 0
 <2><1155>: Abbrev Number: 31 (DW_TAG_call_site)
    <1156>   DW_AT_call_return_pc: 0x968
 <3><115a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <115b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <115d>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><1163>: Abbrev Number: 0
 <2><1164>: Abbrev Number: 0
 <1><1165>: Abbrev Number: 32 (DW_TAG_subprogram)
    <1166>   DW_AT_external    : 1
    <1166>   DW_AT_name        : (indirect string, offset: 0x413): setup_uart_printer
    <116a>   DW_AT_decl_file   : 1
    <116b>   DW_AT_decl_line   : 15
    <116c>   DW_AT_decl_column : 6
    <116d>   DW_AT_prototyped  : 1
    <116d>   DW_AT_low_pc      : 0x8dc
    <1171>   DW_AT_high_pc     : 0x70
    <1175>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1177>   DW_AT_call_all_tail_calls: 1
 <2><1177>: Abbrev Number: 7 (DW_TAG_call_site)
    <1178>   DW_AT_call_return_pc: 0x8ea
    <117c>   DW_AT_sibling     : <0x118b>
 <3><1180>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1181>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1183>   DW_AT_call_value  : 6 byte block: 11 80 90 80 80 7f 	(DW_OP_consts: -268433408)
 <3><118a>: Abbrev Number: 0
 <2><118b>: Abbrev Number: 7 (DW_TAG_call_site)
    <118c>   DW_AT_call_return_pc: 0x8f2
    <1190>   DW_AT_sibling     : <0x119f>
 <3><1194>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1195>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1197>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><119e>: Abbrev Number: 0
 <2><119f>: Abbrev Number: 7 (DW_TAG_call_site)
    <11a0>   DW_AT_call_return_pc: 0x900
    <11a4>   DW_AT_sibling     : <0x11b3>
 <3><11a8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11a9>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <11ab>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><11b2>: Abbrev Number: 0
 <2><11b3>: Abbrev Number: 33 (DW_TAG_call_site)
    <11b4>   DW_AT_call_return_pc: 0x918
    <11b8>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
    <11bb>   DW_AT_sibling     : <0x11d9>
 <3><11bf>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11c0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <11c2>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><11c8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11c9>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <11cb>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><11cd>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11ce>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <11d0>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><11d3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11d4>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <11d6>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><11d8>: Abbrev Number: 0
 <2><11d9>: Abbrev Number: 7 (DW_TAG_call_site)
    <11da>   DW_AT_call_return_pc: 0x926
    <11de>   DW_AT_sibling     : <0x11f6>
 <3><11e2>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11e3>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <11e5>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><11eb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11ec>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <11ee>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><11f0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11f1>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <11f3>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><11f5>: Abbrev Number: 0
 <2><11f6>: Abbrev Number: 34 (DW_TAG_call_site)
    <11f7>   DW_AT_call_return_pc: 0x93a
    <11fb>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><11fe>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <11ff>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1201>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><1207>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1208>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <120a>   DW_AT_call_value  : 5 byte block: c 0 9 3d 0 	(DW_OP_const4u: 4000000)
 <3><1210>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1211>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <1213>   DW_AT_call_value  : 2 byte block: 8 68 	(DW_OP_const1u: 104)
 <3><1216>: Abbrev Number: 0
 <2><1217>: Abbrev Number: 0
 <1><1218>: Abbrev Number: 0
  Compilation Unit @ offset 0x1219:
   Length:        0x193 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x680
   Pointer Size:  4
 <0><1225>: Abbrev Number: 10 (DW_TAG_compile_unit)
    <1226>   DW_AT_producer    : (indirect string, offset: 0x25a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <122a>   DW_AT_language    : 29	(C11)
    <122b>   DW_AT_name        : (indirect string, offset: 0x5eb): sys/startup_gcc.c
    <122f>   DW_AT_comp_dir    : (indirect string, offset: 0x126): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1233>   DW_AT_ranges      : 0xe7
    <1237>   DW_AT_low_pc      : 0
    <123b>   DW_AT_stmt_list   : 0xce6
 <1><123f>: Abbrev Number: 1 (DW_TAG_base_type)
    <1240>   DW_AT_byte_size   : 1
    <1241>   DW_AT_encoding    : 6	(signed char)
    <1242>   DW_AT_name        : (indirect string, offset: 0x198): signed char
 <1><1246>: Abbrev Number: 1 (DW_TAG_base_type)
    <1247>   DW_AT_byte_size   : 1
    <1248>   DW_AT_encoding    : 8	(unsigned char)
    <1249>   DW_AT_name        : (indirect string, offset: 0x196): unsigned char
 <1><124d>: Abbrev Number: 1 (DW_TAG_base_type)
    <124e>   DW_AT_byte_size   : 2
    <124f>   DW_AT_encoding    : 5	(signed)
    <1250>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><1254>: Abbrev Number: 1 (DW_TAG_base_type)
    <1255>   DW_AT_byte_size   : 2
    <1256>   DW_AT_encoding    : 7	(unsigned)
    <1257>   DW_AT_name        : (indirect string, offset: 0x1f2): short unsigned int
 <1><125b>: Abbrev Number: 1 (DW_TAG_base_type)
    <125c>   DW_AT_byte_size   : 4
    <125d>   DW_AT_encoding    : 5	(signed)
    <125e>   DW_AT_name        : (indirect string, offset: 0xec): long int
 <1><1262>: Abbrev Number: 4 (DW_TAG_typedef)
    <1263>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <1267>   DW_AT_decl_file   : 2
    <1268>   DW_AT_decl_line   : 79
    <1269>   DW_AT_decl_column : 25
    <126a>   DW_AT_type        : <0x126e>
 <1><126e>: Abbrev Number: 1 (DW_TAG_base_type)
    <126f>   DW_AT_byte_size   : 4
    <1270>   DW_AT_encoding    : 7	(unsigned)
    <1271>   DW_AT_name        : (indirect string, offset: 0x1b3): long unsigned int
 <1><1275>: Abbrev Number: 1 (DW_TAG_base_type)
    <1276>   DW_AT_byte_size   : 8
    <1277>   DW_AT_encoding    : 5	(signed)
    <1278>   DW_AT_name        : (indirect string, offset: 0xe7): long long int
 <1><127c>: Abbrev Number: 1 (DW_TAG_base_type)
    <127d>   DW_AT_byte_size   : 8
    <127e>   DW_AT_encoding    : 7	(unsigned)
    <127f>   DW_AT_name        : (indirect string, offset: 0x1ae): long long unsigned int
 <1><1283>: Abbrev Number: 11 (DW_TAG_base_type)
    <1284>   DW_AT_byte_size   : 4
    <1285>   DW_AT_encoding    : 5	(signed)
    <1286>   DW_AT_name        : int
 <1><128a>: Abbrev Number: 1 (DW_TAG_base_type)
    <128b>   DW_AT_byte_size   : 4
    <128c>   DW_AT_encoding    : 7	(unsigned)
    <128d>   DW_AT_name        : (indirect string, offset: 0x1b8): unsigned int
 <1><1291>: Abbrev Number: 4 (DW_TAG_typedef)
    <1292>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <1296>   DW_AT_decl_file   : 3
    <1297>   DW_AT_decl_line   : 48
    <1298>   DW_AT_decl_column : 20
    <1299>   DW_AT_type        : <0x1262>
 <1><129d>: Abbrev Number: 1 (DW_TAG_base_type)
    <129e>   DW_AT_byte_size   : 8
    <129f>   DW_AT_encoding    : 4	(float)
    <12a0>   DW_AT_name        : (indirect string, offset: 0x613): long double
 <1><12a4>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <12a5>   DW_AT_byte_size   : 4
    <12a5>   DW_AT_type        : <0x12ae>
 <1><12a9>: Abbrev Number: 6 (DW_TAG_const_type)
    <12aa>   DW_AT_type        : <0x12a4>
 <1><12ae>: Abbrev Number: 12 (DW_TAG_subroutine_type)
    <12af>   DW_AT_prototyped  : 1
 <1><12af>: Abbrev Number: 1 (DW_TAG_base_type)
    <12b0>   DW_AT_byte_size   : 1
    <12b1>   DW_AT_encoding    : 8	(unsigned char)
    <12b2>   DW_AT_name        : (indirect string, offset: 0x19f): char
 <1><12b6>: Abbrev Number: 7 (DW_TAG_array_type)
    <12b7>   DW_AT_type        : <0x126e>
    <12bb>   DW_AT_sibling     : <0x12c6>
 <2><12bf>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <12c0>   DW_AT_type        : <0x128a>
    <12c4>   DW_AT_upper_bound : 63
 <2><12c5>: Abbrev Number: 0
 <1><12c6>: Abbrev Number: 13 (DW_TAG_variable)
    <12c7>   DW_AT_name        : (indirect string, offset: 0x5ba): pulStack
    <12cb>   DW_AT_decl_file   : 1
    <12cc>   DW_AT_decl_line   : 33
    <12cd>   DW_AT_decl_column : 22
    <12ce>   DW_AT_type        : <0x12b6>
    <12d2>   DW_AT_location    : 5 byte block: 3 20 11 0 20 	(DW_OP_addr: 20001120)
 <1><12d8>: Abbrev Number: 7 (DW_TAG_array_type)
    <12d9>   DW_AT_type        : <0x12a9>
    <12dd>   DW_AT_sibling     : <0x12e8>
 <2><12e1>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <12e2>   DW_AT_type        : <0x128a>
    <12e6>   DW_AT_upper_bound : 154
 <2><12e7>: Abbrev Number: 0
 <1><12e8>: Abbrev Number: 6 (DW_TAG_const_type)
    <12e9>   DW_AT_type        : <0x12d8>
 <1><12ed>: Abbrev Number: 14 (DW_TAG_variable)
    <12ee>   DW_AT_name        : (indirect string, offset: 0x606): g_pfnVectors
    <12f2>   DW_AT_decl_file   : 1
    <12f3>   DW_AT_decl_line   : 42
    <12f4>   DW_AT_decl_column : 15
    <12f5>   DW_AT_type        : <0x12e8>
    <12f9>   DW_AT_external    : 1
    <12f9>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <1><12ff>: Abbrev Number: 2 (DW_TAG_variable)
    <1300>   DW_AT_name        : (indirect string, offset: 0x5dd): _etext
    <1304>   DW_AT_decl_file   : 1
    <1304>   DW_AT_decl_line   : 209
    <1305>   DW_AT_decl_column : 22
    <1305>   DW_AT_type        : <0x126e>
    <1309>   DW_AT_external    : 1
    <1309>   DW_AT_declaration : 1
 <1><1309>: Abbrev Number: 2 (DW_TAG_variable)
    <130a>   DW_AT_name        : (indirect string, offset: 0x5b4): _data
    <130e>   DW_AT_decl_file   : 1
    <130e>   DW_AT_decl_line   : 210
    <130f>   DW_AT_decl_column : 22
    <130f>   DW_AT_type        : <0x126e>
    <1313>   DW_AT_external    : 1
    <1313>   DW_AT_declaration : 1
 <1><1313>: Abbrev Number: 2 (DW_TAG_variable)
    <1314>   DW_AT_name        : (indirect string, offset: 0x5e4): _edata
    <1318>   DW_AT_decl_file   : 1
    <1318>   DW_AT_decl_line   : 211
    <1319>   DW_AT_decl_column : 22
    <1319>   DW_AT_type        : <0x126e>
    <131d>   DW_AT_external    : 1
    <131d>   DW_AT_declaration : 1
 <1><131d>: Abbrev Number: 15 (DW_TAG_subprogram)
    <131e>   DW_AT_external    : 1
    <131e>   DW_AT_name        : (indirect string, offset: 0x426): main
    <1322>   DW_AT_decl_file   : 1
    <1323>   DW_AT_decl_line   : 26
    <1324>   DW_AT_decl_column : 12
    <1325>   DW_AT_prototyped  : 1
    <1325>   DW_AT_type        : <0x1283>
    <1329>   DW_AT_declaration : 1
 <1><1329>: Abbrev Number: 16 (DW_TAG_subprogram)
    <132a>   DW_AT_external    : 1
    <132a>   DW_AT_name        : (indirect string, offset: 0x494): timeKeeperISR
    <132e>   DW_AT_decl_file   : 4
    <132f>   DW_AT_decl_line   : 7
    <1330>   DW_AT_decl_column : 6
    <1331>   DW_AT_prototyped  : 1
    <1331>   DW_AT_declaration : 1
 <1><1331>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1332>   DW_AT_name        : (indirect string, offset: 0x5c3): IntDefaultHandler
    <1336>   DW_AT_decl_file   : 1
    <1336>   DW_AT_decl_line   : 304
    <1338>   DW_AT_decl_column : 1
    <1338>   DW_AT_prototyped  : 1
    <1338>   DW_AT_low_pc      : 0xc20
    <133c>   DW_AT_high_pc     : 0x2
    <1340>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1342>   DW_AT_call_all_calls: 1
 <1><1342>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1343>   DW_AT_name        : (indirect string, offset: 0x5fd): FaultISR
    <1347>   DW_AT_decl_file   : 1
    <1347>   DW_AT_decl_line   : 286
    <1349>   DW_AT_decl_column : 1
    <1349>   DW_AT_prototyped  : 1
    <1349>   DW_AT_low_pc      : 0xc1e
    <134d>   DW_AT_high_pc     : 0x2
    <1351>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1353>   DW_AT_call_all_calls: 1
 <1><1353>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1354>   DW_AT_name        : (indirect string, offset: 0x62f): NmiSR
    <1358>   DW_AT_decl_file   : 1
    <1358>   DW_AT_decl_line   : 268
    <135a>   DW_AT_decl_column : 1
    <135a>   DW_AT_prototyped  : 1
    <135a>   DW_AT_low_pc      : 0xc1c
    <135e>   DW_AT_high_pc     : 0x2
    <1362>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1364>   DW_AT_call_all_calls: 1
 <1><1364>: Abbrev Number: 17 (DW_TAG_subprogram)
    <1365>   DW_AT_external    : 1
    <1365>   DW_AT_name        : (indirect string, offset: 0x626): ResetISR
    <1369>   DW_AT_decl_file   : 1
    <136a>   DW_AT_decl_line   : 226
    <136b>   DW_AT_decl_column : 1
    <136c>   DW_AT_prototyped  : 1
    <136c>   DW_AT_low_pc      : 0xc24
    <1370>   DW_AT_high_pc     : 0x48
    <1374>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1376>   DW_AT_call_all_calls: 1
    <1376>   DW_AT_sibling     : <0x13aa>
 <2><137a>: Abbrev Number: 9 (DW_TAG_variable)
    <137b>   DW_AT_name        : (indirect string, offset: 0x61f): pulSrc
    <137f>   DW_AT_decl_file   : 1
    <137f>   DW_AT_decl_line   : 228
    <1380>   DW_AT_decl_column : 20
    <1381>   DW_AT_type        : <0x13aa>
    <1385>   DW_AT_location    : 0x451 (location list)
    <1389>   DW_AT_GNU_locviews: 0x44b
 <2><138d>: Abbrev Number: 9 (DW_TAG_variable)
    <138e>   DW_AT_name        : (indirect string, offset: 0x5d5): pulDest
    <1392>   DW_AT_decl_file   : 1
    <1392>   DW_AT_decl_line   : 228
    <1393>   DW_AT_decl_column : 29
    <1394>   DW_AT_type        : <0x13aa>
    <1398>   DW_AT_location    : 0x46e (location list)
    <139c>   DW_AT_GNU_locviews: 0x468
 <2><13a0>: Abbrev Number: 18 (DW_TAG_call_site)
    <13a1>   DW_AT_call_return_pc: 0xc5c
    <13a5>   DW_AT_call_origin : <0x131d>
 <2><13a9>: Abbrev Number: 0
 <1><13aa>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <13ab>   DW_AT_byte_size   : 4
    <13ab>   DW_AT_type        : <0x126e>
 <1><13af>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 10
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_enumeration_type    [has children]
    DW_AT_encoding     DW_FORM_implicit_const: 7
    DW_AT_byte_size    DW_FORM_implicit_const: 1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_bit_size     DW_FORM_data1
    DW_AT_data_bit_offset DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_lexical_block    [has children]
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_implicit_const: 137
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 32
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_union_type    [has children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 9
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_implicit_const: 256
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   35      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   36      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   37      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   38      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   39      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   40      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   41      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   42      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   43      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   44      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   45      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   46      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   47      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   48      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   49      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x2e9)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x3a1)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x4b5)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 7
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x680)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 22
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_implicit_const: 1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subroutine_type    [no children]
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_loclists section:

    Offset   Begin            End              Expression

    0000000c v0000000 v0000000 location view pair

    0000000e v0000000 v0000000 views at 0000000c for:
             0000051a 00000536 (DW_OP_reg0 (r0))
    00000016 <End of list>

    00000017 v0000000 v0000000 location view pair

    00000019 v0000000 v0000000 views at 00000017 for:
             00000672 00000681 (DW_OP_reg1 (r1))
    00000021 <End of list>

    00000022 v0000000 v0000000 location view pair

    00000024 v0000000 v0000000 views at 00000022 for:
             000006ea 0000071a (DW_OP_reg4 (r4))
    0000002c <End of list>

    0000002d v0000000 v0000000 location view pair

    0000002f v0000000 v0000000 views at 0000002d for:
             00000708 0000071a (DW_OP_reg0 (r0))
    00000037 <End of list>

    00000038 v0000002 v0000000 location view pair
    0000003a v0000000 v0000000 location view pair

    0000003c 000004dc (base address)
    00000041 v0000002 v0000000 views at 00000038 for:
             000004dc 000004e0 (DW_OP_lit0; DW_OP_stack_value)
    00000047 v0000000 v0000000 views at 0000003a for:
             000004e0 000004fa (DW_OP_reg4 (r4))
    0000004c <End of list>

    0000004d v0000000 v0000000 location view pair
    0000004f v0000000 v0000000 location view pair
    00000051 v0000000 v0000000 location view pair

    00000053 0000049c (base address)
    00000058 v0000000 v0000000 views at 0000004d for:
             0000049c 000004b6 (DW_OP_reg0 (r0))
    0000005d v0000000 v0000000 views at 0000004f for:
             000004b6 000004c8 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000006b v0000000 v0000000 views at 00000051 for:
             000004c8 000004d4 (DW_OP_reg0 (r0))
    00000070 <End of list>

    00000071 v0000000 v0000000 location view pair
    00000073 v0000000 v0000000 location view pair
    00000075 v0000000 v0000000 location view pair
    00000077 v0000000 v0000000 location view pair

    00000079 0000049c (base address)
    0000007e v0000000 v0000000 views at 00000071 for:
             0000049c 000004a2 (DW_OP_reg1 (r1))
    00000083 v0000000 v0000000 views at 00000073 for:
             000004a2 000004c8 (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000091 v0000000 v0000000 views at 00000075 for:
             000004c8 000004ca (DW_OP_reg1 (r1))
    00000096 v0000000 v0000000 views at 00000077 for:
             000004ca 000004d4 (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000a4 <End of list>

    000000a5 v0000000 v0000000 location view pair
    000000a7 v0000000 v0000000 location view pair
    000000a9 v0000000 v0000000 location view pair
    000000ab v0000000 v0000000 location view pair

    000000ad 0000049c (base address)
    000000b2 v0000000 v0000000 views at 000000a5 for:
             0000049c 000004a6 (DW_OP_reg2 (r2))
    000000b7 v0000000 v0000000 views at 000000a7 for:
             000004a6 000004c8 (DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000c5 v0000000 v0000000 views at 000000a9 for:
             000004c8 000004cc (DW_OP_reg2 (r2))
    000000ca v0000000 v0000000 views at 000000ab for:
             000004cc 000004d4 (DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000d8 <End of list>

    000000d9 v0000000 v0000000 location view pair
    000000db v0000000 v0000000 location view pair
    000000dd v0000000 v0000000 location view pair
    000000df v0000000 v0000000 location view pair

    000000e1 0000049c (base address)
    000000e6 v0000000 v0000000 views at 000000d9 for:
             0000049c 000004aa (DW_OP_reg3 (r3))
    000000eb v0000000 v0000000 views at 000000db for:
             000004aa 000004c8 (DW_OP_entry_value: (DW_OP_regval_type: 3 (r3) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000f9 v0000000 v0000000 views at 000000dd for:
             000004c8 000004cc (DW_OP_reg3 (r3))
    000000fe v0000000 v0000000 views at 000000df for:
             000004cc 000004d4 (DW_OP_entry_value: (DW_OP_regval_type: 3 (r3) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000010c <End of list>

    0000010d v0000000 v0000000 location view pair
    0000010f v0000000 v0000000 location view pair

    00000111 000004a2 (base address)
    00000116 v0000000 v0000000 views at 0000010d for:
             000004a2 000004b0 (DW_OP_reg1 (r1))
    0000011b v0000000 v0000000 views at 0000010f for:
             000004cc 000004d4 (DW_OP_reg1 (r1))
    00000120 <End of list>

    00000121 v0000000 v0000000 location view pair
    00000123 v0000000 v0000000 location view pair

    00000125 000004a6 (base address)
    0000012a v0000000 v0000000 views at 00000121 for:
             000004a6 000004b2 (DW_OP_reg2 (r2))
    0000012f v0000000 v0000000 views at 00000123 for:
             000004cc 000004d4 (DW_OP_reg2 (r2))
    00000134 <End of list>

    00000135 v0000002 v0000000 location view pair
    00000137 v0000000 v0000000 location view pair

    00000139 000003ca (base address)
    0000013e v0000002 v0000000 views at 00000135 for:
             000003ca 000003ce (DW_OP_lit0; DW_OP_stack_value)
    00000144 v0000000 v0000000 views at 00000137 for:
             000003ce 000003e9 (DW_OP_reg3 (r3))
    00000149 <End of list>

    0000014a v0000003 v0000000 location view pair
    0000014c v0000000 v0000000 location view pair

    0000014e 00000288 (base address)
    00000153 v0000003 v0000000 views at 0000014a for:
             00000288 0000028a (DW_OP_lit0; DW_OP_stack_value)
    00000159 v0000000 v0000000 views at 0000014c for:
             0000028a 00000330 (DW_OP_reg0 (r0))
    0000015f <End of list>

    00000160 v0000000 v0000001 location view pair
    00000162 v0000001 v0000000 location view pair
    00000164 v0000000 v0000000 location view pair
    00000166 v0000000 v0000000 location view pair
    00000168 v0000000 v0000000 location view pair
    0000016a v0000000 v0000000 location view pair

    0000016c 0000029a (base address)
    00000171 v0000000 v0000001 views at 00000160 for:
             0000029a 000002ae (DW_OP_reg3 (r3))
    00000176 v0000001 v0000000 views at 00000162 for:
             000002ae 000002b0 (DW_OP_breg3 (r3): -1; DW_OP_stack_value)
    0000017d v0000000 v0000000 views at 00000164 for:
             000002b0 000002bc (DW_OP_reg3 (r3))
    00000182 v0000000 v0000000 views at 00000166 for:
             000002be 000002c6 (DW_OP_reg3 (r3))
    00000187 v0000000 v0000000 views at 00000168 for:
             000002ce 000002d0 (DW_OP_reg3 (r3))
    0000018c v0000000 v0000000 views at 0000016a for:
             0000031e 00000328 (DW_OP_reg3 (r3))
    00000193 <End of list>

    00000194 v0000000 v0000000 location view pair
    00000196 v0000000 v0000000 location view pair
    00000198 v0000000 v0000000 location view pair
    0000019a v0000000 v0000000 location view pair

    0000019c 0000029a (base address)
    000001a1 v0000000 v0000000 views at 00000194 for:
             0000029a 000002b8 (DW_OP_reg4 (r4))
    000001a6 v0000000 v0000000 views at 00000196 for:
             000002be 000002ca (DW_OP_reg4 (r4))
    000001ab v0000000 v0000000 views at 00000198 for:
             000002ce 000002d2 (DW_OP_reg4 (r4))
    000001b0 v0000000 v0000000 views at 0000019a for:
             00000326 00000328 (DW_OP_reg4 (r4))
    000001b7 <End of list>

    000001b8 v0000000 v0000000 location view pair
    000001ba v0000000 v0000000 location view pair
    000001bc v0000000 v0000000 location view pair

    000001be 000002c6 (base address)
    000001c3 v0000000 v0000000 views at 000001b8 for:
             000002c6 000002ce (DW_OP_reg3 (r3))
    000001c8 v0000000 v0000000 views at 000001ba for:
             000002d2 000002f2 (DW_OP_reg3 (r3))
    000001cd v0000000 v0000000 views at 000001bc for:
             000002f4 000002f8 (DW_OP_reg3 (r3))
    000001d2 <End of list>

    000001d3 v0000000 v0000000 location view pair
    000001d5 v0000000 v0000000 location view pair
    000001d7 v0000000 v0000000 location view pair

    000001d9 000002cc (base address)
    000001de v0000000 v0000000 views at 000001d3 for:
             000002cc 000002ce (DW_OP_reg4 (r4))
    000001e3 v0000000 v0000000 views at 000001d5 for:
             000002d2 000002f0 (DW_OP_reg4 (r4))
    000001e8 v0000000 v0000000 views at 000001d7 for:
             000002f4 00000300 (DW_OP_reg4 (r4))
    000001ed <End of list>

    000001ee v0000003 v0000000 location view pair
    000001f0 v0000000 v0000000 location view pair

    000001f2 0000026c (base address)
    000001f7 v0000003 v0000000 views at 000001ee for:
             0000026c 00000270 (DW_OP_lit0; DW_OP_stack_value)
    000001fd v0000000 v0000000 views at 000001f0 for:
             00000270 00000288 (DW_OP_reg3 (r3))
    00000202 <End of list>

    0000020f v0000000 v0000000 location view pair
    00000211 v0000000 v0000000 location view pair

    00000213 00000000 (base address)
    00000218 v0000000 v0000000 views at 0000020f for:
             00000000 0000001a (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    00000222 v0000000 v0000000 views at 00000211 for:
             0000002a 00000046 (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    0000022c <End of list>

    00000239 v0000006 v0000000 location view pair
    0000023b v0000000 v0000001 location view pair
    0000023d v0000001 v0000000 location view pair
    0000023f v0000000 v0000000 location view pair
    00000241 v0000000 v0000000 location view pair
    00000243 v0000000 v0000000 location view pair
    00000245 v0000000 v0000000 location view pair

    00000247 00000b3e (base address)
    0000024c v0000006 v0000000 views at 00000239 for:
             00000b3e 00000b42 (DW_OP_lit0; DW_OP_stack_value)
    00000252 v0000000 v0000001 views at 0000023b for:
             00000b42 00000b68 (DW_OP_reg6 (r6))
    00000257 v0000001 v0000000 views at 0000023d for:
             00000b68 00000b6a (DW_OP_reg4 (r4))
    0000025c v0000000 v0000000 views at 0000023f for:
             00000b6a 00000b9e (DW_OP_reg6 (r6))
    00000261 v0000000 v0000000 views at 00000241 for:
             00000b9e 00000bae (DW_OP_reg4 (r4))
    00000266 v0000000 v0000000 views at 00000243 for:
             00000bae 00000c10 (DW_OP_reg6 (r6))
    0000026c v0000000 v0000000 views at 00000245 for:
             00000c10 00000c16 (DW_OP_reg4 (r4))
    00000273 <End of list>

    00000274 v0000000 v0000000 location view pair
    00000276 v0000000 v0000000 location view pair
    00000278 v0000000 v0000000 location view pair
    0000027a v0000000 v0000000 location view pair
    0000027c v0000000 v0000001 location view pair
    0000027e v0000000 v0000000 location view pair
    00000280 v0000000 v0000000 location view pair
    00000282 v0000000 v0000000 location view pair
    00000284 v0000000 v0000001 location view pair
    00000286 v0000001 v0000000 location view pair

    00000288 00000a10 (base address)
    0000028d v0000000 v0000000 views at 00000274 for:
             00000a10 00000a7c (DW_OP_regx: 64 (r64))
    00000293 v0000000 v0000000 views at 00000276 for:
             00000a92 00000a97 (DW_OP_regx: 64 (r64))
    0000029b v0000000 v0000000 views at 00000278 for:
             00000a97 00000a9a (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xd1c>); DW_OP_stack_value)
    000002a7 v0000000 v0000000 views at 0000027a for:
             00000a9a 00000a9f (DW_OP_regx: 64 (r64))
    000002af v0000000 v0000001 views at 0000027c for:
             00000a9f 00000aa0 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xd1c>); DW_OP_stack_value)
    000002bb v0000000 v0000000 views at 0000027e for:
             00000aa8 00000aad (DW_OP_regx: 64 (r64))
    000002c3 v0000000 v0000000 views at 00000280 for:
             00000aad 00000ab0 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xd1c>); DW_OP_stack_value)
    000002cf v0000000 v0000000 views at 00000282 for:
             00000ab0 00000ab5 (DW_OP_regx: 64 (r64))
    000002d7 v0000000 v0000001 views at 00000284 for:
             00000ab5 00000ab6 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xd1c>); DW_OP_stack_value)
    000002e3 v0000001 v0000000 views at 00000286 for:
             00000ab6 00000abc (DW_OP_regx: 80 (r80))
    000002eb <End of list>

    000002ec v0000000 v0000000 location view pair
    000002ee v0000000 v0000000 location view pair

    000002f0 00000a74 (base address)
    000002f5 v0000000 v0000000 views at 000002ec for:
             00000a74 00000a92 (DW_OP_regx: 79 (r79))
    000002fb v0000000 v0000000 views at 000002ee for:
             00000abc 00000afb (DW_OP_regx: 79 (r79))
    00000302 <End of list>

    00000303 v0000000 v0000000 location view pair
    00000305 v0000000 v0000000 location view pair
    00000307 v0000000 v0000000 location view pair

    00000309 00000a8c (base address)
    0000030e v0000000 v0000000 views at 00000303 for:
             00000a8c 00000a92 (DW_OP_reg3 (r3))
    00000313 v0000000 v0000000 views at 00000305 for:
             00000abc 00000ad4 (DW_OP_reg3 (r3))
    00000318 v0000000 v0000000 views at 00000307 for:
             00000adc 00000aea (DW_OP_reg3 (r3))
    0000031d <End of list>

    0000031e v0000001 v0000000 location view pair
    00000320 v0000000 v0000000 location view pair
    00000322 v0000000 v0000000 location view pair
    00000324 v0000000 v0000000 location view pair
    00000326 v0000000 v0000000 location view pair
    00000328 v0000000 v0000001 location view pair
    0000032a v0000001 v0000000 location view pair

    0000032c 00000a8c (base address)
    00000331 v0000001 v0000000 views at 0000031e for:
             00000a8c 00000a92 (DW_OP_lit0; DW_OP_stack_value)
    00000337 v0000000 v0000000 views at 00000320 for:
             00000abc 00000ace (DW_OP_reg1 (r1))
    0000033c v0000000 v0000000 views at 00000322 for:
             00000ace 00000ae0 (DW_OP_breg1 (r1): 1; DW_OP_stack_value)
    00000343 v0000000 v0000000 views at 00000324 for:
             00000ae0 00000ae6 (DW_OP_reg1 (r1))
    00000348 v0000000 v0000000 views at 00000326 for:
             00000ae6 00000b00 (DW_OP_reg4 (r4))
    0000034d v0000000 v0000001 views at 00000328 for:
             00000b00 00000b0e (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    00000355 v0000001 v0000000 views at 0000032a for:
             00000b0e 00000b30 (DW_OP_reg4 (r4))
    0000035c <End of list>

    0000035d v0000003 v0000000 location view pair
    0000035f v0000000 v0000000 location view pair

    00000361 00000a8c (base address)
    00000366 v0000003 v0000000 views at 0000035d for:
             00000a8c 00000a92 (DW_OP_lit0; DW_OP_stack_value)
    0000036c v0000000 v0000000 views at 0000035f for:
             00000abc 00000af8 (DW_OP_reg0 (r0))
    00000371 <End of list>

    00000372 v0000000 v0000000 location view pair
    00000374 v0000000 v0000000 location view pair
    00000376 v0000000 v0000000 location view pair
    00000378 v0000000 v0000000 location view pair

    0000037a 000009f8 (base address)
    0000037f v0000000 v0000000 views at 00000372 for:
             000009f8 000009fe (DW_OP_reg0 (r0))
    00000384 v0000000 v0000000 views at 00000374 for:
             000009fe 00000a06 (DW_OP_reg4 (r4))
    00000389 v0000000 v0000000 views at 00000376 for:
             00000a06 00000a08 (DW_OP_reg0 (r0))
    0000038e v0000000 v0000000 views at 00000378 for:
             00000a08 00000a10 (DW_OP_reg4 (r4))
    00000393 <End of list>

    00000394 v0000000 v0000000 location view pair
    00000396 v0000000 v0000000 location view pair

    00000398 000009ac (base address)
    0000039d v0000000 v0000000 views at 00000394 for:
             000009ac 000009b2 (DW_OP_reg0 (r0))
    000003a2 v0000000 v0000000 views at 00000396 for:
             000009b2 000009dc (DW_OP_reg0 (r0))
    000003a7 <End of list>

    000003a8 v0000002 v0000000 location view pair
    000003aa v0000000 v0000000 location view pair
    000003ac v0000000 v0000000 location view pair
    000003ae v0000000 v0000000 location view pair
    000003b0 v0000000 v0000001 location view pair
    000003b2 v0000001 v0000000 location view pair

    000003b4 000009b0 (base address)
    000003b9 v0000002 v0000000 views at 000003a8 for:
             000009b0 000009b2 (DW_OP_lit0; DW_OP_stack_value)
    000003bf v0000000 v0000000 views at 000003aa for:
             000009b2 000009ce (DW_OP_reg4 (r4))
    000003c4 v0000000 v0000000 views at 000003ac for:
             000009ce 000009dc (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    000003cb v0000000 v0000000 views at 000003ae for:
             000009dc 000009de (DW_OP_reg4 (r4))
    000003d0 v0000000 v0000001 views at 000003b0 for:
             000009de 000009ec (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000003d7 v0000001 v0000000 views at 000003b2 for:
             000009ec 000009f4 (DW_OP_reg4 (r4))
    000003dc <End of list>

    000003dd v0000000 v0000000 location view pair
    000003df v0000000 v0000000 location view pair

    000003e1 00000994 (base address)
    000003e6 v0000000 v0000000 views at 000003dd for:
             00000994 0000099c (DW_OP_reg0 (r0))
    000003eb v0000000 v0000000 views at 000003df for:
             0000099c 000009aa (DW_OP_reg5 (r5))
    000003f0 <End of list>

    000003f1 v0000002 v0000000 location view pair
    000003f3 v0000000 v0000000 location view pair

    000003f5 00000998 (base address)
    000003fa v0000002 v0000000 views at 000003f1 for:
             00000998 0000099c (DW_OP_lit0; DW_OP_stack_value)
    00000400 v0000000 v0000000 views at 000003f3 for:
             0000099c 000009aa (DW_OP_reg4 (r4))
    00000405 <End of list>

    00000406 v0000000 v0000000 location view pair
    00000408 v0000000 v0000000 location view pair
    0000040a v0000000 v0000000 location view pair

    0000040c 0000094c (base address)
    00000411 v0000000 v0000000 views at 00000406 for:
             0000094c 0000095a (DW_OP_reg0 (r0))
    00000416 v0000000 v0000000 views at 00000408 for:
             0000095a 0000095b (DW_OP_reg1 (r1))
    0000041b v0000000 v0000000 views at 0000040a for:
             0000095b 00000994 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xd23>); DW_OP_convert <0xd2a>; DW_OP_convert <0>; DW_OP_stack_value)
    00000429 <End of list>

    0000042a v0000002 v0000000 location view pair
    0000042c v0000000 v0000000 location view pair

    0000042e 0000097c (base address)
    00000433 v0000002 v0000000 views at 0000042a for:
             0000097c 0000097e (DW_OP_lit0; DW_OP_stack_value)
    00000439 v0000000 v0000000 views at 0000042c for:
             0000097e 00000988 (DW_OP_reg3 (r3))
    0000043e <End of list>

    0000044b v0000000 v0000001 location view pair
    0000044d v0000001 v0000000 location view pair
    0000044f v0000000 v0000000 location view pair

    00000451 00000c2c (base address)
    00000456 v0000000 v0000001 views at 0000044b for:
             00000c2c 00000c2c (DW_OP_reg2 (r2))
    0000045b v0000001 v0000000 views at 0000044d for:
             00000c2c 00000c30 (DW_OP_breg2 (r2): 4; DW_OP_stack_value)
    00000462 v0000000 v0000000 views at 0000044f for:
             00000c30 00000c54 (DW_OP_reg2 (r2))
    00000467 <End of list>

    00000468 v0000000 v0000001 location view pair
    0000046a v0000001 v0000000 location view pair
    0000046c v0000000 v0000000 location view pair

    0000046e 00000c2c (base address)
    00000473 v0000000 v0000001 views at 00000468 for:
             00000c2c 00000c2c (DW_OP_reg3 (r3))
    00000478 v0000001 v0000000 views at 0000046a for:
             00000c2c 00000c34 (DW_OP_breg3 (r3): 4; DW_OP_stack_value)
    0000047f v0000000 v0000000 views at 0000046c for:
             00000c34 00000c50 (DW_OP_reg3 (r3))
    00000484 <End of list>

Contents of the .debug_aranges section:

  Length:                   92
  Version:                  2
  Offset into .debug_info:  0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000026c 0000001c
    00000288 000000a8
    00000330 000000fc
    0000042c 00000024
    00000450 00000024
    00000474 00000028
    0000049c 00000038
    000004d4 00000034
    00000508 000002a0
    00000000 00000000
  Length:                   28
  Version:                  2
  Offset into .debug_info:  0x90a
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000007a8 000000d0
    00000000 00000000
  Length:                   44
  Version:                  2
  Offset into .debug_info:  0xb78
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000000 0000007c
    00000878 00000064
    00000000 00000058
    00000000 00000000
  Length:                   76
  Version:                  2
  Offset into .debug_info:  0xcf6
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000008dc 00000070
    0000094c 00000048
    00000994 00000016
    000009ac 0000004c
    000009f8 00000018
    00000a10 00000120
    00000b30 000000ea
    00000000 00000000
  Length:                   52
  Version:                  2
  Offset into .debug_info:  0x1219
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000c1c 00000002
    00000c1e 00000002
    00000c20 00000002
    00000c24 00000048
    00000000 00000000

Contents of the .debug_rnglists section:

 Table at Offset: 0:
  Length:          0x5c
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xc, Index: 0
    Offset   Begin    End
    0000000c 00000288 (base address)
    00000011 00000288 00000290 
    00000014 00000294 00000328 
    00000018 <End of list>

 Table at Offset: 0x60:
  Length:          0x10
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x6c, Index: 0
    Offset   Begin    End
    0000006c 000007a8 00000878 
    00000073 <End of list>

 Table at Offset: 0x74:
  Length:          0x1b
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x80, Index: 0
    Offset   Begin    End
    00000080 00000000 0000007c 
    00000086 00000878 000008dc 
    0000008c 00000000 00000058 
    00000092 <End of list>

 Table at Offset: 0x93:
  Length:          0x44
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x9f, Index: 0
    Offset   Begin    End
    0000009f 00000a8c (base address)
    000000a4 00000a8c 00000a8e 
    000000a7 00000a90 00000a92 
    000000aa 00000abc 00000ae4 
    000000ad <End of list>

 Table at Offset: 0xdb:
  Length:          0x21
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xe7, Index: 0
    Offset   Begin    End
    000000e7 00000c1c 00000c1e 
    000000ed 00000c1e 00000c20 
    000000f3 00000c20 00000c22 
    000000f9 00000c24 00000c6c 
    000000ff <End of list>

Raw dump of debug contents of section .debug_line:

  Offset:                      0
  Length:                      1516
  DWARF Version:               3
  Prologue Length:             160
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x62):
  Entry	Dir	Time	Size	Name
  1	1	0	0	lidar.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x000000aa]  Set column to 27
  [0x000000ac]  Extended opcode 2: set Address to 0x26c
  [0x000000b3]  Advance Line by 38 to 39
  [0x000000b5]  Copy
  [0x000000b6]  Set column to 2
  [0x000000b8]  Special opcode 6: advance Address by 0 to 0x26c and Line by 1 to 40 (view 1)
  [0x000000b9]  Set column to 6
  [0x000000bb]  Copy (view 2)
  [0x000000bc]  Set column to 10
  [0x000000be]  Set is_stmt to 0
  [0x000000bf]  Copy (view 3)
  [0x000000c0]  Set column to 2
  [0x000000c2]  Special opcode 19: advance Address by 2 to 0x26e and Line by 0 to 40
  [0x000000c3]  Set column to 3
  [0x000000c5]  Set is_stmt to 1
  [0x000000c6]  Special opcode 20: advance Address by 2 to 0x270 and Line by 1 to 41
  [0x000000c7]  Set column to 25
  [0x000000c9]  Set is_stmt to 0
  [0x000000ca]  Copy (view 1)
  [0x000000cb]  Set column to 29
  [0x000000cd]  Special opcode 33: advance Address by 4 to 0x274 and Line by 0 to 41
  [0x000000ce]  Set column to 39
  [0x000000d0]  Extended opcode 4: set Discriminator to 3
  [0x000000d4]  Set is_stmt to 1
  [0x000000d5]  Special opcode 46: advance Address by 6 to 0x27a and Line by -1 to 40
  [0x000000d6]  Set column to 19
  [0x000000d8]  Extended opcode 4: set Discriminator to 1
  [0x000000dc]  Special opcode 19: advance Address by 2 to 0x27c and Line by 0 to 40
  [0x000000dd]  Set column to 1
  [0x000000df]  Set is_stmt to 0
  [0x000000e0]  Special opcode 50: advance Address by 6 to 0x282 and Line by 3 to 43
  [0x000000e1]  Advance PC by 6 to 0x288
  [0x000000e3]  Extended opcode 1: End of Sequence

  [0x000000e6]  Set column to 26
  [0x000000e8]  Extended opcode 2: set Address to 0x288
  [0x000000ef]  Advance Line by 46 to 47
  [0x000000f1]  Copy
  [0x000000f2]  Set column to 2
  [0x000000f4]  Special opcode 7: advance Address by 0 to 0x288 and Line by 2 to 49 (view 1)
  [0x000000f5]  Set column to 6
  [0x000000f7]  Copy (view 2)
  [0x000000f8]  Set column to 10
  [0x000000fa]  Set is_stmt to 0
  [0x000000fb]  Copy (view 3)
  [0x000000fc]  Set column to 19
  [0x000000fe]  Extended opcode 4: set Discriminator to 1
  [0x00000102]  Set is_stmt to 1
  [0x00000103]  Special opcode 19: advance Address by 2 to 0x28a and Line by 0 to 49
  [0x00000104]  Set column to 26
  [0x00000106]  Set is_stmt to 0
  [0x00000107]  Special opcode 45: advance Address by 6 to 0x290 and Line by -2 to 47
  [0x00000108]  Set column to 48
  [0x0000010a]  Extended opcode 4: set Discriminator to 2
  [0x0000010e]  Special opcode 39: advance Address by 4 to 0x294 and Line by 6 to 53
  [0x0000010f]  Set column to 6
  [0x00000111]  Set is_stmt to 1
  [0x00000112]  Special opcode 53: advance Address by 6 to 0x29a and Line by 6 to 59
  [0x00000113]  Set column to 32
  [0x00000115]  Set is_stmt to 0
  [0x00000116]  Copy (view 1)
  [0x00000117]  Set column to 6
  [0x00000119]  Set is_stmt to 1
  [0x0000011a]  Special opcode 48: advance Address by 6 to 0x2a0 and Line by 1 to 60
  [0x0000011b]  Set column to 43
  [0x0000011d]  Special opcode 0: advance Address by 0 to 0x2a0 and Line by -5 to 55 (view 1)
  [0x0000011e]  Set column to 33
  [0x00000120]  Set is_stmt to 0
  [0x00000121]  Copy (view 2)
  [0x00000122]  Set column to 43
  [0x00000124]  Special opcode 89: advance Address by 12 to 0x2ac and Line by 0 to 55
  [0x00000125]  Set column to 4
  [0x00000127]  Set is_stmt to 1
  [0x00000128]  Special opcode 20: advance Address by 2 to 0x2ae and Line by 1 to 56
  [0x00000129]  Special opcode 6: advance Address by 0 to 0x2ae and Line by 1 to 57 (view 1)
  [0x0000012a]  Set column to 7
  [0x0000012c]  Set is_stmt to 0
  [0x0000012d]  Copy (view 2)
  [0x0000012e]  Special opcode 19: advance Address by 2 to 0x2b0 and Line by 0 to 57
  [0x0000012f]  Set column to 5
  [0x00000131]  Set is_stmt to 1
  [0x00000132]  Special opcode 20: advance Address by 2 to 0x2b2 and Line by 1 to 58
  [0x00000133]  Set column to 7
  [0x00000135]  Set is_stmt to 0
  [0x00000136]  Copy (view 1)
  [0x00000137]  Set column to 15
  [0x00000139]  Special opcode 38: advance Address by 4 to 0x2b6 and Line by 5 to 63
  [0x0000013a]  Set column to 14
  [0x0000013c]  Special opcode 18: advance Address by 2 to 0x2b8 and Line by -1 to 62
  [0x0000013d]  Special opcode 33: advance Address by 4 to 0x2bc and Line by 0 to 62
  [0x0000013e]  Set column to 3
  [0x00000140]  Set is_stmt to 1
  [0x00000141]  Special opcode 26: advance Address by 2 to 0x2be and Line by 7 to 69
  [0x00000142]  Set column to 50
  [0x00000144]  Set is_stmt to 0
  [0x00000145]  Copy (view 1)
  [0x00000146]  Extended opcode 4: set Discriminator to 1
  [0x0000014a]  Special opcode 47: advance Address by 6 to 0x2c4 and Line by 0 to 69
  [0x0000014b]  Set column to 3
  [0x0000014d]  Set is_stmt to 1
  [0x0000014e]  Special opcode 20: advance Address by 2 to 0x2c6 and Line by 1 to 70
  [0x0000014f]  Set column to 8
  [0x00000151]  Set is_stmt to 0
  [0x00000152]  Copy (view 1)
  [0x00000153]  Special opcode 33: advance Address by 4 to 0x2ca and Line by 0 to 70
  [0x00000154]  Set column to 3
  [0x00000156]  Set is_stmt to 1
  [0x00000157]  Special opcode 20: advance Address by 2 to 0x2cc and Line by 1 to 71
  [0x00000158]  Set column to 8
  [0x0000015a]  Set is_stmt to 0
  [0x0000015b]  Copy (view 1)
  [0x0000015c]  Set column to 50
  [0x0000015e]  Extended opcode 4: set Discriminator to 2
  [0x00000162]  Special opcode 17: advance Address by 2 to 0x2ce and Line by -2 to 69
  [0x00000163]  Extended opcode 4: set Discriminator to 2
  [0x00000167]  Special opcode 19: advance Address by 2 to 0x2d0 and Line by 0 to 69
  [0x00000168]  Set column to 6
  [0x0000016a]  Set is_stmt to 1
  [0x0000016b]  Special opcode 24: advance Address by 2 to 0x2d2 and Line by 5 to 74
  [0x0000016c]  Set column to 32
  [0x0000016e]  Set is_stmt to 0
  [0x0000016f]  Copy (view 1)
  [0x00000170]  Set column to 6
  [0x00000172]  Set is_stmt to 1
  [0x00000173]  Special opcode 48: advance Address by 6 to 0x2d8 and Line by 1 to 75
  [0x00000174]  Set column to 42
  [0x00000176]  Special opcode 1: advance Address by 0 to 0x2d8 and Line by -4 to 71 (view 1)
  [0x00000177]  Set column to 31
  [0x00000179]  Set is_stmt to 0
  [0x0000017a]  Copy (view 2)
  [0x0000017b]  Set column to 42
  [0x0000017d]  Special opcode 61: advance Address by 8 to 0x2e0 and Line by 0 to 71
  [0x0000017e]  Set column to 4
  [0x00000180]  Set is_stmt to 1
  [0x00000181]  Special opcode 20: advance Address by 2 to 0x2e2 and Line by 1 to 72
  [0x00000182]  Set column to 6
  [0x00000184]  Set is_stmt to 0
  [0x00000185]  Copy (view 1)
  [0x00000186]  Special opcode 19: advance Address by 2 to 0x2e4 and Line by 0 to 72
  [0x00000187]  Set column to 5
  [0x00000189]  Set is_stmt to 1
  [0x0000018a]  Special opcode 48: advance Address by 6 to 0x2ea and Line by 1 to 73
  [0x0000018b]  Set column to 7
  [0x0000018d]  Set is_stmt to 0
  [0x0000018e]  Copy (view 1)
  [0x0000018f]  Set column to 13
  [0x00000191]  Special opcode 38: advance Address by 4 to 0x2ee and Line by 5 to 78
  [0x00000192]  Set column to 15
  [0x00000194]  Special opcode 18: advance Address by 2 to 0x2f0 and Line by -1 to 77
  [0x00000195]  Special opcode 19: advance Address by 2 to 0x2f2 and Line by 0 to 77
  [0x00000196]  Set column to 3
  [0x00000198]  Set is_stmt to 1
  [0x00000199]  Special opcode 24: advance Address by 2 to 0x2f4 and Line by 5 to 82
  [0x0000019a]  Set column to 54
  [0x0000019c]  Set is_stmt to 0
  [0x0000019d]  Copy (view 1)
  [0x0000019e]  Set column to 64
  [0x000001a0]  Special opcode 33: advance Address by 4 to 0x2f8 and Line by 0 to 82
  [0x000001a1]  Set column to 99
  [0x000001a3]  Special opcode 19: advance Address by 2 to 0x2fa and Line by 0 to 82
  [0x000001a4]  Set column to 29
  [0x000001a6]  Special opcode 19: advance Address by 2 to 0x2fc and Line by 0 to 82
  [0x000001a7]  Special opcode 33: advance Address by 4 to 0x300 and Line by 0 to 82
  [0x000001a8]  Set column to 39
  [0x000001aa]  Extended opcode 4: set Discriminator to 2
  [0x000001ae]  Set is_stmt to 1
  [0x000001af]  Advance Line by -33 to 49
  [0x000001b1]  Copy (view 1)
  [0x000001b2]  Set column to 19
  [0x000001b4]  Extended opcode 4: set Discriminator to 1
  [0x000001b8]  Special opcode 19: advance Address by 2 to 0x302 and Line by 0 to 49
  [0x000001b9]  Set column to 3
  [0x000001bb]  Special opcode 49: advance Address by 6 to 0x308 and Line by 2 to 51
  [0x000001bc]  Set column to 28
  [0x000001be]  Set is_stmt to 0
  [0x000001bf]  Copy (view 1)
  [0x000001c0]  Set column to 5
  [0x000001c2]  Special opcode 89: advance Address by 12 to 0x314 and Line by 0 to 51
  [0x000001c3]  Set column to 3
  [0x000001c5]  Set is_stmt to 1
  [0x000001c6]  Special opcode 35: advance Address by 4 to 0x318 and Line by 2 to 53
  [0x000001c7]  Set column to 48
  [0x000001c9]  Set is_stmt to 0
  [0x000001ca]  Copy (view 1)
  [0x000001cb]  Extended opcode 4: set Discriminator to 1
  [0x000001cf]  Special opcode 33: advance Address by 4 to 0x31c and Line by 0 to 53
  [0x000001d0]  Set column to 3
  [0x000001d2]  Set is_stmt to 1
  [0x000001d3]  Special opcode 20: advance Address by 2 to 0x31e and Line by 1 to 54
  [0x000001d4]  Set column to 8
  [0x000001d6]  Set is_stmt to 0
  [0x000001d7]  Copy (view 1)
  [0x000001d8]  Set column to 3
  [0x000001da]  Set is_stmt to 1
  [0x000001db]  Special opcode 62: advance Address by 8 to 0x326 and Line by 1 to 55
  [0x000001dc]  Set column to 9
  [0x000001de]  Set is_stmt to 0
  [0x000001df]  Copy (view 1)
  [0x000001e0]  Special opcode 19: advance Address by 2 to 0x328 and Line by 0 to 55
  [0x000001e1]  Set column to 1
  [0x000001e3]  Advance Line by 37 to 92
  [0x000001e5]  Copy (view 1)
  [0x000001e6]  Special opcode 19: advance Address by 2 to 0x32a and Line by 0 to 92
  [0x000001e7]  Advance PC by 6 to 0x330
  [0x000001e9]  Extended opcode 1: End of Sequence

  [0x000001ec]  Set column to 29
  [0x000001ee]  Extended opcode 2: set Address to 0x330
  [0x000001f5]  Advance Line by 93 to 94
  [0x000001f8]  Copy
  [0x000001f9]  Set column to 2
  [0x000001fb]  Special opcode 20: advance Address by 2 to 0x332 and Line by 1 to 95
  [0x000001fc]  Special opcode 90: advance Address by 12 to 0x33e and Line by 1 to 96
  [0x000001fd]  Special opcode 62: advance Address by 8 to 0x346 and Line by 1 to 97
  [0x000001fe]  Set column to 57
  [0x00000200]  Extended opcode 4: set Discriminator to 1
  [0x00000204]  Copy (view 1)
  [0x00000205]  Set column to 8
  [0x00000207]  Extended opcode 4: set Discriminator to 1
  [0x0000020b]  Copy (view 2)
  [0x0000020c]  Set column to 9
  [0x0000020e]  Extended opcode 4: set Discriminator to 1
  [0x00000212]  Set is_stmt to 0
  [0x00000213]  Copy (view 3)
  [0x00000214]  Set column to 8
  [0x00000216]  Extended opcode 4: set Discriminator to 1
  [0x0000021a]  Special opcode 103: advance Address by 14 to 0x354 and Line by 0 to 97
  [0x0000021b]  Set column to 58
  [0x0000021d]  Extended opcode 4: set Discriminator to 2
  [0x00000221]  Set is_stmt to 1
  [0x00000222]  Special opcode 33: advance Address by 4 to 0x358 and Line by 0 to 97
  [0x00000223]  Set column to 2
  [0x00000225]  Special opcode 6: advance Address by 0 to 0x358 and Line by 1 to 98 (view 1)
  [0x00000226]  Set column to 20
  [0x00000228]  Set is_stmt to 0
  [0x00000229]  Copy (view 2)
  [0x0000022a]  Set column to 2
  [0x0000022c]  Set is_stmt to 1
  [0x0000022d]  Special opcode 62: advance Address by 8 to 0x360 and Line by 1 to 99
  [0x0000022e]  Set column to 18
  [0x00000230]  Set is_stmt to 0
  [0x00000231]  Special opcode 33: advance Address by 4 to 0x364 and Line by 0 to 99
  [0x00000232]  Set column to 2
  [0x00000234]  Set is_stmt to 1
  [0x00000235]  Special opcode 62: advance Address by 8 to 0x36c and Line by 1 to 100
  [0x00000236]  Set column to 19
  [0x00000238]  Set is_stmt to 0
  [0x00000239]  Special opcode 33: advance Address by 4 to 0x370 and Line by 0 to 100
  [0x0000023a]  Set column to 2
  [0x0000023c]  Set is_stmt to 1
  [0x0000023d]  Special opcode 62: advance Address by 8 to 0x378 and Line by 1 to 101
  [0x0000023e]  Set column to 23
  [0x00000240]  Set is_stmt to 0
  [0x00000241]  Copy (view 1)
  [0x00000242]  Set column to 41
  [0x00000244]  Special opcode 33: advance Address by 4 to 0x37c and Line by 0 to 101
  [0x00000245]  Set column to 102
  [0x00000247]  Special opcode 33: advance Address by 4 to 0x380 and Line by 0 to 101
  [0x00000248]  Set column to 20
  [0x0000024a]  Special opcode 33: advance Address by 4 to 0x384 and Line by 0 to 101
  [0x0000024b]  Set column to 2
  [0x0000024d]  Set is_stmt to 1
  [0x0000024e]  Special opcode 34: advance Address by 4 to 0x388 and Line by 1 to 102
  [0x0000024f]  Special opcode 132: advance Address by 18 to 0x39a and Line by 1 to 103
  [0x00000250]  Special opcode 104: advance Address by 14 to 0x3a8 and Line by 1 to 104
  [0x00000251]  Special opcode 90: advance Address by 12 to 0x3b4 and Line by 1 to 105
  [0x00000252]  Set column to 36
  [0x00000254]  Set is_stmt to 0
  [0x00000255]  Special opcode 33: advance Address by 4 to 0x3b8 and Line by 0 to 105
  [0x00000256]  Set column to 2
  [0x00000258]  Special opcode 33: advance Address by 4 to 0x3bc and Line by 0 to 105
  [0x00000259]  Extended opcode 4: set Discriminator to 1
  [0x0000025d]  Special opcode 33: advance Address by 4 to 0x3c0 and Line by 0 to 105
  [0x0000025e]  Set is_stmt to 1
  [0x0000025f]  Special opcode 77: advance Address by 10 to 0x3ca and Line by 2 to 107
  [0x00000260]  Set column to 6
  [0x00000262]  Copy (view 1)
  [0x00000263]  Set column to 10
  [0x00000265]  Set is_stmt to 0
  [0x00000266]  Copy (view 2)
  [0x00000267]  Set column to 2
  [0x00000269]  Special opcode 19: advance Address by 2 to 0x3cc and Line by 0 to 107
  [0x0000026a]  Set column to 3
  [0x0000026c]  Set is_stmt to 1
  [0x0000026d]  Special opcode 20: advance Address by 2 to 0x3ce and Line by 1 to 108
  [0x0000026e]  Set column to 20
  [0x00000270]  Set is_stmt to 0
  [0x00000271]  Copy (view 1)
  [0x00000272]  Set column to 27
  [0x00000274]  Extended opcode 4: set Discriminator to 3
  [0x00000278]  Set is_stmt to 1
  [0x00000279]  Special opcode 74: advance Address by 10 to 0x3d8 and Line by -1 to 107
  [0x0000027a]  Set column to 19
  [0x0000027c]  Extended opcode 4: set Discriminator to 1
  [0x00000280]  Special opcode 19: advance Address by 2 to 0x3da and Line by 0 to 107
  [0x00000281]  Set column to 2
  [0x00000283]  Special opcode 50: advance Address by 6 to 0x3e0 and Line by 3 to 110
  [0x00000284]  Set column to 25
  [0x00000286]  Set is_stmt to 0
  [0x00000287]  Copy (view 1)
  [0x00000288]  Set column to 2
  [0x0000028a]  Set is_stmt to 1
  [0x0000028b]  Special opcode 48: advance Address by 6 to 0x3e6 and Line by 1 to 111
  [0x0000028c]  Special opcode 34: advance Address by 4 to 0x3ea and Line by 1 to 112
  [0x0000028d]  Set column to 24
  [0x0000028f]  Set is_stmt to 0
  [0x00000290]  Copy (view 1)
  [0x00000291]  Set column to 28
  [0x00000293]  Special opcode 19: advance Address by 2 to 0x3ec and Line by 0 to 112
  [0x00000294]  Set column to 2
  [0x00000296]  Set is_stmt to 1
  [0x00000297]  Special opcode 34: advance Address by 4 to 0x3f0 and Line by 1 to 113
  [0x00000298]  Special opcode 34: advance Address by 4 to 0x3f4 and Line by 1 to 114
  [0x00000299]  Set column to 22
  [0x0000029b]  Set is_stmt to 0
  [0x0000029c]  Copy (view 1)
  [0x0000029d]  Set column to 2
  [0x0000029f]  Set is_stmt to 1
  [0x000002a0]  Special opcode 34: advance Address by 4 to 0x3f8 and Line by 1 to 115
  [0x000002a1]  Set column to 25
  [0x000002a3]  Set is_stmt to 0
  [0x000002a4]  Copy (view 1)
  [0x000002a5]  Set column to 2
  [0x000002a7]  Set is_stmt to 1
  [0x000002a8]  Special opcode 34: advance Address by 4 to 0x3fc and Line by 1 to 116
  [0x000002a9]  Set column to 1
  [0x000002ab]  Set is_stmt to 0
  [0x000002ac]  Special opcode 36: advance Address by 4 to 0x400 and Line by 3 to 119
  [0x000002ad]  Advance PC by 44 to 0x42c
  [0x000002af]  Extended opcode 1: End of Sequence

  [0x000002b2]  Set column to 29
  [0x000002b4]  Extended opcode 2: set Address to 0x42c
  [0x000002bb]  Advance Line by 120 to 121
  [0x000002be]  Copy
  [0x000002bf]  Set column to 2
  [0x000002c1]  Special opcode 20: advance Address by 2 to 0x42e and Line by 1 to 122
  [0x000002c2]  Special opcode 118: advance Address by 16 to 0x43e and Line by 1 to 123
  [0x000002c3]  Set column to 1
  [0x000002c5]  Set is_stmt to 0
  [0x000002c6]  Special opcode 76: advance Address by 10 to 0x448 and Line by 1 to 124
  [0x000002c7]  Advance PC by 8 to 0x450
  [0x000002c9]  Extended opcode 1: End of Sequence

  [0x000002cc]  Set column to 28
  [0x000002ce]  Extended opcode 2: set Address to 0x450
  [0x000002d5]  Advance Line by 125 to 126
  [0x000002d8]  Copy
  [0x000002d9]  Set column to 2
  [0x000002db]  Special opcode 20: advance Address by 2 to 0x452 and Line by 1 to 127
  [0x000002dc]  Special opcode 118: advance Address by 16 to 0x462 and Line by 1 to 128
  [0x000002dd]  Set column to 1
  [0x000002df]  Set is_stmt to 0
  [0x000002e0]  Special opcode 76: advance Address by 10 to 0x46c and Line by 1 to 129
  [0x000002e1]  Advance PC by 8 to 0x474
  [0x000002e3]  Extended opcode 1: End of Sequence

  [0x000002e6]  Set column to 26
  [0x000002e8]  Extended opcode 2: set Address to 0x474
  [0x000002ef]  Advance Line by 130 to 131
  [0x000002f2]  Copy
  [0x000002f3]  Set column to 2
  [0x000002f5]  Special opcode 20: advance Address by 2 to 0x476 and Line by 1 to 132
  [0x000002f6]  Set column to 7
  [0x000002f8]  Set is_stmt to 0
  [0x000002f9]  Copy (view 1)
  [0x000002fa]  Set column to 3
  [0x000002fc]  Set is_stmt to 1
  [0x000002fd]  Special opcode 20: advance Address by 2 to 0x478 and Line by 1 to 133
  [0x000002fe]  Set column to 8
  [0x00000300]  Special opcode 88: advance Address by 12 to 0x484 and Line by -1 to 132
  [0x00000301]  Extended opcode 4: set Discriminator to 1
  [0x00000305]  Set is_stmt to 0
  [0x00000306]  Special opcode 89: advance Address by 12 to 0x490 and Line by 0 to 132
  [0x00000307]  Set column to 1
  [0x00000309]  Special opcode 36: advance Address by 4 to 0x494 and Line by 3 to 135
  [0x0000030a]  Advance PC by 8 to 0x49c
  [0x0000030c]  Extended opcode 1: End of Sequence

  [0x0000030f]  Set column to 67
  [0x00000311]  Extended opcode 2: set Address to 0x49c
  [0x00000318]  Advance Line by 136 to 137
  [0x0000031b]  Copy
  [0x0000031c]  Set column to 2
  [0x0000031e]  Special opcode 6: advance Address by 0 to 0x49c and Line by 1 to 138 (view 1)
  [0x0000031f]  Set column to 54
  [0x00000321]  Set is_stmt to 0
  [0x00000322]  Copy (view 2)
  [0x00000323]  Extended opcode 4: set Discriminator to 1
  [0x00000327]  Special opcode 33: advance Address by 4 to 0x4a0 and Line by 0 to 138
  [0x00000328]  Set column to 2
  [0x0000032a]  Set is_stmt to 1
  [0x0000032b]  Special opcode 20: advance Address by 2 to 0x4a2 and Line by 1 to 139
  [0x0000032c]  Set column to 16
  [0x0000032e]  Set is_stmt to 0
  [0x0000032f]  Copy (view 1)
  [0x00000330]  Set column to 2
  [0x00000332]  Set is_stmt to 1
  [0x00000333]  Special opcode 34: advance Address by 4 to 0x4a6 and Line by 1 to 140
  [0x00000334]  Set column to 38
  [0x00000336]  Set is_stmt to 0
  [0x00000337]  Copy (view 1)
  [0x00000338]  Set column to 47
  [0x0000033a]  Special opcode 33: advance Address by 4 to 0x4aa and Line by 0 to 140
  [0x0000033b]  Set column to 53
  [0x0000033d]  Special opcode 47: advance Address by 6 to 0x4b0 and Line by 0 to 140
  [0x0000033e]  Special opcode 19: advance Address by 2 to 0x4b2 and Line by 0 to 140
  [0x0000033f]  Special opcode 33: advance Address by 4 to 0x4b6 and Line by 0 to 140
  [0x00000340]  Set column to 1
  [0x00000342]  Special opcode 62: advance Address by 8 to 0x4be and Line by 1 to 141
  [0x00000343]  Set column to 54
  [0x00000345]  Extended opcode 4: set Discriminator to 2
  [0x00000349]  Special opcode 72: advance Address by 10 to 0x4c8 and Line by -3 to 138
  [0x0000034a]  Extended opcode 4: set Discriminator to 2
  [0x0000034e]  Special opcode 19: advance Address by 2 to 0x4ca and Line by 0 to 138
  [0x0000034f]  Set column to 47
  [0x00000351]  Special opcode 21: advance Address by 2 to 0x4cc and Line by 2 to 140
  [0x00000352]  Advance PC by 8 to 0x4d4
  [0x00000354]  Extended opcode 1: End of Sequence

  [0x00000357]  Set column to 25
  [0x00000359]  Extended opcode 2: set Address to 0x4d4
  [0x00000360]  Advance Line by 142 to 143
  [0x00000363]  Copy
  [0x00000364]  Set column to 2
  [0x00000366]  Special opcode 21: advance Address by 2 to 0x4d6 and Line by 2 to 145
  [0x00000367]  Special opcode 48: advance Address by 6 to 0x4dc and Line by 1 to 146
  [0x00000368]  Set column to 6
  [0x0000036a]  Copy (view 1)
  [0x0000036b]  Set column to 10
  [0x0000036d]  Set is_stmt to 0
  [0x0000036e]  Copy (view 2)
  [0x0000036f]  Set column to 2
  [0x00000371]  Special opcode 19: advance Address by 2 to 0x4de and Line by 0 to 146
  [0x00000372]  Set column to 3
  [0x00000374]  Set is_stmt to 1
  [0x00000375]  Special opcode 20: advance Address by 2 to 0x4e0 and Line by 1 to 147
  [0x00000376]  Set column to 44
  [0x00000378]  Set is_stmt to 0
  [0x00000379]  Copy (view 1)
  [0x0000037a]  Set column to 3
  [0x0000037c]  Special opcode 33: advance Address by 4 to 0x4e4 and Line by 0 to 147
  [0x0000037d]  Set column to 27
  [0x0000037f]  Extended opcode 4: set Discriminator to 3
  [0x00000383]  Set is_stmt to 1
  [0x00000384]  Special opcode 88: advance Address by 12 to 0x4f0 and Line by -1 to 146
  [0x00000385]  Set column to 19
  [0x00000387]  Extended opcode 4: set Discriminator to 1
  [0x0000038b]  Special opcode 19: advance Address by 2 to 0x4f2 and Line by 0 to 146
  [0x0000038c]  Set column to 1
  [0x0000038e]  Set is_stmt to 0
  [0x0000038f]  Special opcode 50: advance Address by 6 to 0x4f8 and Line by 3 to 149
  [0x00000390]  Special opcode 19: advance Address by 2 to 0x4fa and Line by 0 to 149
  [0x00000391]  Advance PC by 14 to 0x508
  [0x00000393]  Extended opcode 1: End of Sequence

  [0x00000396]  Set column to 28
  [0x00000398]  Extended opcode 2: set Address to 0x508
  [0x0000039f]  Advance Line by 150 to 151
  [0x000003a2]  Copy
  [0x000003a3]  Set column to 2
  [0x000003a5]  Special opcode 20: advance Address by 2 to 0x50a and Line by 1 to 152
  [0x000003a6]  Special opcode 6: advance Address by 0 to 0x50a and Line by 1 to 153 (view 1)
  [0x000003a7]  Special opcode 6: advance Address by 0 to 0x50a and Line by 1 to 154 (view 2)
  [0x000003a8]  Special opcode 6: advance Address by 0 to 0x50a and Line by 1 to 155 (view 3)
  [0x000003a9]  Special opcode 6: advance Address by 0 to 0x50a and Line by 1 to 156 (view 4)
  [0x000003aa]  Special opcode 11: advance Address by 0 to 0x50a and Line by 6 to 162 (view 5)
  [0x000003ab]  Set column to 7
  [0x000003ad]  Set is_stmt to 0
  [0x000003ae]  Copy (view 6)
  [0x000003af]  Set column to 5
  [0x000003b1]  Set is_stmt to 1
  [0x000003b2]  Special opcode 22: advance Address by 2 to 0x50c and Line by 3 to 165
  [0x000003b3]  Set column to 16
  [0x000003b5]  Set is_stmt to 0
  [0x000003b6]  Copy (view 1)
  [0x000003b7]  Set column to 10
  [0x000003b9]  Extended opcode 4: set Discriminator to 1
  [0x000003bd]  Special opcode 89: advance Address by 12 to 0x518 and Line by 0 to 165
  [0x000003be]  Set column to 5
  [0x000003c0]  Set is_stmt to 1
  [0x000003c1]  Special opcode 20: advance Address by 2 to 0x51a and Line by 1 to 166
  [0x000003c2]  Set column to 7
  [0x000003c4]  Set is_stmt to 0
  [0x000003c5]  Copy (view 1)
  [0x000003c6]  Set column to 20
  [0x000003c8]  Extended opcode 4: set Discriminator to 1
  [0x000003cc]  Special opcode 33: advance Address by 4 to 0x51e and Line by 0 to 166
  [0x000003cd]  Set column to 5
  [0x000003cf]  Set is_stmt to 1
  [0x000003d0]  Special opcode 48: advance Address by 6 to 0x524 and Line by 1 to 167
  [0x000003d1]  Set column to 16
  [0x000003d3]  Set is_stmt to 0
  [0x000003d4]  Copy (view 1)
  [0x000003d5]  Set column to 5
  [0x000003d7]  Set is_stmt to 1
  [0x000003d8]  Special opcode 48: advance Address by 6 to 0x52a and Line by 1 to 168
  [0x000003d9]  Set column to 18
  [0x000003db]  Set is_stmt to 0
  [0x000003dc]  Copy (view 1)
  [0x000003dd]  Set column to 5
  [0x000003df]  Set is_stmt to 1
  [0x000003e0]  Special opcode 34: advance Address by 4 to 0x52e and Line by 1 to 169
  [0x000003e1]  Set column to 30
  [0x000003e3]  Set is_stmt to 0
  [0x000003e4]  Copy (view 1)
  [0x000003e5]  Set column to 5
  [0x000003e7]  Set is_stmt to 1
  [0x000003e8]  Special opcode 48: advance Address by 6 to 0x534 and Line by 1 to 170
  [0x000003e9]  Set is_stmt to 0
  [0x000003ea]  Special opcode 19: advance Address by 2 to 0x536 and Line by 0 to 170
  [0x000003eb]  Set column to 6
  [0x000003ed]  Set is_stmt to 1
  [0x000003ee]  Special opcode 34: advance Address by 4 to 0x53a and Line by 1 to 171
  [0x000003ef]  Set column to 5
  [0x000003f1]  Special opcode 22: advance Address by 2 to 0x53c and Line by 3 to 174
  [0x000003f2]  Set column to 45
  [0x000003f4]  Set is_stmt to 0
  [0x000003f5]  Copy (view 1)
  [0x000003f6]  Set column to 39
  [0x000003f8]  Extended opcode 4: set Discriminator to 1
  [0x000003fc]  Special opcode 89: advance Address by 12 to 0x548 and Line by 0 to 174
  [0x000003fd]  Set column to 43
  [0x000003ff]  Extended opcode 4: set Discriminator to 1
  [0x00000403]  Special opcode 75: advance Address by 10 to 0x552 and Line by 0 to 174
  [0x00000404]  Set column to 5
  [0x00000406]  Set is_stmt to 1
  [0x00000407]  Special opcode 36: advance Address by 4 to 0x556 and Line by 3 to 177
  [0x00000408]  Set column to 7
  [0x0000040a]  Set is_stmt to 0
  [0x0000040b]  Copy (view 1)
  [0x0000040c]  Set column to 5
  [0x0000040e]  Set is_stmt to 1
  [0x0000040f]  Special opcode 50: advance Address by 6 to 0x55c and Line by 3 to 180
  [0x00000410]  Set column to 30
  [0x00000412]  Set is_stmt to 0
  [0x00000413]  Copy (view 1)
  [0x00000414]  Set column to 7
  [0x00000416]  Special opcode 19: advance Address by 2 to 0x55e and Line by 0 to 180
  [0x00000417]  Set column to 6
  [0x00000419]  Set is_stmt to 1
  [0x0000041a]  Special opcode 62: advance Address by 8 to 0x566 and Line by 1 to 181
  [0x0000041b]  Special opcode 48: advance Address by 6 to 0x56c and Line by 1 to 182
  [0x0000041c]  Special opcode 34: advance Address by 4 to 0x570 and Line by 1 to 183
  [0x0000041d]  Special opcode 34: advance Address by 4 to 0x574 and Line by 1 to 184
  [0x0000041e]  Special opcode 118: advance Address by 16 to 0x584 and Line by 1 to 185
  [0x0000041f]  Special opcode 34: advance Address by 4 to 0x588 and Line by 1 to 186
  [0x00000420]  Special opcode 34: advance Address by 4 to 0x58c and Line by 1 to 187
  [0x00000421]  Set column to 17
  [0x00000423]  Set is_stmt to 0
  [0x00000424]  Copy (view 1)
  [0x00000425]  Set column to 6
  [0x00000427]  Set is_stmt to 1
  [0x00000428]  Special opcode 48: advance Address by 6 to 0x592 and Line by 1 to 188
  [0x00000429]  Special opcode 21: advance Address by 2 to 0x594 and Line by 2 to 190
  [0x0000042a]  Set column to 5
  [0x0000042c]  Special opcode 50: advance Address by 6 to 0x59a and Line by 3 to 193
  [0x0000042d]  Set column to 34
  [0x0000042f]  Set is_stmt to 0
  [0x00000430]  Copy (view 1)
  [0x00000431]  Set column to 7
  [0x00000433]  Set is_stmt to 1
  [0x00000434]  Special opcode 91: advance Address by 12 to 0x5a6 and Line by 2 to 195
  [0x00000435]  Set column to 18
  [0x00000437]  Set is_stmt to 0
  [0x00000438]  Copy (view 1)
  [0x00000439]  Set column to 7
  [0x0000043b]  Set is_stmt to 1
  [0x0000043c]  Special opcode 48: advance Address by 6 to 0x5ac and Line by 1 to 196
  [0x0000043d]  Set column to 20
  [0x0000043f]  Set is_stmt to 0
  [0x00000440]  Copy (view 1)
  [0x00000441]  Set column to 7
  [0x00000443]  Set is_stmt to 1
  [0x00000444]  Special opcode 48: advance Address by 6 to 0x5b2 and Line by 1 to 197
  [0x00000445]  Set column to 6
  [0x00000447]  Special opcode 48: advance Address by 6 to 0x5b8 and Line by 1 to 198
  [0x00000448]  Set column to 7
  [0x0000044a]  Special opcode 22: advance Address by 2 to 0x5ba and Line by 3 to 201
  [0x0000044b]  Set column to 18
  [0x0000044d]  Set is_stmt to 0
  [0x0000044e]  Copy (view 1)
  [0x0000044f]  Set column to 6
  [0x00000451]  Set is_stmt to 1
  [0x00000452]  Special opcode 48: advance Address by 6 to 0x5c0 and Line by 1 to 202
  [0x00000453]  Set column to 7
  [0x00000455]  Special opcode 22: advance Address by 2 to 0x5c2 and Line by 3 to 205
  [0x00000456]  Special opcode 48: advance Address by 6 to 0x5c8 and Line by 1 to 206
  [0x00000457]  Set column to 18
  [0x00000459]  Set is_stmt to 0
  [0x0000045a]  Copy (view 1)
  [0x0000045b]  Set column to 6
  [0x0000045d]  Set is_stmt to 1
  [0x0000045e]  Special opcode 48: advance Address by 6 to 0x5ce and Line by 1 to 207
  [0x0000045f]  Set column to 5
  [0x00000461]  Special opcode 24: advance Address by 2 to 0x5d0 and Line by 5 to 212
  [0x00000462]  Set column to 8
  [0x00000464]  Set is_stmt to 0
  [0x00000465]  Copy (view 1)
  [0x00000466]  Set column to 7
  [0x00000468]  Extended opcode 4: set Discriminator to 1
  [0x0000046c]  Special opcode 89: advance Address by 12 to 0x5dc and Line by 0 to 212
  [0x0000046d]  Set column to 5
  [0x0000046f]  Set is_stmt to 1
  [0x00000470]  Special opcode 48: advance Address by 6 to 0x5e2 and Line by 1 to 213
  [0x00000471]  Set column to 16
  [0x00000473]  Set is_stmt to 0
  [0x00000474]  Copy (view 1)
  [0x00000475]  Set column to 5
  [0x00000477]  Set is_stmt to 1
  [0x00000478]  Special opcode 48: advance Address by 6 to 0x5e8 and Line by 1 to 214
  [0x00000479]  Set column to 18
  [0x0000047b]  Set is_stmt to 0
  [0x0000047c]  Copy (view 1)
  [0x0000047d]  Set column to 5
  [0x0000047f]  Set is_stmt to 1
  [0x00000480]  Special opcode 48: advance Address by 6 to 0x5ee and Line by 1 to 215
  [0x00000481]  Set column to 27
  [0x00000483]  Set is_stmt to 0
  [0x00000484]  Copy (view 1)
  [0x00000485]  Set column to 6
  [0x00000487]  Set is_stmt to 1
  [0x00000488]  Special opcode 48: advance Address by 6 to 0x5f4 and Line by 1 to 216
  [0x00000489]  Set column to 5
  [0x0000048b]  Special opcode 22: advance Address by 2 to 0x5f6 and Line by 3 to 219
  [0x0000048c]  Set column to 42
  [0x0000048e]  Set is_stmt to 0
  [0x0000048f]  Copy (view 1)
  [0x00000490]  Set column to 36
  [0x00000492]  Extended opcode 4: set Discriminator to 1
  [0x00000496]  Special opcode 89: advance Address by 12 to 0x602 and Line by 0 to 219
  [0x00000497]  Set column to 40
  [0x00000499]  Extended opcode 4: set Discriminator to 1
  [0x0000049d]  Special opcode 75: advance Address by 10 to 0x60c and Line by 0 to 219
  [0x0000049e]  Set column to 5
  [0x000004a0]  Set is_stmt to 1
  [0x000004a1]  Special opcode 36: advance Address by 4 to 0x610 and Line by 3 to 222
  [0x000004a2]  Set column to 7
  [0x000004a4]  Set is_stmt to 0
  [0x000004a5]  Copy (view 1)
  [0x000004a6]  Set column to 5
  [0x000004a8]  Set is_stmt to 1
  [0x000004a9]  Special opcode 49: advance Address by 6 to 0x616 and Line by 2 to 224
  [0x000004aa]  Set column to 27
  [0x000004ac]  Set is_stmt to 0
  [0x000004ad]  Copy (view 1)
  [0x000004ae]  Set column to 7
  [0x000004b0]  Special opcode 19: advance Address by 2 to 0x618 and Line by 0 to 224
  [0x000004b1]  Set column to 5
  [0x000004b3]  Set is_stmt to 1
  [0x000004b4]  Special opcode 69: advance Address by 8 to 0x620 and Line by 8 to 232
  [0x000004b5]  Set column to 27
  [0x000004b7]  Set is_stmt to 0
  [0x000004b8]  Copy (view 1)
  [0x000004b9]  Set column to 7
  [0x000004bb]  Special opcode 33: advance Address by 4 to 0x624 and Line by 0 to 232
  [0x000004bc]  Set column to 6
  [0x000004be]  Set is_stmt to 1
  [0x000004bf]  Advance Line by 17 to 249
  [0x000004c1]  Special opcode 33: advance Address by 4 to 0x628 and Line by 0 to 249
  [0x000004c2]  Set column to 17
  [0x000004c4]  Set is_stmt to 0
  [0x000004c5]  Copy (view 1)
  [0x000004c6]  Set column to 6
  [0x000004c8]  Set is_stmt to 1
  [0x000004c9]  Special opcode 48: advance Address by 6 to 0x62e and Line by 1 to 250
  [0x000004ca]  Set column to 19
  [0x000004cc]  Set is_stmt to 0
  [0x000004cd]  Copy (view 1)
  [0x000004ce]  Set column to 6
  [0x000004d0]  Set is_stmt to 1
  [0x000004d1]  Advance Line by -22 to 228
  [0x000004d3]  Special opcode 61: advance Address by 8 to 0x636 and Line by 0 to 228
  [0x000004d4]  Set column to 17
  [0x000004d6]  Set is_stmt to 0
  [0x000004d7]  Copy (view 1)
  [0x000004d8]  Set column to 6
  [0x000004da]  Set is_stmt to 1
  [0x000004db]  Special opcode 48: advance Address by 6 to 0x63c and Line by 1 to 229
  [0x000004dc]  Set column to 18
  [0x000004de]  Set is_stmt to 0
  [0x000004df]  Copy (view 1)
  [0x000004e0]  Set column to 6
  [0x000004e2]  Set is_stmt to 1
  [0x000004e3]  Special opcode 48: advance Address by 6 to 0x642 and Line by 1 to 230
  [0x000004e4]  Set column to 1
  [0x000004e6]  Set is_stmt to 0
  [0x000004e7]  Advance Line by 61 to 291
  [0x000004e9]  Copy (view 1)
  [0x000004ea]  Set column to 6
  [0x000004ec]  Set is_stmt to 1
  [0x000004ed]  Advance Line by -58 to 233
  [0x000004ef]  Special opcode 19: advance Address by 2 to 0x644 and Line by 0 to 233
  [0x000004f0]  Special opcode 104: advance Address by 14 to 0x652 and Line by 1 to 234
  [0x000004f1]  Special opcode 63: advance Address by 8 to 0x65a and Line by 2 to 236
  [0x000004f2]  Set column to 9
  [0x000004f4]  Set is_stmt to 0
  [0x000004f5]  Copy (view 1)
  [0x000004f6]  Set column to 8
  [0x000004f8]  Special opcode 47: advance Address by 6 to 0x660 and Line by 0 to 236
  [0x000004f9]  Set column to 6
  [0x000004fb]  Set is_stmt to 1
  [0x000004fc]  Special opcode 48: advance Address by 6 to 0x666 and Line by 1 to 237
  [0x000004fd]  Set column to 17
  [0x000004ff]  Set is_stmt to 0
  [0x00000500]  Copy (view 1)
  [0x00000501]  Set column to 6
  [0x00000503]  Set is_stmt to 1
  [0x00000504]  Special opcode 34: advance Address by 4 to 0x66a and Line by 1 to 238
  [0x00000505]  Special opcode 34: advance Address by 4 to 0x66e and Line by 1 to 239
  [0x00000506]  Set column to 16
  [0x00000508]  Set is_stmt to 0
  [0x00000509]  Copy (view 1)
  [0x0000050a]  Set column to 6
  [0x0000050c]  Set is_stmt to 1
  [0x0000050d]  Special opcode 34: advance Address by 4 to 0x672 and Line by 1 to 240
  [0x0000050e]  Set column to 26
  [0x00000510]  Set is_stmt to 0
  [0x00000511]  Copy (view 1)
  [0x00000512]  Set column to 6
  [0x00000514]  Set is_stmt to 1
  [0x00000515]  Special opcode 48: advance Address by 6 to 0x678 and Line by 1 to 241
  [0x00000516]  Set column to 29
  [0x00000518]  Set is_stmt to 0
  [0x00000519]  Copy (view 1)
  [0x0000051a]  Set column to 6
  [0x0000051c]  Set is_stmt to 1
  [0x0000051d]  Special opcode 20: advance Address by 2 to 0x67a and Line by 1 to 242
  [0x0000051e]  Set column to 19
  [0x00000520]  Set is_stmt to 0
  [0x00000521]  Copy (view 1)
  [0x00000522]  Set column to 6
  [0x00000524]  Set is_stmt to 1
  [0x00000525]  Special opcode 34: advance Address by 4 to 0x67e and Line by 1 to 243
  [0x00000526]  Special opcode 34: advance Address by 4 to 0x682 and Line by 1 to 244
  [0x00000527]  Set column to 17
  [0x00000529]  Set is_stmt to 0
  [0x0000052a]  Copy (view 1)
  [0x0000052b]  Set column to 6
  [0x0000052d]  Set is_stmt to 1
  [0x0000052e]  Special opcode 48: advance Address by 6 to 0x688 and Line by 1 to 245
  [0x0000052f]  Set column to 5
  [0x00000531]  Advance Line by 11 to 256
  [0x00000533]  Special opcode 47: advance Address by 6 to 0x68e and Line by 0 to 256
  [0x00000534]  Special opcode 6: advance Address by 0 to 0x68e and Line by 1 to 257 (view 1)
  [0x00000535]  Set column to 25
  [0x00000537]  Set is_stmt to 0
  [0x00000538]  Copy (view 2)
  [0x00000539]  Set column to 6
  [0x0000053b]  Set is_stmt to 1
  [0x0000053c]  Advance Line by 16 to 273
  [0x0000053e]  Special opcode 89: advance Address by 12 to 0x69a and Line by 0 to 273
  [0x0000053f]  Set column to 5
  [0x00000541]  Special opcode 6: advance Address by 0 to 0x69a and Line by 1 to 274 (view 1)
  [0x00000542]  Set column to 9
  [0x00000544]  Set is_stmt to 0
  [0x00000545]  Copy (view 2)
  [0x00000546]  Set column to 7
  [0x00000548]  Special opcode 61: advance Address by 8 to 0x6a2 and Line by 0 to 274
  [0x00000549]  Set column to 50
  [0x0000054b]  Special opcode 19: advance Address by 2 to 0x6a4 and Line by 0 to 274
  [0x0000054c]  Set column to 7
  [0x0000054e]  Special opcode 33: advance Address by 4 to 0x6a8 and Line by 0 to 274
  [0x0000054f]  Set column to 6
  [0x00000551]  Set is_stmt to 1
  [0x00000552]  Special opcode 48: advance Address by 6 to 0x6ae and Line by 1 to 275
  [0x00000553]  Set column to 19
  [0x00000555]  Set is_stmt to 0
  [0x00000556]  Copy (view 1)
  [0x00000557]  Set column to 6
  [0x00000559]  Set is_stmt to 1
  [0x0000055a]  Special opcode 48: advance Address by 6 to 0x6b4 and Line by 1 to 276
  [0x0000055b]  Set column to 17
  [0x0000055d]  Set is_stmt to 0
  [0x0000055e]  Copy (view 1)
  [0x0000055f]  Set column to 7
  [0x00000561]  Set is_stmt to 1
  [0x00000562]  Advance Line by -17 to 259
  [0x00000564]  Special opcode 61: advance Address by 8 to 0x6bc and Line by 0 to 259
  [0x00000565]  Set column to 13
  [0x00000567]  Set is_stmt to 0
  [0x00000568]  Copy (view 1)
  [0x00000569]  Set column to 11
  [0x0000056b]  Extended opcode 4: set Discriminator to 1
  [0x0000056f]  Special opcode 89: advance Address by 12 to 0x6c8 and Line by 0 to 259
  [0x00000570]  Set column to 6
  [0x00000572]  Set is_stmt to 1
  [0x00000573]  Special opcode 34: advance Address by 4 to 0x6cc and Line by 1 to 260
  [0x00000574]  Set column to 7
  [0x00000576]  Special opcode 22: advance Address by 2 to 0x6ce and Line by 3 to 263
  [0x00000577]  Set column to 13
  [0x00000579]  Set is_stmt to 0
  [0x0000057a]  Copy (view 1)
  [0x0000057b]  Set column to 11
  [0x0000057d]  Extended opcode 4: set Discriminator to 1
  [0x00000581]  Special opcode 89: advance Address by 12 to 0x6da and Line by 0 to 263
  [0x00000582]  Set column to 7
  [0x00000584]  Set is_stmt to 1
  [0x00000585]  Special opcode 34: advance Address by 4 to 0x6de and Line by 1 to 264
  [0x00000586]  Set column to 28
  [0x00000588]  Set is_stmt to 0
  [0x00000589]  Copy (view 1)
  [0x0000058a]  Set column to 34
  [0x0000058c]  Special opcode 19: advance Address by 2 to 0x6e0 and Line by 0 to 264
  [0x0000058d]  Set column to 41
  [0x0000058f]  Special opcode 61: advance Address by 8 to 0x6e8 and Line by 0 to 264
  [0x00000590]  Set column to 7
  [0x00000592]  Set is_stmt to 1
  [0x00000593]  Special opcode 20: advance Address by 2 to 0x6ea and Line by 1 to 265
  [0x00000594]  Set column to 24
  [0x00000596]  Set is_stmt to 0
  [0x00000597]  Copy (view 1)
  [0x00000598]  Set column to 9
  [0x0000059a]  Special opcode 33: advance Address by 4 to 0x6ee and Line by 0 to 265
  [0x0000059b]  Set column to 7
  [0x0000059d]  Set is_stmt to 1
  [0x0000059e]  Special opcode 62: advance Address by 8 to 0x6f6 and Line by 1 to 266
  [0x0000059f]  Set column to 48
  [0x000005a1]  Set is_stmt to 0
  [0x000005a2]  Copy (view 1)
  [0x000005a3]  Set column to 19
  [0x000005a5]  Special opcode 19: advance Address by 2 to 0x6f8 and Line by 0 to 266
  [0x000005a6]  Set column to 7
  [0x000005a8]  Set is_stmt to 1
  [0x000005a9]  Special opcode 120: advance Address by 16 to 0x708 and Line by 3 to 269
  [0x000005aa]  Set column to 62
  [0x000005ac]  Set is_stmt to 0
  [0x000005ad]  Copy (view 1)
  [0x000005ae]  Set column to 70
  [0x000005b0]  Special opcode 61: advance Address by 8 to 0x710 and Line by 0 to 269
  [0x000005b1]  Set column to 76
  [0x000005b3]  Special opcode 19: advance Address by 2 to 0x712 and Line by 0 to 269
  [0x000005b4]  Set column to 37
  [0x000005b6]  Special opcode 19: advance Address by 2 to 0x714 and Line by 0 to 269
  [0x000005b7]  Set column to 6
  [0x000005b9]  Set is_stmt to 1
  [0x000005ba]  Special opcode 36: advance Address by 4 to 0x718 and Line by 3 to 272
  [0x000005bb]  Set is_stmt to 0
  [0x000005bc]  Special opcode 19: advance Address by 2 to 0x71a and Line by 0 to 272
  [0x000005bd]  Set column to 5
  [0x000005bf]  Set is_stmt to 1
  [0x000005c0]  Advance Line by 10 to 282
  [0x000005c2]  Copy (view 1)
  [0x000005c3]  Set column to 16
  [0x000005c5]  Set is_stmt to 0
  [0x000005c6]  Copy (view 2)
  [0x000005c7]  Set column to 4
  [0x000005c9]  Set is_stmt to 1
  [0x000005ca]  Special opcode 48: advance Address by 6 to 0x720 and Line by 1 to 283
  [0x000005cb]  Set column to 8
  [0x000005cd]  Advance Line by -121 to 162
  [0x000005d0]  Copy (view 1)
  [0x000005d1]  Extended opcode 4: set Discriminator to 1
  [0x000005d5]  Set is_stmt to 0
  [0x000005d6]  Special opcode 89: advance Address by 12 to 0x72c and Line by 0 to 162
  [0x000005d7]  Set column to 3
  [0x000005d9]  Set is_stmt to 1
  [0x000005da]  Special opcode 34: advance Address by 4 to 0x730 and Line by 1 to 163
  [0x000005db]  Set column to 5
  [0x000005dd]  Advance Line by 123 to 286
  [0x000005e0]  Advance PC by constant 34 to 0x752
  [0x000005e1]  Special opcode 47: advance Address by 6 to 0x758 and Line by 0 to 286
  [0x000005e2]  Special opcode 48: advance Address by 6 to 0x75e and Line by 1 to 287
  [0x000005e3]  Set column to 16
  [0x000005e5]  Set is_stmt to 0
  [0x000005e6]  Copy (view 1)
  [0x000005e7]  Set column to 4
  [0x000005e9]  Set is_stmt to 1
  [0x000005ea]  Special opcode 48: advance Address by 6 to 0x764 and Line by 1 to 288
  [0x000005eb]  Advance PC by 68 to 0x7a8
  [0x000005ed]  Extended opcode 1: End of Sequence


  Offset:                      0x5f0
  Length:                      218
  DWARF Version:               3
  Prologue Length:             159
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x60b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x652):
  Entry	Dir	Time	Size	Name
  1	1	0	0	main.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x00000699]  Set column to 17
  [0x0000069b]  Extended opcode 2: set Address to 0x7a8
  [0x000006a2]  Advance Line by 19 to 20
  [0x000006a4]  Copy
  [0x000006a5]  Set column to 2
  [0x000006a7]  Special opcode 20: advance Address by 2 to 0x7aa and Line by 1 to 21
  [0x000006a8]  Special opcode 91: advance Address by 12 to 0x7b6 and Line by 2 to 23
  [0x000006a9]  Special opcode 34: advance Address by 4 to 0x7ba and Line by 1 to 24
  [0x000006aa]  Special opcode 48: advance Address by 6 to 0x7c0 and Line by 1 to 25
  [0x000006ab]  Special opcode 34: advance Address by 4 to 0x7c4 and Line by 1 to 26
  [0x000006ac]  Special opcode 48: advance Address by 6 to 0x7ca and Line by 1 to 27
  [0x000006ad]  Special opcode 34: advance Address by 4 to 0x7ce and Line by 1 to 28
  [0x000006ae]  Special opcode 48: advance Address by 6 to 0x7d4 and Line by 1 to 29
  [0x000006af]  Special opcode 34: advance Address by 4 to 0x7d8 and Line by 1 to 30
  [0x000006b0]  Special opcode 20: advance Address by 2 to 0x7da and Line by 1 to 31
  [0x000006b1]  Special opcode 79: advance Address by 10 to 0x7e4 and Line by 4 to 35
  [0x000006b2]  Special opcode 48: advance Address by 6 to 0x7ea and Line by 1 to 36
  [0x000006b3]  Special opcode 34: advance Address by 4 to 0x7ee and Line by 1 to 37
  [0x000006b4]  Special opcode 90: advance Address by 12 to 0x7fa and Line by 1 to 38
  [0x000006b5]  Special opcode 90: advance Address by 12 to 0x806 and Line by 1 to 39
  [0x000006b6]  Special opcode 76: advance Address by 10 to 0x810 and Line by 1 to 40
  [0x000006b7]  Special opcode 76: advance Address by 10 to 0x81a and Line by 1 to 41
  [0x000006b8]  Special opcode 76: advance Address by 10 to 0x824 and Line by 1 to 42
  [0x000006b9]  Special opcode 76: advance Address by 10 to 0x82e and Line by 1 to 43
  [0x000006ba]  Special opcode 76: advance Address by 10 to 0x838 and Line by 1 to 44
  [0x000006bb]  Special opcode 76: advance Address by 10 to 0x842 and Line by 1 to 45
  [0x000006bc]  Special opcode 76: advance Address by 10 to 0x84c and Line by 1 to 46
  [0x000006bd]  Special opcode 34: advance Address by 4 to 0x850 and Line by 1 to 47
  [0x000006be]  Special opcode 35: advance Address by 4 to 0x854 and Line by 2 to 49
  [0x000006bf]  Set column to 3
  [0x000006c1]  Extended opcode 4: set Discriminator to 1
  [0x000006c5]  Special opcode 6: advance Address by 0 to 0x854 and Line by 1 to 50 (view 1)
  [0x000006c6]  Set column to 7
  [0x000006c8]  Special opcode 32: advance Address by 4 to 0x858 and Line by -1 to 49
  [0x000006c9]  Advance PC by 32 to 0x878
  [0x000006cb]  Extended opcode 1: End of Sequence


  Offset:                      0x6ce
  Length:                      496
  DWARF Version:               3
  Prologue Length:             146
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x6e9):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x730):
  Entry	Dir	Time	Size	Name
  1	1	0	0	timers.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	timers.h

 Line Number Statements:
  [0x0000076a]  Set column to 35
  [0x0000076c]  Extended opcode 2: set Address to 0
  [0x00000773]  Advance Line by 15 to 16
  [0x00000775]  Copy
  [0x00000776]  Set column to 2
  [0x00000778]  Special opcode 21: advance Address by 2 to 0x2 and Line by 2 to 18
  [0x00000779]  Set column to 21
  [0x0000077b]  Set is_stmt to 0
  [0x0000077c]  Special opcode 47: advance Address by 6 to 0x8 and Line by 0 to 18
  [0x0000077d]  Set column to 2
  [0x0000077f]  Set is_stmt to 1
  [0x00000780]  Special opcode 63: advance Address by 8 to 0x10 and Line by 2 to 20
  [0x00000781]  Set column to 53
  [0x00000783]  Extended opcode 4: set Discriminator to 1
  [0x00000787]  Copy (view 1)
  [0x00000788]  Set column to 9
  [0x0000078a]  Extended opcode 4: set Discriminator to 1
  [0x0000078e]  Copy (view 2)
  [0x0000078f]  Set column to 11
  [0x00000791]  Extended opcode 4: set Discriminator to 1
  [0x00000795]  Set is_stmt to 0
  [0x00000796]  Copy (view 3)
  [0x00000797]  Set column to 9
  [0x00000799]  Extended opcode 4: set Discriminator to 1
  [0x0000079d]  Special opcode 47: advance Address by 6 to 0x16 and Line by 0 to 20
  [0x0000079e]  Set column to 2
  [0x000007a0]  Set is_stmt to 1
  [0x000007a1]  Special opcode 49: advance Address by 6 to 0x1c and Line by 2 to 22
  [0x000007a2]  Set column to 15
  [0x000007a4]  Set is_stmt to 0
  [0x000007a5]  Special opcode 33: advance Address by 4 to 0x20 and Line by 0 to 22
  [0x000007a6]  Set column to 2
  [0x000007a8]  Set is_stmt to 1
  [0x000007a9]  Special opcode 48: advance Address by 6 to 0x26 and Line by 1 to 23
  [0x000007aa]  Set column to 15
  [0x000007ac]  Set is_stmt to 0
  [0x000007ad]  Special opcode 19: advance Address by 2 to 0x28 and Line by 0 to 23
  [0x000007ae]  Set column to 2
  [0x000007b0]  Set is_stmt to 1
  [0x000007b1]  Special opcode 48: advance Address by 6 to 0x2e and Line by 1 to 24
  [0x000007b2]  Set column to 15
  [0x000007b4]  Set is_stmt to 0
  [0x000007b5]  Copy (view 1)
  [0x000007b6]  Set column to 2
  [0x000007b8]  Set is_stmt to 1
  [0x000007b9]  Special opcode 34: advance Address by 4 to 0x32 and Line by 1 to 25
  [0x000007ba]  Set column to 16
  [0x000007bc]  Set is_stmt to 0
  [0x000007bd]  Special opcode 19: advance Address by 2 to 0x34 and Line by 0 to 25
  [0x000007be]  Set column to 2
  [0x000007c0]  Set is_stmt to 1
  [0x000007c1]  Special opcode 48: advance Address by 6 to 0x3a and Line by 1 to 26
  [0x000007c2]  Set column to 19
  [0x000007c4]  Set is_stmt to 0
  [0x000007c5]  Copy (view 1)
  [0x000007c6]  Extended opcode 4: set Discriminator to 1
  [0x000007ca]  Special opcode 75: advance Address by 10 to 0x44 and Line by 0 to 26
  [0x000007cb]  Set column to 31
  [0x000007cd]  Extended opcode 4: set Discriminator to 1
  [0x000007d1]  Special opcode 19: advance Address by 2 to 0x46 and Line by 0 to 26
  [0x000007d2]  Set column to 17
  [0x000007d4]  Extended opcode 4: set Discriminator to 1
  [0x000007d8]  Special opcode 19: advance Address by 2 to 0x48 and Line by 0 to 26
  [0x000007d9]  Set column to 2
  [0x000007db]  Set is_stmt to 1
  [0x000007dc]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 27
  [0x000007dd]  Set column to 16
  [0x000007df]  Set is_stmt to 0
  [0x000007e0]  Copy (view 1)
  [0x000007e1]  Set column to 2
  [0x000007e3]  Set is_stmt to 1
  [0x000007e4]  Special opcode 20: advance Address by 2 to 0x4c and Line by 1 to 28
  [0x000007e5]  Set column to 15
  [0x000007e7]  Set is_stmt to 0
  [0x000007e8]  Special opcode 19: advance Address by 2 to 0x4e and Line by 0 to 28
  [0x000007e9]  Set column to 2
  [0x000007eb]  Set is_stmt to 1
  [0x000007ec]  Special opcode 48: advance Address by 6 to 0x54 and Line by 1 to 29
  [0x000007ed]  Set column to 15
  [0x000007ef]  Set is_stmt to 0
  [0x000007f0]  Special opcode 19: advance Address by 2 to 0x56 and Line by 0 to 29
  [0x000007f1]  Set column to 2
  [0x000007f3]  Set is_stmt to 1
  [0x000007f4]  Special opcode 48: advance Address by 6 to 0x5c and Line by 1 to 30
  [0x000007f5]  Set column to 13
  [0x000007f7]  Set is_stmt to 0
  [0x000007f8]  Copy (view 1)
  [0x000007f9]  Set column to 2
  [0x000007fb]  Set is_stmt to 1
  [0x000007fc]  Special opcode 90: advance Address by 12 to 0x68 and Line by 1 to 31
  [0x000007fd]  Set column to 15
  [0x000007ff]  Set is_stmt to 0
  [0x00000800]  Special opcode 19: advance Address by 2 to 0x6a and Line by 0 to 31
  [0x00000801]  Set column to 1
  [0x00000803]  Special opcode 48: advance Address by 6 to 0x70 and Line by 1 to 32
  [0x00000804]  Advance PC by 12 to 0x7c
  [0x00000806]  Extended opcode 1: End of Sequence

  [0x00000809]  Set column to 27
  [0x0000080b]  Extended opcode 2: set Address to 0x878
  [0x00000812]  Advance Line by 33 to 34
  [0x00000814]  Copy
  [0x00000815]  Set column to 2
  [0x00000817]  Special opcode 20: advance Address by 2 to 0x87a and Line by 1 to 35
  [0x00000818]  Special opcode 6: advance Address by 0 to 0x87a and Line by 1 to 36 (view 1)
  [0x00000819]  Special opcode 7: advance Address by 0 to 0x87a and Line by 2 to 38 (view 2)
  [0x0000081a]  Set column to 15
  [0x0000081c]  Set is_stmt to 0
  [0x0000081d]  Special opcode 33: advance Address by 4 to 0x87e and Line by 0 to 38
  [0x0000081e]  Set column to 2
  [0x00000820]  Set is_stmt to 1
  [0x00000821]  Special opcode 48: advance Address by 6 to 0x884 and Line by 1 to 39
  [0x00000822]  Set column to 15
  [0x00000824]  Set is_stmt to 0
  [0x00000825]  Special opcode 19: advance Address by 2 to 0x886 and Line by 0 to 39
  [0x00000826]  Set column to 2
  [0x00000828]  Set is_stmt to 1
  [0x00000829]  Special opcode 49: advance Address by 6 to 0x88c and Line by 2 to 41
  [0x0000082a]  Set column to 23
  [0x0000082c]  Set is_stmt to 0
  [0x0000082d]  Copy (view 1)
  [0x0000082e]  Set column to 2
  [0x00000830]  Set is_stmt to 1
  [0x00000831]  Special opcode 120: advance Address by 16 to 0x89c and Line by 3 to 44
  [0x00000832]  Set column to 5
  [0x00000834]  Set is_stmt to 0
  [0x00000835]  Copy (view 1)
  [0x00000836]  Set column to 4
  [0x00000838]  Special opcode 61: advance Address by 8 to 0x8a4 and Line by 0 to 44
  [0x00000839]  Set column to 2
  [0x0000083b]  Set is_stmt to 1
  [0x0000083c]  Special opcode 52: advance Address by 6 to 0x8aa and Line by 5 to 49
  [0x0000083d]  Set column to 15
  [0x0000083f]  Set is_stmt to 0
  [0x00000840]  Special opcode 33: advance Address by 4 to 0x8ae and Line by 0 to 49
  [0x00000841]  Set column to 1
  [0x00000843]  Special opcode 48: advance Address by 6 to 0x8b4 and Line by 1 to 50
  [0x00000844]  Set column to 3
  [0x00000846]  Set is_stmt to 1
  [0x00000847]  Special opcode 42: advance Address by 6 to 0x8ba and Line by -5 to 45
  [0x00000848]  Set column to 17
  [0x0000084a]  Set is_stmt to 0
  [0x0000084b]  Copy (view 1)
  [0x0000084c]  Set column to 3
  [0x0000084e]  Set is_stmt to 1
  [0x0000084f]  Special opcode 62: advance Address by 8 to 0x8c2 and Line by 1 to 46
  [0x00000850]  Set column to 18
  [0x00000852]  Set is_stmt to 0
  [0x00000853]  Copy (view 1)
  [0x00000854]  Advance PC by 26 to 0x8dc
  [0x00000856]  Extended opcode 1: End of Sequence

  [0x00000859]  Set column to 34
  [0x0000085b]  Extended opcode 2: set Address to 0
  [0x00000862]  Advance Line by 51 to 52
  [0x00000864]  Copy
  [0x00000865]  Set column to 3
  [0x00000867]  Special opcode 39: advance Address by 4 to 0x4 and Line by 6 to 58
  [0x00000868]  Set column to 22
  [0x0000086a]  Set is_stmt to 0
  [0x0000086b]  Copy (view 1)
  [0x0000086c]  Set column to 3
  [0x0000086e]  Set is_stmt to 1
  [0x0000086f]  Special opcode 48: advance Address by 6 to 0xa and Line by 1 to 59
  [0x00000870]  Set column to 16
  [0x00000872]  Set is_stmt to 0
  [0x00000873]  Copy (view 1)
  [0x00000874]  Set column to 31
  [0x00000876]  Extended opcode 4: set Discriminator to 1
  [0x0000087a]  Special opcode 75: advance Address by 10 to 0x14 and Line by 0 to 59
  [0x0000087b]  Set column to 14
  [0x0000087d]  Extended opcode 4: set Discriminator to 1
  [0x00000881]  Special opcode 33: advance Address by 4 to 0x18 and Line by 0 to 59
  [0x00000882]  Set column to 11
  [0x00000884]  Set is_stmt to 1
  [0x00000885]  Special opcode 35: advance Address by 4 to 0x1c and Line by 2 to 61
  [0x00000886]  Set column to 2
  [0x00000888]  Advance Line by -8 to 53
  [0x0000088a]  Special opcode 61: advance Address by 8 to 0x24 and Line by 0 to 53
  [0x0000088b]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 54 (view 1)
  [0x0000088c]  Special opcode 7: advance Address by 0 to 0x24 and Line by 2 to 56 (view 2)
  [0x0000088d]  Set column to 3
  [0x0000088f]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 57 (view 3)
  [0x00000890]  Set column to 6
  [0x00000892]  Set is_stmt to 0
  [0x00000893]  Copy (view 4)
  [0x00000894]  Set column to 5
  [0x00000896]  Special opcode 33: advance Address by 4 to 0x28 and Line by 0 to 57
  [0x00000897]  Set column to 28
  [0x00000899]  Extended opcode 4: set Discriminator to 1
  [0x0000089d]  Set is_stmt to 1
  [0x0000089e]  Special opcode 47: advance Address by 6 to 0x2e and Line by 0 to 57
  [0x0000089f]  Set column to 2
  [0x000008a1]  Special opcode 53: advance Address by 6 to 0x34 and Line by 6 to 63
  [0x000008a2]  Set column to 10
  [0x000008a4]  Set is_stmt to 0
  [0x000008a5]  Copy (view 1)
  [0x000008a6]  Extended opcode 4: set Discriminator to 1
  [0x000008aa]  Special opcode 75: advance Address by 10 to 0x3e and Line by 0 to 63
  [0x000008ab]  Set column to 23
  [0x000008ad]  Extended opcode 4: set Discriminator to 1
  [0x000008b1]  Special opcode 19: advance Address by 2 to 0x40 and Line by 0 to 63
  [0x000008b2]  Set column to 45
  [0x000008b4]  Extended opcode 4: set Discriminator to 1
  [0x000008b8]  Special opcode 61: advance Address by 8 to 0x48 and Line by 0 to 63
  [0x000008b9]  Set column to 1
  [0x000008bb]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 64
  [0x000008bc]  Special opcode 47: advance Address by 6 to 0x50 and Line by 0 to 64
  [0x000008bd]  Advance PC by 8 to 0x58
  [0x000008bf]  Extended opcode 1: End of Sequence


  Offset:                      0x8c2
  Length:                      1056
  DWARF Version:               3
  Prologue Length:             206
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x8dd):
  1	src
  2	/usr/lib/gcc/arm-none-eabi/13.2.0/include
  3	/usr/arm-none-eabi/include/machine
  4	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x94e):
  Entry	Dir	Time	Size	Name
  1	1	0	0	uart_print.c
  2	2	0	0	stdarg.h
  3	3	0	0	_default_types.h
  4	4	0	0	_stdint.h
  5	0	0	0	<built-in>

 Line Number Statements:
  [0x0000099a]  Set column to 30
  [0x0000099c]  Extended opcode 2: set Address to 0x8dc
  [0x000009a3]  Advance Line by 14 to 15
  [0x000009a5]  Copy
  [0x000009a6]  Set column to 2
  [0x000009a8]  Special opcode 20: advance Address by 2 to 0x8de and Line by 1 to 16
  [0x000009a9]  Special opcode 90: advance Address by 12 to 0x8ea and Line by 1 to 17
  [0x000009aa]  Special opcode 62: advance Address by 8 to 0x8f2 and Line by 1 to 18
  [0x000009ab]  Set column to 57
  [0x000009ad]  Extended opcode 4: set Discriminator to 1
  [0x000009b1]  Copy (view 1)
  [0x000009b2]  Set column to 8
  [0x000009b4]  Extended opcode 4: set Discriminator to 1
  [0x000009b8]  Copy (view 2)
  [0x000009b9]  Set column to 9
  [0x000009bb]  Extended opcode 4: set Discriminator to 1
  [0x000009bf]  Set is_stmt to 0
  [0x000009c0]  Copy (view 3)
  [0x000009c1]  Set column to 8
  [0x000009c3]  Extended opcode 4: set Discriminator to 1
  [0x000009c7]  Special opcode 103: advance Address by 14 to 0x900 and Line by 0 to 18
  [0x000009c8]  Set column to 58
  [0x000009ca]  Extended opcode 4: set Discriminator to 2
  [0x000009ce]  Set is_stmt to 1
  [0x000009cf]  Special opcode 33: advance Address by 4 to 0x904 and Line by 0 to 18
  [0x000009d0]  Set column to 2
  [0x000009d2]  Special opcode 7: advance Address by 0 to 0x904 and Line by 2 to 20 (view 1)
  [0x000009d3]  Special opcode 146: advance Address by 20 to 0x918 and Line by 1 to 21
  [0x000009d4]  Special opcode 104: advance Address by 14 to 0x926 and Line by 1 to 22
  [0x000009d5]  Set column to 38
  [0x000009d7]  Set is_stmt to 0
  [0x000009d8]  Special opcode 33: advance Address by 4 to 0x92a and Line by 0 to 22
  [0x000009d9]  Set column to 2
  [0x000009db]  Special opcode 33: advance Address by 4 to 0x92e and Line by 0 to 22
  [0x000009dc]  Extended opcode 4: set Discriminator to 1
  [0x000009e0]  Special opcode 33: advance Address by 4 to 0x932 and Line by 0 to 22
  [0x000009e1]  Set column to 1
  [0x000009e3]  Special opcode 63: advance Address by 8 to 0x93a and Line by 2 to 24
  [0x000009e4]  Advance PC by 18 to 0x94c
  [0x000009e6]  Extended opcode 1: End of Sequence

  [0x000009e9]  Set column to 22
  [0x000009eb]  Extended opcode 2: set Address to 0x94c
  [0x000009f2]  Advance Line by 25 to 26
  [0x000009f4]  Copy
  [0x000009f5]  Set is_stmt to 0
  [0x000009f6]  Copy (view 1)
  [0x000009f7]  Set column to 2
  [0x000009f9]  Set is_stmt to 1
  [0x000009fa]  Special opcode 34: advance Address by 4 to 0x950 and Line by 1 to 27
  [0x000009fb]  Special opcode 6: advance Address by 0 to 0x950 and Line by 1 to 28 (view 1)
  [0x000009fc]  Set is_stmt to 0
  [0x000009fd]  Special opcode 75: advance Address by 10 to 0x95a and Line by 0 to 28
  [0x000009fe]  Set is_stmt to 1
  [0x000009ff]  Special opcode 20: advance Address by 2 to 0x95c and Line by 1 to 29
  [0x00000a00]  Set column to 35
  [0x00000a02]  Extended opcode 4: set Discriminator to 1
  [0x00000a06]  Copy (view 1)
  [0x00000a07]  Set column to 8
  [0x00000a09]  Extended opcode 4: set Discriminator to 1
  [0x00000a0d]  Copy (view 2)
  [0x00000a0e]  Set column to 36
  [0x00000a10]  Extended opcode 4: set Discriminator to 2
  [0x00000a14]  Special opcode 117: advance Address by 16 to 0x96c and Line by 0 to 29
  [0x00000a15]  Set column to 2
  [0x00000a17]  Special opcode 8: advance Address by 0 to 0x96c and Line by 3 to 32 (view 1)
  [0x00000a18]  Set column to 5
  [0x00000a1a]  Set is_stmt to 0
  [0x00000a1b]  Copy (view 2)
  [0x00000a1c]  Set column to 4
  [0x00000a1e]  Special opcode 47: advance Address by 6 to 0x972 and Line by 0 to 32
  [0x00000a1f]  Set column to 3
  [0x00000a21]  Set is_stmt to 1
  [0x00000a22]  Special opcode 48: advance Address by 6 to 0x978 and Line by 1 to 33
  [0x00000a23]  Set column to 23
  [0x00000a25]  Set is_stmt to 0
  [0x00000a26]  Copy (view 1)
  [0x00000a27]  Set column to 3
  [0x00000a29]  Set is_stmt to 1
  [0x00000a2a]  Special opcode 34: advance Address by 4 to 0x97c and Line by 1 to 34
  [0x00000a2b]  Set column to 7
  [0x00000a2d]  Copy (view 1)
  [0x00000a2e]  Set column to 3
  [0x00000a30]  Set is_stmt to 0
  [0x00000a31]  Copy (view 2)
  [0x00000a32]  Set column to 4
  [0x00000a34]  Set is_stmt to 1
  [0x00000a35]  Special opcode 20: advance Address by 2 to 0x97e and Line by 1 to 35
  [0x00000a36]  Set column to 28
  [0x00000a38]  Extended opcode 4: set Discriminator to 3
  [0x00000a3c]  Special opcode 18: advance Address by 2 to 0x980 and Line by -1 to 34
  [0x00000a3d]  Set column to 20
  [0x00000a3f]  Extended opcode 4: set Discriminator to 1
  [0x00000a43]  Special opcode 19: advance Address by 2 to 0x982 and Line by 0 to 34
  [0x00000a44]  Extended opcode 4: set Discriminator to 1
  [0x00000a48]  Set is_stmt to 0
  [0x00000a49]  Special opcode 47: advance Address by 6 to 0x988 and Line by 0 to 34
  [0x00000a4a]  Set column to 1
  [0x00000a4c]  Special opcode 9: advance Address by 0 to 0x988 and Line by 4 to 38 (view 1)
  [0x00000a4d]  Advance PC by 12 to 0x994
  [0x00000a4f]  Extended opcode 1: End of Sequence

  [0x00000a52]  Set column to 43
  [0x00000a54]  Extended opcode 2: set Address to 0x994
  [0x00000a5b]  Advance Line by 39 to 40
  [0x00000a5d]  Copy
  [0x00000a5e]  Set is_stmt to 0
  [0x00000a5f]  Copy (view 1)
  [0x00000a60]  Set column to 2
  [0x00000a62]  Set is_stmt to 1
  [0x00000a63]  Special opcode 34: advance Address by 4 to 0x998 and Line by 1 to 41
  [0x00000a64]  Set column to 6
  [0x00000a66]  Copy (view 1)
  [0x00000a67]  Set column to 10
  [0x00000a69]  Set is_stmt to 0
  [0x00000a6a]  Copy (view 2)
  [0x00000a6b]  Set column to 2
  [0x00000a6d]  Special opcode 19: advance Address by 2 to 0x99a and Line by 0 to 41
  [0x00000a6e]  Set column to 3
  [0x00000a70]  Set is_stmt to 1
  [0x00000a71]  Special opcode 20: advance Address by 2 to 0x99c and Line by 1 to 42
  [0x00000a72]  Set column to 34
  [0x00000a74]  Extended opcode 4: set Discriminator to 3
  [0x00000a78]  Special opcode 32: advance Address by 4 to 0x9a0 and Line by -1 to 41
  [0x00000a79]  Set column to 24
  [0x00000a7b]  Extended opcode 4: set Discriminator to 1
  [0x00000a7f]  Special opcode 19: advance Address by 2 to 0x9a2 and Line by 0 to 41
  [0x00000a80]  Set column to 20
  [0x00000a82]  Extended opcode 4: set Discriminator to 1
  [0x00000a86]  Set is_stmt to 0
  [0x00000a87]  Copy (view 1)
  [0x00000a88]  Set column to 24
  [0x00000a8a]  Extended opcode 4: set Discriminator to 1
  [0x00000a8e]  Special opcode 19: advance Address by 2 to 0x9a4 and Line by 0 to 41
  [0x00000a8f]  Set column to 1
  [0x00000a91]  Special opcode 36: advance Address by 4 to 0x9a8 and Line by 3 to 44
  [0x00000a92]  Special opcode 19: advance Address by 2 to 0x9aa and Line by 0 to 44
  [0x00000a93]  Extended opcode 1: End of Sequence

  [0x00000a96]  Set column to 42
  [0x00000a98]  Extended opcode 2: set Address to 0x9ac
  [0x00000a9f]  Advance Line by 45 to 46
  [0x00000aa1]  Copy
  [0x00000aa2]  Set is_stmt to 0
  [0x00000aa3]  Copy (view 1)
  [0x00000aa4]  Set column to 2
  [0x00000aa6]  Set is_stmt to 1
  [0x00000aa7]  Special opcode 35: advance Address by 4 to 0x9b0 and Line by 2 to 48
  [0x00000aa8]  Special opcode 7: advance Address by 0 to 0x9b0 and Line by 2 to 50 (view 1)
  [0x00000aa9]  Set column to 6
  [0x00000aab]  Set is_stmt to 0
  [0x00000aac]  Copy (view 2)
  [0x00000aad]  Set column to 2
  [0x00000aaf]  Set is_stmt to 1
  [0x00000ab0]  Special opcode 21: advance Address by 2 to 0x9b2 and Line by 2 to 52
  [0x00000ab1]  Set column to 3
  [0x00000ab3]  Special opcode 6: advance Address by 0 to 0x9b2 and Line by 1 to 53 (view 1)
  [0x00000ab4]  Set column to 37
  [0x00000ab6]  Set is_stmt to 0
  [0x00000ab7]  Copy (view 2)
  [0x00000ab8]  Set column to 19
  [0x00000aba]  Special opcode 145: advance Address by 20 to 0x9c6 and Line by 0 to 53
  [0x00000abb]  Set column to 17
  [0x00000abd]  Special opcode 19: advance Address by 2 to 0x9c8 and Line by 0 to 53
  [0x00000abe]  Special opcode 47: advance Address by 6 to 0x9ce and Line by 0 to 53
  [0x00000abf]  Set column to 3
  [0x00000ac1]  Set is_stmt to 1
  [0x00000ac2]  Special opcode 34: advance Address by 4 to 0x9d2 and Line by 1 to 54
  [0x00000ac3]  Set column to 7
  [0x00000ac5]  Set is_stmt to 0
  [0x00000ac6]  Special opcode 19: advance Address by 2 to 0x9d4 and Line by 0 to 54
  [0x00000ac7]  Set column to 15
  [0x00000ac9]  Extended opcode 4: set Discriminator to 1
  [0x00000acd]  Set is_stmt to 1
  [0x00000ace]  Special opcode 20: advance Address by 2 to 0x9d6 and Line by 1 to 55
  [0x00000acf]  Set column to 3
  [0x00000ad1]  Special opcode 50: advance Address by 6 to 0x9dc and Line by 3 to 58
  [0x00000ad2]  Set column to 22
  [0x00000ad4]  Set is_stmt to 0
  [0x00000ad5]  Copy (view 1)
  [0x00000ad6]  Set column to 3
  [0x00000ad8]  Special opcode 19: advance Address by 2 to 0x9de and Line by 0 to 58
  [0x00000ad9]  Set column to 22
  [0x00000adb]  Extended opcode 4: set Discriminator to 2
  [0x00000adf]  Set is_stmt to 1
  [0x00000ae0]  Special opcode 102: advance Address by 14 to 0x9ec and Line by -1 to 57
  [0x00000ae1]  Set column to 8
  [0x00000ae3]  Extended opcode 4: set Discriminator to 1
  [0x00000ae7]  Copy (view 1)
  [0x00000ae8]  Set column to 1
  [0x00000aea]  Set is_stmt to 0
  [0x00000aeb]  Special opcode 36: advance Address by 4 to 0x9f0 and Line by 3 to 60
  [0x00000aec]  Special opcode 33: advance Address by 4 to 0x9f4 and Line by 0 to 60
  [0x00000aed]  Advance PC by 4 to 0x9f8
  [0x00000aef]  Extended opcode 1: End of Sequence

  [0x00000af2]  Set column to 32
  [0x00000af4]  Extended opcode 2: set Address to 0x9f8
  [0x00000afb]  Advance Line by 61 to 62
  [0x00000afd]  Copy
  [0x00000afe]  Set is_stmt to 0
  [0x00000aff]  Copy (view 1)
  [0x00000b00]  Set column to 2
  [0x00000b02]  Set is_stmt to 1
  [0x00000b03]  Special opcode 21: advance Address by 2 to 0x9fa and Line by 2 to 64
  [0x00000b04]  Set column to 5
  [0x00000b06]  Set is_stmt to 0
  [0x00000b07]  Copy (view 1)
  [0x00000b08]  Set column to 2
  [0x00000b0a]  Set is_stmt to 1
  [0x00000b0b]  Special opcode 38: advance Address by 4 to 0x9fe and Line by 5 to 69
  [0x00000b0c]  Set column to 1
  [0x00000b0e]  Set is_stmt to 0
  [0x00000b0f]  Special opcode 48: advance Address by 6 to 0xa04 and Line by 1 to 70
  [0x00000b10]  Set column to 3
  [0x00000b12]  Set is_stmt to 1
  [0x00000b13]  Special opcode 14: advance Address by 2 to 0xa06 and Line by -5 to 65
  [0x00000b14]  Set is_stmt to 0
  [0x00000b15]  Special opcode 19: advance Address by 2 to 0xa08 and Line by 0 to 65
  [0x00000b16]  Set is_stmt to 1
  [0x00000b17]  Special opcode 34: advance Address by 4 to 0xa0c and Line by 1 to 66
  [0x00000b18]  Set column to 7
  [0x00000b1a]  Set is_stmt to 0
  [0x00000b1b]  Copy (view 1)
  [0x00000b1c]  Special opcode 19: advance Address by 2 to 0xa0e and Line by 0 to 66
  [0x00000b1d]  Advance PC by 2 to 0xa10
  [0x00000b1f]  Extended opcode 1: End of Sequence

  [0x00000b22]  Set column to 32
  [0x00000b24]  Extended opcode 2: set Address to 0xa10
  [0x00000b2b]  Advance Line by 71 to 72
  [0x00000b2e]  Copy
  [0x00000b2f]  Set is_stmt to 0
  [0x00000b30]  Copy (view 1)
  [0x00000b31]  Set column to 2
  [0x00000b33]  Set is_stmt to 1
  [0x00000b34]  Special opcode 63: advance Address by 8 to 0xa18 and Line by 2 to 74
  [0x00000b35]  Set column to 4
  [0x00000b37]  Set is_stmt to 0
  [0x00000b38]  Copy (view 1)
  [0x00000b39]  Set column to 2
  [0x00000b3b]  Set is_stmt to 1
  [0x00000b3c]  Special opcode 80: advance Address by 10 to 0xa22 and Line by 5 to 79
  [0x00000b3d]  Set column to 15
  [0x00000b3f]  Set is_stmt to 0
  [0x00000b40]  Copy (view 1)
  [0x00000b41]  Set column to 4
  [0x00000b43]  Special opcode 89: advance Address by 12 to 0xa2e and Line by 0 to 79
  [0x00000b44]  Set column to 24
  [0x00000b46]  Extended opcode 4: set Discriminator to 1
  [0x00000b4a]  Special opcode 75: advance Address by 10 to 0xa38 and Line by 0 to 79
  [0x00000b4b]  Set column to 2
  [0x00000b4d]  Set is_stmt to 1
  [0x00000b4e]  Special opcode 108: advance Address by 14 to 0xa46 and Line by 5 to 84
  [0x00000b4f]  Set column to 4
  [0x00000b51]  Set is_stmt to 0
  [0x00000b52]  Copy (view 1)
  [0x00000b53]  Set column to 30
  [0x00000b55]  Extended opcode 4: set Discriminator to 1
  [0x00000b59]  Special opcode 103: advance Address by 14 to 0xa54 and Line by 0 to 84
  [0x00000b5a]  Set column to 25
  [0x00000b5c]  Extended opcode 4: set Discriminator to 1
  [0x00000b60]  Special opcode 61: advance Address by 8 to 0xa5c and Line by 0 to 84
  [0x00000b61]  Set column to 2
  [0x00000b63]  Set is_stmt to 1
  [0x00000b64]  Special opcode 80: advance Address by 10 to 0xa66 and Line by 5 to 89
  [0x00000b65]  Special opcode 7: advance Address by 0 to 0xa66 and Line by 2 to 91 (view 1)
  [0x00000b66]  Set column to 4
  [0x00000b68]  Set is_stmt to 0
  [0x00000b69]  Copy (view 2)
  [0x00000b6a]  Set column to 2
  [0x00000b6c]  Set is_stmt to 1
  [0x00000b6d]  Special opcode 80: advance Address by 10 to 0xa70 and Line by 5 to 96
  [0x00000b6e]  Set column to 11
  [0x00000b70]  Set is_stmt to 0
  [0x00000b71]  Copy (view 1)
  [0x00000b72]  Set column to 2
  [0x00000b74]  Set is_stmt to 1
  [0x00000b75]  Special opcode 34: advance Address by 4 to 0xa74 and Line by 1 to 97
  [0x00000b76]  Set column to 44
  [0x00000b78]  Set is_stmt to 0
  [0x00000b79]  Copy (view 1)
  [0x00000b7a]  Set column to 59
  [0x00000b7c]  Special opcode 61: advance Address by 8 to 0xa7c and Line by 0 to 97
  [0x00000b7d]  Set column to 11
  [0x00000b7f]  Special opcode 61: advance Address by 8 to 0xa84 and Line by 0 to 97
  [0x00000b80]  Set column to 2
  [0x00000b82]  Set is_stmt to 1
  [0x00000b83]  Special opcode 63: advance Address by 8 to 0xa8c and Line by 2 to 99
  [0x00000b84]  Special opcode 7: advance Address by 0 to 0xa8c and Line by 2 to 101 (view 1)
  [0x00000b85]  Set column to 6
  [0x00000b87]  Copy (view 2)
  [0x00000b88]  Set column to 10
  [0x00000b8a]  Set is_stmt to 0
  [0x00000b8b]  Copy (view 3)
  [0x00000b8c]  Set column to 6
  [0x00000b8e]  Special opcode 17: advance Address by 2 to 0xa8e and Line by -2 to 99
  [0x00000b8f]  Set column to 2
  [0x00000b91]  Special opcode 21: advance Address by 2 to 0xa90 and Line by 2 to 101
  [0x00000b92]  Special opcode 19: advance Address by 2 to 0xa92 and Line by 0 to 101
  [0x00000b93]  Set column to 3
  [0x00000b95]  Set is_stmt to 1
  [0x00000b96]  Advance Line by -26 to 75
  [0x00000b98]  Copy (view 1)
  [0x00000b99]  Special opcode 48: advance Address by 6 to 0xa98 and Line by 1 to 76
  [0x00000b9a]  Special opcode 23: advance Address by 2 to 0xa9a and Line by 4 to 80
  [0x00000b9b]  Special opcode 48: advance Address by 6 to 0xaa0 and Line by 1 to 81
  [0x00000b9c]  Set column to 1
  [0x00000b9e]  Set is_stmt to 0
  [0x00000b9f]  Advance Line by 32 to 113
  [0x00000ba1]  Copy (view 1)
  [0x00000ba2]  Set column to 3
  [0x00000ba4]  Set is_stmt to 1
  [0x00000ba5]  Advance Line by -28 to 85
  [0x00000ba7]  Special opcode 61: advance Address by 8 to 0xaa8 and Line by 0 to 85
  [0x00000ba8]  Special opcode 48: advance Address by 6 to 0xaae and Line by 1 to 86
  [0x00000ba9]  Special opcode 25: advance Address by 2 to 0xab0 and Line by 6 to 92
  [0x00000baa]  Special opcode 48: advance Address by 6 to 0xab6 and Line by 1 to 93
  [0x00000bab]  Set column to 10
  [0x00000bad]  Set is_stmt to 0
  [0x00000bae]  Copy (view 1)
  [0x00000baf]  Set column to 3
  [0x00000bb1]  Set is_stmt to 1
  [0x00000bb2]  Advance Line by 9 to 102
  [0x00000bb4]  Special opcode 47: advance Address by 6 to 0xabc and Line by 0 to 102
  [0x00000bb5]  Set column to 44
  [0x00000bb7]  Set is_stmt to 0
  [0x00000bb8]  Copy (view 1)
  [0x00000bb9]  Set column to 19
  [0x00000bbb]  Special opcode 131: advance Address by 18 to 0xace and Line by 0 to 102
  [0x00000bbc]  Set column to 17
  [0x00000bbe]  Special opcode 19: advance Address by 2 to 0xad0 and Line by 0 to 102
  [0x00000bbf]  Special opcode 33: advance Address by 4 to 0xad4 and Line by 0 to 102
  [0x00000bc0]  Set column to 3
  [0x00000bc2]  Set is_stmt to 1
  [0x00000bc3]  Special opcode 48: advance Address by 6 to 0xada and Line by 1 to 103
  [0x00000bc4]  Set column to 15
  [0x00000bc6]  Set is_stmt to 0
  [0x00000bc7]  Copy (view 1)
  [0x00000bc8]  Set column to 25
  [0x00000bca]  Extended opcode 4: set Discriminator to 3
  [0x00000bce]  Set is_stmt to 1
  [0x00000bcf]  Special opcode 17: advance Address by 2 to 0xadc and Line by -2 to 101
  [0x00000bd0]  Set column to 13
  [0x00000bd2]  Set is_stmt to 0
  [0x00000bd3]  Special opcode 20: advance Address by 2 to 0xade and Line by 1 to 102
  [0x00000bd4]  Set column to 19
  [0x00000bd6]  Extended opcode 4: set Discriminator to 1
  [0x00000bda]  Set is_stmt to 1
  [0x00000bdb]  Special opcode 18: advance Address by 2 to 0xae0 and Line by -1 to 101
  [0x00000bdc]  Set column to 3
  [0x00000bde]  Special opcode 36: advance Address by 4 to 0xae4 and Line by 3 to 104
  [0x00000bdf]  Set column to 2
  [0x00000be1]  Special opcode 7: advance Address by 0 to 0xae4 and Line by 2 to 106 (view 1)
  [0x00000be2]  Set column to 12
  [0x00000be4]  Set is_stmt to 0
  [0x00000be5]  Copy (view 2)
  [0x00000be6]  Set column to 16
  [0x00000be8]  Special opcode 19: advance Address by 2 to 0xae6 and Line by 0 to 106
  [0x00000be9]  Special opcode 33: advance Address by 4 to 0xaea and Line by 0 to 106
  [0x00000bea]  Set column to 2
  [0x00000bec]  Set is_stmt to 1
  [0x00000bed]  Special opcode 77: advance Address by 10 to 0xaf4 and Line by 2 to 108
  [0x00000bee]  Set is_stmt to 0
  [0x00000bef]  Special opcode 33: advance Address by 4 to 0xaf8 and Line by 0 to 108
  [0x00000bf0]  Set is_stmt to 1
  [0x00000bf1]  Special opcode 35: advance Address by 4 to 0xafc and Line by 2 to 110
  [0x00000bf2]  Set column to 3
  [0x00000bf4]  Special opcode 20: advance Address by 2 to 0xafe and Line by 1 to 111
  [0x00000bf5]  Set column to 22
  [0x00000bf7]  Set is_stmt to 0
  [0x00000bf8]  Copy (view 1)
  [0x00000bf9]  Set column to 3
  [0x00000bfb]  Special opcode 19: advance Address by 2 to 0xb00 and Line by 0 to 111
  [0x00000bfc]  Set column to 22
  [0x00000bfe]  Extended opcode 4: set Discriminator to 2
  [0x00000c02]  Set is_stmt to 1
  [0x00000c03]  Special opcode 102: advance Address by 14 to 0xb0e and Line by -1 to 110
  [0x00000c04]  Set column to 8
  [0x00000c06]  Extended opcode 4: set Discriminator to 1
  [0x00000c0a]  Copy (view 1)
  [0x00000c0b]  Extended opcode 4: set Discriminator to 1
  [0x00000c0f]  Set is_stmt to 0
  [0x00000c10]  Special opcode 33: advance Address by 4 to 0xb12 and Line by 0 to 110
  [0x00000c11]  Advance PC by 30 to 0xb30
  [0x00000c13]  Extended opcode 1: End of Sequence

  [0x00000c16]  Set column to 34
  [0x00000c18]  Extended opcode 2: set Address to 0xb30
  [0x00000c1f]  Advance Line by 114 to 115
  [0x00000c22]  Copy
  [0x00000c23]  Set is_stmt to 0
  [0x00000c24]  Copy (view 1)
  [0x00000c25]  Set column to 2
  [0x00000c27]  Set is_stmt to 1
  [0x00000c28]  Special opcode 90: advance Address by 12 to 0xb3c and Line by 1 to 116
  [0x00000c29]  Special opcode 6: advance Address by 0 to 0xb3c and Line by 1 to 117 (view 1)
  [0x00000c2a]  Special opcode 21: advance Address by 2 to 0xb3e and Line by 2 to 119
  [0x00000c2b]  Special opcode 6: advance Address by 0 to 0xb3e and Line by 1 to 120 (view 1)
  [0x00000c2c]  Special opcode 6: advance Address by 0 to 0xb3e and Line by 1 to 121 (view 2)
  [0x00000c2d]  Special opcode 6: advance Address by 0 to 0xb3e and Line by 1 to 122 (view 3)
  [0x00000c2e]  Special opcode 7: advance Address by 0 to 0xb3e and Line by 2 to 124 (view 4)
  [0x00000c2f]  Set column to 6
  [0x00000c31]  Copy (view 5)
  [0x00000c32]  Set column to 10
  [0x00000c34]  Set is_stmt to 0
  [0x00000c35]  Copy (view 6)
  [0x00000c36]  Set column to 2
  [0x00000c38]  Special opcode 19: advance Address by 2 to 0xb40 and Line by 0 to 124
  [0x00000c39]  Set column to 7
  [0x00000c3b]  Set is_stmt to 1
  [0x00000c3c]  Special opcode 25: advance Address by 2 to 0xb42 and Line by 6 to 130
  [0x00000c3d]  Set column to 12
  [0x00000c3f]  Set is_stmt to 0
  [0x00000c40]  Copy (view 1)
  [0x00000c41]  Set column to 7
  [0x00000c43]  Set is_stmt to 1
  [0x00000c44]  Special opcode 48: advance Address by 6 to 0xb48 and Line by 1 to 131
  [0x00000c45]  Set column to 6
  [0x00000c47]  Special opcode 48: advance Address by 6 to 0xb4e and Line by 1 to 132
  [0x00000c48]  Set is_stmt to 0
  [0x00000c49]  Special opcode 0: advance Address by 0 to 0xb4e and Line by -5 to 127 (view 1)
  [0x00000c4a]  Special opcode 24: advance Address by 2 to 0xb50 and Line by 5 to 132
  [0x00000c4b]  Set column to 7
  [0x00000c4d]  Set is_stmt to 1
  [0x00000c4e]  Special opcode 22: advance Address by 2 to 0xb52 and Line by 3 to 135
  [0x00000c4f]  Set column to 11
  [0x00000c51]  Set is_stmt to 0
  [0x00000c52]  Copy (view 1)
  [0x00000c53]  Set column to 7
  [0x00000c55]  Set is_stmt to 1
  [0x00000c56]  Special opcode 48: advance Address by 6 to 0xb58 and Line by 1 to 136
  [0x00000c57]  Set column to 6
  [0x00000c59]  Special opcode 48: advance Address by 6 to 0xb5e and Line by 1 to 137
  [0x00000c5a]  Set is_stmt to 0
  [0x00000c5b]  Advance Line by -10 to 127
  [0x00000c5d]  Copy (view 1)
  [0x00000c5e]  Advance Line by 10 to 137
  [0x00000c60]  Special opcode 19: advance Address by 2 to 0xb60 and Line by 0 to 137
  [0x00000c61]  Set column to 7
  [0x00000c63]  Set is_stmt to 1
  [0x00000c64]  Special opcode 22: advance Address by 2 to 0xb62 and Line by 3 to 140
  [0x00000c65]  Special opcode 48: advance Address by 6 to 0xb68 and Line by 1 to 141
  [0x00000c66]  Set column to 6
  [0x00000c68]  Special opcode 6: advance Address by 0 to 0xb68 and Line by 1 to 142 (view 1)
  [0x00000c69]  Set column to 7
  [0x00000c6b]  Special opcode 22: advance Address by 2 to 0xb6a and Line by 3 to 145
  [0x00000c6c]  Set column to 11
  [0x00000c6e]  Set is_stmt to 0
  [0x00000c6f]  Copy (view 1)
  [0x00000c70]  Set column to 7
  [0x00000c72]  Set is_stmt to 1
  [0x00000c73]  Special opcode 48: advance Address by 6 to 0xb70 and Line by 1 to 146
  [0x00000c74]  Set column to 6
  [0x00000c76]  Special opcode 48: advance Address by 6 to 0xb76 and Line by 1 to 147
  [0x00000c77]  Set is_stmt to 0
  [0x00000c78]  Advance Line by -20 to 127
  [0x00000c7a]  Copy (view 1)
  [0x00000c7b]  Advance Line by 20 to 147
  [0x00000c7d]  Special opcode 19: advance Address by 2 to 0xb78 and Line by 0 to 147
  [0x00000c7e]  Set column to 7
  [0x00000c80]  Set is_stmt to 1
  [0x00000c81]  Special opcode 22: advance Address by 2 to 0xb7a and Line by 3 to 150
  [0x00000c82]  Set column to 12
  [0x00000c84]  Set is_stmt to 0
  [0x00000c85]  Copy (view 1)
  [0x00000c86]  Set column to 7
  [0x00000c88]  Set is_stmt to 1
  [0x00000c89]  Special opcode 62: advance Address by 8 to 0xb82 and Line by 1 to 151
  [0x00000c8a]  Set column to 6
  [0x00000c8c]  Special opcode 62: advance Address by 8 to 0xb8a and Line by 1 to 152
  [0x00000c8d]  Set is_stmt to 0
  [0x00000c8e]  Advance Line by -25 to 127
  [0x00000c90]  Copy (view 1)
  [0x00000c91]  Advance Line by 25 to 152
  [0x00000c93]  Special opcode 19: advance Address by 2 to 0xb8c and Line by 0 to 152
  [0x00000c94]  Set is_stmt to 1
  [0x00000c95]  Special opcode 22: advance Address by 2 to 0xb8e and Line by 3 to 155
  [0x00000c96]  Special opcode 48: advance Address by 6 to 0xb94 and Line by 1 to 156
  [0x00000c97]  Special opcode 48: advance Address by 6 to 0xb9a and Line by 1 to 157
  [0x00000c98]  Set is_stmt to 0
  [0x00000c99]  Advance Line by -30 to 127
  [0x00000c9b]  Copy (view 1)
  [0x00000c9c]  Advance Line by 30 to 157
  [0x00000c9e]  Special opcode 19: advance Address by 2 to 0xb9c and Line by 0 to 157
  [0x00000c9f]  Set column to 5
  [0x00000ca1]  Set is_stmt to 1
  [0x00000ca2]  Special opcode 24: advance Address by 2 to 0xb9e and Line by 5 to 162
  [0x00000ca3]  Set column to 4
  [0x00000ca5]  Special opcode 34: advance Address by 4 to 0xba2 and Line by 1 to 163
  [0x00000ca6]  Set column to 35
  [0x00000ca8]  Extended opcode 4: set Discriminator to 2
  [0x00000cac]  Advance Line by -39 to 124
  [0x00000cae]  Copy (view 1)
  [0x00000caf]  Set column to 25
  [0x00000cb1]  Extended opcode 4: set Discriminator to 1
  [0x00000cb5]  Special opcode 19: advance Address by 2 to 0xba4 and Line by 0 to 124
  [0x00000cb6]  Set column to 21
  [0x00000cb8]  Extended opcode 4: set Discriminator to 1
  [0x00000cbc]  Set is_stmt to 0
  [0x00000cbd]  Copy (view 1)
  [0x00000cbe]  Set column to 25
  [0x00000cc0]  Extended opcode 4: set Discriminator to 1
  [0x00000cc4]  Special opcode 19: advance Address by 2 to 0xba6 and Line by 0 to 124
  [0x00000cc5]  Set column to 3
  [0x00000cc7]  Set is_stmt to 1
  [0x00000cc8]  Special opcode 20: advance Address by 2 to 0xba8 and Line by 1 to 125
  [0x00000cc9]  Set column to 5
  [0x00000ccb]  Special opcode 35: advance Address by 4 to 0xbac and Line by 2 to 127
  [0x00000ccc]  Set column to 6
  [0x00000cce]  Set is_stmt to 0
  [0x00000ccf]  Copy (view 1)
  [0x00000cd0]  Set column to 5
  [0x00000cd2]  Set is_stmt to 1
  [0x00000cd3]  Special opcode 20: advance Address by 2 to 0xbae and Line by 1 to 128
  [0x00000cd4]  Set column to 18
  [0x00000cd6]  Set is_stmt to 0
  [0x00000cd7]  Copy (view 1)
  [0x00000cd8]  Advance PC by 98 to 0xc10
  [0x00000cda]  Special opcode 5: advance Address by 0 to 0xc10 and Line by 0 to 128
  [0x00000cdb]  Set column to 1
  [0x00000cdd]  Advance Line by 40 to 168
  [0x00000cdf]  Copy (view 1)
  [0x00000ce0]  Special opcode 47: advance Address by 6 to 0xc16 and Line by 0 to 168
  [0x00000ce1]  Advance PC by 4 to 0xc1a
  [0x00000ce3]  Extended opcode 1: End of Sequence


  Offset:                      0xce6
  Length:                      308
  DWARF Version:               3
  Prologue Length:             155
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0xd01):
  1	sys
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	src

 The File Name Table (offset 0xd4c):
  Entry	Dir	Time	Size	Name
  1	1	0	0	startup_gcc.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	timers.h

 Line Number Statements:
  [0x00000d8b]  Set column to 1
  [0x00000d8d]  Extended opcode 2: set Address to 0xc1c
  [0x00000d94]  Advance Line by 268 to 269
  [0x00000d97]  Copy
  [0x00000d98]  Set column to 5
  [0x00000d9a]  Special opcode 9: advance Address by 0 to 0xc1c and Line by 4 to 273 (view 1)
  [0x00000d9b]  Special opcode 7: advance Address by 0 to 0xc1c and Line by 2 to 275 (view 2)
  [0x00000d9c]  Set column to 10
  [0x00000d9e]  Special opcode 3: advance Address by 0 to 0xc1c and Line by -2 to 273 (view 3)
  [0x00000d9f]  Advance PC by 2 to 0xc1e
  [0x00000da1]  Extended opcode 1: End of Sequence

  [0x00000da4]  Set column to 1
  [0x00000da6]  Extended opcode 2: set Address to 0xc1e
  [0x00000dad]  Advance Line by 286 to 287
  [0x00000db0]  Copy
  [0x00000db1]  Set column to 5
  [0x00000db3]  Special opcode 9: advance Address by 0 to 0xc1e and Line by 4 to 291 (view 1)
  [0x00000db4]  Special opcode 7: advance Address by 0 to 0xc1e and Line by 2 to 293 (view 2)
  [0x00000db5]  Set column to 10
  [0x00000db7]  Special opcode 3: advance Address by 0 to 0xc1e and Line by -2 to 291 (view 3)
  [0x00000db8]  Advance PC by 2 to 0xc20
  [0x00000dba]  Extended opcode 1: End of Sequence

  [0x00000dbd]  Set column to 1
  [0x00000dbf]  Extended opcode 2: set Address to 0xc20
  [0x00000dc6]  Advance Line by 304 to 305
  [0x00000dc9]  Copy
  [0x00000dca]  Set column to 5
  [0x00000dcc]  Special opcode 9: advance Address by 0 to 0xc20 and Line by 4 to 309 (view 1)
  [0x00000dcd]  Special opcode 7: advance Address by 0 to 0xc20 and Line by 2 to 311 (view 2)
  [0x00000dce]  Set column to 10
  [0x00000dd0]  Special opcode 3: advance Address by 0 to 0xc20 and Line by -2 to 309 (view 3)
  [0x00000dd1]  Advance PC by 2 to 0xc22
  [0x00000dd3]  Extended opcode 1: End of Sequence

  [0x00000dd6]  Set column to 1
  [0x00000dd8]  Extended opcode 2: set Address to 0xc24
  [0x00000ddf]  Advance Line by 226 to 227
  [0x00000de2]  Copy
  [0x00000de3]  Set column to 5
  [0x00000de5]  Special opcode 20: advance Address by 2 to 0xc26 and Line by 1 to 228
  [0x00000de6]  Special opcode 10: advance Address by 0 to 0xc26 and Line by 5 to 233 (view 1)
  [0x00000de7]  Special opcode 6: advance Address by 0 to 0xc26 and Line by 1 to 234 (view 2)
  [0x00000de8]  Set column to 17
  [0x00000dea]  Set is_stmt to 0
  [0x00000deb]  Copy (view 3)
  [0x00000dec]  Set column to 12
  [0x00000dee]  Special opcode 18: advance Address by 2 to 0xc28 and Line by -1 to 233
  [0x00000def]  Set column to 5
  [0x00000df1]  Special opcode 20: advance Address by 2 to 0xc2a and Line by 1 to 234
  [0x00000df2]  Set column to 9
  [0x00000df4]  Set is_stmt to 1
  [0x00000df5]  Special opcode 21: advance Address by 2 to 0xc2c and Line by 2 to 236
  [0x00000df6]  Set column to 22
  [0x00000df8]  Set is_stmt to 0
  [0x00000df9]  Copy (view 1)
  [0x00000dfa]  Set column to 20
  [0x00000dfc]  Special opcode 33: advance Address by 4 to 0xc30 and Line by 0 to 236
  [0x00000dfd]  Set column to 35
  [0x00000dff]  Extended opcode 4: set Discriminator to 1
  [0x00000e03]  Set is_stmt to 1
  [0x00000e04]  Special opcode 31: advance Address by 4 to 0xc34 and Line by -2 to 234
  [0x00000e05]  Set column to 5
  [0x00000e07]  Special opcode 55: advance Address by 6 to 0xc3a and Line by 8 to 242
  [0x00000e08]  Advance Line by 14 to 256
  [0x00000e0a]  Special opcode 131: advance Address by 18 to 0xc4c and Line by 0 to 256
  [0x00000e0b]  Set column to 31
  [0x00000e0d]  Set is_stmt to 0
  [0x00000e0e]  Copy (view 1)
  [0x00000e0f]  Special opcode 33: advance Address by 4 to 0xc50 and Line by 0 to 256
  [0x00000e10]  Special opcode 33: advance Address by 4 to 0xc54 and Line by 0 to 256
  [0x00000e11]  Set column to 5
  [0x00000e13]  Set is_stmt to 1
  [0x00000e14]  Special opcode 34: advance Address by 4 to 0xc58 and Line by 1 to 257
  [0x00000e15]  Set column to 1
  [0x00000e17]  Set is_stmt to 0
  [0x00000e18]  Special opcode 34: advance Address by 4 to 0xc5c and Line by 1 to 258
  [0x00000e19]  Advance PC by 24 to 0xc74
  [0x00000e1b]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 68656164 65720053 63616e48 65616465 header.ScanHeade
  0x00000010 72466965 6c647300 57414954 494e475f rFields.WAITING_
  0x00000020 5343414e 5f484541 44455200 7a65726f SCAN_HEADER.zero
  0x00000030 5f706f69 6e745f62 75660073 72632f6c _point_buf.src/l
  0x00000040 69646172 2e630073 686f7274 20696e74 idar.c.short int
  0x00000050 0066726f 6d5f746f 70006465 6c746100 .from_top.delta.
  0x00000060 5f5f7569 6e743332 5f740070 72696e74 __uint32_t.print
  0x00000070 5f616e67 6c657300 6d6f6465 00726967 _angles.mode.rig
  0x00000080 68746964 78005354 4152545f 5041434b htidx.START_PACK
  0x00000090 4554005f 5f75696e 7431365f 74006e65 ET.__uint16_t.ne
  0x000000a0 61720073 74617274 5f636f64 65006c65 ar.start_code.le
  0x000000b0 66746964 78004441 54415f50 41434b45 ftidx.DATA_PACKE
  0x000000c0 5400616e 676c655f 6d617000 52454345 T.angle_map.RECE
  0x000000d0 4956494e 475f5343 414e5f48 45414445 IVING_SCAN_HEADE
  0x000000e0 52007465 6d70006c 6f6e6720 6c6f6e67 R.temp.long long
  0x000000f0 20696e74 0064656c 74615f70 65725f63  int.delta_per_c
  0x00000100 6f756e74 00637572 72656e74 5f736361 ount.current_sca
  0x00000110 6e006163 74697665 5f706f69 6e745f62 n.active_point_b
  0x00000120 75666665 72002f68 6f6d652f 6a6b6d75 uffer./home/jkmu
  0x00000130 6e736f6e 2f776f72 6b737061 63652f45 nson/workspace/E
  0x00000140 454e4734 36312f45 454e4734 36315f4c ENG461/EENG461_L
  0x00000150 49444152 00707269 6e746c66 00637572 IDAR.printlf.cur
  0x00000160 72656e74 5f627974 65005245 43454956 rent_byte.RECEIV
  0x00000170 494e475f 5343414e 5f444154 41007374 ING_SCAN_DATA.st
  0x00000180 6172745f 6c696461 725f7363 616e006c art_lidar_scan.l
  0x00000190 656e6774 6800756e 7369676e 65642063 ength.unsigned c
  0x000001a0 68617200 656e645f 616e676c 65006c6f har.end_angle.lo
  0x000001b0 6e67206c 6f6e6720 756e7369 676e6564 ng long unsigned
  0x000001c0 20696e74 00706f69 6e74735f 6275665f  int.points_buf_
  0x000001d0 3000706f 696e7473 5f627566 5f310043 0.points_buf_1.C
  0x000001e0 4f4d4d5f 57414954 494e4700 73746172 OMM_WAITING.star
  0x000001f0 74007368 6f727420 756e7369 676e6564 t.short unsigned
  0x00000200 20696e74 00736361 6e5f636f 756e7400  int.scan_count.
  0x00000210 4d4f4445 5f434f4e 54494e55 4f555300 MODE_CONTINUOUS.
  0x00000220 54595045 5f484541 4c54485f 53544154 TYPE_HEALTH_STAT
  0x00000230 55530063 6c656172 5f6c6964 61725f49 US.clear_lidar_I
  0x00000240 4f007479 70650073 616d706c 655f636f O.type.sample_co
  0x00000250 756e7400 5f426f6f 6c00474e 55204331 unt._Bool.GNU C1
  0x00000260 37203133 2e322e30 202d6d74 68756d62 7 13.2.0 -mthumb
  0x00000270 202d6d63 70753d63 6f727465 782d6d34  -mcpu=cortex-m4
  0x00000280 202d6d66 70753d66 7076342d 73702d64  -mfpu=fpv4-sp-d
  0x00000290 3136202d 6d666c6f 61742d61 62693d68 16 -mfloat-abi=h
  0x000002a0 61726420 2d6d6172 63683d61 726d7637 ard -march=armv7
  0x000002b0 652d6d2b 6670202d 67202d4f 67202d73 e-m+fp -g -Og -s
  0x000002c0 74643d63 3137202d 6666756e 6374696f td=c17 -ffunctio
  0x000002d0 6e2d7365 6374696f 6e73202d 666e6f2d n-sections -fno-
  0x000002e0 6275696c 74696e20 2d666461 74612d73 builtin -fdata-s
  0x000002f0 65637469 6f6e7300 4d4f4445 5f53494e ections.MODE_SIN
  0x00000300 474c4500 70726f63 6573735f 7061636b GLE.process_pack
  0x00000310 65747300 73657475 705f6c69 6461725f ets.setup_lidar_
  0x00000320 636f6d6d 73006279 74657300 63757272 comms.bytes.curr
  0x00000330 656e745f 6d657373 61676500 66726f6d ent_message.from
  0x00000340 5f300050 61636b65 74486561 64657200 _0.PacketHeader.
  0x00000350 706f696e 74735f73 6d6f6f74 68005f5f points_smooth.__
  0x00000360 696e7433 325f7400 73746f70 5f6c6964 int32_t.stop_lid
  0x00000370 61725f73 63616e00 5363616e 48656164 ar_scan.ScanHead
  0x00000380 65720063 6865636b 73756d00 54595045 er.checksum.TYPE
  0x00000390 5f534341 4e00706f 73697469 6f6e0073 _SCAN.position.s
  0x000003a0 74617274 5f616e67 6c650070 726f6365 tart_angle.proce
  0x000003b0 73735f70 6f696e74 5f627566 66005245 ss_point_buff.RE
  0x000003c0 43454956 494e475f 48454144 45520063 CEIVING_HEADER.c
  0x000003d0 6f6d6d5f 73746174 65005245 43454956 omm_state.RECEIV
  0x000003e0 494e475f 4845414c 54485f52 45504f52 ING_HEALTH_REPOR
  0x000003f0 54007265 63656976 696e675f 706f696e T.receiving_poin
  0x00000400 745f6275 66666572 005f5f75 696e7438 t_buffer.__uint8
  0x00000410 5f740073 65747570 5f756172 745f7072 _t.setup_uart_pr
  0x00000420 696e7465 72006d61 696e0073 72632f6d inter.main.src/m
  0x00000430 61696e2e 63007365 636f6e64 5f636f75 ain.c.second_cou
  0x00000440 6e746572 00676574 5f757074 696d655f nter.get_uptime_
  0x00000450 6379636c 65730063 79636c65 735f6e6f cycles.cycles_no
  0x00000460 77007372 632f7469 6d657273 2e630075 w.src/timers.c.u
  0x00000470 7074696d 655f7365 636f6e64 73007469 ptime_seconds.ti
  0x00000480 6d657231 5f6f7665 72666c6f 775f636f mer1_overflow_co
  0x00000490 756e7400 74696d65 4b656570 65724953 unt.timeKeeperIS
  0x000004a0 52006f76 6572666c 6f775f63 6f756e74 R.overflow_count
  0x000004b0 5f6e6f77 005f5f75 696e7436 345f7400 _now.__uint64_t.
  0x000004c0 736f6e69 635f7365 6e736f72 5f616374 sonic_sensor_act
  0x000004d0 696f6e5f 64697600 636f6e66 69677572 ion_div.configur
  0x000004e0 65446562 6f756e63 6554696d 65720069 eDebounceTimer.i
  0x000004f0 6e746567 65725061 72740070 72696e74 ntegerPart.print
  0x00000500 5f737472 696e6700 63686172 735f7365 _string.chars_se
  0x00000510 6e745f72 6563656e 746c7900 64656369 nt_recently.deci
  0x00000520 6d616c50 61727400 5f5f676e 75635f76 malPart.__gnuc_v
  0x00000530 615f6c69 7374006e 756d7500 70757463 a_list.numu.putc
  0x00000540 68617200 7072696e 745f666c 6f617400 har.print_float.
  0x00000550 7372632f 75617274 5f707269 6e742e63 src/uart_print.c
  0x00000560 00666f72 6d617400 7072696e 745f756e .format.print_un
  0x00000570 7369676e 65645f64 6563696d 616c0070 signed_decimal.p
  0x00000580 72696e74 5f646563 696d616c 005f5f61 rint_decimal.__a
  0x00000590 7000706c 61636573 006e756d 62657200 p.places.number.
  0x000005a0 6e756d66 005f5f76 615f6c69 73740061 numf.__va_list.a
  0x000005b0 72677300 5f646174 61007075 6c537461 rgs._data.pulSta
  0x000005c0 636b0049 6e744465 6661756c 7448616e ck.IntDefaultHan
  0x000005d0 646c6572 0070756c 44657374 005f6574 dler.pulDest._et
  0x000005e0 65787400 5f656461 74610073 79732f73 ext._edata.sys/s
  0x000005f0 74617274 75705f67 63632e63 00466175 tartup_gcc.c.Fau
  0x00000600 6c744953 5200675f 70666e56 6563746f ltISR.g_pfnVecto
  0x00000610 7273006c 6f6e6720 646f7562 6c650070 rs.long double.p
  0x00000620 756c5372 63005265 73657449 5352004e ulSrc.ResetISR.N
  0x00000630 6d695352 00                         miSR.

Contents of the .debug_frame section:


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 0000000c 00000000 FDE cie=00000000 pc=0000026c..00000288

00000020 0000001c 00000000 FDE cie=00000000 pc=00000288..00000330
  DW_CFA_advance_loc: 10 to 00000292
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc1: 152 to 0000032a
  DW_CFA_def_cfa_offset: 0
  DW_CFA_restore: r4
  DW_CFA_restore: r14
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000040 00000018 00000000 FDE cie=00000000 pc=00000330..0000042c
  DW_CFA_advance_loc: 2 to 00000332
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000005c 00000018 00000000 FDE cie=00000000 pc=0000042c..00000450
  DW_CFA_advance_loc: 2 to 0000042e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000078 00000018 00000000 FDE cie=00000000 pc=00000450..00000474
  DW_CFA_advance_loc: 2 to 00000452
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000094 00000014 00000000 FDE cie=00000000 pc=00000474..0000049c
  DW_CFA_advance_loc: 2 to 00000476
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000ac 0000000c 00000000 FDE cie=00000000 pc=0000049c..000004d4

000000bc 00000014 00000000 FDE cie=00000000 pc=000004d4..00000508
  DW_CFA_advance_loc: 2 to 000004d6
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000d4 00000018 00000000 FDE cie=00000000 pc=00000508..000007a8
  DW_CFA_advance_loc: 2 to 0000050a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000f0 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000100 00000014 000000f0 FDE cie=000000f0 pc=000007a8..00000878
  DW_CFA_advance_loc: 2 to 000007aa
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000118 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000128 00000018 00000118 FDE cie=00000118 pc=00000000..0000007c
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000144 00000018 00000118 FDE cie=00000118 pc=00000878..000008dc
  DW_CFA_advance_loc: 2 to 0000087a
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r4 at cfa-4
  DW_CFA_advance_loc: 62 to 000008b8
  DW_CFA_remember_state
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 0
  DW_CFA_advance_loc: 2 to 000008ba
  DW_CFA_restore_state

00000160 00000018 00000118 FDE cie=00000118 pc=00000000..00000058
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000017c 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

0000018c 00000018 0000017c FDE cie=0000017c pc=000008dc..0000094c
  DW_CFA_advance_loc: 2 to 000008de
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001a8 00000014 0000017c FDE cie=0000017c pc=0000094c..00000994
  DW_CFA_advance_loc: 2 to 0000094e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001c0 00000018 0000017c FDE cie=0000017c pc=00000994..000009aa
  DW_CFA_advance_loc: 2 to 00000996
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001dc 0000001c 0000017c FDE cie=0000017c pc=000009ac..000009f8
  DW_CFA_advance_loc: 2 to 000009ae
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 000009b0
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 66 to 000009f2
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000001fc 00000014 0000017c FDE cie=0000017c pc=000009f8..00000a10
  DW_CFA_advance_loc: 2 to 000009fa
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000214 00000030 0000017c FDE cie=0000017c pc=00000a10..00000b30
  DW_CFA_advance_loc: 2 to 00000a12
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 00000a16
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset_extended: r80 at cfa-16
  DW_CFA_offset_extended: r81 at cfa-12
  DW_CFA_advance_loc: 2 to 00000a18
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc1: 138 to 00000aa2
  DW_CFA_remember_state
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 4 to 00000aa6
  DW_CFA_restore_extended: r80
  DW_CFA_restore_extended: r81
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000aa8
  DW_CFA_restore_state
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000248 00000038 0000017c FDE cie=0000017c pc=00000b30..00000c1a
  DW_CFA_advance_loc: 2 to 00000b32
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r0 at cfa-16
  DW_CFA_offset: r1 at cfa-12
  DW_CFA_offset: r2 at cfa-8
  DW_CFA_offset: r3 at cfa-4
  DW_CFA_advance_loc: 2 to 00000b34
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r4 at cfa-32
  DW_CFA_offset: r5 at cfa-28
  DW_CFA_offset: r6 at cfa-24
  DW_CFA_offset: r14 at cfa-20
  DW_CFA_advance_loc: 2 to 00000b36
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc1: 220 to 00000c12
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 4 to 00000c16
  DW_CFA_restore: r14
  DW_CFA_restore: r6
  DW_CFA_restore: r5
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000c18
  DW_CFA_restore: r3
  DW_CFA_restore: r2
  DW_CFA_restore: r1
  DW_CFA_restore: r0
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000284 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000294 0000000c 00000284 FDE cie=00000284 pc=00000c1c..00000c1e

000002a4 0000000c 00000284 FDE cie=00000284 pc=00000c1e..00000c20

000002b4 0000000c 00000284 FDE cie=00000284 pc=00000c20..00000c22

000002c4 00000014 00000284 FDE cie=00000284 pc=00000c24..00000c6c
  DW_CFA_advance_loc: 2 to 00000c26
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop


Disassembly of section .text:

00000000 <g_pfnVectors>:
volatile int32_t uptime_seconds;
volatile uint64_t timer1_overflow_count;

#define TIMER_ISR_IS_PENDING (TIMER1_MIS_R & TIMER_ICR_TATOCINT)

void configureDebounceTimer(void) {
   0:	20 12 00 20 25 0c 00 00 1d 0c 00 00 1f 0c 00 00      .. %...........

	SYSCTL_RCGCTIMER_R |= SYSCTL_RCGCTIMER_R1; //Enable Run Mode Clock Gating Control for Timer 0

	while (!(SYSCTL_PRTIMER_R & SYSCTL_RCGCTIMER_R1)) {}
  10:	21 0c 00 00 21 0c 00 00 21 0c 00 00 00 00 00 00     !...!...!.......
	...

	TIMER1_CTL_R &= ~TIMER_CTL_TAEN; //Disable Timer
	TIMER1_CTL_R |= TIMER_CTL_TASTALL; //Stall for debug
  2c:	21 0c 00 00 21 0c 00 00 00 00 00 00 21 0c 00 00     !...!.......!...
	TIMER1_CFG_R = TIMER_CFG_32_BIT_TIMER;
	TIMER1_TAMR_R |= TIMER_TAMR_TAMR_PERIOD; //Set Timer to count down periodically
	TIMER1_TAILR_R = TIMER_CYCLES-1;
  3c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
	TIMER1_TAPR_R = 0;
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
  4c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt as Timeout
	NVIC_EN0_R = 1 << (INT_TIMER1A - 16);
  5c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
	TIMER1_CTL_R |= TIMER_CTL_TAEN; //Enable Timer
  6c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  7c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  8c:	21 0c 00 00 21 0c 00 00 79 08 00 00 21 0c 00 00     !...!...y...!...
  9c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  ac:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  bc:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  cc:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  dc:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  ec:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
  fc:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 10c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 11c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 12c:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 13c:	21 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     !...............
 14c:	00 00 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     ....!...!...!...
 15c:	21 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     !...............
	...
 1b0:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 1c0:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 1d0:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 1e0:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 1f0:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 200:	21 0c 00 00 21 0c 00 00 21 0c 00 00 00 00 00 00     !...!...!.......
 210:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 220:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 230:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 240:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 250:	21 0c 00 00 21 0c 00 00 21 0c 00 00 21 0c 00 00     !...!...!...!...
 260:	21 0c 00 00 21 0c 00 00 21 0c 00 00                 !...!...!...

0000026c <zero_point_buf>:
uint32_t points_smooth[POINTS_BUF_SIZE];
uint32_t *active_point_buffer;
uint32_t *receiving_point_buffer;

void zero_point_buf(void) {
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 26c:	2300      	movs	r3, #0
 26e:	e005      	b.n	27c <zero_point_buf+0x10>
		receiving_point_buffer[i] = 0;
 270:	4a04      	ldr	r2, [pc, #16]	@ (284 <zero_point_buf+0x18>)
 272:	6812      	ldr	r2, [r2, #0]
 274:	2100      	movs	r1, #0
 276:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 27a:	3301      	adds	r3, #1
 27c:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 280:	dbf6      	blt.n	270 <zero_point_buf+0x4>
	}
}
 282:	4770      	bx	lr
 284:	20000020 	.word	0x20000020

00000288 <process_point_buff>:

//Fill in any missing points with the average of the closest points to the left and the right.
//Unfortunately the lidar has significant "holes" in it's data.
void process_point_buff(){
	
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 288:	2000      	movs	r0, #0
 28a:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 28e:	da4c      	bge.n	32a <process_point_buff+0xa2>
void process_point_buff(){
 290:	b510      	push	{r4, lr}
 292:	e039      	b.n	308 <process_point_buff+0x80>
		
		if(receiving_point_buffer[i] != 0) continue;
		//Find closest point to the "left" that has a value
		int leftidx = (i == 0) ? (POINTS_BUF_SIZE-1) : (i-1);
 294:	f240 1367 	movw	r3, #359	@ 0x167
 298:	e041      	b.n	31e <process_point_buff+0x96>
		bool from_top = (leftidx > 0);
		while ((receiving_point_buffer[leftidx] == 0)) {
			leftidx--;
			if (leftidx < 0) {
				if(from_top){
					receiving_point_buffer[i] = 1; // No data was collected from lidar???
 29a:	2101      	movs	r1, #1
 29c:	f842 100e 	str.w	r1, [r2, lr]
		while ((receiving_point_buffer[leftidx] == 0)) {
 2a0:	4a22      	ldr	r2, [pc, #136]	@ (32c <process_point_buff+0xa4>)
 2a2:	6812      	ldr	r2, [r2, #0]
 2a4:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 2a8:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 2ac:	b939      	cbnz	r1, 2be <process_point_buff+0x36>
			if (leftidx < 0) {
 2ae:	3b01      	subs	r3, #1
 2b0:	d5f6      	bpl.n	2a0 <process_point_buff+0x18>
				if(from_top){
 2b2:	2c00      	cmp	r4, #0
 2b4:	d1f1      	bne.n	29a <process_point_buff+0x12>
					continue;
				} else {
					leftidx = (POINTS_BUF_SIZE-1);
					from_top = true;
 2b6:	2401      	movs	r4, #1
					leftidx = (POINTS_BUF_SIZE-1);
 2b8:	f240 1367 	movw	r3, #359	@ 0x167
 2bc:	e7f0      	b.n	2a0 <process_point_buff+0x18>
				}
			}
		}
		
		//Find closest point to the right that has a value
		int rightidx = (i+1 < POINTS_BUF_SIZE) ? (i+1) : 0;
 2be:	f5b0 7fb3 	cmp.w	r0, #358	@ 0x166
 2c2:	dc04      	bgt.n	2ce <process_point_buff+0x46>
 2c4:	1c43      	adds	r3, r0, #1
		bool from_0 = !rightidx;
 2c6:	fab3 f483 	clz	r4, r3
 2ca:	0964      	lsrs	r4, r4, #5
		while(receiving_point_buffer[rightidx] == 0) {
 2cc:	e004      	b.n	2d8 <process_point_buff+0x50>
		int rightidx = (i+1 < POINTS_BUF_SIZE) ? (i+1) : 0;
 2ce:	2300      	movs	r3, #0
 2d0:	e7f9      	b.n	2c6 <process_point_buff+0x3e>
			if(++rightidx >= POINTS_BUF_SIZE){
				if(from_0) {
					receiving_point_buffer[i] = 1; // No data was collected from lidar?
 2d2:	2201      	movs	r2, #1
 2d4:	f841 200e 	str.w	r2, [r1, lr]
		while(receiving_point_buffer[rightidx] == 0) {
 2d8:	4a14      	ldr	r2, [pc, #80]	@ (32c <process_point_buff+0xa4>)
 2da:	6811      	ldr	r1, [r2, #0]
 2dc:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 2e0:	b942      	cbnz	r2, 2f4 <process_point_buff+0x6c>
			if(++rightidx >= POINTS_BUF_SIZE){
 2e2:	3301      	adds	r3, #1
 2e4:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 2e8:	dbf6      	blt.n	2d8 <process_point_buff+0x50>
				if(from_0) {
 2ea:	2c00      	cmp	r4, #0
 2ec:	d1f1      	bne.n	2d2 <process_point_buff+0x4a>
					continue;
				} else {
					rightidx = 0;
					from_0 = true;
 2ee:	2401      	movs	r4, #1
					rightidx = 0;
 2f0:	2300      	movs	r3, #0
 2f2:	e7f1      	b.n	2d8 <process_point_buff+0x50>
				}
			}
		}
		receiving_point_buffer[i] = (receiving_point_buffer[leftidx] + receiving_point_buffer[rightidx])/2;
 2f4:	f851 300c 	ldr.w	r3, [r1, ip]
 2f8:	441a      	add	r2, r3
 2fa:	0852      	lsrs	r2, r2, #1
 2fc:	f841 200e 	str.w	r2, [r1, lr]
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 300:	3001      	adds	r0, #1
 302:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 306:	da0f      	bge.n	328 <process_point_buff+0xa0>
		if(receiving_point_buffer[i] != 0) continue;
 308:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 30c:	4b07      	ldr	r3, [pc, #28]	@ (32c <process_point_buff+0xa4>)
 30e:	681b      	ldr	r3, [r3, #0]
 310:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 314:	2b00      	cmp	r3, #0
 316:	d1f3      	bne.n	300 <process_point_buff+0x78>
		int leftidx = (i == 0) ? (POINTS_BUF_SIZE-1) : (i-1);
 318:	2800      	cmp	r0, #0
 31a:	d0bb      	beq.n	294 <process_point_buff+0xc>
 31c:	1e43      	subs	r3, r0, #1
		bool from_top = (leftidx > 0);
 31e:	2b00      	cmp	r3, #0
 320:	bfd4      	ite	le
 322:	2400      	movle	r4, #0
 324:	2401      	movgt	r4, #1
		while ((receiving_point_buffer[leftidx] == 0)) {
 326:	e7bb      	b.n	2a0 <process_point_buff+0x18>
			uint32_t near = 0;
			for(int k = 1; k < 6; k++) near += receiving_point_buffer[(i+k)%360] + receiving_point_buffer[(i+(360-k)) % 360];
			receiving_point_buffer[i] = (receiving_point_buffer[i] + near)/11;
		}
	}
}
 328:	bd10      	pop	{r4, pc}
 32a:	4770      	bx	lr
 32c:	20000020 	.word	0x20000020

00000330 <setup_lidar_comms>:

void setup_lidar_comms(void){
 330:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
 332:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 336:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 338:	699b      	ldr	r3, [r3, #24]
 33a:	4832      	ldr	r0, [pc, #200]	@ (404 <setup_lidar_comms+0xd4>)
 33c:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART2);
 33e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 340:	699b      	ldr	r3, [r3, #24]
 342:	4831      	ldr	r0, [pc, #196]	@ (408 <setup_lidar_comms+0xd8>)
 344:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART2)){};
 346:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 34a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 34c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 350:	482d      	ldr	r0, [pc, #180]	@ (408 <setup_lidar_comms+0xd8>)
 352:	4798      	blx	r3
 354:	2800      	cmp	r0, #0
 356:	d0f6      	beq.n	346 <setup_lidar_comms+0x16>
	GPIO_PORTD_LOCK_R = 0x4C4F434B;
 358:	4c2c      	ldr	r4, [pc, #176]	@ (40c <setup_lidar_comms+0xdc>)
 35a:	4b2d      	ldr	r3, [pc, #180]	@ (410 <setup_lidar_comms+0xe0>)
 35c:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
	GPIO_PORTD_CR_R |= 0xFF;
 360:	f8d4 3524 	ldr.w	r3, [r4, #1316]	@ 0x524
 364:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 368:	f8c4 3524 	str.w	r3, [r4, #1316]	@ 0x524
	GPIO_PORTD_DEN_R |= 0xFF;
 36c:	f8d4 351c 	ldr.w	r3, [r4, #1308]	@ 0x51c
 370:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 374:	f8c4 351c 	str.w	r3, [r4, #1308]	@ 0x51c
	GPIO_PORTD_PCTL_R = (GPIO_PORTD_PCTL_R & ~(GPIO_PCTL_PD7_M | GPIO_PCTL_PD6_M)) | GPIO_PCTL_PD7_U2TX | GPIO_PCTL_PD6_U2RX;
 378:	f8d4 352c 	ldr.w	r3, [r4, #1324]	@ 0x52c
 37c:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 380:	f043 5388 	orr.w	r3, r3, #285212672	@ 0x11000000
 384:	f8c4 352c 	str.w	r3, [r4, #1324]	@ 0x52c
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, LID_PINS, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 388:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 38c:	6a2b      	ldr	r3, [r5, #32]
 38e:	695e      	ldr	r6, [r3, #20]
 390:	2308      	movs	r3, #8
 392:	2266      	movs	r2, #102	@ 0x66
 394:	21c0      	movs	r1, #192	@ 0xc0
 396:	4620      	mov	r0, r4
 398:	47b0      	blx	r6
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, RX_PIN, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD_WPU);
 39a:	6a2b      	ldr	r3, [r5, #32]
 39c:	695e      	ldr	r6, [r3, #20]
 39e:	230a      	movs	r3, #10
 3a0:	2266      	movs	r2, #102	@ 0x66
 3a2:	2140      	movs	r1, #64	@ 0x40
 3a4:	4620      	mov	r0, r4
 3a6:	47b0      	blx	r6
	ROM_GPIODirModeSet(GPIO_PORTD_BASE, LID_PINS, GPIO_DIR_MODE_HW);
 3a8:	6a2b      	ldr	r3, [r5, #32]
 3aa:	685b      	ldr	r3, [r3, #4]
 3ac:	2202      	movs	r2, #2
 3ae:	21c0      	movs	r1, #192	@ 0xc0
 3b0:	4620      	mov	r0, r4
 3b2:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(LID_BASE, ROM_SysCtlClockGet(), LID_BAUD, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));
 3b4:	696b      	ldr	r3, [r5, #20]
 3b6:	695c      	ldr	r4, [r3, #20]
 3b8:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 3ba:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 3bc:	4798      	blx	r3
 3be:	4601      	mov	r1, r0
 3c0:	2360      	movs	r3, #96	@ 0x60
 3c2:	f44f 3261 	mov.w	r2, #230400	@ 0x38400
 3c6:	4813      	ldr	r0, [pc, #76]	@ (414 <setup_lidar_comms+0xe4>)
 3c8:	47a0      	blx	r4
	
	for(int i = 0; i < 360; i++) {
 3ca:	2300      	movs	r3, #0
 3cc:	e005      	b.n	3da <setup_lidar_comms+0xaa>
		points_smooth[i] = 1000;
 3ce:	4a12      	ldr	r2, [pc, #72]	@ (418 <setup_lidar_comms+0xe8>)
 3d0:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 3d4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i < 360; i++) {
 3d8:	3301      	adds	r3, #1
 3da:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 3de:	dbf6      	blt.n	3ce <setup_lidar_comms+0x9e>
	}
	receiving_point_buffer = points_buf_0;
 3e0:	4c0e      	ldr	r4, [pc, #56]	@ (41c <setup_lidar_comms+0xec>)
 3e2:	4d0f      	ldr	r5, [pc, #60]	@ (420 <setup_lidar_comms+0xf0>)
 3e4:	6025      	str	r5, [r4, #0]
	zero_point_buf();
 3e6:	f7ff ff41 	bl	26c <zero_point_buf>
	receiving_point_buffer[0] = 1;
 3ea:	6823      	ldr	r3, [r4, #0]
 3ec:	2201      	movs	r2, #1
 3ee:	601a      	str	r2, [r3, #0]
	process_point_buff();
 3f0:	f7ff ff4a 	bl	288 <process_point_buff>
	active_point_buffer = points_buf_0;
 3f4:	4b0b      	ldr	r3, [pc, #44]	@ (424 <setup_lidar_comms+0xf4>)
 3f6:	601d      	str	r5, [r3, #0]
	receiving_point_buffer = points_buf_1;
 3f8:	4b0b      	ldr	r3, [pc, #44]	@ (428 <setup_lidar_comms+0xf8>)
 3fa:	6023      	str	r3, [r4, #0]
	zero_point_buf();
 3fc:	f7ff ff36 	bl	26c <zero_point_buf>
	
	
}
 400:	bd70      	pop	{r4, r5, r6, pc}
 402:	bf00      	nop
 404:	f0000803 	.word	0xf0000803
 408:	f0001802 	.word	0xf0001802
 40c:	40007000 	.word	0x40007000
 410:	4c4f434b 	.word	0x4c4f434b
 414:	4000e000 	.word	0x4000e000
 418:	20000028 	.word	0x20000028
 41c:	20000020 	.word	0x20000020
 420:	20000b68 	.word	0x20000b68
 424:	20000024 	.word	0x20000024
 428:	200005c8 	.word	0x200005c8

0000042c <start_lidar_scan>:

void start_lidar_scan(void) {
 42c:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, MAGIC);
 42e:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 432:	696b      	ldr	r3, [r5, #20]
 434:	681b      	ldr	r3, [r3, #0]
 436:	4c05      	ldr	r4, [pc, #20]	@ (44c <start_lidar_scan+0x20>)
 438:	21a5      	movs	r1, #165	@ 0xa5
 43a:	4620      	mov	r0, r4
 43c:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, START);
 43e:	696b      	ldr	r3, [r5, #20]
 440:	681b      	ldr	r3, [r3, #0]
 442:	2160      	movs	r1, #96	@ 0x60
 444:	4620      	mov	r0, r4
 446:	4798      	blx	r3
}
 448:	bd38      	pop	{r3, r4, r5, pc}
 44a:	bf00      	nop
 44c:	4000e000 	.word	0x4000e000

00000450 <stop_lidar_scan>:

void stop_lidar_scan(void) {
 450:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, MAGIC);
 452:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 456:	696b      	ldr	r3, [r5, #20]
 458:	681b      	ldr	r3, [r3, #0]
 45a:	4c05      	ldr	r4, [pc, #20]	@ (470 <stop_lidar_scan+0x20>)
 45c:	21a5      	movs	r1, #165	@ 0xa5
 45e:	4620      	mov	r0, r4
 460:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, STOP);
 462:	696b      	ldr	r3, [r5, #20]
 464:	681b      	ldr	r3, [r3, #0]
 466:	2165      	movs	r1, #101	@ 0x65
 468:	4620      	mov	r0, r4
 46a:	4798      	blx	r3
}
 46c:	bd38      	pop	{r3, r4, r5, pc}
 46e:	bf00      	nop
 470:	4000e000 	.word	0x4000e000

00000474 <clear_lidar_IO>:

void clear_lidar_IO(void){
 474:	b508      	push	{r3, lr}
	while(ROM_UARTCharsAvail(LID_BASE)){
 476:	e005      	b.n	484 <clear_lidar_IO+0x10>
		ROM_UARTCharGet(LID_BASE);
 478:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 47c:	695b      	ldr	r3, [r3, #20]
 47e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 480:	4805      	ldr	r0, [pc, #20]	@ (498 <clear_lidar_IO+0x24>)
 482:	4798      	blx	r3
	while(ROM_UARTCharsAvail(LID_BASE)){
 484:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 488:	695b      	ldr	r3, [r3, #20]
 48a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 48c:	4802      	ldr	r0, [pc, #8]	@ (498 <clear_lidar_IO+0x24>)
 48e:	4798      	blx	r3
 490:	2800      	cmp	r0, #0
 492:	d1f1      	bne.n	478 <clear_lidar_IO+0x4>
	}
}
 494:	bd08      	pop	{r3, pc}
 496:	bf00      	nop
 498:	4000e000 	.word	0x4000e000

0000049c <angle_map>:

int angle_map(int32_t start, int32_t end, int count, int position){
	const int32_t delta = (end > start) ? (end - start) : (start - end);
 49c:	4281      	cmp	r1, r0
 49e:	dd13      	ble.n	4c8 <angle_map+0x2c>
 4a0:	1a09      	subs	r1, r1, r0
	const int32_t delta_per_count = delta/count;
 4a2:	fb91 f2f2 	sdiv	r2, r1, r2
	return (((position*delta_per_count) + start) / 64) % 360;
 4a6:	fb03 0302 	mla	r3, r3, r2, r0
 4aa:	2b00      	cmp	r3, #0
 4ac:	db0e      	blt.n	4cc <angle_map+0x30>
 4ae:	1199      	asrs	r1, r3, #6
 4b0:	4a07      	ldr	r2, [pc, #28]	@ (4d0 <angle_map+0x34>)
 4b2:	fb82 0201 	smull	r0, r2, r2, r1
 4b6:	440a      	add	r2, r1
 4b8:	17db      	asrs	r3, r3, #31
 4ba:	ebc3 2322 	rsb	r3, r3, r2, asr #8
}
 4be:	f44f 70b4 	mov.w	r0, #360	@ 0x168
 4c2:	fb00 1013 	mls	r0, r0, r3, r1
 4c6:	4770      	bx	lr
	const int32_t delta = (end > start) ? (end - start) : (start - end);
 4c8:	1a41      	subs	r1, r0, r1
 4ca:	e7ea      	b.n	4a2 <angle_map+0x6>
	return (((position*delta_per_count) + start) / 64) % 360;
 4cc:	333f      	adds	r3, #63	@ 0x3f
 4ce:	e7ee      	b.n	4ae <angle_map+0x12>
 4d0:	b60b60b7 	.word	0xb60b60b7

000004d4 <print_angles>:

void print_angles(void) {
 4d4:	b510      	push	{r4, lr}

	printlf("\033c");
 4d6:	4809      	ldr	r0, [pc, #36]	@ (4fc <print_angles+0x28>)
 4d8:	f000 fb2a 	bl	b30 <printlf>
	for(int i = 0; i < 360; i+=3) {
 4dc:	2400      	movs	r4, #0
 4de:	e008      	b.n	4f2 <print_angles+0x1e>
		printlf("%d:%d\n", i, active_point_buffer[i]);
 4e0:	4b07      	ldr	r3, [pc, #28]	@ (500 <print_angles+0x2c>)
 4e2:	681b      	ldr	r3, [r3, #0]
 4e4:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
 4e8:	4621      	mov	r1, r4
 4ea:	4806      	ldr	r0, [pc, #24]	@ (504 <print_angles+0x30>)
 4ec:	f000 fb20 	bl	b30 <printlf>
	for(int i = 0; i < 360; i+=3) {
 4f0:	3403      	adds	r4, #3
 4f2:	f5b4 7fb4 	cmp.w	r4, #360	@ 0x168
 4f6:	dbf3      	blt.n	4e0 <print_angles+0xc>
	}
}
 4f8:	bd10      	pop	{r4, pc}
 4fa:	bf00      	nop
 4fc:	00000c74 	.word	0x00000c74
 500:	20000024 	.word	0x20000024
 504:	00000c78 	.word	0x00000c78

00000508 <process_packets>:

void process_packets(void) {
 508:	b538      	push	{r3, r4, r5, lr}
	
	//while(ROM_UARTCharsAvail(LID_BASE)) {
	//	ROM_UARTCharPut(UART0_BASE,ROM_UARTCharGet(LID_BASE));
	//} return;
	
	while(ROM_UARTCharsAvail(LID_BASE)) {
 50a:	e109      	b.n	720 <process_packets+0x218>
		switch(comm_state) {
			case COMM_WAITING:{
				char tmp = ROM_UARTCharGet(LID_BASE);
 50c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 510:	695b      	ldr	r3, [r3, #20]
 512:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 514:	4894      	ldr	r0, [pc, #592]	@ (768 <process_packets+0x260>)
 516:	4798      	blx	r3
 518:	b2c0      	uxtb	r0, r0
				if(tmp != 0xA5 && tmp != 0xAA ) break; // Really we're looking for 0xA5, but is 0xAA is seen, this will lead to a reset.
 51a:	28a5      	cmp	r0, #165	@ 0xa5
 51c:	d002      	beq.n	524 <process_packets+0x1c>
 51e:	28aa      	cmp	r0, #170	@ 0xaa
 520:	f040 80fe 	bne.w	720 <process_packets+0x218>
				comm_state = RECEIVING_HEADER;
 524:	2301      	movs	r3, #1
 526:	4a91      	ldr	r2, [pc, #580]	@ (76c <process_packets+0x264>)
 528:	7013      	strb	r3, [r2, #0]
				current_byte = 1;
 52a:	4a91      	ldr	r2, [pc, #580]	@ (770 <process_packets+0x268>)
 52c:	8013      	strh	r3, [r2, #0]
				current_message.bytes[0] = 0xA5;
 52e:	4b91      	ldr	r3, [pc, #580]	@ (774 <process_packets+0x26c>)
 530:	22a5      	movs	r2, #165	@ 0xa5
 532:	701a      	strb	r2, [r3, #0]
				printlf("Header Started\n");
 534:	4890      	ldr	r0, [pc, #576]	@ (778 <process_packets+0x270>)
 536:	f000 fafb 	bl	b30 <printlf>
			} break;
 53a:	e0f1      	b.n	720 <process_packets+0x218>
			
			case RECEIVING_HEADER: {
				current_message.bytes[current_byte++] = ROM_UARTCharGet(LID_BASE);
 53c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 540:	695b      	ldr	r3, [r3, #20]
 542:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 544:	4888      	ldr	r0, [pc, #544]	@ (768 <process_packets+0x260>)
 546:	4798      	blx	r3
 548:	4989      	ldr	r1, [pc, #548]	@ (770 <process_packets+0x268>)
 54a:	880a      	ldrh	r2, [r1, #0]
 54c:	1c53      	adds	r3, r2, #1
 54e:	b29b      	uxth	r3, r3
 550:	800b      	strh	r3, [r1, #0]
 552:	4988      	ldr	r1, [pc, #544]	@ (774 <process_packets+0x26c>)
 554:	5488      	strb	r0, [r1, r2]
				//printlf(" %d : %d\n", current_message.bytes[current_byte-1], current_byte-1);
				//If we're not done receiving the header, continue
				if(current_byte < sizeof(current_message)) break; 
 556:	2b06      	cmp	r3, #6
 558:	f240 80e2 	bls.w	720 <process_packets+0x218>
				
				//process the header
				if(current_message.header.start_code != HEADER_MAGIC) {
 55c:	8809      	ldrh	r1, [r1, #0]
 55e:	f645 23a5 	movw	r3, #23205	@ 0x5aa5
 562:	4299      	cmp	r1, r3
 564:	d016      	beq.n	594 <process_packets+0x8c>
					printlf("Unexpected Header %d, resetting\n", current_message.header.start_code);
 566:	4885      	ldr	r0, [pc, #532]	@ (77c <process_packets+0x274>)
 568:	f000 fae2 	bl	b30 <printlf>
					stop_lidar_scan();
 56c:	f7ff ff70 	bl	450 <stop_lidar_scan>
					clear_lidar_IO();
 570:	f7ff ff80 	bl	474 <clear_lidar_IO>
					ROM_SysCtlDelay(20000);
 574:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 578:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 57a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 57e:	f644 6020 	movw	r0, #20000	@ 0x4e20
 582:	4798      	blx	r3
					clear_lidar_IO();
 584:	f7ff ff76 	bl	474 <clear_lidar_IO>
					start_lidar_scan();
 588:	f7ff ff50 	bl	42c <start_lidar_scan>
					comm_state = COMM_WAITING;
 58c:	4b77      	ldr	r3, [pc, #476]	@ (76c <process_packets+0x264>)
 58e:	2200      	movs	r2, #0
 590:	701a      	strb	r2, [r3, #0]
					break;
 592:	e0c5      	b.n	720 <process_packets+0x218>
				} else {
					printlf("Got valid header!\n");
 594:	487a      	ldr	r0, [pc, #488]	@ (780 <process_packets+0x278>)
 596:	f000 facb 	bl	b30 <printlf>
				}
				
				switch(current_message.header.type){
 59a:	4b76      	ldr	r3, [pc, #472]	@ (774 <process_packets+0x26c>)
 59c:	7999      	ldrb	r1, [r3, #6]
 59e:	2906      	cmp	r1, #6
 5a0:	d00b      	beq.n	5ba <process_packets+0xb2>
 5a2:	2981      	cmp	r1, #129	@ 0x81
 5a4:	d10d      	bne.n	5c2 <process_packets+0xba>
					case TYPE_SCAN:
						comm_state = WAITING_SCAN_HEADER;
 5a6:	4b71      	ldr	r3, [pc, #452]	@ (76c <process_packets+0x264>)
 5a8:	2202      	movs	r2, #2
 5aa:	701a      	strb	r2, [r3, #0]
						current_byte = 0;
 5ac:	4b70      	ldr	r3, [pc, #448]	@ (770 <process_packets+0x268>)
 5ae:	2200      	movs	r2, #0
 5b0:	801a      	strh	r2, [r3, #0]
						printlf("Header is start of scan\n");
 5b2:	4874      	ldr	r0, [pc, #464]	@ (784 <process_packets+0x27c>)
 5b4:	f000 fabc 	bl	b30 <printlf>
					break;
 5b8:	e0b2      	b.n	720 <process_packets+0x218>
					
					case TYPE_HEALTH_STATUS:
						comm_state = RECEIVING_HEALTH_REPORT;
 5ba:	4b6c      	ldr	r3, [pc, #432]	@ (76c <process_packets+0x264>)
 5bc:	2205      	movs	r2, #5
 5be:	701a      	strb	r2, [r3, #0]
					break;
 5c0:	e0ae      	b.n	720 <process_packets+0x218>
					
					default:
						printlf("Unexpected message type %d. Discarding...\n", (uint32_t)current_message.header.type);
 5c2:	4871      	ldr	r0, [pc, #452]	@ (788 <process_packets+0x280>)
 5c4:	f000 fab4 	bl	b30 <printlf>
						comm_state = COMM_WAITING;
 5c8:	4b68      	ldr	r3, [pc, #416]	@ (76c <process_packets+0x264>)
 5ca:	2200      	movs	r2, #0
 5cc:	701a      	strb	r2, [r3, #0]
					break;
 5ce:	e0a7      	b.n	720 <process_packets+0x218>
				}
			} break;
			
			case WAITING_SCAN_HEADER:{
				if(ROM_UARTCharGet(LID_BASE) != 0xAA) break;
 5d0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 5d4:	695b      	ldr	r3, [r3, #20]
 5d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 5d8:	4863      	ldr	r0, [pc, #396]	@ (768 <process_packets+0x260>)
 5da:	4798      	blx	r3
 5dc:	28aa      	cmp	r0, #170	@ 0xaa
 5de:	f040 809f 	bne.w	720 <process_packets+0x218>
				comm_state = RECEIVING_SCAN_HEADER;
 5e2:	4b62      	ldr	r3, [pc, #392]	@ (76c <process_packets+0x264>)
 5e4:	2203      	movs	r2, #3
 5e6:	701a      	strb	r2, [r3, #0]
				current_byte = 1;
 5e8:	4b61      	ldr	r3, [pc, #388]	@ (770 <process_packets+0x268>)
 5ea:	2201      	movs	r2, #1
 5ec:	801a      	strh	r2, [r3, #0]
				current_scan.bytes[0] = 0xAA;
 5ee:	4b67      	ldr	r3, [pc, #412]	@ (78c <process_packets+0x284>)
 5f0:	22aa      	movs	r2, #170	@ 0xaa
 5f2:	701a      	strb	r2, [r3, #0]
			} break;
 5f4:	e094      	b.n	720 <process_packets+0x218>
				
			case RECEIVING_SCAN_HEADER: {
				current_scan.bytes[current_byte++] = ROM_UARTCharGet(LID_BASE);
 5f6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 5fa:	695b      	ldr	r3, [r3, #20]
 5fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 5fe:	485a      	ldr	r0, [pc, #360]	@ (768 <process_packets+0x260>)
 600:	4798      	blx	r3
 602:	495b      	ldr	r1, [pc, #364]	@ (770 <process_packets+0x268>)
 604:	880a      	ldrh	r2, [r1, #0]
 606:	1c53      	adds	r3, r2, #1
 608:	b29b      	uxth	r3, r3
 60a:	800b      	strh	r3, [r1, #0]
 60c:	495f      	ldr	r1, [pc, #380]	@ (78c <process_packets+0x284>)
 60e:	5488      	strb	r0, [r1, r2]
				//ROM_UARTCharPut(UART0_BASE, current_scan.bytes[current_byte-1]);
				//If we're not done receiving the header, continue
				if(current_byte < sizeof(current_scan)) break;
 610:	2b09      	cmp	r3, #9
 612:	f240 8085 	bls.w	720 <process_packets+0x218>
				//printlf("Got scan header\n");
				if(current_scan.header.start_code != SCAN_MAGIC){
 616:	880a      	ldrh	r2, [r1, #0]
 618:	f245 53aa 	movw	r3, #21930	@ 0x55aa
 61c:	429a      	cmp	r2, r3
 61e:	d10a      	bne.n	636 <process_packets+0x12e>
					//start_lidar_scan();
					comm_state = WAITING_SCAN_HEADER;
					current_byte=0;
					return;
				}
				if(current_scan.header.type == START_PACKET) {
 620:	4b5a      	ldr	r3, [pc, #360]	@ (78c <process_packets+0x284>)
 622:	789b      	ldrb	r3, [r3, #2]
 624:	2b01      	cmp	r3, #1
 626:	d00d      	beq.n	644 <process_packets+0x13c>
					comm_state = WAITING_SCAN_HEADER;
					print_angles();
					
				} else {
					//printlf("Receiving Data\n");
					comm_state = RECEIVING_SCAN_DATA;
 628:	4b50      	ldr	r3, [pc, #320]	@ (76c <process_packets+0x264>)
 62a:	2204      	movs	r2, #4
 62c:	701a      	strb	r2, [r3, #0]
					current_byte = 0;
 62e:	4b50      	ldr	r3, [pc, #320]	@ (770 <process_packets+0x268>)
 630:	2200      	movs	r2, #0
 632:	801a      	strh	r2, [r3, #0]
 634:	e074      	b.n	720 <process_packets+0x218>
					comm_state = WAITING_SCAN_HEADER;
 636:	4b4d      	ldr	r3, [pc, #308]	@ (76c <process_packets+0x264>)
 638:	2202      	movs	r2, #2
 63a:	701a      	strb	r2, [r3, #0]
					current_byte=0;
 63c:	4b4c      	ldr	r3, [pc, #304]	@ (770 <process_packets+0x268>)
 63e:	2200      	movs	r2, #0
 640:	801a      	strh	r2, [r3, #0]
				printlf("Invalid comm state - resetting");
				comm_state = COMM_WAITING;
			break;
		}
	}
}
 642:	bd38      	pop	{r3, r4, r5, pc}
					ROM_UARTCharGet(LID_BASE); // Eat the one zero value
 644:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 648:	696b      	ldr	r3, [r5, #20]
 64a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 64c:	4c46      	ldr	r4, [pc, #280]	@ (768 <process_packets+0x260>)
 64e:	4620      	mov	r0, r4
 650:	4798      	blx	r3
					ROM_UARTCharGet(LID_BASE);
 652:	696b      	ldr	r3, [r5, #20]
 654:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 656:	4620      	mov	r0, r4
 658:	4798      	blx	r3
					if(++scan_count < 1) break;
 65a:	4a4d      	ldr	r2, [pc, #308]	@ (790 <process_packets+0x288>)
 65c:	6813      	ldr	r3, [r2, #0]
 65e:	3301      	adds	r3, #1
 660:	6013      	str	r3, [r2, #0]
 662:	2b00      	cmp	r3, #0
 664:	dd5c      	ble.n	720 <process_packets+0x218>
					scan_count = 0;
 666:	2400      	movs	r4, #0
 668:	6014      	str	r4, [r2, #0]
					process_point_buff();
 66a:	f7ff fe0d 	bl	288 <process_point_buff>
					uint32_t *temp = active_point_buffer;
 66e:	4a49      	ldr	r2, [pc, #292]	@ (794 <process_packets+0x28c>)
 670:	6811      	ldr	r1, [r2, #0]
					active_point_buffer = receiving_point_buffer;
 672:	4b49      	ldr	r3, [pc, #292]	@ (798 <process_packets+0x290>)
 674:	6818      	ldr	r0, [r3, #0]
 676:	6010      	str	r0, [r2, #0]
					receiving_point_buffer = temp;
 678:	6019      	str	r1, [r3, #0]
					current_byte = 0;
 67a:	4b3d      	ldr	r3, [pc, #244]	@ (770 <process_packets+0x268>)
 67c:	801c      	strh	r4, [r3, #0]
					zero_point_buf();
 67e:	f7ff fdf5 	bl	26c <zero_point_buf>
					comm_state = WAITING_SCAN_HEADER;
 682:	4b3a      	ldr	r3, [pc, #232]	@ (76c <process_packets+0x264>)
 684:	2202      	movs	r2, #2
 686:	701a      	strb	r2, [r3, #0]
					print_angles();
 688:	f7ff ff24 	bl	4d4 <print_angles>
 68c:	e048      	b.n	720 <process_packets+0x218>
				switch(current_byte % 2){
 68e:	4b38      	ldr	r3, [pc, #224]	@ (770 <process_packets+0x268>)
 690:	881b      	ldrh	r3, [r3, #0]
 692:	f013 0301 	ands.w	r3, r3, #1
 696:	d011      	beq.n	6bc <process_packets+0x1b4>
 698:	b9cb      	cbnz	r3, 6ce <process_packets+0x1c6>
				if((++current_byte)>>1 == current_scan.header.sample_count){
 69a:	4a35      	ldr	r2, [pc, #212]	@ (770 <process_packets+0x268>)
 69c:	8813      	ldrh	r3, [r2, #0]
 69e:	3301      	adds	r3, #1
 6a0:	b29b      	uxth	r3, r3
 6a2:	8013      	strh	r3, [r2, #0]
 6a4:	4a39      	ldr	r2, [pc, #228]	@ (78c <process_packets+0x284>)
 6a6:	78d2      	ldrb	r2, [r2, #3]
 6a8:	ebb2 0f53 	cmp.w	r2, r3, lsr #1
 6ac:	d138      	bne.n	720 <process_packets+0x218>
					current_byte = 0;
 6ae:	4b30      	ldr	r3, [pc, #192]	@ (770 <process_packets+0x268>)
 6b0:	2200      	movs	r2, #0
 6b2:	801a      	strh	r2, [r3, #0]
					comm_state = WAITING_SCAN_HEADER;
 6b4:	4b2d      	ldr	r3, [pc, #180]	@ (76c <process_packets+0x264>)
 6b6:	2202      	movs	r2, #2
 6b8:	701a      	strb	r2, [r3, #0]
 6ba:	e031      	b.n	720 <process_packets+0x218>
						lsb = ROM_UARTCharGet(LID_BASE);
 6bc:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 6c0:	695b      	ldr	r3, [r3, #20]
 6c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 6c4:	4828      	ldr	r0, [pc, #160]	@ (768 <process_packets+0x260>)
 6c6:	4798      	blx	r3
 6c8:	4b34      	ldr	r3, [pc, #208]	@ (79c <process_packets+0x294>)
 6ca:	7018      	strb	r0, [r3, #0]
					break;
 6cc:	e7e5      	b.n	69a <process_packets+0x192>
						msb = ROM_UARTCharGet(LID_BASE);
 6ce:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 6d2:	695b      	ldr	r3, [r3, #20]
 6d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 6d6:	4824      	ldr	r0, [pc, #144]	@ (768 <process_packets+0x260>)
 6d8:	4798      	blx	r3
 6da:	4b31      	ldr	r3, [pc, #196]	@ (7a0 <process_packets+0x298>)
 6dc:	7018      	strb	r0, [r3, #0]
						uint32_t val = ((msb << 8) | lsb) >> 2;
 6de:	b2c0      	uxtb	r0, r0
 6e0:	4b2e      	ldr	r3, [pc, #184]	@ (79c <process_packets+0x294>)
 6e2:	781c      	ldrb	r4, [r3, #0]
 6e4:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
 6e8:	10a4      	asrs	r4, r4, #2
						if((val > 20000) || (val < 25)) break;
 6ea:	f1a4 0219 	sub.w	r2, r4, #25
 6ee:	f644 6307 	movw	r3, #19975	@ 0x4e07
 6f2:	429a      	cmp	r2, r3
 6f4:	d8d1      	bhi.n	69a <process_packets+0x192>
						int angle = angle_map(current_scan.header.start_angle, current_scan.header.end_angle, current_scan.header.sample_count, current_byte>>1);
 6f6:	4825      	ldr	r0, [pc, #148]	@ (78c <process_packets+0x284>)
 6f8:	4b1d      	ldr	r3, [pc, #116]	@ (770 <process_packets+0x268>)
 6fa:	881b      	ldrh	r3, [r3, #0]
 6fc:	085b      	lsrs	r3, r3, #1
 6fe:	78c2      	ldrb	r2, [r0, #3]
 700:	88c1      	ldrh	r1, [r0, #6]
 702:	8880      	ldrh	r0, [r0, #4]
 704:	f7ff feca 	bl	49c <angle_map>
						receiving_point_buffer[angle] = (receiving_point_buffer[angle] + val)/2;
 708:	4b23      	ldr	r3, [pc, #140]	@ (798 <process_packets+0x290>)
 70a:	681a      	ldr	r2, [r3, #0]
 70c:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
 710:	4423      	add	r3, r4
 712:	085b      	lsrs	r3, r3, #1
 714:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
					break;
 718:	e7bf      	b.n	69a <process_packets+0x192>
				comm_state = COMM_WAITING;
 71a:	4b14      	ldr	r3, [pc, #80]	@ (76c <process_packets+0x264>)
 71c:	2200      	movs	r2, #0
 71e:	701a      	strb	r2, [r3, #0]
	while(ROM_UARTCharsAvail(LID_BASE)) {
 720:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 724:	695b      	ldr	r3, [r3, #20]
 726:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 728:	480f      	ldr	r0, [pc, #60]	@ (768 <process_packets+0x260>)
 72a:	4798      	blx	r3
 72c:	2800      	cmp	r0, #0
 72e:	d088      	beq.n	642 <process_packets+0x13a>
		switch(comm_state) {
 730:	4b0e      	ldr	r3, [pc, #56]	@ (76c <process_packets+0x264>)
 732:	781b      	ldrb	r3, [r3, #0]
 734:	2b05      	cmp	r3, #5
 736:	d80f      	bhi.n	758 <process_packets+0x250>
 738:	a201      	add	r2, pc, #4	@ (adr r2, 740 <process_packets+0x238>)
 73a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 73e:	bf00      	nop
 740:	0000050d 	.word	0x0000050d
 744:	0000053d 	.word	0x0000053d
 748:	000005d1 	.word	0x000005d1
 74c:	000005f7 	.word	0x000005f7
 750:	0000068f 	.word	0x0000068f
 754:	0000071b 	.word	0x0000071b
				printlf("Invalid comm state - resetting");
 758:	4812      	ldr	r0, [pc, #72]	@ (7a4 <process_packets+0x29c>)
 75a:	f000 f9e9 	bl	b30 <printlf>
				comm_state = COMM_WAITING;
 75e:	4b03      	ldr	r3, [pc, #12]	@ (76c <process_packets+0x264>)
 760:	2200      	movs	r2, #0
 762:	701a      	strb	r2, [r3, #0]
			break;
 764:	e7dc      	b.n	720 <process_packets+0x218>
 766:	bf00      	nop
 768:	4000e000 	.word	0x4000e000
 76c:	2000001e 	.word	0x2000001e
 770:	2000001c 	.word	0x2000001c
 774:	20000014 	.word	0x20000014
 778:	00000c80 	.word	0x00000c80
 77c:	00000c90 	.word	0x00000c90
 780:	00000cb4 	.word	0x00000cb4
 784:	00000cc8 	.word	0x00000cc8
 788:	00000ce4 	.word	0x00000ce4
 78c:	20000008 	.word	0x20000008
 790:	20000004 	.word	0x20000004
 794:	20000024 	.word	0x20000024
 798:	20000020 	.word	0x20000020
 79c:	20000001 	.word	0x20000001
 7a0:	20000000 	.word	0x20000000
 7a4:	00000d10 	.word	0x00000d10

000007a8 <main>:

#define Disable_Interrupts() __asm("CPSID I")
#define Enable_Interrupts() 


int main (void) {
 7a8:	b508      	push	{r3, lr}
	ROM_SysCtlClockSet(SYSCTL_SYSDIV_2_5 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);
 7aa:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 7ae:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 7b0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 7b2:	482a      	ldr	r0, [pc, #168]	@ (85c <main+0xb4>)
 7b4:	4798      	blx	r3
	
	setup_uart_printer();
 7b6:	f000 f891 	bl	8dc <setup_uart_printer>
	printlf("Init Lidar Comms\n");
 7ba:	4829      	ldr	r0, [pc, #164]	@ (860 <main+0xb8>)
 7bc:	f000 f9b8 	bl	b30 <printlf>
	setup_lidar_comms();
 7c0:	f7ff fdb6 	bl	330 <setup_lidar_comms>
	printlf("Stopping Lidar scan\n");
 7c4:	4827      	ldr	r0, [pc, #156]	@ (864 <main+0xbc>)
 7c6:	f000 f9b3 	bl	b30 <printlf>
	stop_lidar_scan();
 7ca:	f7ff fe41 	bl	450 <stop_lidar_scan>
	printlf("Flushing Lidar buffer\n");
 7ce:	4826      	ldr	r0, [pc, #152]	@ (868 <main+0xc0>)
 7d0:	f000 f9ae 	bl	b30 <printlf>
	clear_lidar_IO();
 7d4:	f7ff fe4e 	bl	474 <clear_lidar_IO>
	__asm("CPSIE I");
 7d8:	b662      	cpsie	i
	ROM_SysCtlDelay(20000000);
 7da:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 7dc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 7e0:	4822      	ldr	r0, [pc, #136]	@ (86c <main+0xc4>)
 7e2:	4798      	blx	r3
	//ROM_SysCtlDelay(20000000);
	//ROM_SysCtlDelay(20000000);
	//ROM_SysCtlDelay(20000000);
	printlf("Starting lidar scan#####################\n");
 7e4:	4822      	ldr	r0, [pc, #136]	@ (870 <main+0xc8>)
 7e6:	f000 f9a3 	bl	b30 <printlf>
	clear_lidar_IO();
 7ea:	f7ff fe43 	bl	474 <clear_lidar_IO>
	ROM_SysCtlDelay(20000);
 7ee:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 7f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 7f4:	f644 6020 	movw	r0, #20000	@ 0x4e20
 7f8:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 7fa:	6963      	ldr	r3, [r4, #20]
 7fc:	681b      	ldr	r3, [r3, #0]
 7fe:	4d1d      	ldr	r5, [pc, #116]	@ (874 <main+0xcc>)
 800:	21a5      	movs	r1, #165	@ 0xa5
 802:	4628      	mov	r0, r5
 804:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 806:	6963      	ldr	r3, [r4, #20]
 808:	681b      	ldr	r3, [r3, #0]
 80a:	210b      	movs	r1, #11
 80c:	4628      	mov	r0, r5
 80e:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 810:	6963      	ldr	r3, [r4, #20]
 812:	681b      	ldr	r3, [r3, #0]
 814:	21a5      	movs	r1, #165	@ 0xa5
 816:	4628      	mov	r0, r5
 818:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 81a:	6963      	ldr	r3, [r4, #20]
 81c:	681b      	ldr	r3, [r3, #0]
 81e:	210b      	movs	r1, #11
 820:	4628      	mov	r0, r5
 822:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 824:	6963      	ldr	r3, [r4, #20]
 826:	681b      	ldr	r3, [r3, #0]
 828:	21a5      	movs	r1, #165	@ 0xa5
 82a:	4628      	mov	r0, r5
 82c:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 82e:	6963      	ldr	r3, [r4, #20]
 830:	681b      	ldr	r3, [r3, #0]
 832:	210b      	movs	r1, #11
 834:	4628      	mov	r0, r5
 836:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0xA5);
 838:	6963      	ldr	r3, [r4, #20]
 83a:	681b      	ldr	r3, [r3, #0]
 83c:	21a5      	movs	r1, #165	@ 0xa5
 83e:	4628      	mov	r0, r5
 840:	4798      	blx	r3
	ROM_UARTCharPut(UART2_BASE, 0x0B);
 842:	6963      	ldr	r3, [r4, #20]
 844:	681b      	ldr	r3, [r3, #0]
 846:	210b      	movs	r1, #11
 848:	4628      	mov	r0, r5
 84a:	4798      	blx	r3
	clear_lidar_IO();
 84c:	f7ff fe12 	bl	474 <clear_lidar_IO>
	start_lidar_scan();
 850:	f7ff fdec 	bl	42c <start_lidar_scan>
	
	while(1) {
		process_packets();
 854:	f7ff fe58 	bl	508 <process_packets>
	while(1) {
 858:	e7fc      	b.n	854 <main+0xac>
 85a:	bf00      	nop
 85c:	c1000540 	.word	0xc1000540
 860:	00000d30 	.word	0x00000d30
 864:	00000d44 	.word	0x00000d44
 868:	00000d5c 	.word	0x00000d5c
 86c:	01312d00 	.word	0x01312d00
 870:	00000d74 	.word	0x00000d74
 874:	4000e000 	.word	0x4000e000

00000878 <timeKeeperISR>:
}

void timeKeeperISR (void) {
 878:	b410      	push	{r4}
	static char second_counter = 0;
	static char sonic_sensor_action_div = 0;
	
	TIMER1_IMR_R &= ~TIMER_IMR_TATOIM; //Disable Interrupt
 87a:	4b14      	ldr	r3, [pc, #80]	@ (8cc <timeKeeperISR+0x54>)
 87c:	699a      	ldr	r2, [r3, #24]
 87e:	f022 0201 	bic.w	r2, r2, #1
 882:	619a      	str	r2, [r3, #24]
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 884:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 886:	f042 0201 	orr.w	r2, r2, #1
 88a:	625a      	str	r2, [r3, #36]	@ 0x24
	
	timer1_overflow_count++;
 88c:	4c10      	ldr	r4, [pc, #64]	@ (8d0 <timeKeeperISR+0x58>)
 88e:	e9d4 2300 	ldrd	r2, r3, [r4]
 892:	1c50      	adds	r0, r2, #1
 894:	f143 0100 	adc.w	r1, r3, #0
 898:	e9c4 0100 	strd	r0, r1, [r4]
	
	//Every second
	if(++second_counter == TIMER1_MULTIPLIER) {
 89c:	4a0d      	ldr	r2, [pc, #52]	@ (8d4 <timeKeeperISR+0x5c>)
 89e:	7813      	ldrb	r3, [r2, #0]
 8a0:	3301      	adds	r3, #1
 8a2:	b2db      	uxtb	r3, r3
 8a4:	7013      	strb	r3, [r2, #0]
 8a6:	2b20      	cmp	r3, #32
 8a8:	d007      	beq.n	8ba <timeKeeperISR+0x42>
		uptime_seconds++;
		second_counter = 0;
	}
	
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
 8aa:	4a08      	ldr	r2, [pc, #32]	@ (8cc <timeKeeperISR+0x54>)
 8ac:	6993      	ldr	r3, [r2, #24]
 8ae:	f043 0301 	orr.w	r3, r3, #1
 8b2:	6193      	str	r3, [r2, #24]
}
 8b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8b8:	4770      	bx	lr
		uptime_seconds++;
 8ba:	4a07      	ldr	r2, [pc, #28]	@ (8d8 <timeKeeperISR+0x60>)
 8bc:	6813      	ldr	r3, [r2, #0]
 8be:	3301      	adds	r3, #1
 8c0:	6013      	str	r3, [r2, #0]
		second_counter = 0;
 8c2:	4b04      	ldr	r3, [pc, #16]	@ (8d4 <timeKeeperISR+0x5c>)
 8c4:	2200      	movs	r2, #0
 8c6:	701a      	strb	r2, [r3, #0]
 8c8:	e7ef      	b.n	8aa <timeKeeperISR+0x32>
 8ca:	bf00      	nop
 8cc:	40031000 	.word	0x40031000
 8d0:	20001110 	.word	0x20001110
 8d4:	20001108 	.word	0x20001108
 8d8:	20001118 	.word	0x20001118

000008dc <setup_uart_printer>:
#include <inc/hw_memmap.h>
#include <common/tm4c123gh6pm.h>

#define INFINITY 1.0f/0.f

void setup_uart_printer(void){
 8dc:	b538      	push	{r3, r4, r5, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
 8de:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 8e2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8e4:	699b      	ldr	r3, [r3, #24]
 8e6:	4815      	ldr	r0, [pc, #84]	@ (93c <setup_uart_printer+0x60>)
 8e8:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
 8ea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8ec:	699b      	ldr	r3, [r3, #24]
 8ee:	4814      	ldr	r0, [pc, #80]	@ (940 <setup_uart_printer+0x64>)
 8f0:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART0)){};
 8f2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8fc:	4810      	ldr	r0, [pc, #64]	@ (940 <setup_uart_printer+0x64>)
 8fe:	4798      	blx	r3
 900:	2800      	cmp	r0, #0
 902:	d0f6      	beq.n	8f2 <setup_uart_printer+0x16>
	
	ROM_GPIOPadConfigSet(GPIO_PORTA_BASE, 3, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 904:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 908:	6a23      	ldr	r3, [r4, #32]
 90a:	695d      	ldr	r5, [r3, #20]
 90c:	2308      	movs	r3, #8
 90e:	2266      	movs	r2, #102	@ 0x66
 910:	2103      	movs	r1, #3
 912:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 916:	47a8      	blx	r5
	ROM_GPIODirModeSet(GPIO_PORTA_BASE, 3, GPIO_DIR_MODE_HW);
 918:	6a23      	ldr	r3, [r4, #32]
 91a:	685b      	ldr	r3, [r3, #4]
 91c:	2202      	movs	r2, #2
 91e:	2103      	movs	r1, #3
 920:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 924:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(UART0_BASE, ROM_SysCtlClockGet(), 4000000,
 926:	6963      	ldr	r3, [r4, #20]
 928:	695d      	ldr	r5, [r3, #20]
 92a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 92c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 92e:	4798      	blx	r3
 930:	4601      	mov	r1, r0
 932:	2368      	movs	r3, #104	@ 0x68
 934:	4a03      	ldr	r2, [pc, #12]	@ (944 <setup_uart_printer+0x68>)
 936:	4804      	ldr	r0, [pc, #16]	@ (948 <setup_uart_printer+0x6c>)
 938:	47a8      	blx	r5
                            (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_TWO | UART_CONFIG_PAR_NONE));
}
 93a:	bd38      	pop	{r3, r4, r5, pc}
 93c:	f0000800 	.word	0xf0000800
 940:	f0001800 	.word	0xf0001800
 944:	003d0900 	.word	0x003d0900
 948:	4000c000 	.word	0x4000c000

0000094c <putchar>:

void putchar(char c) {
 94c:	b508      	push	{r3, lr}
 94e:	4601      	mov	r1, r0
	static int chars_sent_recently = 0;
	ROM_UARTCharPut(UART0_BASE, c);
 950:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 954:	695b      	ldr	r3, [r3, #20]
 956:	681b      	ldr	r3, [r3, #0]
 958:	480c      	ldr	r0, [pc, #48]	@ (98c <putchar+0x40>)
 95a:	4798      	blx	r3
	while(ROM_UARTBusy(UART0_BASE)) {};
 95c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 960:	695b      	ldr	r3, [r3, #20]
 962:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 964:	4809      	ldr	r0, [pc, #36]	@ (98c <putchar+0x40>)
 966:	4798      	blx	r3
 968:	2800      	cmp	r0, #0
 96a:	d1f7      	bne.n	95c <putchar+0x10>
	
	//Really dumb, but avoid overwhelming ICDI
	if(++chars_sent_recently > 7) {
 96c:	4a08      	ldr	r2, [pc, #32]	@ (990 <putchar+0x44>)
 96e:	6813      	ldr	r3, [r2, #0]
 970:	3301      	adds	r3, #1
 972:	6013      	str	r3, [r2, #0]
 974:	2b07      	cmp	r3, #7
 976:	dd07      	ble.n	988 <putchar+0x3c>
		chars_sent_recently = 0;
 978:	2300      	movs	r3, #0
 97a:	6013      	str	r3, [r2, #0]
		for(int i = 0; i < 280; i++) {
 97c:	e001      	b.n	982 <putchar+0x36>
			__asm("mov r1,r1\n");
 97e:	4609      	mov	r1, r1
		for(int i = 0; i < 280; i++) {
 980:	3301      	adds	r3, #1
 982:	f5b3 7f8c 	cmp.w	r3, #280	@ 0x118
 986:	dbfa      	blt.n	97e <putchar+0x32>
		}
	}
}
 988:	bd08      	pop	{r3, pc}
 98a:	bf00      	nop
 98c:	4000c000 	.word	0x4000c000
 990:	2000111c 	.word	0x2000111c

00000994 <print_string>:

void print_string(const char * const str) {
 994:	b538      	push	{r3, r4, r5, lr}
 996:	4605      	mov	r5, r0
	for(int i = 0; str[i] != '\0'; i++) {
 998:	2400      	movs	r4, #0
 99a:	e002      	b.n	9a2 <print_string+0xe>
		putchar( str[i]);
 99c:	f7ff ffd6 	bl	94c <putchar>
	for(int i = 0; str[i] != '\0'; i++) {
 9a0:	3401      	adds	r4, #1
 9a2:	5d28      	ldrb	r0, [r5, r4]
 9a4:	2800      	cmp	r0, #0
 9a6:	d1f9      	bne.n	99c <print_string+0x8>
	}
}
 9a8:	bd38      	pop	{r3, r4, r5, pc}
	...

000009ac <print_unsigned_decimal>:

void print_unsigned_decimal(uint32_t num){
 9ac:	b510      	push	{r4, lr}
 9ae:	b084      	sub	sp, #16
	
	char buf[11]; //Large enough to fit any value of num
	
	int places = 0;
 9b0:	2400      	movs	r4, #0
	
	do {
		buf[places++] = (char)('0' + (num % 10));
 9b2:	4b10      	ldr	r3, [pc, #64]	@ (9f4 <print_unsigned_decimal+0x48>)
 9b4:	fba3 2300 	umull	r2, r3, r3, r0
 9b8:	08db      	lsrs	r3, r3, #3
 9ba:	4619      	mov	r1, r3
 9bc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 9c0:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 9c4:	4622      	mov	r2, r4
 9c6:	3330      	adds	r3, #48	@ 0x30
 9c8:	3210      	adds	r2, #16
 9ca:	446a      	add	r2, sp
 9cc:	3401      	adds	r4, #1
 9ce:	f802 3c0c 	strb.w	r3, [r2, #-12]
		num /= 10;
 9d2:	4603      	mov	r3, r0
 9d4:	4608      	mov	r0, r1
	} while (num > 0);
 9d6:	2b09      	cmp	r3, #9
 9d8:	d8eb      	bhi.n	9b2 <print_unsigned_decimal+0x6>
 9da:	e007      	b.n	9ec <print_unsigned_decimal+0x40>
	
	for(; places; places--) {
		putchar( buf[places-1]);
 9dc:	3c01      	subs	r4, #1
 9de:	f104 0310 	add.w	r3, r4, #16
 9e2:	446b      	add	r3, sp
 9e4:	f813 0c0c 	ldrb.w	r0, [r3, #-12]
 9e8:	f7ff ffb0 	bl	94c <putchar>
	for(; places; places--) {
 9ec:	2c00      	cmp	r4, #0
 9ee:	d1f5      	bne.n	9dc <print_unsigned_decimal+0x30>
	}
}
 9f0:	b004      	add	sp, #16
 9f2:	bd10      	pop	{r4, pc}
 9f4:	cccccccd 	.word	0xcccccccd

000009f8 <print_decimal>:

void print_decimal(int32_t num){
 9f8:	b510      	push	{r4, lr}
	
	if (num < 0) {
 9fa:	1e04      	subs	r4, r0, #0
 9fc:	db03      	blt.n	a06 <print_decimal+0xe>
		putchar( '-');
		num = 0 - num;
	}
	
	print_unsigned_decimal((uint32_t)num);
 9fe:	4620      	mov	r0, r4
 a00:	f7ff ffd4 	bl	9ac <print_unsigned_decimal>
}
 a04:	bd10      	pop	{r4, pc}
		putchar( '-');
 a06:	202d      	movs	r0, #45	@ 0x2d
 a08:	f7ff ffa0 	bl	94c <putchar>
		num = 0 - num;
 a0c:	4264      	negs	r4, r4
 a0e:	e7f6      	b.n	9fe <print_decimal+0x6>

00000a10 <print_float>:

void print_float(float number) {
 a10:	b510      	push	{r4, lr}
 a12:	ed2d 8b02 	vpush	{d8}
 a16:	b084      	sub	sp, #16
	
	if(number != number) { //NaN is not equal to anything, including NaN
 a18:	eeb4 0a40 	vcmp.f32	s0, s0
 a1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a20:	d137      	bne.n	a92 <print_float+0x82>
		print_string("NaN");
		return;
	}
	
	if(number == INFINITY || number == -INFINITY) {
 a22:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 a26:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ b14 <print_float+0x104>
 a2a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 a2e:	eef4 7a40 	vcmp.f32	s15, s0
 a32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a36:	d030      	beq.n	a9a <print_float+0x8a>
 a38:	eef1 7a67 	vneg.f32	s15, s15
 a3c:	eef4 7a40 	vcmp.f32	s15, s0
 a40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a44:	d029      	beq.n	a9a <print_float+0x8a>
		print_string("inf");
		return;
	}
	
	if(number > UINT32_MAX || (0-number) > UINT32_MAX) {
 a46:	eddf 7a34 	vldr	s15, [pc, #208]	@ b18 <print_float+0x108>
 a4a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 a4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a52:	dc29      	bgt.n	aa8 <print_float+0x98>
 a54:	ed9f 8a2f 	vldr	s16, [pc, #188]	@ b14 <print_float+0x104>
 a58:	ee38 8a40 	vsub.f32	s16, s16, s0
 a5c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a64:	dc20      	bgt.n	aa8 <print_float+0x98>
		return;
	}
	
	char buf[15]; // large enough to fit any value
	
	if(number < 0) {
 a66:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 a6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 a6e:	d41f      	bmi.n	ab0 <print_float+0xa0>
		putchar( '-');
		number = 0 - number;
	}
	
	uint32_t integerPart = (uint32_t)number;
 a70:	eefc 7ac0 	vcvt.u32.f32	s15, s0
	uint32_t decimalPart = (uint32_t)((number - integerPart) * 1000);
 a74:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 a78:	ee30 0a47 	vsub.f32	s0, s0, s14
 a7c:	ed9f 7a27 	vldr	s14, [pc, #156]	@ b1c <print_float+0x10c>
 a80:	ee20 0a07 	vmul.f32	s0, s0, s14
 a84:	eebc 7ac0 	vcvt.u32.f32	s14, s0
 a88:	ee17 3a10 	vmov	r3, s14
	
	int places = 0;
	
	for(int i = 0; i < 3; i++) {
 a8c:	2000      	movs	r0, #0
	int places = 0;
 a8e:	4601      	mov	r1, r0
	for(int i = 0; i < 3; i++) {
 a90:	e026      	b.n	ae0 <print_float+0xd0>
		print_string("NaN");
 a92:	4823      	ldr	r0, [pc, #140]	@ (b20 <print_float+0x110>)
 a94:	f7ff ff7e 	bl	994 <print_string>
		return;
 a98:	e002      	b.n	aa0 <print_float+0x90>
		print_string("inf");
 a9a:	4822      	ldr	r0, [pc, #136]	@ (b24 <print_float+0x114>)
 a9c:	f7ff ff7a 	bl	994 <print_string>
	print_unsigned_decimal(integerPart);
	
	for(; places; places--) {
		putchar( buf[places-1]);
	}
}
 aa0:	b004      	add	sp, #16
 aa2:	ecbd 8b02 	vpop	{d8}
 aa6:	bd10      	pop	{r4, pc}
		print_string("[out of range]");
 aa8:	481f      	ldr	r0, [pc, #124]	@ (b28 <print_float+0x118>)
 aaa:	f7ff ff73 	bl	994 <print_string>
		return;
 aae:	e7f7      	b.n	aa0 <print_float+0x90>
		putchar( '-');
 ab0:	202d      	movs	r0, #45	@ 0x2d
 ab2:	f7ff ff4b 	bl	94c <putchar>
		number = 0 - number;
 ab6:	eeb0 0a48 	vmov.f32	s0, s16
 aba:	e7d9      	b.n	a70 <print_float+0x60>
		buf[places++] = (char)('0' + decimalPart % 10);
 abc:	4a1b      	ldr	r2, [pc, #108]	@ (b2c <print_float+0x11c>)
 abe:	fba2 4203 	umull	r4, r2, r2, r3
 ac2:	08d2      	lsrs	r2, r2, #3
 ac4:	4614      	mov	r4, r2
 ac6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 aca:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
 ace:	3230      	adds	r2, #48	@ 0x30
 ad0:	f101 0310 	add.w	r3, r1, #16
 ad4:	446b      	add	r3, sp
 ad6:	f803 2c10 	strb.w	r2, [r3, #-16]
		decimalPart /= 10;
 ada:	4623      	mov	r3, r4
	for(int i = 0; i < 3; i++) {
 adc:	3001      	adds	r0, #1
		buf[places++] = (char)('0' + decimalPart % 10);
 ade:	3101      	adds	r1, #1
	for(int i = 0; i < 3; i++) {
 ae0:	2802      	cmp	r0, #2
 ae2:	ddeb      	ble.n	abc <print_float+0xac>
	buf[places++] = '.';
 ae4:	1c4c      	adds	r4, r1, #1
 ae6:	f101 0310 	add.w	r3, r1, #16
 aea:	eb0d 0103 	add.w	r1, sp, r3
 aee:	232e      	movs	r3, #46	@ 0x2e
 af0:	f801 3c10 	strb.w	r3, [r1, #-16]
	print_unsigned_decimal(integerPart);
 af4:	ee17 0a90 	vmov	r0, s15
 af8:	f7ff ff58 	bl	9ac <print_unsigned_decimal>
	for(; places; places--) {
 afc:	e007      	b.n	b0e <print_float+0xfe>
		putchar( buf[places-1]);
 afe:	3c01      	subs	r4, #1
 b00:	f104 0310 	add.w	r3, r4, #16
 b04:	446b      	add	r3, sp
 b06:	f813 0c10 	ldrb.w	r0, [r3, #-16]
 b0a:	f7ff ff1f 	bl	94c <putchar>
	for(; places; places--) {
 b0e:	2c00      	cmp	r4, #0
 b10:	d1f5      	bne.n	afe <print_float+0xee>
 b12:	e7c5      	b.n	aa0 <print_float+0x90>
 b14:	00000000 	.word	0x00000000
 b18:	4f800000 	.word	0x4f800000
 b1c:	447a0000 	.word	0x447a0000
 b20:	00000da0 	.word	0x00000da0
 b24:	00000da4 	.word	0x00000da4
 b28:	00000da8 	.word	0x00000da8
 b2c:	cccccccd 	.word	0xcccccccd

00000b30 <printlf>:

void printlf(char format[], ...) {
 b30:	b40f      	push	{r0, r1, r2, r3}
 b32:	b570      	push	{r4, r5, r6, lr}
 b34:	b082      	sub	sp, #8
 b36:	ab06      	add	r3, sp, #24
 b38:	f853 5b04 	ldr.w	r5, [r3], #4
	va_list args;
	va_start(args, format);
 b3c:	9301      	str	r3, [sp, #4]
	char *str;
	int32_t num;
	uint32_t numu;
	float *numf;
	
	for(int i=0; format[i] != '\0'; i++) {
 b3e:	2400      	movs	r4, #0
 b40:	e030      	b.n	ba4 <printlf+0x74>
		switch(format[i]) {
			case '%' :
				i++;
				switch(format[i]) {
					case 'u': //unsigned decimal number
						numu = va_arg(args, uint32_t);
 b42:	9b01      	ldr	r3, [sp, #4]
 b44:	1d1a      	adds	r2, r3, #4
 b46:	9201      	str	r2, [sp, #4]
						print_unsigned_decimal(numu);
 b48:	6818      	ldr	r0, [r3, #0]
 b4a:	f7ff ff2f 	bl	9ac <print_unsigned_decimal>
				i++;
 b4e:	4634      	mov	r4, r6
					break;
 b50:	e027      	b.n	ba2 <printlf+0x72>
					
					case 'd': //signed decimal number
						num = va_arg(args, int32_t);
 b52:	9b01      	ldr	r3, [sp, #4]
 b54:	1d1a      	adds	r2, r3, #4
 b56:	9201      	str	r2, [sp, #4]
						print_decimal(num);
 b58:	6818      	ldr	r0, [r3, #0]
 b5a:	f7ff ff4d 	bl	9f8 <print_decimal>
				i++;
 b5e:	4634      	mov	r4, r6
					break;
 b60:	e01f      	b.n	ba2 <printlf+0x72>
					
					case '\0': // End of string
						putchar( '%');
 b62:	2025      	movs	r0, #37	@ 0x25
 b64:	f7ff fef2 	bl	94c <putchar>
						i--; //let the for loop catch this
					break;
 b68:	e01b      	b.n	ba2 <printlf+0x72>
					
					case 's': //string
						str = va_arg(args, char*);
 b6a:	9b01      	ldr	r3, [sp, #4]
 b6c:	1d1a      	adds	r2, r3, #4
 b6e:	9201      	str	r2, [sp, #4]
						print_string(str);
 b70:	6818      	ldr	r0, [r3, #0]
 b72:	f7ff ff0f 	bl	994 <print_string>
				i++;
 b76:	4634      	mov	r4, r6
					break;
 b78:	e013      	b.n	ba2 <printlf+0x72>
					
					case 'f': //float
						numf = va_arg(args, float *);
 b7a:	9b01      	ldr	r3, [sp, #4]
 b7c:	1d1a      	adds	r2, r3, #4
 b7e:	9201      	str	r2, [sp, #4]
 b80:	681b      	ldr	r3, [r3, #0]
						print_float(*numf);
 b82:	ed93 0a00 	vldr	s0, [r3]
 b86:	f7ff ff43 	bl	a10 <print_float>
				i++;
 b8a:	4634      	mov	r4, r6
					break;
 b8c:	e009      	b.n	ba2 <printlf+0x72>
					
					default: //Not recognized
					putchar( '%');
 b8e:	2025      	movs	r0, #37	@ 0x25
 b90:	f7ff fedc 	bl	94c <putchar>
					putchar( format[i]);
 b94:	5da8      	ldrb	r0, [r5, r6]
 b96:	f7ff fed9 	bl	94c <putchar>
				i++;
 b9a:	4634      	mov	r4, r6
					break;
 b9c:	e001      	b.n	ba2 <printlf+0x72>
				}
			break;
				
			default:
				putchar( format[i]);
 b9e:	f7ff fed5 	bl	94c <putchar>
	for(int i=0; format[i] != '\0'; i++) {
 ba2:	3401      	adds	r4, #1
 ba4:	5d28      	ldrb	r0, [r5, r4]
 ba6:	b398      	cbz	r0, c10 <printlf+0xe0>
		switch(format[i]) {
 ba8:	2825      	cmp	r0, #37	@ 0x25
 baa:	d1f8      	bne.n	b9e <printlf+0x6e>
				i++;
 bac:	1c66      	adds	r6, r4, #1
				switch(format[i]) {
 bae:	5dab      	ldrb	r3, [r5, r6]
 bb0:	2b00      	cmp	r3, #0
 bb2:	d0d6      	beq.n	b62 <printlf+0x32>
 bb4:	2b75      	cmp	r3, #117	@ 0x75
 bb6:	d8ea      	bhi.n	b8e <printlf+0x5e>
 bb8:	2b64      	cmp	r3, #100	@ 0x64
 bba:	d3e8      	bcc.n	b8e <printlf+0x5e>
 bbc:	3b64      	subs	r3, #100	@ 0x64
 bbe:	2b11      	cmp	r3, #17
 bc0:	d8e5      	bhi.n	b8e <printlf+0x5e>
 bc2:	a201      	add	r2, pc, #4	@ (adr r2, bc8 <printlf+0x98>)
 bc4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 bc8:	00000b53 	.word	0x00000b53
 bcc:	00000b8f 	.word	0x00000b8f
 bd0:	00000b7b 	.word	0x00000b7b
 bd4:	00000b8f 	.word	0x00000b8f
 bd8:	00000b8f 	.word	0x00000b8f
 bdc:	00000b8f 	.word	0x00000b8f
 be0:	00000b8f 	.word	0x00000b8f
 be4:	00000b8f 	.word	0x00000b8f
 be8:	00000b8f 	.word	0x00000b8f
 bec:	00000b8f 	.word	0x00000b8f
 bf0:	00000b8f 	.word	0x00000b8f
 bf4:	00000b8f 	.word	0x00000b8f
 bf8:	00000b8f 	.word	0x00000b8f
 bfc:	00000b8f 	.word	0x00000b8f
 c00:	00000b8f 	.word	0x00000b8f
 c04:	00000b6b 	.word	0x00000b6b
 c08:	00000b8f 	.word	0x00000b8f
 c0c:	00000b43 	.word	0x00000b43
			break;
		}
	}
	
	va_end(args);
}
 c10:	b002      	add	sp, #8
 c12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 c16:	b004      	add	sp, #16
 c18:	4770      	bx	lr
 c1a:	bf00      	nop

00000c1c <NmiSR>:
NmiSR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 c1c:	e7fe      	b.n	c1c <NmiSR>

00000c1e <FaultISR>:
FaultISR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 c1e:	e7fe      	b.n	c1e <FaultISR>

00000c20 <IntDefaultHandler>:
IntDefaultHandler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
 c20:	e7fe      	b.n	c20 <IntDefaultHandler>
	...

00000c24 <ResetISR>:
{
 c24:	b508      	push	{r3, lr}
    for(pulDest = &_data; pulDest < &_edata; )
 c26:	4b0e      	ldr	r3, [pc, #56]	@ (c60 <zero_loop+0x1e>)
    pulSrc = &_etext;
 c28:	4a0e      	ldr	r2, [pc, #56]	@ (c64 <zero_loop+0x22>)
    for(pulDest = &_data; pulDest < &_edata; )
 c2a:	e003      	b.n	c34 <ResetISR+0x10>
        *pulDest++ = *pulSrc++;
 c2c:	f852 1b04 	ldr.w	r1, [r2], #4
 c30:	f843 1b04 	str.w	r1, [r3], #4
    for(pulDest = &_data; pulDest < &_edata; )
 c34:	490c      	ldr	r1, [pc, #48]	@ (c68 <zero_loop+0x26>)
 c36:	428b      	cmp	r3, r1
 c38:	d3f8      	bcc.n	c2c <ResetISR+0x8>
    __asm("    ldr     r0, =_bss\n"
 c3a:	480c      	ldr	r0, [pc, #48]	@ (c6c <zero_loop+0x2a>)
 c3c:	490c      	ldr	r1, [pc, #48]	@ (c70 <zero_loop+0x2e>)
 c3e:	f04f 0200 	mov.w	r2, #0

00000c42 <zero_loop>:
 c42:	4288      	cmp	r0, r1
 c44:	bfb8      	it	lt
 c46:	f840 2b04 	strlt.w	r2, [r0], #4
 c4a:	dbfa      	blt.n	c42 <zero_loop>
    *((uint32_t *)0xE000ED88) = 0xFFFFFFFF; //SPM376e pg 133 - enable FPU
 c4c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 c50:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 c54:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
    main();
 c58:	f7ff fda6 	bl	7a8 <main>
}
 c5c:	bd08      	pop	{r3, pc}
 c5e:	bf00      	nop
 c60:	20000000 	.word	0x20000000
 c64:	00000db7 	.word	0x00000db7
 c68:	20000000 	.word	0x20000000
 c6c:	20000000 	.word	0x20000000
 c70:	20001220 	.word	0x20001220
 c74:	0000631b 	.word	0x0000631b
 c78:	253a6425 	.word	0x253a6425
 c7c:	00000a64 	.word	0x00000a64
 c80:	64616548 	.word	0x64616548
 c84:	53207265 	.word	0x53207265
 c88:	74726174 	.word	0x74726174
 c8c:	000a6465 	.word	0x000a6465
 c90:	78656e55 	.word	0x78656e55
 c94:	74636570 	.word	0x74636570
 c98:	48206465 	.word	0x48206465
 c9c:	65646165 	.word	0x65646165
 ca0:	64252072 	.word	0x64252072
 ca4:	6572202c 	.word	0x6572202c
 ca8:	74746573 	.word	0x74746573
 cac:	0a676e69 	.word	0x0a676e69
 cb0:	00000000 	.word	0x00000000
 cb4:	20746f47 	.word	0x20746f47
 cb8:	696c6176 	.word	0x696c6176
 cbc:	65682064 	.word	0x65682064
 cc0:	72656461 	.word	0x72656461
 cc4:	00000a21 	.word	0x00000a21
 cc8:	64616548 	.word	0x64616548
 ccc:	69207265 	.word	0x69207265
 cd0:	74732073 	.word	0x74732073
 cd4:	20747261 	.word	0x20747261
 cd8:	7320666f 	.word	0x7320666f
 cdc:	0a6e6163 	.word	0x0a6e6163
 ce0:	00000000 	.word	0x00000000
 ce4:	78656e55 	.word	0x78656e55
 ce8:	74636570 	.word	0x74636570
 cec:	6d206465 	.word	0x6d206465
 cf0:	61737365 	.word	0x61737365
 cf4:	74206567 	.word	0x74206567
 cf8:	20657079 	.word	0x20657079
 cfc:	202e6425 	.word	0x202e6425
 d00:	63736944 	.word	0x63736944
 d04:	69647261 	.word	0x69647261
 d08:	2e2e676e 	.word	0x2e2e676e
 d0c:	00000a2e 	.word	0x00000a2e
 d10:	61766e49 	.word	0x61766e49
 d14:	2064696c 	.word	0x2064696c
 d18:	6d6d6f63 	.word	0x6d6d6f63
 d1c:	61747320 	.word	0x61747320
 d20:	2d206574 	.word	0x2d206574
 d24:	73657220 	.word	0x73657220
 d28:	69747465 	.word	0x69747465
 d2c:	0000676e 	.word	0x0000676e
 d30:	74696e49 	.word	0x74696e49
 d34:	64694c20 	.word	0x64694c20
 d38:	43207261 	.word	0x43207261
 d3c:	736d6d6f 	.word	0x736d6d6f
 d40:	0000000a 	.word	0x0000000a
 d44:	706f7453 	.word	0x706f7453
 d48:	676e6970 	.word	0x676e6970
 d4c:	64694c20 	.word	0x64694c20
 d50:	73207261 	.word	0x73207261
 d54:	0a6e6163 	.word	0x0a6e6163
 d58:	00000000 	.word	0x00000000
 d5c:	73756c46 	.word	0x73756c46
 d60:	676e6968 	.word	0x676e6968
 d64:	64694c20 	.word	0x64694c20
 d68:	62207261 	.word	0x62207261
 d6c:	65666675 	.word	0x65666675
 d70:	00000a72 	.word	0x00000a72
 d74:	72617453 	.word	0x72617453
 d78:	676e6974 	.word	0x676e6974
 d7c:	64696c20 	.word	0x64696c20
 d80:	73207261 	.word	0x73207261
 d84:	236e6163 	.word	0x236e6163
 d88:	23232323 	.word	0x23232323
 d8c:	23232323 	.word	0x23232323
 d90:	23232323 	.word	0x23232323
 d94:	23232323 	.word	0x23232323
 d98:	23232323 	.word	0x23232323
 d9c:	0000000a 	.word	0x0000000a
 da0:	004e614e 	.word	0x004e614e
 da4:	00666e69 	.word	0x00666e69
 da8:	74756f5b 	.word	0x74756f5b
 dac:	20666f20 	.word	0x20666f20
 db0:	676e6172 	.word	0x676e6172
 db4:	5d65      	.short	0x5d65
	...
