
objs/lidar.axf:     file format elf32-littlearm

Contents of the .debug_info section:

  Compilation Unit @ offset 0:
   Length:        0x8ae (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0
   Pointer Size:  4
 <0><c>: Abbrev Number: 30 (DW_TAG_compile_unit)
    <d>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <11>   DW_AT_language    : 29	(C11)
    <12>   DW_AT_name        : (indirect string, offset: 0x3b): src/lidar.c
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <1a>   DW_AT_ranges      : 0x26
    <1e>   DW_AT_low_pc      : 0
    <22>   DW_AT_stmt_list   : 0
 <1><26>: Abbrev Number: 5 (DW_TAG_base_type)
    <27>   DW_AT_byte_size   : 8
    <28>   DW_AT_encoding    : 7	(unsigned)
    <29>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><2d>: Abbrev Number: 5 (DW_TAG_base_type)
    <2e>   DW_AT_byte_size   : 4
    <2f>   DW_AT_encoding    : 7	(unsigned)
    <30>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><34>: Abbrev Number: 5 (DW_TAG_base_type)
    <35>   DW_AT_byte_size   : 1
    <36>   DW_AT_encoding    : 6	(signed char)
    <37>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><3b>: Abbrev Number: 6 (DW_TAG_typedef)
    <3c>   DW_AT_name        : (indirect string, offset: 0x3f9): __uint8_t
    <40>   DW_AT_decl_file   : 2
    <41>   DW_AT_decl_line   : 43
    <42>   DW_AT_decl_column : 24
    <43>   DW_AT_type        : <0x47>
 <1><47>: Abbrev Number: 5 (DW_TAG_base_type)
    <48>   DW_AT_byte_size   : 1
    <49>   DW_AT_encoding    : 8	(unsigned char)
    <4a>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><4e>: Abbrev Number: 5 (DW_TAG_base_type)
    <4f>   DW_AT_byte_size   : 2
    <50>   DW_AT_encoding    : 5	(signed)
    <51>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><55>: Abbrev Number: 6 (DW_TAG_typedef)
    <56>   DW_AT_name        : (indirect string, offset: 0x93): __uint16_t
    <5a>   DW_AT_decl_file   : 2
    <5b>   DW_AT_decl_line   : 57
    <5c>   DW_AT_decl_column : 25
    <5d>   DW_AT_type        : <0x61>
 <1><61>: Abbrev Number: 5 (DW_TAG_base_type)
    <62>   DW_AT_byte_size   : 2
    <63>   DW_AT_encoding    : 7	(unsigned)
    <64>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><68>: Abbrev Number: 6 (DW_TAG_typedef)
    <69>   DW_AT_name        : (indirect string, offset: 0x34e): __int32_t
    <6d>   DW_AT_decl_file   : 2
    <6e>   DW_AT_decl_line   : 77
    <6f>   DW_AT_decl_column : 24
    <70>   DW_AT_type        : <0x74>
 <1><74>: Abbrev Number: 5 (DW_TAG_base_type)
    <75>   DW_AT_byte_size   : 4
    <76>   DW_AT_encoding    : 5	(signed)
    <77>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><7b>: Abbrev Number: 6 (DW_TAG_typedef)
    <7c>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <80>   DW_AT_decl_file   : 2
    <81>   DW_AT_decl_line   : 79
    <82>   DW_AT_decl_column : 25
    <83>   DW_AT_type        : <0x87>
 <1><87>: Abbrev Number: 5 (DW_TAG_base_type)
    <88>   DW_AT_byte_size   : 4
    <89>   DW_AT_encoding    : 7	(unsigned)
    <8a>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><8e>: Abbrev Number: 5 (DW_TAG_base_type)
    <8f>   DW_AT_byte_size   : 8
    <90>   DW_AT_encoding    : 5	(signed)
    <91>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><95>: Abbrev Number: 31 (DW_TAG_base_type)
    <96>   DW_AT_byte_size   : 4
    <97>   DW_AT_encoding    : 5	(signed)
    <98>   DW_AT_name        : int
 <1><9c>: Abbrev Number: 6 (DW_TAG_typedef)
    <9d>   DW_AT_name        : (indirect string, offset: 0x3fb): uint8_t
    <a1>   DW_AT_decl_file   : 3
    <a2>   DW_AT_decl_line   : 24
    <a3>   DW_AT_decl_column : 19
    <a4>   DW_AT_type        : <0x3b>
 <1><a8>: Abbrev Number: 6 (DW_TAG_typedef)
    <a9>   DW_AT_name        : (indirect string, offset: 0x95): uint16_t
    <ad>   DW_AT_decl_file   : 3
    <ae>   DW_AT_decl_line   : 36
    <af>   DW_AT_decl_column : 20
    <b0>   DW_AT_type        : <0x55>
 <1><b4>: Abbrev Number: 6 (DW_TAG_typedef)
    <b5>   DW_AT_name        : (indirect string, offset: 0x350): int32_t
    <b9>   DW_AT_decl_file   : 3
    <ba>   DW_AT_decl_line   : 44
    <bb>   DW_AT_decl_column : 19
    <bc>   DW_AT_type        : <0x68>
 <1><c0>: Abbrev Number: 32 (DW_TAG_const_type)
    <c1>   DW_AT_type        : <0xb4>
 <1><c5>: Abbrev Number: 6 (DW_TAG_typedef)
    <c6>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <ca>   DW_AT_decl_file   : 3
    <cb>   DW_AT_decl_line   : 48
    <cc>   DW_AT_decl_column : 20
    <cd>   DW_AT_type        : <0x7b>
 <1><d1>: Abbrev Number: 33 (DW_TAG_variable)
    <d2>   DW_AT_name        : (indirect string, offset: 0x10d): active_point_buffer
    <d6>   DW_AT_decl_file   : 4
    <d7>   DW_AT_decl_line   : 5
    <d8>   DW_AT_decl_column : 18
    <d9>   DW_AT_type        : <0xdd>
    <dd>   DW_AT_external    : 1
    <dd>   DW_AT_declaration : 1
 <1><dd>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <de>   DW_AT_byte_size   : 4
    <de>   DW_AT_type        : <0xc5>
 <1><e2>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <e3>   DW_AT_encoding    : 7	(unsigned)
    <e3>   DW_AT_byte_size   : 1
    <e3>   DW_AT_type        : <0x47>
    <e7>   DW_AT_decl_file   : 4
    <e8>   DW_AT_decl_line   : 10
    <e9>   DW_AT_decl_column : 7
    <ea>   DW_AT_sibling     : <0xfb>
 <2><ee>: Abbrev Number: 3 (DW_TAG_enumerator)
    <ef>   DW_AT_name        : (indirect string, offset: 0x2e8): MODE_SINGLE
    <f3>   DW_AT_const_value : 0
 <2><f4>: Abbrev Number: 3 (DW_TAG_enumerator)
    <f5>   DW_AT_name        : (indirect string, offset: 0x200): MODE_CONTINUOUS
    <f9>   DW_AT_const_value : 1
 <2><fa>: Abbrev Number: 0
 <1><fb>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <fc>   DW_AT_encoding    : 7	(unsigned)
    <fc>   DW_AT_byte_size   : 1
    <fc>   DW_AT_type        : <0x47>
    <100>   DW_AT_decl_file   : 4
    <101>   DW_AT_decl_line   : 11
    <102>   DW_AT_decl_column : 7
    <103>   DW_AT_sibling     : <0x114>
 <2><107>: Abbrev Number: 3 (DW_TAG_enumerator)
    <108>   DW_AT_name        : (indirect string, offset: 0x37c): TYPE_SCAN
    <10c>   DW_AT_const_value : 129
 <2><10d>: Abbrev Number: 3 (DW_TAG_enumerator)
    <10e>   DW_AT_name        : (indirect string, offset: 0x210): TYPE_HEALTH_STATUS
    <112>   DW_AT_const_value : 6
 <2><113>: Abbrev Number: 0
 <1><114>: Abbrev Number: 24 (DW_TAG_structure_type)
    <115>   DW_AT_name        : (indirect string, offset: 0xb): HeaderFields
    <119>   DW_AT_byte_size   : 7
    <11a>   DW_AT_decl_file   : 4
    <11a>   DW_AT_decl_line   : 7
    <11b>   DW_AT_decl_column : 32
    <11b>   DW_AT_sibling     : <0x153>
 <2><11f>: Abbrev Number: 8 (DW_TAG_member)
    <120>   DW_AT_name        : (indirect string, offset: 0x9e): start_code
    <124>   DW_AT_decl_file   : 4
    <124>   DW_AT_decl_line   : 8
    <125>   DW_AT_decl_column : 11
    <126>   DW_AT_type        : <0xa8>
    <12a>   DW_AT_data_member_location: 0
 <2><12b>: Abbrev Number: 13 (DW_TAG_member)
    <12c>   DW_AT_name        : (indirect string, offset: 0x18a): length
    <130>   DW_AT_decl_file   : 4
    <130>   DW_AT_decl_line   : 9
    <131>   DW_AT_decl_column : 11
    <132>   DW_AT_type        : <0xc5>
    <136>   DW_AT_bit_size    : 30
    <137>   DW_AT_data_bit_offset: 16
 <2><138>: Abbrev Number: 13 (DW_TAG_member)
    <139>   DW_AT_name        : (indirect string, offset: 0x78): mode
    <13d>   DW_AT_decl_file   : 4
    <13d>   DW_AT_decl_line   : 10
    <13e>   DW_AT_decl_column : 46
    <13f>   DW_AT_type        : <0xe2>
    <143>   DW_AT_bit_size    : 2
    <144>   DW_AT_data_bit_offset: 46
 <2><145>: Abbrev Number: 13 (DW_TAG_member)
    <146>   DW_AT_name        : (indirect string, offset: 0x232): type
    <14a>   DW_AT_decl_file   : 4
    <14a>   DW_AT_decl_line   : 11
    <14b>   DW_AT_decl_column : 49
    <14c>   DW_AT_type        : <0xfb>
    <150>   DW_AT_bit_size    : 8
    <151>   DW_AT_data_bit_offset: 48
 <2><152>: Abbrev Number: 0
 <1><153>: Abbrev Number: 25 (DW_TAG_union_type)
    <154>   DW_AT_byte_size   : 7
    <155>   DW_AT_decl_file   : 4
    <155>   DW_AT_decl_line   : 13
    <156>   DW_AT_decl_column : 9
    <156>   DW_AT_sibling     : <0x171>
 <2><15a>: Abbrev Number: 14 (DW_TAG_member)
    <15b>   DW_AT_name        : (indirect string, offset: 0x316): bytes
    <15f>   DW_AT_decl_file   : 4
    <15f>   DW_AT_decl_line   : 14
    <160>   DW_AT_decl_column : 10
    <161>   DW_AT_type        : <0x171>
 <2><165>: Abbrev Number: 14 (DW_TAG_member)
    <166>   DW_AT_name        : (indirect string, offset: 0): header
    <16a>   DW_AT_decl_file   : 4
    <16a>   DW_AT_decl_line   : 15
    <16b>   DW_AT_decl_column : 22
    <16c>   DW_AT_type        : <0x114>
 <2><170>: Abbrev Number: 0
 <1><171>: Abbrev Number: 19 (DW_TAG_array_type)
    <172>   DW_AT_type        : <0x9c>
    <176>   DW_AT_sibling     : <0x181>
 <2><17a>: Abbrev Number: 26 (DW_TAG_subrange_type)
    <17b>   DW_AT_type        : <0x2d>
    <17f>   DW_AT_upper_bound : 6
 <2><180>: Abbrev Number: 0
 <1><181>: Abbrev Number: 6 (DW_TAG_typedef)
    <182>   DW_AT_name        : (indirect string, offset: 0x333): PacketHeader
    <186>   DW_AT_decl_file   : 4
    <187>   DW_AT_decl_line   : 16
    <188>   DW_AT_decl_column : 3
    <189>   DW_AT_type        : <0x153>
 <1><18d>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <18e>   DW_AT_encoding    : 7	(unsigned)
    <18e>   DW_AT_byte_size   : 1
    <18e>   DW_AT_type        : <0x47>
    <192>   DW_AT_decl_file   : 4
    <193>   DW_AT_decl_line   : 21
    <194>   DW_AT_decl_column : 7
    <195>   DW_AT_sibling     : <0x1a6>
 <2><199>: Abbrev Number: 3 (DW_TAG_enumerator)
    <19a>   DW_AT_name        : (indirect string, offset: 0x86): START_PACKET
    <19e>   DW_AT_const_value : 1
 <2><19f>: Abbrev Number: 3 (DW_TAG_enumerator)
    <1a0>   DW_AT_name        : (indirect string, offset: 0xb1): DATA_PACKET
    <1a4>   DW_AT_const_value : 0
 <2><1a5>: Abbrev Number: 0
 <1><1a6>: Abbrev Number: 24 (DW_TAG_structure_type)
    <1a7>   DW_AT_name        : (indirect string, offset: 0x7): ScanHeaderFields
    <1ab>   DW_AT_byte_size   : 10
    <1ac>   DW_AT_decl_file   : 4
    <1ac>   DW_AT_decl_line   : 19
    <1ad>   DW_AT_decl_column : 32
    <1ad>   DW_AT_sibling     : <0x1fb>
 <2><1b1>: Abbrev Number: 8 (DW_TAG_member)
    <1b2>   DW_AT_name        : (indirect string, offset: 0x9e): start_code
    <1b6>   DW_AT_decl_file   : 4
    <1b6>   DW_AT_decl_line   : 20
    <1b7>   DW_AT_decl_column : 11
    <1b8>   DW_AT_type        : <0xa8>
    <1bc>   DW_AT_data_member_location: 0
 <2><1bd>: Abbrev Number: 13 (DW_TAG_member)
    <1be>   DW_AT_name        : (indirect string, offset: 0x232): type
    <1c2>   DW_AT_decl_file   : 4
    <1c2>   DW_AT_decl_line   : 21
    <1c3>   DW_AT_decl_column : 45
    <1c4>   DW_AT_type        : <0x18d>
    <1c8>   DW_AT_bit_size    : 8
    <1c9>   DW_AT_data_bit_offset: 16
 <2><1ca>: Abbrev Number: 8 (DW_TAG_member)
    <1cb>   DW_AT_name        : (indirect string, offset: 0x237): sample_count
    <1cf>   DW_AT_decl_file   : 4
    <1cf>   DW_AT_decl_line   : 22
    <1d0>   DW_AT_decl_column : 10
    <1d1>   DW_AT_type        : <0x9c>
    <1d5>   DW_AT_data_member_location: 3
 <2><1d6>: Abbrev Number: 8 (DW_TAG_member)
    <1d7>   DW_AT_name        : (indirect string, offset: 0x38f): start_angle
    <1db>   DW_AT_decl_file   : 4
    <1db>   DW_AT_decl_line   : 23
    <1dc>   DW_AT_decl_column : 11
    <1dd>   DW_AT_type        : <0xa8>
    <1e1>   DW_AT_data_member_location: 4
 <2><1e2>: Abbrev Number: 8 (DW_TAG_member)
    <1e3>   DW_AT_name        : (indirect string, offset: 0x19f): end_angle
    <1e7>   DW_AT_decl_file   : 4
    <1e7>   DW_AT_decl_line   : 24
    <1e8>   DW_AT_decl_column : 11
    <1e9>   DW_AT_type        : <0xa8>
    <1ed>   DW_AT_data_member_location: 6
 <2><1ee>: Abbrev Number: 8 (DW_TAG_member)
    <1ef>   DW_AT_name        : (indirect string, offset: 0x373): checksum
    <1f3>   DW_AT_decl_file   : 4
    <1f3>   DW_AT_decl_line   : 25
    <1f4>   DW_AT_decl_column : 11
    <1f5>   DW_AT_type        : <0xa8>
    <1f9>   DW_AT_data_member_location: 8
 <2><1fa>: Abbrev Number: 0
 <1><1fb>: Abbrev Number: 25 (DW_TAG_union_type)
    <1fc>   DW_AT_byte_size   : 10
    <1fd>   DW_AT_decl_file   : 4
    <1fd>   DW_AT_decl_line   : 27
    <1fe>   DW_AT_decl_column : 9
    <1fe>   DW_AT_sibling     : <0x219>
 <2><202>: Abbrev Number: 14 (DW_TAG_member)
    <203>   DW_AT_name        : (indirect string, offset: 0x316): bytes
    <207>   DW_AT_decl_file   : 4
    <207>   DW_AT_decl_line   : 28
    <208>   DW_AT_decl_column : 10
    <209>   DW_AT_type        : <0x219>
 <2><20d>: Abbrev Number: 14 (DW_TAG_member)
    <20e>   DW_AT_name        : (indirect string, offset: 0): header
    <212>   DW_AT_decl_file   : 4
    <212>   DW_AT_decl_line   : 29
    <213>   DW_AT_decl_column : 26
    <214>   DW_AT_type        : <0x1a6>
 <2><218>: Abbrev Number: 0
 <1><219>: Abbrev Number: 19 (DW_TAG_array_type)
    <21a>   DW_AT_type        : <0x9c>
    <21e>   DW_AT_sibling     : <0x229>
 <2><222>: Abbrev Number: 26 (DW_TAG_subrange_type)
    <223>   DW_AT_type        : <0x2d>
    <227>   DW_AT_upper_bound : 9
 <2><228>: Abbrev Number: 0
 <1><229>: Abbrev Number: 6 (DW_TAG_typedef)
    <22a>   DW_AT_name        : (indirect string, offset: 0x368): ScanHeader
    <22e>   DW_AT_decl_file   : 4
    <22f>   DW_AT_decl_line   : 30
    <230>   DW_AT_decl_column : 3
    <231>   DW_AT_type        : <0x1fb>
 <1><235>: Abbrev Number: 19 (DW_TAG_array_type)
    <236>   DW_AT_type        : <0xc5>
    <23a>   DW_AT_sibling     : <0x246>
 <2><23e>: Abbrev Number: 34 (DW_TAG_subrange_type)
    <23f>   DW_AT_type        : <0x2d>
    <243>   DW_AT_upper_bound : 359
 <2><245>: Abbrev Number: 0
 <1><246>: Abbrev Number: 15 (DW_TAG_variable)
    <247>   DW_AT_name        : (indirect string, offset: 0x1c0): points_buf_0
    <24b>   DW_AT_decl_file   : 1
    <24b>   DW_AT_decl_line   : 33
    <24c>   DW_AT_decl_column : 10
    <24d>   DW_AT_type        : <0x235>
    <251>   DW_AT_external    : 1
    <251>   DW_AT_location    : 5 byte block: 3 64 b 0 20 	(DW_OP_addr: 20000b64)
 <1><257>: Abbrev Number: 15 (DW_TAG_variable)
    <258>   DW_AT_name        : (indirect string, offset: 0x1cd): points_buf_1
    <25c>   DW_AT_decl_file   : 1
    <25c>   DW_AT_decl_line   : 34
    <25d>   DW_AT_decl_column : 10
    <25e>   DW_AT_type        : <0x235>
    <262>   DW_AT_external    : 1
    <262>   DW_AT_location    : 5 byte block: 3 c4 5 0 20 	(DW_OP_addr: 200005c4)
 <1><268>: Abbrev Number: 15 (DW_TAG_variable)
    <269>   DW_AT_name        : (indirect string, offset: 0x340): points_smooth
    <26d>   DW_AT_decl_file   : 1
    <26d>   DW_AT_decl_line   : 35
    <26e>   DW_AT_decl_column : 10
    <26f>   DW_AT_type        : <0x235>
    <273>   DW_AT_external    : 1
    <273>   DW_AT_location    : 5 byte block: 3 24 0 0 20 	(DW_OP_addr: 20000024)
 <1><279>: Abbrev Number: 35 (DW_TAG_variable)
    <27a>   DW_AT_specification: <0xd1>
    <27e>   DW_AT_decl_file   : 1
    <27f>   DW_AT_decl_line   : 36
    <280>   DW_AT_decl_column : 11
    <281>   DW_AT_location    : 5 byte block: 3 20 0 0 20 	(DW_OP_addr: 20000020)
 <1><287>: Abbrev Number: 15 (DW_TAG_variable)
    <288>   DW_AT_name        : (indirect string, offset: 0x3e2): receiving_point_buffer
    <28c>   DW_AT_decl_file   : 1
    <28c>   DW_AT_decl_line   : 37
    <28d>   DW_AT_decl_column : 11
    <28e>   DW_AT_type        : <0xdd>
    <292>   DW_AT_external    : 1
    <292>   DW_AT_location    : 5 byte block: 3 1c 0 0 20 	(DW_OP_addr: 2000001c)
 <1><298>: Abbrev Number: 36 (DW_TAG_subprogram)
    <299>   DW_AT_external    : 1
    <299>   DW_AT_name        : (indirect string, offset: 0x150): printlf
    <29d>   DW_AT_decl_file   : 5
    <29e>   DW_AT_decl_line   : 10
    <29f>   DW_AT_decl_column : 6
    <2a0>   DW_AT_prototyped  : 1
    <2a0>   DW_AT_declaration : 1
    <2a0>   DW_AT_sibling     : <0x2ab>
 <2><2a4>: Abbrev Number: 37 (DW_TAG_formal_parameter)
    <2a5>   DW_AT_type        : <0x2ab>
 <2><2a9>: Abbrev Number: 38 (DW_TAG_unspecified_parameters)
 <2><2aa>: Abbrev Number: 0
 <1><2ab>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <2ac>   DW_AT_byte_size   : 4
    <2ac>   DW_AT_type        : <0x2b0>
 <1><2b0>: Abbrev Number: 5 (DW_TAG_base_type)
    <2b1>   DW_AT_byte_size   : 1
    <2b2>   DW_AT_encoding    : 8	(unsigned char)
    <2b3>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><2b7>: Abbrev Number: 10 (DW_TAG_subprogram)
    <2b8>   DW_AT_external    : 1
    <2b8>   DW_AT_name        : (indirect string, offset: 0x2f4): process_packets
    <2bc>   DW_AT_decl_file   : 1
    <2bc>   DW_AT_decl_line   : 144
    <2bd>   DW_AT_decl_column : 6
    <2bd>   DW_AT_prototyped  : 1
    <2bd>   DW_AT_low_pc      : 0x518
    <2c1>   DW_AT_high_pc     : 0x270
    <2c5>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <2c7>   DW_AT_call_all_calls: 1
    <2c7>   DW_AT_sibling     : <0x543>
 <2><2cb>: Abbrev Number: 12 (DW_TAG_enumeration_type)
    <2cc>   DW_AT_encoding    : 7	(unsigned)
    <2cc>   DW_AT_byte_size   : 1
    <2cc>   DW_AT_type        : <0x47>
    <2d0>   DW_AT_decl_file   : 1
    <2d1>   DW_AT_decl_line   : 145
    <2d2>   DW_AT_decl_column : 14
    <2d3>   DW_AT_sibling     : <0x2fc>
 <3><2d7>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2d8>   DW_AT_name        : (indirect string, offset: 0x1da): COMM_WAITING
    <2dc>   DW_AT_const_value : 0
 <3><2dd>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2de>   DW_AT_name        : (indirect string, offset: 0x3ae): RECEIVING_HEADER
    <2e2>   DW_AT_const_value : 1
 <3><2e3>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2e4>   DW_AT_name        : (indirect string, offset: 0x18): WAITING_SCAN_HEADER
    <2e8>   DW_AT_const_value : 2
 <3><2e9>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2ea>   DW_AT_name        : (indirect string, offset: 0xc7): RECEIVING_SCAN_HEADER
    <2ee>   DW_AT_const_value : 3
 <3><2ef>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2f0>   DW_AT_name        : (indirect string, offset: 0x165): RECEIVING_SCAN_DATA
    <2f4>   DW_AT_const_value : 4
 <3><2f5>: Abbrev Number: 3 (DW_TAG_enumerator)
    <2f6>   DW_AT_name        : (indirect string, offset: 0x3ca): RECEIVING_HEALTH_REPORT
    <2fa>   DW_AT_const_value : 5
 <3><2fb>: Abbrev Number: 0
 <2><2fc>: Abbrev Number: 16 (DW_TAG_variable)
    <2fd>   DW_AT_name        : (indirect string, offset: 0x3bf): comm_state
    <301>   DW_AT_decl_file   : 1
    <301>   DW_AT_decl_line   : 145
    <302>   DW_AT_decl_column : 137
    <303>   DW_AT_type        : <0x2cb>
    <307>   DW_AT_location    : 5 byte block: 3 1a 0 0 20 	(DW_OP_addr: 2000001a)
 <2><30d>: Abbrev Number: 16 (DW_TAG_variable)
    <30e>   DW_AT_name        : (indirect string, offset: 0x158): current_byte
    <312>   DW_AT_decl_file   : 1
    <312>   DW_AT_decl_line   : 146
    <313>   DW_AT_decl_column : 18
    <314>   DW_AT_type        : <0xa8>
    <318>   DW_AT_location    : 5 byte block: 3 18 0 0 20 	(DW_OP_addr: 20000018)
 <2><31e>: Abbrev Number: 16 (DW_TAG_variable)
    <31f>   DW_AT_name        : (indirect string, offset: 0x31c): current_message
    <323>   DW_AT_decl_file   : 1
    <323>   DW_AT_decl_line   : 147
    <324>   DW_AT_decl_column : 22
    <325>   DW_AT_type        : <0x181>
    <329>   DW_AT_location    : 5 byte block: 3 10 0 0 20 	(DW_OP_addr: 20000010)
 <2><32f>: Abbrev Number: 16 (DW_TAG_variable)
    <330>   DW_AT_name        : (indirect string, offset: 0x100): current_scan
    <334>   DW_AT_decl_file   : 1
    <334>   DW_AT_decl_line   : 148
    <335>   DW_AT_decl_column : 20
    <336>   DW_AT_type        : <0x229>
    <33a>   DW_AT_location    : 5 byte block: 3 4 0 0 20 	(DW_OP_addr: 20000004)
 <2><340>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <341>   DW_AT_low_pc      : 0x51c
    <345>   DW_AT_high_pc     : 0x2e
    <349>   DW_AT_sibling     : <0x387>
 <3><34d>: Abbrev Number: 9 (DW_TAG_variable)
    <34e>   DW_AT_name        : tmp
    <352>   DW_AT_decl_file   : 1
    <352>   DW_AT_decl_line   : 157
    <353>   DW_AT_decl_column : 10
    <354>   DW_AT_type        : <0x2b0>
    <358>   DW_AT_location    : 0xe (location list)
    <35c>   DW_AT_GNU_locviews: 0xc
 <3><360>: Abbrev Number: 2 (DW_TAG_call_site)
    <361>   DW_AT_call_return_pc: 0x528
    <365>   DW_AT_sibling     : <0x373>
 <4><369>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <36a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <36c>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <4><372>: Abbrev Number: 0
 <3><373>: Abbrev Number: 17 (DW_TAG_call_site)
    <374>   DW_AT_call_return_pc: 0x54a
    <378>   DW_AT_call_origin : <0x298>
 <4><37c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <37d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <37f>   DW_AT_call_value  : 5 byte block: 3 4 c 0 0 	(DW_OP_addr: c04)
 <4><385>: Abbrev Number: 0
 <3><386>: Abbrev Number: 0
 <2><387>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <388>   DW_AT_low_pc      : 0x652
    <38c>   DW_AT_high_pc     : 0x24
    <390>   DW_AT_sibling     : <0x3c3>
 <3><394>: Abbrev Number: 7 (DW_TAG_variable)
    <395>   DW_AT_name        : (indirect string, offset: 0xdd): temp
    <399>   DW_AT_decl_file   : 1
    <399>   DW_AT_decl_line   : 228
    <39a>   DW_AT_decl_column : 16
    <39b>   DW_AT_type        : <0xdd>
    <39f>   DW_AT_location    : 0x19 (location list)
    <3a3>   DW_AT_GNU_locviews: 0x17
 <3><3a7>: Abbrev Number: 4 (DW_TAG_call_site)
    <3a8>   DW_AT_call_return_pc: 0x656
    <3ac>   DW_AT_call_origin : <0x7fc>
 <3><3b0>: Abbrev Number: 4 (DW_TAG_call_site)
    <3b1>   DW_AT_call_return_pc: 0x66c
    <3b5>   DW_AT_call_origin : <0x883>
 <3><3b9>: Abbrev Number: 4 (DW_TAG_call_site)
    <3ba>   DW_AT_call_return_pc: 0x676
    <3be>   DW_AT_call_origin : <0x543>
 <3><3c2>: Abbrev Number: 0
 <2><3c3>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <3c4>   DW_AT_low_pc      : 0x678
    <3c8>   DW_AT_high_pc     : 0x88
    <3cc>   DW_AT_sibling     : <0x452>
 <3><3d0>: Abbrev Number: 27 (DW_TAG_variable)
    <3d1>   DW_AT_name        : lsb
    <3d5>   DW_AT_decl_file   : 1
    <3d5>   DW_AT_decl_line   : 245
    <3d6>   DW_AT_decl_column : 20
    <3d7>   DW_AT_type        : <0x9c>
    <3db>   DW_AT_location    : 5 byte block: 3 1 0 0 20 	(DW_OP_addr: 20000001)
 <3><3e1>: Abbrev Number: 27 (DW_TAG_variable)
    <3e2>   DW_AT_name        : msb
    <3e6>   DW_AT_decl_file   : 1
    <3e6>   DW_AT_decl_line   : 245
    <3e7>   DW_AT_decl_column : 25
    <3e8>   DW_AT_type        : <0x9c>
    <3ec>   DW_AT_location    : 5 byte block: 3 0 0 0 20 	(DW_OP_addr: 20000000)
 <3><3f2>: Abbrev Number: 28 (DW_TAG_lexical_block)
    <3f3>   DW_AT_low_pc      : 0x6a6
    <3f7>   DW_AT_high_pc     : 0x5a
 <4><3fb>: Abbrev Number: 9 (DW_TAG_variable)
    <3fc>   DW_AT_name        : val
    <400>   DW_AT_decl_file   : 1
    <400>   DW_AT_decl_line   : 253
    <401>   DW_AT_decl_column : 16
    <402>   DW_AT_type        : <0xc5>
    <406>   DW_AT_location    : 0x24 (location list)
    <40a>   DW_AT_GNU_locviews: 0x22
 <4><40e>: Abbrev Number: 7 (DW_TAG_variable)
    <40f>   DW_AT_name        : (indirect string, offset: 0x1a3): angle
    <413>   DW_AT_decl_file   : 1
    <413>   DW_AT_decl_line   : 255
    <414>   DW_AT_decl_column : 11
    <415>   DW_AT_type        : <0x95>
    <419>   DW_AT_location    : 0x2f (location list)
    <41d>   DW_AT_GNU_locviews: 0x2d
 <4><421>: Abbrev Number: 2 (DW_TAG_call_site)
    <422>   DW_AT_call_return_pc: 0x6b2
    <426>   DW_AT_sibling     : <0x434>
 <5><42a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <42b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <42d>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <5><433>: Abbrev Number: 0
 <4><434>: Abbrev Number: 2 (DW_TAG_call_site)
    <435>   DW_AT_call_return_pc: 0x6c4
    <439>   DW_AT_sibling     : <0x447>
 <5><43d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <43e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <440>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <5><446>: Abbrev Number: 0
 <4><447>: Abbrev Number: 4 (DW_TAG_call_site)
    <448>   DW_AT_call_return_pc: 0x6e6
    <44c>   DW_AT_call_origin : <0x5c2>
 <4><450>: Abbrev Number: 0
 <3><451>: Abbrev Number: 0
 <2><452>: Abbrev Number: 2 (DW_TAG_call_site)
    <453>   DW_AT_call_return_pc: 0x558
    <457>   DW_AT_sibling     : <0x465>
 <3><45b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <45c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <45e>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><464>: Abbrev Number: 0
 <2><465>: Abbrev Number: 18 (DW_TAG_call_site)
    <466>   DW_AT_call_return_pc: 0x57c
    <46a>   DW_AT_call_origin : <0x298>
    <46e>   DW_AT_sibling     : <0x47c>
 <3><472>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <473>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <475>   DW_AT_call_value  : 5 byte block: 3 14 c 0 0 	(DW_OP_addr: c14)
 <3><47b>: Abbrev Number: 0
 <2><47c>: Abbrev Number: 4 (DW_TAG_call_site)
    <47d>   DW_AT_call_return_pc: 0x580
    <481>   DW_AT_call_origin : <0x684>
 <2><485>: Abbrev Number: 4 (DW_TAG_call_site)
    <486>   DW_AT_call_return_pc: 0x584
    <48a>   DW_AT_call_origin : <0x64d>
 <2><48e>: Abbrev Number: 2 (DW_TAG_call_site)
    <48f>   DW_AT_call_return_pc: 0x594
    <493>   DW_AT_sibling     : <0x49f>
 <3><497>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <498>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <49a>   DW_AT_call_value  : 3 byte block: a 20 4e 	(DW_OP_const2u: 20000)
 <3><49e>: Abbrev Number: 0
 <2><49f>: Abbrev Number: 4 (DW_TAG_call_site)
    <4a0>   DW_AT_call_return_pc: 0x598
    <4a4>   DW_AT_call_origin : <0x64d>
 <2><4a8>: Abbrev Number: 4 (DW_TAG_call_site)
    <4a9>   DW_AT_call_return_pc: 0x59c
    <4ad>   DW_AT_call_origin : <0x6c1>
 <2><4b1>: Abbrev Number: 18 (DW_TAG_call_site)
    <4b2>   DW_AT_call_return_pc: 0x5aa
    <4b6>   DW_AT_call_origin : <0x298>
    <4ba>   DW_AT_sibling     : <0x4c8>
 <3><4be>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4bf>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4c1>   DW_AT_call_value  : 5 byte block: 3 38 c 0 0 	(DW_OP_addr: c38)
 <3><4c7>: Abbrev Number: 0
 <2><4c8>: Abbrev Number: 18 (DW_TAG_call_site)
    <4c9>   DW_AT_call_return_pc: 0x5c8
    <4cd>   DW_AT_call_origin : <0x298>
    <4d1>   DW_AT_sibling     : <0x4df>
 <3><4d5>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4d6>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4d8>   DW_AT_call_value  : 5 byte block: 3 4c c 0 0 	(DW_OP_addr: c4c)
 <3><4de>: Abbrev Number: 0
 <2><4df>: Abbrev Number: 18 (DW_TAG_call_site)
    <4e0>   DW_AT_call_return_pc: 0x5d8
    <4e4>   DW_AT_call_origin : <0x298>
    <4e8>   DW_AT_sibling     : <0x4f6>
 <3><4ec>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <4ed>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <4ef>   DW_AT_call_value  : 5 byte block: 3 68 c 0 0 	(DW_OP_addr: c68)
 <3><4f5>: Abbrev Number: 0
 <2><4f6>: Abbrev Number: 2 (DW_TAG_call_site)
    <4f7>   DW_AT_call_return_pc: 0x5ec
    <4fb>   DW_AT_sibling     : <0x509>
 <3><4ff>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <500>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <502>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><508>: Abbrev Number: 0
 <2><509>: Abbrev Number: 2 (DW_TAG_call_site)
    <50a>   DW_AT_call_return_pc: 0x612
    <50e>   DW_AT_sibling     : <0x51c>
 <3><512>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <513>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <515>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><51b>: Abbrev Number: 0
 <2><51c>: Abbrev Number: 2 (DW_TAG_call_site)
    <51d>   DW_AT_call_return_pc: 0x712
    <521>   DW_AT_sibling     : <0x52f>
 <3><525>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <526>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <528>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><52e>: Abbrev Number: 0
 <2><52f>: Abbrev Number: 17 (DW_TAG_call_site)
    <530>   DW_AT_call_return_pc: 0x742
    <534>   DW_AT_call_origin : <0x298>
 <3><538>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <539>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <53b>   DW_AT_call_value  : 5 byte block: 3 94 c 0 0 	(DW_OP_addr: c94)
 <3><541>: Abbrev Number: 0
 <2><542>: Abbrev Number: 0
 <1><543>: Abbrev Number: 10 (DW_TAG_subprogram)
    <544>   DW_AT_external    : 1
    <544>   DW_AT_name        : (indirect string, offset: 0x6b): print_angles
    <548>   DW_AT_decl_file   : 1
    <548>   DW_AT_decl_line   : 134
    <549>   DW_AT_decl_column : 6
    <549>   DW_AT_prototyped  : 1
    <549>   DW_AT_low_pc      : 0x4bc
    <54d>   DW_AT_high_pc     : 0x5c
    <551>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <553>   DW_AT_call_all_calls: 1
    <553>   DW_AT_sibling     : <0x5c2>
 <2><557>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <558>   DW_AT_low_pc      : 0x4be
    <55c>   DW_AT_high_pc     : 0x26
    <560>   DW_AT_sibling     : <0x576>
 <3><564>: Abbrev Number: 9 (DW_TAG_variable)
    <565>   DW_AT_name        : i
    <567>   DW_AT_decl_file   : 1
    <567>   DW_AT_decl_line   : 135
    <568>   DW_AT_decl_column : 10
    <569>   DW_AT_type        : <0x95>
    <56d>   DW_AT_location    : 0x3c (location list)
    <571>   DW_AT_GNU_locviews: 0x38
 <3><575>: Abbrev Number: 0
 <2><576>: Abbrev Number: 11 (DW_TAG_lexical_block)
    <577>   DW_AT_low_pc      : 0x4ea
    <57b>   DW_AT_high_pc     : 0x1a
    <57f>   DW_AT_sibling     : <0x5ae>
 <3><583>: Abbrev Number: 9 (DW_TAG_variable)
    <584>   DW_AT_name        : i
    <586>   DW_AT_decl_file   : 1
    <586>   DW_AT_decl_line   : 139
    <587>   DW_AT_decl_column : 10
    <588>   DW_AT_type        : <0x95>
    <58c>   DW_AT_location    : 0x51 (location list)
    <590>   DW_AT_GNU_locviews: 0x4d
 <3><594>: Abbrev Number: 17 (DW_TAG_call_site)
    <595>   DW_AT_call_return_pc: 0x4fc
    <599>   DW_AT_call_origin : <0x298>
 <4><59d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <59e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5a0>   DW_AT_call_value  : 5 byte block: 3 fc b 0 0 	(DW_OP_addr: bfc)
 <4><5a6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5a7>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <5a9>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <4><5ac>: Abbrev Number: 0
 <3><5ad>: Abbrev Number: 0
 <2><5ae>: Abbrev Number: 17 (DW_TAG_call_site)
    <5af>   DW_AT_call_return_pc: 0x4ea
    <5b3>   DW_AT_call_origin : <0x298>
 <3><5b7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <5b8>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <5ba>   DW_AT_call_value  : 5 byte block: 3 f8 b 0 0 	(DW_OP_addr: bf8)
 <3><5c0>: Abbrev Number: 0
 <2><5c1>: Abbrev Number: 0
 <1><5c2>: Abbrev Number: 39 (DW_TAG_subprogram)
    <5c3>   DW_AT_external    : 1
    <5c3>   DW_AT_name        : (indirect string, offset: 0xbd): angle_map
    <5c7>   DW_AT_decl_file   : 1
    <5c8>   DW_AT_decl_line   : 128
    <5c9>   DW_AT_decl_column : 5
    <5ca>   DW_AT_prototyped  : 1
    <5ca>   DW_AT_type        : <0x95>
    <5ce>   DW_AT_low_pc      : 0x484
    <5d2>   DW_AT_high_pc     : 0x38
    <5d6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <5d8>   DW_AT_call_all_calls: 1
    <5d8>   DW_AT_sibling     : <0x64d>
 <2><5dc>: Abbrev Number: 20 (DW_TAG_formal_parameter)
    <5dd>   DW_AT_name        : (indirect string, offset: 0x1e7): start
    <5e1>   DW_AT_decl_file   : 1
    <5e1>   DW_AT_decl_line   : 128
    <5e1>   DW_AT_decl_column : 23
    <5e2>   DW_AT_type        : <0xb4>
    <5e6>   DW_AT_location    : 0x68 (location list)
    <5ea>   DW_AT_GNU_locviews: 0x62
 <2><5ee>: Abbrev Number: 40 (DW_TAG_formal_parameter)
    <5ef>   DW_AT_name        : end
    <5f3>   DW_AT_decl_file   : 1
    <5f4>   DW_AT_decl_line   : 128
    <5f5>   DW_AT_decl_column : 38
    <5f6>   DW_AT_type        : <0xb4>
    <5fa>   DW_AT_location    : 0x8e (location list)
    <5fe>   DW_AT_GNU_locviews: 0x86
 <2><602>: Abbrev Number: 20 (DW_TAG_formal_parameter)
    <603>   DW_AT_name        : (indirect string, offset: 0x23e): count
    <607>   DW_AT_decl_file   : 1
    <607>   DW_AT_decl_line   : 128
    <607>   DW_AT_decl_column : 47
    <608>   DW_AT_type        : <0x95>
    <60c>   DW_AT_location    : 0xc2 (location list)
    <610>   DW_AT_GNU_locviews: 0xba
 <2><614>: Abbrev Number: 20 (DW_TAG_formal_parameter)
    <615>   DW_AT_name        : (indirect string, offset: 0x386): position
    <619>   DW_AT_decl_file   : 1
    <619>   DW_AT_decl_line   : 128
    <619>   DW_AT_decl_column : 58
    <61a>   DW_AT_type        : <0x95>
    <61e>   DW_AT_location    : 0xf6 (location list)
    <622>   DW_AT_GNU_locviews: 0xee
 <2><626>: Abbrev Number: 7 (DW_TAG_variable)
    <627>   DW_AT_name        : (indirect string, offset: 0x5a): delta
    <62b>   DW_AT_decl_file   : 1
    <62b>   DW_AT_decl_line   : 129
    <62c>   DW_AT_decl_column : 16
    <62d>   DW_AT_type        : <0xc0>
    <631>   DW_AT_location    : 0x126 (location list)
    <635>   DW_AT_GNU_locviews: 0x122
 <2><639>: Abbrev Number: 7 (DW_TAG_variable)
    <63a>   DW_AT_name        : (indirect string, offset: 0xf0): delta_per_count
    <63e>   DW_AT_decl_file   : 1
    <63e>   DW_AT_decl_line   : 130
    <63f>   DW_AT_decl_column : 16
    <640>   DW_AT_type        : <0xc0>
    <644>   DW_AT_location    : 0x13a (location list)
    <648>   DW_AT_GNU_locviews: 0x136
 <2><64c>: Abbrev Number: 0
 <1><64d>: Abbrev Number: 10 (DW_TAG_subprogram)
    <64e>   DW_AT_external    : 1
    <64e>   DW_AT_name        : (indirect string, offset: 0x223): clear_lidar_IO
    <652>   DW_AT_decl_file   : 1
    <652>   DW_AT_decl_line   : 122
    <653>   DW_AT_decl_column : 6
    <653>   DW_AT_prototyped  : 1
    <653>   DW_AT_low_pc      : 0x45c
    <657>   DW_AT_high_pc     : 0x28
    <65b>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <65d>   DW_AT_call_all_calls: 1
    <65d>   DW_AT_sibling     : <0x684>
 <2><661>: Abbrev Number: 2 (DW_TAG_call_site)
    <662>   DW_AT_call_return_pc: 0x46c
    <666>   DW_AT_sibling     : <0x674>
 <3><66a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <66b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <66d>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><673>: Abbrev Number: 0
 <2><674>: Abbrev Number: 21 (DW_TAG_call_site)
    <675>   DW_AT_call_return_pc: 0x478
 <3><679>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <67a>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <67c>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><682>: Abbrev Number: 0
 <2><683>: Abbrev Number: 0
 <1><684>: Abbrev Number: 10 (DW_TAG_subprogram)
    <685>   DW_AT_external    : 1
    <685>   DW_AT_name        : (indirect string, offset: 0x358): stop_lidar_scan
    <689>   DW_AT_decl_file   : 1
    <689>   DW_AT_decl_line   : 117
    <68a>   DW_AT_decl_column : 6
    <68a>   DW_AT_prototyped  : 1
    <68a>   DW_AT_low_pc      : 0x438
    <68e>   DW_AT_high_pc     : 0x24
    <692>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <694>   DW_AT_call_all_calls: 1
    <694>   DW_AT_sibling     : <0x6c1>
 <2><698>: Abbrev Number: 2 (DW_TAG_call_site)
    <699>   DW_AT_call_return_pc: 0x44a
    <69d>   DW_AT_sibling     : <0x6ae>
 <3><6a1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6a2>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6a4>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6a7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6a8>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6aa>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><6ad>: Abbrev Number: 0
 <2><6ae>: Abbrev Number: 21 (DW_TAG_call_site)
    <6af>   DW_AT_call_return_pc: 0x454
 <3><6b3>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6b4>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6b6>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6b9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6ba>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6bc>   DW_AT_call_value  : 2 byte block: 8 65 	(DW_OP_const1u: 101)
 <3><6bf>: Abbrev Number: 0
 <2><6c0>: Abbrev Number: 0
 <1><6c1>: Abbrev Number: 10 (DW_TAG_subprogram)
    <6c2>   DW_AT_external    : 1
    <6c2>   DW_AT_name        : (indirect string, offset: 0x179): start_lidar_scan
    <6c6>   DW_AT_decl_file   : 1
    <6c6>   DW_AT_decl_line   : 112
    <6c7>   DW_AT_decl_column : 6
    <6c7>   DW_AT_prototyped  : 1
    <6c7>   DW_AT_low_pc      : 0x414
    <6cb>   DW_AT_high_pc     : 0x24
    <6cf>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6d1>   DW_AT_call_all_calls: 1
    <6d1>   DW_AT_sibling     : <0x6fe>
 <2><6d5>: Abbrev Number: 2 (DW_TAG_call_site)
    <6d6>   DW_AT_call_return_pc: 0x426
    <6da>   DW_AT_sibling     : <0x6eb>
 <3><6de>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6df>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6e1>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6e4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6e5>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6e7>   DW_AT_call_value  : 2 byte block: 9 a5 	(DW_OP_const1s: -91)
 <3><6ea>: Abbrev Number: 0
 <2><6eb>: Abbrev Number: 21 (DW_TAG_call_site)
    <6ec>   DW_AT_call_return_pc: 0x430
 <3><6f0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6f1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <6f3>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><6f6>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <6f7>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <6f9>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><6fc>: Abbrev Number: 0
 <2><6fd>: Abbrev Number: 0
 <1><6fe>: Abbrev Number: 41 (DW_TAG_subprogram)
    <6ff>   DW_AT_external    : 1
    <6ff>   DW_AT_name        : (indirect string, offset: 0x304): setup_lidar_comms
    <703>   DW_AT_decl_file   : 1
    <704>   DW_AT_decl_line   : 86
    <705>   DW_AT_decl_column : 6
    <706>   DW_AT_prototyped  : 1
    <706>   DW_AT_low_pc      : 0x328
    <70a>   DW_AT_high_pc     : 0xec
    <70e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <710>   DW_AT_call_all_tail_calls: 1
    <710>   DW_AT_sibling     : <0x7fc>
 <2><714>: Abbrev Number: 2 (DW_TAG_call_site)
    <715>   DW_AT_call_return_pc: 0x336
    <719>   DW_AT_sibling     : <0x728>
 <3><71d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <71e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <720>   DW_AT_call_value  : 6 byte block: 11 83 90 80 80 7f 	(DW_OP_consts: -268433405)
 <3><727>: Abbrev Number: 0
 <2><728>: Abbrev Number: 2 (DW_TAG_call_site)
    <729>   DW_AT_call_return_pc: 0x33e
    <72d>   DW_AT_sibling     : <0x73c>
 <3><731>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <732>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <734>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><73b>: Abbrev Number: 0
 <2><73c>: Abbrev Number: 2 (DW_TAG_call_site)
    <73d>   DW_AT_call_return_pc: 0x34c
    <741>   DW_AT_sibling     : <0x750>
 <3><745>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <746>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <748>   DW_AT_call_value  : 6 byte block: 11 82 b0 80 80 7f 	(DW_OP_consts: -268429310)
 <3><74f>: Abbrev Number: 0
 <2><750>: Abbrev Number: 22 (DW_TAG_call_site)
    <751>   DW_AT_call_return_pc: 0x392
    <755>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <758>   DW_AT_sibling     : <0x774>
 <3><75c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <75d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <75f>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><762>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <763>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <765>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><768>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <769>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <76b>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><76e>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <76f>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <771>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><773>: Abbrev Number: 0
 <2><774>: Abbrev Number: 22 (DW_TAG_call_site)
    <775>   DW_AT_call_return_pc: 0x3a0
    <779>   DW_AT_call_target : 2 byte block: 76 0 	(DW_OP_breg6 (r6): 0)
    <77c>   DW_AT_sibling     : <0x798>
 <3><780>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <781>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <783>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><786>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <787>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <789>   DW_AT_call_value  : 2 byte block: 8 40 	(DW_OP_const1u: 64)
 <3><78c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <78d>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <78f>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><792>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <793>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <795>   DW_AT_call_value  : 1 byte block: 3a 	(DW_OP_lit10)
 <3><797>: Abbrev Number: 0
 <2><798>: Abbrev Number: 2 (DW_TAG_call_site)
    <799>   DW_AT_call_return_pc: 0x3ac
    <79d>   DW_AT_sibling     : <0x7b3>
 <3><7a1>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7a2>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7a4>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><7a7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7a8>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <7aa>   DW_AT_call_value  : 2 byte block: 9 c0 	(DW_OP_const1s: -64)
 <3><7ad>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7ae>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7b0>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><7b2>: Abbrev Number: 0
 <2><7b3>: Abbrev Number: 22 (DW_TAG_call_site)
    <7b4>   DW_AT_call_return_pc: 0x3c2
    <7b8>   DW_AT_call_target : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
    <7bb>   DW_AT_sibling     : <0x7d7>
 <3><7bf>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7c0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <7c2>   DW_AT_call_value  : 5 byte block: c 0 e0 0 40 	(DW_OP_const4u: 1073799168)
 <3><7c8>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7c9>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <7cb>   DW_AT_call_value  : 4 byte block: 8 e1 3a 24 	(DW_OP_const1u: 225; DW_OP_lit10; DW_OP_shl)
 <3><7d0>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <7d1>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <7d3>   DW_AT_call_value  : 2 byte block: 8 60 	(DW_OP_const1u: 96)
 <3><7d6>: Abbrev Number: 0
 <2><7d7>: Abbrev Number: 4 (DW_TAG_call_site)
    <7d8>   DW_AT_call_return_pc: 0x3cc
    <7dc>   DW_AT_call_origin : <0x883>
 <2><7e0>: Abbrev Number: 4 (DW_TAG_call_site)
    <7e1>   DW_AT_call_return_pc: 0x3d4
    <7e5>   DW_AT_call_origin : <0x883>
 <2><7e9>: Abbrev Number: 4 (DW_TAG_call_site)
    <7ea>   DW_AT_call_return_pc: 0x3de
    <7ee>   DW_AT_call_origin : <0x7fc>
 <2><7f2>: Abbrev Number: 4 (DW_TAG_call_site)
    <7f3>   DW_AT_call_return_pc: 0x3ea
    <7f7>   DW_AT_call_origin : <0x883>
 <2><7fb>: Abbrev Number: 0
 <1><7fc>: Abbrev Number: 42 (DW_TAG_subprogram)
    <7fd>   DW_AT_external    : 1
    <7fd>   DW_AT_name        : (indirect string, offset: 0x39b): process_point_buff
    <801>   DW_AT_decl_file   : 1
    <802>   DW_AT_decl_line   : 47
    <803>   DW_AT_decl_column : 6
    <804>   DW_AT_low_pc      : 0x288
    <808>   DW_AT_high_pc     : 0xa0
    <80c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <80e>   DW_AT_call_all_calls: 1
    <80e>   DW_AT_sibling     : <0x87c>
 <2><812>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <813>   DW_AT_ranges      : 0xc
 <3><817>: Abbrev Number: 9 (DW_TAG_variable)
    <818>   DW_AT_name        : i
    <81a>   DW_AT_decl_file   : 1
    <81a>   DW_AT_decl_line   : 49
    <81b>   DW_AT_decl_column : 10
    <81c>   DW_AT_type        : <0x95>
    <820>   DW_AT_location    : 0x14e (location list)
    <824>   DW_AT_GNU_locviews: 0x14a
 <3><828>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <829>   DW_AT_ranges      : 0x19
 <4><82d>: Abbrev Number: 7 (DW_TAG_variable)
    <82e>   DW_AT_name        : (indirect string, offset: 0xa9): leftidx
    <832>   DW_AT_decl_file   : 1
    <832>   DW_AT_decl_line   : 53
    <833>   DW_AT_decl_column : 7
    <834>   DW_AT_type        : <0x95>
    <838>   DW_AT_location    : 0x16a (location list)
    <83c>   DW_AT_GNU_locviews: 0x160
 <4><840>: Abbrev Number: 7 (DW_TAG_variable)
    <841>   DW_AT_name        : (indirect string, offset: 0x51): from_top
    <845>   DW_AT_decl_file   : 1
    <845>   DW_AT_decl_line   : 54
    <846>   DW_AT_decl_column : 8
    <847>   DW_AT_type        : <0x87c>
    <84b>   DW_AT_location    : 0x192 (location list)
    <84f>   DW_AT_GNU_locviews: 0x18c
 <4><853>: Abbrev Number: 7 (DW_TAG_variable)
    <854>   DW_AT_name        : (indirect string, offset: 0x7d): rightidx
    <858>   DW_AT_decl_file   : 1
    <858>   DW_AT_decl_line   : 69
    <859>   DW_AT_decl_column : 7
    <85a>   DW_AT_type        : <0x95>
    <85e>   DW_AT_location    : 0x1af (location list)
    <862>   DW_AT_GNU_locviews: 0x1a9
 <4><866>: Abbrev Number: 7 (DW_TAG_variable)
    <867>   DW_AT_name        : (indirect string, offset: 0x32c): from_0
    <86b>   DW_AT_decl_file   : 1
    <86b>   DW_AT_decl_line   : 70
    <86c>   DW_AT_decl_column : 8
    <86d>   DW_AT_type        : <0x87c>
    <871>   DW_AT_location    : 0x1ca (location list)
    <875>   DW_AT_GNU_locviews: 0x1c6
 <4><879>: Abbrev Number: 0
 <3><87a>: Abbrev Number: 0
 <2><87b>: Abbrev Number: 0
 <1><87c>: Abbrev Number: 5 (DW_TAG_base_type)
    <87d>   DW_AT_byte_size   : 1
    <87e>   DW_AT_encoding    : 2	(boolean)
    <87f>   DW_AT_name        : (indirect string, offset: 0x244): _Bool
 <1><883>: Abbrev Number: 43 (DW_TAG_subprogram)
    <884>   DW_AT_external    : 1
    <884>   DW_AT_name        : (indirect string, offset: 0x2c): zero_point_buf
    <888>   DW_AT_decl_file   : 1
    <889>   DW_AT_decl_line   : 39
    <88a>   DW_AT_decl_column : 6
    <88b>   DW_AT_prototyped  : 1
    <88b>   DW_AT_low_pc      : 0x26c
    <88f>   DW_AT_high_pc     : 0x1c
    <893>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <895>   DW_AT_call_all_calls: 1
 <2><895>: Abbrev Number: 28 (DW_TAG_lexical_block)
    <896>   DW_AT_low_pc      : 0x26c
    <89a>   DW_AT_high_pc     : 0x16
 <3><89e>: Abbrev Number: 9 (DW_TAG_variable)
    <89f>   DW_AT_name        : i
    <8a1>   DW_AT_decl_file   : 1
    <8a1>   DW_AT_decl_line   : 40
    <8a2>   DW_AT_decl_column : 10
    <8a3>   DW_AT_type        : <0x95>
    <8a7>   DW_AT_location    : 0x1de (location list)
    <8ab>   DW_AT_GNU_locviews: 0x1da
 <3><8af>: Abbrev Number: 0
 <2><8b0>: Abbrev Number: 0
 <1><8b1>: Abbrev Number: 0
  Compilation Unit @ offset 0x8b2:
   Length:        0x1be (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x291
   Pointer Size:  4
 <0><8be>: Abbrev Number: 8 (DW_TAG_compile_unit)
    <8bf>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <8c3>   DW_AT_language    : 29	(C11)
    <8c4>   DW_AT_name        : (indirect string, offset: 0x41b): src/main.c
    <8c8>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <8cc>   DW_AT_ranges      : 0x6c
    <8d0>   DW_AT_low_pc      : 0
    <8d4>   DW_AT_stmt_list   : 0x5d3
 <1><8d8>: Abbrev Number: 1 (DW_TAG_base_type)
    <8d9>   DW_AT_byte_size   : 1
    <8da>   DW_AT_encoding    : 6	(signed char)
    <8db>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><8df>: Abbrev Number: 1 (DW_TAG_base_type)
    <8e0>   DW_AT_byte_size   : 1
    <8e1>   DW_AT_encoding    : 8	(unsigned char)
    <8e2>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><8e6>: Abbrev Number: 1 (DW_TAG_base_type)
    <8e7>   DW_AT_byte_size   : 2
    <8e8>   DW_AT_encoding    : 5	(signed)
    <8e9>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><8ed>: Abbrev Number: 1 (DW_TAG_base_type)
    <8ee>   DW_AT_byte_size   : 2
    <8ef>   DW_AT_encoding    : 7	(unsigned)
    <8f0>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><8f4>: Abbrev Number: 1 (DW_TAG_base_type)
    <8f5>   DW_AT_byte_size   : 4
    <8f6>   DW_AT_encoding    : 5	(signed)
    <8f7>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><8fb>: Abbrev Number: 7 (DW_TAG_typedef)
    <8fc>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <900>   DW_AT_decl_file   : 2
    <901>   DW_AT_decl_line   : 79
    <902>   DW_AT_decl_column : 25
    <903>   DW_AT_type        : <0x907>
 <1><907>: Abbrev Number: 1 (DW_TAG_base_type)
    <908>   DW_AT_byte_size   : 4
    <909>   DW_AT_encoding    : 7	(unsigned)
    <90a>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><90e>: Abbrev Number: 1 (DW_TAG_base_type)
    <90f>   DW_AT_byte_size   : 8
    <910>   DW_AT_encoding    : 5	(signed)
    <911>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><915>: Abbrev Number: 1 (DW_TAG_base_type)
    <916>   DW_AT_byte_size   : 8
    <917>   DW_AT_encoding    : 7	(unsigned)
    <918>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><91c>: Abbrev Number: 9 (DW_TAG_base_type)
    <91d>   DW_AT_byte_size   : 4
    <91e>   DW_AT_encoding    : 5	(signed)
    <91f>   DW_AT_name        : int
 <1><923>: Abbrev Number: 1 (DW_TAG_base_type)
    <924>   DW_AT_byte_size   : 4
    <925>   DW_AT_encoding    : 7	(unsigned)
    <926>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><92a>: Abbrev Number: 7 (DW_TAG_typedef)
    <92b>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <92f>   DW_AT_decl_file   : 3
    <930>   DW_AT_decl_line   : 48
    <931>   DW_AT_decl_column : 20
    <932>   DW_AT_type        : <0x8fb>
 <1><936>: Abbrev Number: 4 (DW_TAG_subprogram)
    <937>   DW_AT_external    : 1
    <937>   DW_AT_name        : (indirect string, offset: 0x2f4): process_packets
    <93b>   DW_AT_decl_file   : 4
    <93c>   DW_AT_decl_line   : 36
    <93d>   DW_AT_decl_column : 6
    <93d>   DW_AT_prototyped  : 1
    <93d>   DW_AT_declaration : 1
 <1><93d>: Abbrev Number: 4 (DW_TAG_subprogram)
    <93e>   DW_AT_external    : 1
    <93e>   DW_AT_name        : (indirect string, offset: 0x179): start_lidar_scan
    <942>   DW_AT_decl_file   : 4
    <943>   DW_AT_decl_line   : 34
    <944>   DW_AT_decl_column : 6
    <944>   DW_AT_prototyped  : 1
    <944>   DW_AT_declaration : 1
 <1><944>: Abbrev Number: 4 (DW_TAG_subprogram)
    <945>   DW_AT_external    : 1
    <945>   DW_AT_name        : (indirect string, offset: 0x223): clear_lidar_IO
    <949>   DW_AT_decl_file   : 4
    <94a>   DW_AT_decl_line   : 37
    <94b>   DW_AT_decl_column : 6
    <94b>   DW_AT_prototyped  : 1
    <94b>   DW_AT_declaration : 1
 <1><94b>: Abbrev Number: 4 (DW_TAG_subprogram)
    <94c>   DW_AT_external    : 1
    <94c>   DW_AT_name        : (indirect string, offset: 0x358): stop_lidar_scan
    <950>   DW_AT_decl_file   : 4
    <951>   DW_AT_decl_line   : 35
    <952>   DW_AT_decl_column : 6
    <952>   DW_AT_prototyped  : 1
    <952>   DW_AT_declaration : 1
 <1><952>: Abbrev Number: 4 (DW_TAG_subprogram)
    <953>   DW_AT_external    : 1
    <953>   DW_AT_name        : (indirect string, offset: 0x304): setup_lidar_comms
    <957>   DW_AT_decl_file   : 4
    <958>   DW_AT_decl_line   : 33
    <959>   DW_AT_decl_column : 6
    <959>   DW_AT_prototyped  : 1
    <959>   DW_AT_declaration : 1
 <1><959>: Abbrev Number: 10 (DW_TAG_subprogram)
    <95a>   DW_AT_external    : 1
    <95a>   DW_AT_name        : (indirect string, offset: 0x150): printlf
    <95e>   DW_AT_decl_file   : 5
    <95f>   DW_AT_decl_line   : 10
    <960>   DW_AT_decl_column : 6
    <961>   DW_AT_prototyped  : 1
    <961>   DW_AT_declaration : 1
    <961>   DW_AT_sibling     : <0x96c>
 <2><965>: Abbrev Number: 11 (DW_TAG_formal_parameter)
    <966>   DW_AT_type        : <0x96c>
 <2><96a>: Abbrev Number: 12 (DW_TAG_unspecified_parameters)
 <2><96b>: Abbrev Number: 0
 <1><96c>: Abbrev Number: 13 (DW_TAG_pointer_type)
    <96d>   DW_AT_byte_size   : 4
    <96e>   DW_AT_type        : <0x972>
 <1><972>: Abbrev Number: 1 (DW_TAG_base_type)
    <973>   DW_AT_byte_size   : 1
    <974>   DW_AT_encoding    : 8	(unsigned char)
    <975>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><979>: Abbrev Number: 4 (DW_TAG_subprogram)
    <97a>   DW_AT_external    : 1
    <97a>   DW_AT_name        : (indirect string, offset: 0x403): setup_uart_printer
    <97e>   DW_AT_decl_file   : 5
    <97f>   DW_AT_decl_line   : 1
    <980>   DW_AT_decl_column : 6
    <980>   DW_AT_prototyped  : 1
    <980>   DW_AT_declaration : 1
 <1><980>: Abbrev Number: 14 (DW_TAG_subprogram)
    <981>   DW_AT_external    : 1
    <981>   DW_AT_name        : (indirect string, offset: 0x416): main
    <985>   DW_AT_decl_file   : 1
    <986>   DW_AT_decl_line   : 20
    <987>   DW_AT_decl_column : 5
    <988>   DW_AT_prototyped  : 1
    <988>   DW_AT_type        : <0x91c>
    <98c>   DW_AT_low_pc      : 0x788
    <990>   DW_AT_high_pc     : 0x78
    <994>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <996>   DW_AT_call_all_calls: 1
 <2><996>: Abbrev Number: 6 (DW_TAG_call_site)
    <997>   DW_AT_call_return_pc: 0x796
    <99b>   DW_AT_sibling     : <0x9aa>
 <3><99f>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <9a0>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <9a2>   DW_AT_call_value  : 6 byte block: 11 c0 8a 80 88 7c 	(DW_OP_consts: -1056963264)
 <3><9a9>: Abbrev Number: 0
 <2><9aa>: Abbrev Number: 2 (DW_TAG_call_site)
    <9ab>   DW_AT_call_return_pc: 0x79a
    <9af>   DW_AT_call_origin : <0x979>
 <2><9b3>: Abbrev Number: 5 (DW_TAG_call_site)
    <9b4>   DW_AT_call_return_pc: 0x7a0
    <9b8>   DW_AT_call_origin : <0x959>
    <9bc>   DW_AT_sibling     : <0x9ca>
 <3><9c0>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <9c1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <9c3>   DW_AT_call_value  : 5 byte block: 3 b4 c 0 0 	(DW_OP_addr: cb4)
 <3><9c9>: Abbrev Number: 0
 <2><9ca>: Abbrev Number: 2 (DW_TAG_call_site)
    <9cb>   DW_AT_call_return_pc: 0x7a4
    <9cf>   DW_AT_call_origin : <0x952>
 <2><9d3>: Abbrev Number: 5 (DW_TAG_call_site)
    <9d4>   DW_AT_call_return_pc: 0x7aa
    <9d8>   DW_AT_call_origin : <0x959>
    <9dc>   DW_AT_sibling     : <0x9ea>
 <3><9e0>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <9e1>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <9e3>   DW_AT_call_value  : 5 byte block: 3 c8 c 0 0 	(DW_OP_addr: cc8)
 <3><9e9>: Abbrev Number: 0
 <2><9ea>: Abbrev Number: 2 (DW_TAG_call_site)
    <9eb>   DW_AT_call_return_pc: 0x7ae
    <9ef>   DW_AT_call_origin : <0x94b>
 <2><9f3>: Abbrev Number: 5 (DW_TAG_call_site)
    <9f4>   DW_AT_call_return_pc: 0x7b4
    <9f8>   DW_AT_call_origin : <0x959>
    <9fc>   DW_AT_sibling     : <0xa0a>
 <3><a00>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a01>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a03>   DW_AT_call_value  : 5 byte block: 3 e0 c 0 0 	(DW_OP_addr: ce0)
 <3><a09>: Abbrev Number: 0
 <2><a0a>: Abbrev Number: 2 (DW_TAG_call_site)
    <a0b>   DW_AT_call_return_pc: 0x7b8
    <a0f>   DW_AT_call_origin : <0x944>
 <2><a13>: Abbrev Number: 6 (DW_TAG_call_site)
    <a14>   DW_AT_call_return_pc: 0x7c4
    <a18>   DW_AT_sibling     : <0xa26>
 <3><a1c>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a1d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a1f>   DW_AT_call_value  : 5 byte block: c 0 2d 31 1 	(DW_OP_const4u: 20000000)
 <3><a25>: Abbrev Number: 0
 <2><a26>: Abbrev Number: 5 (DW_TAG_call_site)
    <a27>   DW_AT_call_return_pc: 0x7ca
    <a2b>   DW_AT_call_origin : <0x959>
    <a2f>   DW_AT_sibling     : <0xa3d>
 <3><a33>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a34>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a36>   DW_AT_call_value  : 5 byte block: 3 f8 c 0 0 	(DW_OP_addr: cf8)
 <3><a3c>: Abbrev Number: 0
 <2><a3d>: Abbrev Number: 2 (DW_TAG_call_site)
    <a3e>   DW_AT_call_return_pc: 0x7ce
    <a42>   DW_AT_call_origin : <0x944>
 <2><a46>: Abbrev Number: 6 (DW_TAG_call_site)
    <a47>   DW_AT_call_return_pc: 0x7da
    <a4b>   DW_AT_sibling     : <0xa57>
 <3><a4f>: Abbrev Number: 3 (DW_TAG_call_site_parameter)
    <a50>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <a52>   DW_AT_call_value  : 3 byte block: a 20 4e 	(DW_OP_const2u: 20000)
 <3><a56>: Abbrev Number: 0
 <2><a57>: Abbrev Number: 2 (DW_TAG_call_site)
    <a58>   DW_AT_call_return_pc: 0x7de
    <a5c>   DW_AT_call_origin : <0x944>
 <2><a60>: Abbrev Number: 2 (DW_TAG_call_site)
    <a61>   DW_AT_call_return_pc: 0x7e2
    <a65>   DW_AT_call_origin : <0x93d>
 <2><a69>: Abbrev Number: 2 (DW_TAG_call_site)
    <a6a>   DW_AT_call_return_pc: 0x7e6
    <a6e>   DW_AT_call_origin : <0x936>
 <2><a72>: Abbrev Number: 0
 <1><a73>: Abbrev Number: 0
  Compilation Unit @ offset 0xa74:
   Length:        0x17a (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x349
   Pointer Size:  4
 <0><a80>: Abbrev Number: 4 (DW_TAG_compile_unit)
    <a81>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <a85>   DW_AT_language    : 29	(C11)
    <a86>   DW_AT_name        : (indirect string, offset: 0x452): src/timers.c
    <a8a>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <a8e>   DW_AT_ranges      : 0x7f
    <a92>   DW_AT_low_pc      : 0
    <a96>   DW_AT_stmt_list   : 0x6a9
 <1><a9a>: Abbrev Number: 1 (DW_TAG_base_type)
    <a9b>   DW_AT_byte_size   : 1
    <a9c>   DW_AT_encoding    : 6	(signed char)
    <a9d>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><aa1>: Abbrev Number: 1 (DW_TAG_base_type)
    <aa2>   DW_AT_byte_size   : 1
    <aa3>   DW_AT_encoding    : 8	(unsigned char)
    <aa4>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><aa8>: Abbrev Number: 1 (DW_TAG_base_type)
    <aa9>   DW_AT_byte_size   : 2
    <aaa>   DW_AT_encoding    : 5	(signed)
    <aab>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><aaf>: Abbrev Number: 1 (DW_TAG_base_type)
    <ab0>   DW_AT_byte_size   : 2
    <ab1>   DW_AT_encoding    : 7	(unsigned)
    <ab2>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><ab6>: Abbrev Number: 2 (DW_TAG_typedef)
    <ab7>   DW_AT_name        : (indirect string, offset: 0x34e): __int32_t
    <abb>   DW_AT_decl_file   : 2
    <abc>   DW_AT_decl_line   : 77
    <abd>   DW_AT_decl_column : 24
    <abe>   DW_AT_type        : <0xac2>
 <1><ac2>: Abbrev Number: 1 (DW_TAG_base_type)
    <ac3>   DW_AT_byte_size   : 4
    <ac4>   DW_AT_encoding    : 5	(signed)
    <ac5>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><ac9>: Abbrev Number: 2 (DW_TAG_typedef)
    <aca>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <ace>   DW_AT_decl_file   : 2
    <acf>   DW_AT_decl_line   : 79
    <ad0>   DW_AT_decl_column : 25
    <ad1>   DW_AT_type        : <0xad5>
 <1><ad5>: Abbrev Number: 1 (DW_TAG_base_type)
    <ad6>   DW_AT_byte_size   : 4
    <ad7>   DW_AT_encoding    : 7	(unsigned)
    <ad8>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><adc>: Abbrev Number: 1 (DW_TAG_base_type)
    <add>   DW_AT_byte_size   : 8
    <ade>   DW_AT_encoding    : 5	(signed)
    <adf>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><ae3>: Abbrev Number: 2 (DW_TAG_typedef)
    <ae4>   DW_AT_name        : (indirect string, offset: 0x4a5): __uint64_t
    <ae8>   DW_AT_decl_file   : 2
    <ae9>   DW_AT_decl_line   : 105
    <aea>   DW_AT_decl_column : 25
    <aeb>   DW_AT_type        : <0xaef>
 <1><aef>: Abbrev Number: 1 (DW_TAG_base_type)
    <af0>   DW_AT_byte_size   : 8
    <af1>   DW_AT_encoding    : 7	(unsigned)
    <af2>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><af6>: Abbrev Number: 5 (DW_TAG_base_type)
    <af7>   DW_AT_byte_size   : 4
    <af8>   DW_AT_encoding    : 5	(signed)
    <af9>   DW_AT_name        : int
 <1><afd>: Abbrev Number: 1 (DW_TAG_base_type)
    <afe>   DW_AT_byte_size   : 4
    <aff>   DW_AT_encoding    : 7	(unsigned)
    <b00>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><b04>: Abbrev Number: 2 (DW_TAG_typedef)
    <b05>   DW_AT_name        : (indirect string, offset: 0x350): int32_t
    <b09>   DW_AT_decl_file   : 3
    <b0a>   DW_AT_decl_line   : 44
    <b0b>   DW_AT_decl_column : 19
    <b0c>   DW_AT_type        : <0xab6>
 <1><b10>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <b11>   DW_AT_type        : <0xb04>
 <1><b15>: Abbrev Number: 2 (DW_TAG_typedef)
    <b16>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <b1a>   DW_AT_decl_file   : 3
    <b1b>   DW_AT_decl_line   : 48
    <b1c>   DW_AT_decl_column : 20
    <b1d>   DW_AT_type        : <0xac9>
 <1><b21>: Abbrev Number: 2 (DW_TAG_typedef)
    <b22>   DW_AT_name        : (indirect string, offset: 0x4a7): uint64_t
    <b26>   DW_AT_decl_file   : 3
    <b27>   DW_AT_decl_line   : 60
    <b28>   DW_AT_decl_column : 20
    <b29>   DW_AT_type        : <0xae3>
 <1><b2d>: Abbrev Number: 3 (DW_TAG_volatile_type)
    <b2e>   DW_AT_type        : <0xb21>
 <1><b32>: Abbrev Number: 6 (DW_TAG_variable)
    <b33>   DW_AT_name        : (indirect string, offset: 0x45f): uptime_seconds
    <b37>   DW_AT_decl_file   : 4
    <b38>   DW_AT_decl_line   : 4
    <b39>   DW_AT_decl_column : 25
    <b3a>   DW_AT_type        : <0xb10>
    <b3e>   DW_AT_external    : 1
    <b3e>   DW_AT_declaration : 1
 <1><b3e>: Abbrev Number: 7 (DW_TAG_variable)
    <b3f>   DW_AT_specification: <0xb32>
    <b43>   DW_AT_decl_file   : 1
    <b44>   DW_AT_decl_line   : 11
    <b45>   DW_AT_decl_column : 18
    <b46>   DW_AT_location    : 5 byte block: 3 10 11 0 20 	(DW_OP_addr: 20001110)
 <1><b4c>: Abbrev Number: 8 (DW_TAG_variable)
    <b4d>   DW_AT_name        : (indirect string, offset: 0x46e): timer1_overflow_count
    <b51>   DW_AT_decl_file   : 1
    <b52>   DW_AT_decl_line   : 12
    <b53>   DW_AT_decl_column : 19
    <b54>   DW_AT_type        : <0xb2d>
    <b58>   DW_AT_external    : 1
    <b58>   DW_AT_location    : 5 byte block: 3 8 11 0 20 	(DW_OP_addr: 20001108)
 <1><b5e>: Abbrev Number: 9 (DW_TAG_subprogram)
    <b5f>   DW_AT_external    : 1
    <b5f>   DW_AT_name        : (indirect string, offset: 0x435): get_uptime_cycles
    <b63>   DW_AT_decl_file   : 1
    <b64>   DW_AT_decl_line   : 52
    <b65>   DW_AT_decl_column : 10
    <b66>   DW_AT_prototyped  : 1
    <b66>   DW_AT_type        : <0xb21>
    <b6a>   DW_AT_low_pc      : 0
    <b6e>   DW_AT_high_pc     : 0x58
    <b72>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <b74>   DW_AT_call_all_tail_calls: 1
    <b74>   DW_AT_sibling     : <0xba2>
 <2><b78>: Abbrev Number: 10 (DW_TAG_variable)
    <b79>   DW_AT_name        : (indirect string, offset: 0x492): overflow_count_now
    <b7d>   DW_AT_decl_file   : 1
    <b7e>   DW_AT_decl_line   : 53
    <b7f>   DW_AT_decl_column : 11
    <b80>   DW_AT_type        : <0xb21>
    <b84>   DW_AT_location    : 0x1ff (location list)
    <b88>   DW_AT_GNU_locviews: 0x1fb
 <2><b8c>: Abbrev Number: 11 (DW_TAG_variable)
    <b8d>   DW_AT_name        : (indirect string, offset: 0x447): cycles_now
    <b91>   DW_AT_decl_file   : 1
    <b92>   DW_AT_decl_line   : 54
    <b93>   DW_AT_decl_column : 11
    <b94>   DW_AT_type        : <0xb21>
 <2><b98>: Abbrev Number: 12 (DW_TAG_call_site)
    <b99>   DW_AT_call_return_pc: 0
    <b9d>   DW_AT_call_origin : <0xba2>
 <2><ba1>: Abbrev Number: 0
 <1><ba2>: Abbrev Number: 13 (DW_TAG_subprogram)
    <ba3>   DW_AT_external    : 1
    <ba3>   DW_AT_name        : (indirect string, offset: 0x484): timeKeeperISR
    <ba7>   DW_AT_decl_file   : 1
    <ba8>   DW_AT_decl_line   : 34
    <ba9>   DW_AT_decl_column : 6
    <baa>   DW_AT_prototyped  : 1
    <baa>   DW_AT_low_pc      : 0x800
    <bae>   DW_AT_high_pc     : 0x64
    <bb2>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <bb4>   DW_AT_call_all_calls: 1
    <bb4>   DW_AT_sibling     : <0xbd8>
 <2><bb8>: Abbrev Number: 14 (DW_TAG_variable)
    <bb9>   DW_AT_name        : (indirect string, offset: 0x426): second_counter
    <bbd>   DW_AT_decl_file   : 1
    <bbe>   DW_AT_decl_line   : 35
    <bbf>   DW_AT_decl_column : 14
    <bc0>   DW_AT_type        : <0xbd8>
    <bc4>   DW_AT_location    : 5 byte block: 3 4 11 0 20 	(DW_OP_addr: 20001104)
 <2><bca>: Abbrev Number: 15 (DW_TAG_variable)
    <bcb>   DW_AT_name        : (indirect string, offset: 0x4b0): sonic_sensor_action_div
    <bcf>   DW_AT_decl_file   : 1
    <bd0>   DW_AT_decl_line   : 36
    <bd1>   DW_AT_decl_column : 14
    <bd2>   DW_AT_type        : <0xbd8>
    <bd6>   DW_AT_const_value : 0
 <2><bd7>: Abbrev Number: 0
 <1><bd8>: Abbrev Number: 1 (DW_TAG_base_type)
    <bd9>   DW_AT_byte_size   : 1
    <bda>   DW_AT_encoding    : 8	(unsigned char)
    <bdb>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><bdf>: Abbrev Number: 16 (DW_TAG_subprogram)
    <be0>   DW_AT_external    : 1
    <be0>   DW_AT_name        : (indirect string, offset: 0x4c8): configureDebounceTimer
    <be4>   DW_AT_decl_file   : 1
    <be5>   DW_AT_decl_line   : 16
    <be6>   DW_AT_decl_column : 6
    <be7>   DW_AT_prototyped  : 1
    <be7>   DW_AT_low_pc      : 0
    <beb>   DW_AT_high_pc     : 0x7c
    <bef>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <bf1>   DW_AT_call_all_tail_calls: 1
 <1><bf1>: Abbrev Number: 0
  Compilation Unit @ offset 0xbf2:
   Length:        0x51f (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x45d
   Pointer Size:  4
 <0><bfe>: Abbrev Number: 20 (DW_TAG_compile_unit)
    <bff>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <c03>   DW_AT_language    : 29	(C11)
    <c04>   DW_AT_name        : (indirect string, offset: 0x540): src/uart_print.c
    <c08>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <c0c>   DW_AT_ranges      : 0xad
    <c10>   DW_AT_low_pc      : 0
    <c14>   DW_AT_stmt_list   : 0x89d
 <1><c18>: Abbrev Number: 2 (DW_TAG_base_type)
    <c19>   DW_AT_byte_size   : 4
    <c1a>   DW_AT_encoding    : 4	(float)
    <c1b>   DW_AT_name        : (indirect string, offset: 0x53a): float
 <1><c1f>: Abbrev Number: 2 (DW_TAG_base_type)
    <c20>   DW_AT_byte_size   : 8
    <c21>   DW_AT_encoding    : 7	(unsigned)
    <c22>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><c26>: Abbrev Number: 2 (DW_TAG_base_type)
    <c27>   DW_AT_byte_size   : 1
    <c28>   DW_AT_encoding    : 8	(unsigned char)
    <c29>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><c2d>: Abbrev Number: 5 (DW_TAG_typedef)
    <c2e>   DW_AT_name        : (indirect string, offset: 0x518): __gnuc_va_list
    <c32>   DW_AT_decl_file   : 2
    <c33>   DW_AT_decl_line   : 40
    <c34>   DW_AT_decl_column : 27
    <c35>   DW_AT_type        : <0xc39>
 <1><c39>: Abbrev Number: 21 (DW_TAG_structure_type)
    <c3a>   DW_AT_name        : (indirect string, offset: 0x595): __va_list
    <c3e>   DW_AT_byte_size   : 4
    <c3f>   DW_AT_decl_file   : 5
    <c40>   DW_AT_decl_line   : 0
    <c41>   DW_AT_sibling     : <0xc50>
 <2><c45>: Abbrev Number: 22 (DW_TAG_member)
    <c46>   DW_AT_name        : (indirect string, offset: 0x57d): __ap
    <c4a>   DW_AT_type        : <0xc50>
    <c4e>   DW_AT_data_member_location: 0
    <c4f>   DW_AT_artificial  : 1
 <2><c4f>: Abbrev Number: 0
 <1><c50>: Abbrev Number: 23 (DW_TAG_pointer_type)
    <c51>   DW_AT_byte_size   : 4
 <1><c52>: Abbrev Number: 5 (DW_TAG_typedef)
    <c53>   DW_AT_name        : (indirect string, offset: 0x597): va_list
    <c57>   DW_AT_decl_file   : 2
    <c58>   DW_AT_decl_line   : 103
    <c59>   DW_AT_decl_column : 24
    <c5a>   DW_AT_type        : <0xc2d>
 <1><c5e>: Abbrev Number: 2 (DW_TAG_base_type)
    <c5f>   DW_AT_byte_size   : 1
    <c60>   DW_AT_encoding    : 6	(signed char)
    <c61>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><c65>: Abbrev Number: 2 (DW_TAG_base_type)
    <c66>   DW_AT_byte_size   : 2
    <c67>   DW_AT_encoding    : 5	(signed)
    <c68>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><c6c>: Abbrev Number: 2 (DW_TAG_base_type)
    <c6d>   DW_AT_byte_size   : 2
    <c6e>   DW_AT_encoding    : 7	(unsigned)
    <c6f>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><c73>: Abbrev Number: 5 (DW_TAG_typedef)
    <c74>   DW_AT_name        : (indirect string, offset: 0x34e): __int32_t
    <c78>   DW_AT_decl_file   : 3
    <c79>   DW_AT_decl_line   : 77
    <c7a>   DW_AT_decl_column : 24
    <c7b>   DW_AT_type        : <0xc7f>
 <1><c7f>: Abbrev Number: 2 (DW_TAG_base_type)
    <c80>   DW_AT_byte_size   : 4
    <c81>   DW_AT_encoding    : 5	(signed)
    <c82>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><c86>: Abbrev Number: 5 (DW_TAG_typedef)
    <c87>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <c8b>   DW_AT_decl_file   : 3
    <c8c>   DW_AT_decl_line   : 79
    <c8d>   DW_AT_decl_column : 25
    <c8e>   DW_AT_type        : <0xc92>
 <1><c92>: Abbrev Number: 2 (DW_TAG_base_type)
    <c93>   DW_AT_byte_size   : 4
    <c94>   DW_AT_encoding    : 7	(unsigned)
    <c95>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><c99>: Abbrev Number: 2 (DW_TAG_base_type)
    <c9a>   DW_AT_byte_size   : 8
    <c9b>   DW_AT_encoding    : 5	(signed)
    <c9c>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><ca0>: Abbrev Number: 24 (DW_TAG_base_type)
    <ca1>   DW_AT_byte_size   : 4
    <ca2>   DW_AT_encoding    : 5	(signed)
    <ca3>   DW_AT_name        : int
 <1><ca7>: Abbrev Number: 2 (DW_TAG_base_type)
    <ca8>   DW_AT_byte_size   : 4
    <ca9>   DW_AT_encoding    : 7	(unsigned)
    <caa>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><cae>: Abbrev Number: 5 (DW_TAG_typedef)
    <caf>   DW_AT_name        : (indirect string, offset: 0x350): int32_t
    <cb3>   DW_AT_decl_file   : 4
    <cb4>   DW_AT_decl_line   : 44
    <cb5>   DW_AT_decl_column : 19
    <cb6>   DW_AT_type        : <0xc73>
 <1><cba>: Abbrev Number: 5 (DW_TAG_typedef)
    <cbb>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <cbf>   DW_AT_decl_file   : 4
    <cc0>   DW_AT_decl_line   : 48
    <cc1>   DW_AT_decl_column : 20
    <cc2>   DW_AT_type        : <0xc86>
 <1><cc6>: Abbrev Number: 6 (DW_TAG_subprogram)
    <cc7>   DW_AT_external    : 1
    <cc7>   DW_AT_name        : (indirect string, offset: 0x150): printlf
    <ccb>   DW_AT_decl_file   : 1
    <ccb>   DW_AT_decl_line   : 115
    <ccc>   DW_AT_decl_column : 6
    <ccc>   DW_AT_prototyped  : 1
    <ccc>   DW_AT_low_pc      : 0xab4
    <cd0>   DW_AT_high_pc     : 0xea
    <cd4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <cd6>   DW_AT_call_all_calls: 1
    <cd6>   DW_AT_sibling     : <0xda1>
 <2><cda>: Abbrev Number: 25 (DW_TAG_formal_parameter)
    <cdb>   DW_AT_name        : (indirect string, offset: 0x551): format
    <cdf>   DW_AT_decl_file   : 1
    <ce0>   DW_AT_decl_line   : 115
    <ce1>   DW_AT_decl_column : 19
    <ce2>   DW_AT_type        : <0xda1>
    <ce6>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><ce9>: Abbrev Number: 26 (DW_TAG_unspecified_parameters)
 <2><cea>: Abbrev Number: 11 (DW_TAG_variable)
    <ceb>   DW_AT_name        : (indirect string, offset: 0x59f): args
    <cef>   DW_AT_decl_file   : 1
    <cef>   DW_AT_decl_line   : 116
    <cf0>   DW_AT_decl_column : 10
    <cf1>   DW_AT_type        : <0xc52>
    <cf5>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><cf8>: Abbrev Number: 14 (DW_TAG_variable)
    <cf9>   DW_AT_name        : str
    <cfd>   DW_AT_decl_file   : 1
    <cfd>   DW_AT_decl_line   : 119
    <cfe>   DW_AT_decl_column : 8
    <cff>   DW_AT_type        : <0xda1>
 <2><d03>: Abbrev Number: 14 (DW_TAG_variable)
    <d04>   DW_AT_name        : num
    <d08>   DW_AT_decl_file   : 1
    <d08>   DW_AT_decl_line   : 120
    <d09>   DW_AT_decl_column : 10
    <d0a>   DW_AT_type        : <0xcae>
 <2><d0e>: Abbrev Number: 27 (DW_TAG_variable)
    <d0f>   DW_AT_name        : (indirect string, offset: 0x527): numu
    <d13>   DW_AT_decl_file   : 1
    <d14>   DW_AT_decl_line   : 121
    <d15>   DW_AT_decl_column : 11
    <d16>   DW_AT_type        : <0xcba>
 <2><d1a>: Abbrev Number: 11 (DW_TAG_variable)
    <d1b>   DW_AT_name        : (indirect string, offset: 0x590): numf
    <d1f>   DW_AT_decl_file   : 1
    <d1f>   DW_AT_decl_line   : 122
    <d20>   DW_AT_decl_column : 9
    <d21>   DW_AT_type        : <0xdb2>
    <d25>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
 <2><d27>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <d28>   DW_AT_low_pc      : 0xac2
    <d2c>   DW_AT_high_pc     : 0xd2
 <3><d30>: Abbrev Number: 8 (DW_TAG_variable)
    <d31>   DW_AT_name        : i
    <d33>   DW_AT_decl_file   : 1
    <d33>   DW_AT_decl_line   : 124
    <d34>   DW_AT_decl_column : 10
    <d35>   DW_AT_type        : <0xca0>
    <d39>   DW_AT_location    : 0x233 (location list)
    <d3d>   DW_AT_GNU_locviews: 0x225
 <3><d41>: Abbrev Number: 3 (DW_TAG_call_site)
    <d42>   DW_AT_call_return_pc: 0xad2
    <d46>   DW_AT_call_origin : <0xf17>
 <3><d4a>: Abbrev Number: 3 (DW_TAG_call_site)
    <d4b>   DW_AT_call_return_pc: 0xae2
    <d4f>   DW_AT_call_origin : <0xecb>
 <3><d53>: Abbrev Number: 4 (DW_TAG_call_site)
    <d54>   DW_AT_call_return_pc: 0xaec
    <d58>   DW_AT_call_origin : <0xfdc>
    <d5c>   DW_AT_sibling     : <0xd67>
 <4><d60>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <d61>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <d63>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><d66>: Abbrev Number: 0
 <3><d67>: Abbrev Number: 3 (DW_TAG_call_site)
    <d68>   DW_AT_call_return_pc: 0xafa
    <d6c>   DW_AT_call_origin : <0xf86>
 <3><d70>: Abbrev Number: 3 (DW_TAG_call_site)
    <d71>   DW_AT_call_return_pc: 0xb0e
    <d75>   DW_AT_call_origin : <0xdb7>
 <3><d79>: Abbrev Number: 4 (DW_TAG_call_site)
    <d7a>   DW_AT_call_return_pc: 0xb18
    <d7e>   DW_AT_call_origin : <0xfdc>
    <d82>   DW_AT_sibling     : <0xd8d>
 <4><d86>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <d87>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <d89>   DW_AT_call_value  : 2 byte block: 8 25 	(DW_OP_const1u: 37)
 <4><d8c>: Abbrev Number: 0
 <3><d8d>: Abbrev Number: 3 (DW_TAG_call_site)
    <d8e>   DW_AT_call_return_pc: 0xb1e
    <d92>   DW_AT_call_origin : <0xfdc>
 <3><d96>: Abbrev Number: 3 (DW_TAG_call_site)
    <d97>   DW_AT_call_return_pc: 0xb26
    <d9b>   DW_AT_call_origin : <0xfdc>
 <3><d9f>: Abbrev Number: 0
 <2><da0>: Abbrev Number: 0
 <1><da1>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <da2>   DW_AT_byte_size   : 4
    <da2>   DW_AT_type        : <0xda6>
 <1><da6>: Abbrev Number: 2 (DW_TAG_base_type)
    <da7>   DW_AT_byte_size   : 1
    <da8>   DW_AT_encoding    : 8	(unsigned char)
    <da9>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><dad>: Abbrev Number: 16 (DW_TAG_const_type)
    <dae>   DW_AT_type        : <0xda6>
 <1><db2>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <db3>   DW_AT_byte_size   : 4
    <db3>   DW_AT_type        : <0xc18>
 <1><db7>: Abbrev Number: 6 (DW_TAG_subprogram)
    <db8>   DW_AT_external    : 1
    <db8>   DW_AT_name        : (indirect string, offset: 0x534): print_float
    <dbc>   DW_AT_decl_file   : 1
    <dbc>   DW_AT_decl_line   : 72
    <dbd>   DW_AT_decl_column : 6
    <dbd>   DW_AT_prototyped  : 1
    <dbd>   DW_AT_low_pc      : 0x994
    <dc1>   DW_AT_high_pc     : 0x120
    <dc5>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <dc7>   DW_AT_call_all_calls: 1
    <dc7>   DW_AT_sibling     : <0xebb>
 <2><dcb>: Abbrev Number: 28 (DW_TAG_formal_parameter)
    <dcc>   DW_AT_name        : (indirect string, offset: 0x589): number
    <dd0>   DW_AT_decl_file   : 1
    <dd1>   DW_AT_decl_line   : 72
    <dd2>   DW_AT_decl_column : 24
    <dd3>   DW_AT_type        : <0xc18>
    <dd7>   DW_AT_location    : 0x274 (location list)
    <ddb>   DW_AT_GNU_locviews: 0x260
 <2><ddf>: Abbrev Number: 17 (DW_TAG_variable)
    <de0>   DW_AT_name        : buf
    <de4>   DW_AT_decl_file   : 1
    <de4>   DW_AT_decl_line   : 89
    <de5>   DW_AT_decl_column : 7
    <de5>   DW_AT_type        : <0xebb>
    <de9>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><dec>: Abbrev Number: 9 (DW_TAG_variable)
    <ded>   DW_AT_name        : (indirect string, offset: 0x4df): integerPart
    <df1>   DW_AT_decl_file   : 1
    <df1>   DW_AT_decl_line   : 96
    <df2>   DW_AT_decl_column : 11
    <df3>   DW_AT_type        : <0xcba>
    <df7>   DW_AT_location    : 0x2dc (location list)
    <dfb>   DW_AT_GNU_locviews: 0x2d8
 <2><dff>: Abbrev Number: 9 (DW_TAG_variable)
    <e00>   DW_AT_name        : (indirect string, offset: 0x50c): decimalPart
    <e04>   DW_AT_decl_file   : 1
    <e04>   DW_AT_decl_line   : 97
    <e05>   DW_AT_decl_column : 11
    <e06>   DW_AT_type        : <0xcba>
    <e0a>   DW_AT_location    : 0x2f5 (location list)
    <e0e>   DW_AT_GNU_locviews: 0x2ef
 <2><e12>: Abbrev Number: 9 (DW_TAG_variable)
    <e13>   DW_AT_name        : (indirect string, offset: 0x582): places
    <e17>   DW_AT_decl_file   : 1
    <e17>   DW_AT_decl_line   : 99
    <e18>   DW_AT_decl_column : 6
    <e19>   DW_AT_type        : <0xca0>
    <e1d>   DW_AT_location    : 0x318 (location list)
    <e21>   DW_AT_GNU_locviews: 0x30a
 <2><e25>: Abbrev Number: 29 (DW_TAG_lexical_block)
    <e26>   DW_AT_ranges      : 0x9e
    <e2a>   DW_AT_sibling     : <0xe40>
 <3><e2e>: Abbrev Number: 8 (DW_TAG_variable)
    <e2f>   DW_AT_name        : i
    <e31>   DW_AT_decl_file   : 1
    <e31>   DW_AT_decl_line   : 101
    <e32>   DW_AT_decl_column : 10
    <e33>   DW_AT_type        : <0xca0>
    <e37>   DW_AT_location    : 0x34d (location list)
    <e3b>   DW_AT_GNU_locviews: 0x349
 <3><e3f>: Abbrev Number: 0
 <2><e40>: Abbrev Number: 4 (DW_TAG_call_site)
    <e41>   DW_AT_call_return_pc: 0xa1c
    <e45>   DW_AT_call_origin : <0xf86>
    <e49>   DW_AT_sibling     : <0xe57>
 <3><e4d>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e4e>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e50>   DW_AT_call_value  : 5 byte block: 3 24 d 0 0 	(DW_OP_addr: d24)
 <3><e56>: Abbrev Number: 0
 <2><e57>: Abbrev Number: 4 (DW_TAG_call_site)
    <e58>   DW_AT_call_return_pc: 0xa24
    <e5c>   DW_AT_call_origin : <0xf86>
    <e60>   DW_AT_sibling     : <0xe6e>
 <3><e64>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e65>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e67>   DW_AT_call_value  : 5 byte block: 3 28 d 0 0 	(DW_OP_addr: d28)
 <3><e6d>: Abbrev Number: 0
 <2><e6e>: Abbrev Number: 4 (DW_TAG_call_site)
    <e6f>   DW_AT_call_return_pc: 0xa32
    <e73>   DW_AT_call_origin : <0xf86>
    <e77>   DW_AT_sibling     : <0xe85>
 <3><e7b>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e7c>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e7e>   DW_AT_call_value  : 5 byte block: 3 2c d 0 0 	(DW_OP_addr: d2c)
 <3><e84>: Abbrev Number: 0
 <2><e85>: Abbrev Number: 4 (DW_TAG_call_site)
    <e86>   DW_AT_call_return_pc: 0xa3a
    <e8a>   DW_AT_call_origin : <0xfdc>
    <e8e>   DW_AT_sibling     : <0xe99>
 <3><e92>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <e93>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <e95>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><e98>: Abbrev Number: 0
 <2><e99>: Abbrev Number: 3 (DW_TAG_call_site)
    <e9a>   DW_AT_call_return_pc: 0xa80
    <e9e>   DW_AT_call_origin : <0xf17>
 <2><ea2>: Abbrev Number: 13 (DW_TAG_call_site)
    <ea3>   DW_AT_call_return_pc: 0xa92
    <ea7>   DW_AT_call_origin : <0xfdc>
 <3><eab>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <eac>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <eae>   DW_AT_call_value  : 10 byte block: 91 0 74 0 22 8 20 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_const1u: 32; DW_OP_minus; DW_OP_deref_size: 1)
 <3><eb9>: Abbrev Number: 0
 <2><eba>: Abbrev Number: 0
 <1><ebb>: Abbrev Number: 18 (DW_TAG_array_type)
    <ebc>   DW_AT_type        : <0xda6>
    <ec0>   DW_AT_sibling     : <0xecb>
 <2><ec4>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <ec5>   DW_AT_type        : <0xca7>
    <ec9>   DW_AT_upper_bound : 14
 <2><eca>: Abbrev Number: 0
 <1><ecb>: Abbrev Number: 6 (DW_TAG_subprogram)
    <ecc>   DW_AT_external    : 1
    <ecc>   DW_AT_name        : (indirect string, offset: 0x56f): print_decimal
    <ed0>   DW_AT_decl_file   : 1
    <ed0>   DW_AT_decl_line   : 62
    <ed1>   DW_AT_decl_column : 6
    <ed1>   DW_AT_prototyped  : 1
    <ed1>   DW_AT_low_pc      : 0x97c
    <ed5>   DW_AT_high_pc     : 0x18
    <ed9>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <edb>   DW_AT_call_all_calls: 1
    <edb>   DW_AT_sibling     : <0xf17>
 <2><edf>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <ee0>   DW_AT_name        : num
    <ee4>   DW_AT_decl_file   : 1
    <ee4>   DW_AT_decl_line   : 62
    <ee5>   DW_AT_decl_column : 28
    <ee6>   DW_AT_type        : <0xcae>
    <eea>   DW_AT_location    : 0x366 (location list)
    <eee>   DW_AT_GNU_locviews: 0x35e
 <2><ef2>: Abbrev Number: 4 (DW_TAG_call_site)
    <ef3>   DW_AT_call_return_pc: 0x988
    <ef7>   DW_AT_call_origin : <0xf17>
    <efb>   DW_AT_sibling     : <0xf06>
 <3><eff>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f00>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f02>   DW_AT_call_value  : 2 byte block: 74 0 	(DW_OP_breg4 (r4): 0)
 <3><f05>: Abbrev Number: 0
 <2><f06>: Abbrev Number: 13 (DW_TAG_call_site)
    <f07>   DW_AT_call_return_pc: 0x990
    <f0b>   DW_AT_call_origin : <0xfdc>
 <3><f0f>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f10>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f12>   DW_AT_call_value  : 2 byte block: 8 2d 	(DW_OP_const1u: 45)
 <3><f15>: Abbrev Number: 0
 <2><f16>: Abbrev Number: 0
 <1><f17>: Abbrev Number: 6 (DW_TAG_subprogram)
    <f18>   DW_AT_external    : 1
    <f18>   DW_AT_name        : (indirect string, offset: 0x558): print_unsigned_decimal
    <f1c>   DW_AT_decl_file   : 1
    <f1c>   DW_AT_decl_line   : 46
    <f1d>   DW_AT_decl_column : 6
    <f1d>   DW_AT_prototyped  : 1
    <f1d>   DW_AT_low_pc      : 0x930
    <f21>   DW_AT_high_pc     : 0x4c
    <f25>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <f27>   DW_AT_call_all_calls: 1
    <f27>   DW_AT_sibling     : <0xf76>
 <2><f2b>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <f2c>   DW_AT_name        : num
    <f30>   DW_AT_decl_file   : 1
    <f30>   DW_AT_decl_line   : 46
    <f31>   DW_AT_decl_column : 38
    <f32>   DW_AT_type        : <0xcba>
    <f36>   DW_AT_location    : 0x384 (location list)
    <f3a>   DW_AT_GNU_locviews: 0x380
 <2><f3e>: Abbrev Number: 17 (DW_TAG_variable)
    <f3f>   DW_AT_name        : buf
    <f43>   DW_AT_decl_file   : 1
    <f43>   DW_AT_decl_line   : 48
    <f44>   DW_AT_decl_column : 7
    <f44>   DW_AT_type        : <0xf76>
    <f48>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><f4b>: Abbrev Number: 9 (DW_TAG_variable)
    <f4c>   DW_AT_name        : (indirect string, offset: 0x582): places
    <f50>   DW_AT_decl_file   : 1
    <f50>   DW_AT_decl_line   : 50
    <f51>   DW_AT_decl_column : 6
    <f52>   DW_AT_type        : <0xca0>
    <f56>   DW_AT_location    : 0x3a0 (location list)
    <f5a>   DW_AT_GNU_locviews: 0x394
 <2><f5e>: Abbrev Number: 13 (DW_TAG_call_site)
    <f5f>   DW_AT_call_return_pc: 0x970
    <f63>   DW_AT_call_origin : <0xfdc>
 <3><f67>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <f68>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <f6a>   DW_AT_call_value  : 9 byte block: 91 0 74 0 22 44 1c 94 1 	(DW_OP_fbreg: 0; DW_OP_breg4 (r4): 0; DW_OP_plus; DW_OP_lit20; DW_OP_minus; DW_OP_deref_size: 1)
 <3><f74>: Abbrev Number: 0
 <2><f75>: Abbrev Number: 0
 <1><f76>: Abbrev Number: 18 (DW_TAG_array_type)
    <f77>   DW_AT_type        : <0xda6>
    <f7b>   DW_AT_sibling     : <0xf86>
 <2><f7f>: Abbrev Number: 19 (DW_TAG_subrange_type)
    <f80>   DW_AT_type        : <0xca7>
    <f84>   DW_AT_upper_bound : 10
 <2><f85>: Abbrev Number: 0
 <1><f86>: Abbrev Number: 6 (DW_TAG_subprogram)
    <f87>   DW_AT_external    : 1
    <f87>   DW_AT_name        : (indirect string, offset: 0x4eb): print_string
    <f8b>   DW_AT_decl_file   : 1
    <f8b>   DW_AT_decl_line   : 40
    <f8c>   DW_AT_decl_column : 6
    <f8c>   DW_AT_prototyped  : 1
    <f8c>   DW_AT_low_pc      : 0x918
    <f90>   DW_AT_high_pc     : 0x16
    <f94>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <f96>   DW_AT_call_all_calls: 1
    <f96>   DW_AT_sibling     : <0xfd2>
 <2><f9a>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <f9b>   DW_AT_name        : str
    <f9f>   DW_AT_decl_file   : 1
    <f9f>   DW_AT_decl_line   : 40
    <fa0>   DW_AT_decl_column : 38
    <fa1>   DW_AT_type        : <0xfd7>
    <fa5>   DW_AT_location    : 0x3cd (location list)
    <fa9>   DW_AT_GNU_locviews: 0x3c9
 <2><fad>: Abbrev Number: 15 (DW_TAG_lexical_block)
    <fae>   DW_AT_low_pc      : 0x91c
    <fb2>   DW_AT_high_pc     : 0x10
 <3><fb6>: Abbrev Number: 8 (DW_TAG_variable)
    <fb7>   DW_AT_name        : i
    <fb9>   DW_AT_decl_file   : 1
    <fb9>   DW_AT_decl_line   : 41
    <fba>   DW_AT_decl_column : 10
    <fbb>   DW_AT_type        : <0xca0>
    <fbf>   DW_AT_location    : 0x3e1 (location list)
    <fc3>   DW_AT_GNU_locviews: 0x3dd
 <3><fc7>: Abbrev Number: 3 (DW_TAG_call_site)
    <fc8>   DW_AT_call_return_pc: 0x924
    <fcc>   DW_AT_call_origin : <0xfdc>
 <3><fd0>: Abbrev Number: 0
 <2><fd1>: Abbrev Number: 0
 <1><fd2>: Abbrev Number: 12 (DW_TAG_pointer_type)
    <fd3>   DW_AT_byte_size   : 4
    <fd3>   DW_AT_type        : <0xdad>
 <1><fd7>: Abbrev Number: 16 (DW_TAG_const_type)
    <fd8>   DW_AT_type        : <0xfd2>
 <1><fdc>: Abbrev Number: 6 (DW_TAG_subprogram)
    <fdd>   DW_AT_external    : 1
    <fdd>   DW_AT_name        : (indirect string, offset: 0x52c): putchar
    <fe1>   DW_AT_decl_file   : 1
    <fe1>   DW_AT_decl_line   : 26
    <fe2>   DW_AT_decl_column : 6
    <fe2>   DW_AT_prototyped  : 1
    <fe2>   DW_AT_low_pc      : 0x8d4
    <fe6>   DW_AT_high_pc     : 0x44
    <fea>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <fec>   DW_AT_call_all_calls: 1
    <fec>   DW_AT_sibling     : <0x1061>
 <2><ff0>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <ff1>   DW_AT_name        : c
    <ff3>   DW_AT_decl_file   : 1
    <ff3>   DW_AT_decl_line   : 26
    <ff4>   DW_AT_decl_column : 19
    <ff5>   DW_AT_type        : <0xda6>
    <ff9>   DW_AT_location    : 0x3f8 (location list)
    <ffd>   DW_AT_GNU_locviews: 0x3f2
 <2><1001>: Abbrev Number: 11 (DW_TAG_variable)
    <1002>   DW_AT_name        : (indirect string, offset: 0x4f8): chars_sent_recently
    <1006>   DW_AT_decl_file   : 1
    <1006>   DW_AT_decl_line   : 27
    <1007>   DW_AT_decl_column : 13
    <1008>   DW_AT_type        : <0xca0>
    <100c>   DW_AT_location    : 5 byte block: 3 14 11 0 20 	(DW_OP_addr: 20001114)
 <2><1012>: Abbrev Number: 30 (DW_TAG_lexical_block)
    <1013>   DW_AT_low_pc      : 0x904
    <1017>   DW_AT_high_pc     : 0xa
    <101b>   DW_AT_sibling     : <0x1031>
 <3><101f>: Abbrev Number: 8 (DW_TAG_variable)
    <1020>   DW_AT_name        : i
    <1022>   DW_AT_decl_file   : 1
    <1022>   DW_AT_decl_line   : 34
    <1023>   DW_AT_decl_column : 11
    <1024>   DW_AT_type        : <0xca0>
    <1028>   DW_AT_location    : 0x41a (location list)
    <102c>   DW_AT_GNU_locviews: 0x416
 <3><1030>: Abbrev Number: 0
 <2><1031>: Abbrev Number: 7 (DW_TAG_call_site)
    <1032>   DW_AT_call_return_pc: 0x8e4
    <1036>   DW_AT_sibling     : <0x1051>
 <3><103a>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <103b>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <103d>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><1043>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1044>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <1046>   DW_AT_call_value  : 9 byte block: a3 3 a5 0 2d a8 34 a8 0 	(DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xc1f>); DW_OP_convert <0xc26>; DW_OP_convert <0>)
 <3><1050>: Abbrev Number: 0
 <2><1051>: Abbrev Number: 31 (DW_TAG_call_site)
    <1052>   DW_AT_call_return_pc: 0x8f0
 <3><1056>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1057>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1059>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><105f>: Abbrev Number: 0
 <2><1060>: Abbrev Number: 0
 <1><1061>: Abbrev Number: 32 (DW_TAG_subprogram)
    <1062>   DW_AT_external    : 1
    <1062>   DW_AT_name        : (indirect string, offset: 0x403): setup_uart_printer
    <1066>   DW_AT_decl_file   : 1
    <1067>   DW_AT_decl_line   : 15
    <1068>   DW_AT_decl_column : 6
    <1069>   DW_AT_prototyped  : 1
    <1069>   DW_AT_low_pc      : 0x864
    <106d>   DW_AT_high_pc     : 0x70
    <1071>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1073>   DW_AT_call_all_tail_calls: 1
 <2><1073>: Abbrev Number: 7 (DW_TAG_call_site)
    <1074>   DW_AT_call_return_pc: 0x872
    <1078>   DW_AT_sibling     : <0x1087>
 <3><107c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <107d>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <107f>   DW_AT_call_value  : 6 byte block: 11 80 90 80 80 7f 	(DW_OP_consts: -268433408)
 <3><1086>: Abbrev Number: 0
 <2><1087>: Abbrev Number: 7 (DW_TAG_call_site)
    <1088>   DW_AT_call_return_pc: 0x87a
    <108c>   DW_AT_sibling     : <0x109b>
 <3><1090>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1091>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <1093>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><109a>: Abbrev Number: 0
 <2><109b>: Abbrev Number: 7 (DW_TAG_call_site)
    <109c>   DW_AT_call_return_pc: 0x888
    <10a0>   DW_AT_sibling     : <0x10af>
 <3><10a4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10a5>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10a7>   DW_AT_call_value  : 6 byte block: 11 80 b0 80 80 7f 	(DW_OP_consts: -268429312)
 <3><10ae>: Abbrev Number: 0
 <2><10af>: Abbrev Number: 33 (DW_TAG_call_site)
    <10b0>   DW_AT_call_return_pc: 0x8a0
    <10b4>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
    <10b7>   DW_AT_sibling     : <0x10d5>
 <3><10bb>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10bc>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10be>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><10c4>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10c5>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <10c7>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><10c9>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10ca>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <10cc>   DW_AT_call_value  : 2 byte block: 8 66 	(DW_OP_const1u: 102)
 <3><10cf>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10d0>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <10d2>   DW_AT_call_value  : 1 byte block: 38 	(DW_OP_lit8)
 <3><10d4>: Abbrev Number: 0
 <2><10d5>: Abbrev Number: 7 (DW_TAG_call_site)
    <10d6>   DW_AT_call_return_pc: 0x8ae
    <10da>   DW_AT_sibling     : <0x10f2>
 <3><10de>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10df>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10e1>   DW_AT_call_value  : 5 byte block: c 0 40 0 40 	(DW_OP_const4u: 1073758208)
 <3><10e7>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10e8>   DW_AT_location    : 1 byte block: 51 	(DW_OP_reg1 (r1))
    <10ea>   DW_AT_call_value  : 1 byte block: 33 	(DW_OP_lit3)
 <3><10ec>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10ed>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <10ef>   DW_AT_call_value  : 1 byte block: 32 	(DW_OP_lit2)
 <3><10f1>: Abbrev Number: 0
 <2><10f2>: Abbrev Number: 34 (DW_TAG_call_site)
    <10f3>   DW_AT_call_return_pc: 0x8c2
    <10f7>   DW_AT_call_target : 2 byte block: 75 0 	(DW_OP_breg5 (r5): 0)
 <3><10fa>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <10fb>   DW_AT_location    : 1 byte block: 50 	(DW_OP_reg0 (r0))
    <10fd>   DW_AT_call_value  : 5 byte block: c 0 c0 0 40 	(DW_OP_const4u: 1073790976)
 <3><1103>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <1104>   DW_AT_location    : 1 byte block: 52 	(DW_OP_reg2 (r2))
    <1106>   DW_AT_call_value  : 5 byte block: c 0 9 3d 0 	(DW_OP_const4u: 4000000)
 <3><110c>: Abbrev Number: 1 (DW_TAG_call_site_parameter)
    <110d>   DW_AT_location    : 1 byte block: 53 	(DW_OP_reg3 (r3))
    <110f>   DW_AT_call_value  : 2 byte block: 8 68 	(DW_OP_const1u: 104)
 <3><1112>: Abbrev Number: 0
 <2><1113>: Abbrev Number: 0
 <1><1114>: Abbrev Number: 0
  Compilation Unit @ offset 0x1115:
   Length:        0x193 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0x628
   Pointer Size:  4
 <0><1121>: Abbrev Number: 10 (DW_TAG_compile_unit)
    <1122>   DW_AT_producer    : (indirect string, offset: 0x24a): GNU C17 13.2.0 -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -march=armv7e-m+fp -g -Og -std=c17 -ffunction-sections -fno-builtin -fdata-sections
    <1126>   DW_AT_language    : 29	(C11)
    <1127>   DW_AT_name        : (indirect string, offset: 0x5db): sys/startup_gcc.c
    <112b>   DW_AT_comp_dir    : (indirect string, offset: 0x121): /home/jkmunson/workspace/EENG461/EENG461_LIDAR
    <112f>   DW_AT_ranges      : 0xe6
    <1133>   DW_AT_low_pc      : 0
    <1137>   DW_AT_stmt_list   : 0xcc1
 <1><113b>: Abbrev Number: 1 (DW_TAG_base_type)
    <113c>   DW_AT_byte_size   : 1
    <113d>   DW_AT_encoding    : 6	(signed char)
    <113e>   DW_AT_name        : (indirect string, offset: 0x193): signed char
 <1><1142>: Abbrev Number: 1 (DW_TAG_base_type)
    <1143>   DW_AT_byte_size   : 1
    <1144>   DW_AT_encoding    : 8	(unsigned char)
    <1145>   DW_AT_name        : (indirect string, offset: 0x191): unsigned char
 <1><1149>: Abbrev Number: 1 (DW_TAG_base_type)
    <114a>   DW_AT_byte_size   : 2
    <114b>   DW_AT_encoding    : 5	(signed)
    <114c>   DW_AT_name        : (indirect string, offset: 0x47): short int
 <1><1150>: Abbrev Number: 1 (DW_TAG_base_type)
    <1151>   DW_AT_byte_size   : 2
    <1152>   DW_AT_encoding    : 7	(unsigned)
    <1153>   DW_AT_name        : (indirect string, offset: 0x1ed): short unsigned int
 <1><1157>: Abbrev Number: 1 (DW_TAG_base_type)
    <1158>   DW_AT_byte_size   : 4
    <1159>   DW_AT_encoding    : 5	(signed)
    <115a>   DW_AT_name        : (indirect string, offset: 0xe7): long int
 <1><115e>: Abbrev Number: 4 (DW_TAG_typedef)
    <115f>   DW_AT_name        : (indirect string, offset: 0x60): __uint32_t
    <1163>   DW_AT_decl_file   : 2
    <1164>   DW_AT_decl_line   : 79
    <1165>   DW_AT_decl_column : 25
    <1166>   DW_AT_type        : <0x116a>
 <1><116a>: Abbrev Number: 1 (DW_TAG_base_type)
    <116b>   DW_AT_byte_size   : 4
    <116c>   DW_AT_encoding    : 7	(unsigned)
    <116d>   DW_AT_name        : (indirect string, offset: 0x1ae): long unsigned int
 <1><1171>: Abbrev Number: 1 (DW_TAG_base_type)
    <1172>   DW_AT_byte_size   : 8
    <1173>   DW_AT_encoding    : 5	(signed)
    <1174>   DW_AT_name        : (indirect string, offset: 0xe2): long long int
 <1><1178>: Abbrev Number: 1 (DW_TAG_base_type)
    <1179>   DW_AT_byte_size   : 8
    <117a>   DW_AT_encoding    : 7	(unsigned)
    <117b>   DW_AT_name        : (indirect string, offset: 0x1a9): long long unsigned int
 <1><117f>: Abbrev Number: 11 (DW_TAG_base_type)
    <1180>   DW_AT_byte_size   : 4
    <1181>   DW_AT_encoding    : 5	(signed)
    <1182>   DW_AT_name        : int
 <1><1186>: Abbrev Number: 1 (DW_TAG_base_type)
    <1187>   DW_AT_byte_size   : 4
    <1188>   DW_AT_encoding    : 7	(unsigned)
    <1189>   DW_AT_name        : (indirect string, offset: 0x1b3): unsigned int
 <1><118d>: Abbrev Number: 4 (DW_TAG_typedef)
    <118e>   DW_AT_name        : (indirect string, offset: 0x62): uint32_t
    <1192>   DW_AT_decl_file   : 3
    <1193>   DW_AT_decl_line   : 48
    <1194>   DW_AT_decl_column : 20
    <1195>   DW_AT_type        : <0x115e>
 <1><1199>: Abbrev Number: 1 (DW_TAG_base_type)
    <119a>   DW_AT_byte_size   : 8
    <119b>   DW_AT_encoding    : 4	(float)
    <119c>   DW_AT_name        : (indirect string, offset: 0x603): long double
 <1><11a0>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <11a1>   DW_AT_byte_size   : 4
    <11a1>   DW_AT_type        : <0x11aa>
 <1><11a5>: Abbrev Number: 6 (DW_TAG_const_type)
    <11a6>   DW_AT_type        : <0x11a0>
 <1><11aa>: Abbrev Number: 12 (DW_TAG_subroutine_type)
    <11ab>   DW_AT_prototyped  : 1
 <1><11ab>: Abbrev Number: 1 (DW_TAG_base_type)
    <11ac>   DW_AT_byte_size   : 1
    <11ad>   DW_AT_encoding    : 8	(unsigned char)
    <11ae>   DW_AT_name        : (indirect string, offset: 0x19a): char
 <1><11b2>: Abbrev Number: 7 (DW_TAG_array_type)
    <11b3>   DW_AT_type        : <0x116a>
    <11b7>   DW_AT_sibling     : <0x11c2>
 <2><11bb>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <11bc>   DW_AT_type        : <0x1186>
    <11c0>   DW_AT_upper_bound : 63
 <2><11c1>: Abbrev Number: 0
 <1><11c2>: Abbrev Number: 13 (DW_TAG_variable)
    <11c3>   DW_AT_name        : (indirect string, offset: 0x5aa): pulStack
    <11c7>   DW_AT_decl_file   : 1
    <11c8>   DW_AT_decl_line   : 33
    <11c9>   DW_AT_decl_column : 22
    <11ca>   DW_AT_type        : <0x11b2>
    <11ce>   DW_AT_location    : 5 byte block: 3 18 11 0 20 	(DW_OP_addr: 20001118)
 <1><11d4>: Abbrev Number: 7 (DW_TAG_array_type)
    <11d5>   DW_AT_type        : <0x11a5>
    <11d9>   DW_AT_sibling     : <0x11e4>
 <2><11dd>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <11de>   DW_AT_type        : <0x1186>
    <11e2>   DW_AT_upper_bound : 154
 <2><11e3>: Abbrev Number: 0
 <1><11e4>: Abbrev Number: 6 (DW_TAG_const_type)
    <11e5>   DW_AT_type        : <0x11d4>
 <1><11e9>: Abbrev Number: 14 (DW_TAG_variable)
    <11ea>   DW_AT_name        : (indirect string, offset: 0x5f6): g_pfnVectors
    <11ee>   DW_AT_decl_file   : 1
    <11ef>   DW_AT_decl_line   : 42
    <11f0>   DW_AT_decl_column : 15
    <11f1>   DW_AT_type        : <0x11e4>
    <11f5>   DW_AT_external    : 1
    <11f5>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <1><11fb>: Abbrev Number: 2 (DW_TAG_variable)
    <11fc>   DW_AT_name        : (indirect string, offset: 0x5cd): _etext
    <1200>   DW_AT_decl_file   : 1
    <1200>   DW_AT_decl_line   : 209
    <1201>   DW_AT_decl_column : 22
    <1201>   DW_AT_type        : <0x116a>
    <1205>   DW_AT_external    : 1
    <1205>   DW_AT_declaration : 1
 <1><1205>: Abbrev Number: 2 (DW_TAG_variable)
    <1206>   DW_AT_name        : (indirect string, offset: 0x5a4): _data
    <120a>   DW_AT_decl_file   : 1
    <120a>   DW_AT_decl_line   : 210
    <120b>   DW_AT_decl_column : 22
    <120b>   DW_AT_type        : <0x116a>
    <120f>   DW_AT_external    : 1
    <120f>   DW_AT_declaration : 1
 <1><120f>: Abbrev Number: 2 (DW_TAG_variable)
    <1210>   DW_AT_name        : (indirect string, offset: 0x5d4): _edata
    <1214>   DW_AT_decl_file   : 1
    <1214>   DW_AT_decl_line   : 211
    <1215>   DW_AT_decl_column : 22
    <1215>   DW_AT_type        : <0x116a>
    <1219>   DW_AT_external    : 1
    <1219>   DW_AT_declaration : 1
 <1><1219>: Abbrev Number: 15 (DW_TAG_subprogram)
    <121a>   DW_AT_external    : 1
    <121a>   DW_AT_name        : (indirect string, offset: 0x416): main
    <121e>   DW_AT_decl_file   : 1
    <121f>   DW_AT_decl_line   : 26
    <1220>   DW_AT_decl_column : 12
    <1221>   DW_AT_prototyped  : 1
    <1221>   DW_AT_type        : <0x117f>
    <1225>   DW_AT_declaration : 1
 <1><1225>: Abbrev Number: 16 (DW_TAG_subprogram)
    <1226>   DW_AT_external    : 1
    <1226>   DW_AT_name        : (indirect string, offset: 0x484): timeKeeperISR
    <122a>   DW_AT_decl_file   : 4
    <122b>   DW_AT_decl_line   : 7
    <122c>   DW_AT_decl_column : 6
    <122d>   DW_AT_prototyped  : 1
    <122d>   DW_AT_declaration : 1
 <1><122d>: Abbrev Number: 3 (DW_TAG_subprogram)
    <122e>   DW_AT_name        : (indirect string, offset: 0x5b3): IntDefaultHandler
    <1232>   DW_AT_decl_file   : 1
    <1232>   DW_AT_decl_line   : 304
    <1234>   DW_AT_decl_column : 1
    <1234>   DW_AT_prototyped  : 1
    <1234>   DW_AT_low_pc      : 0xba4
    <1238>   DW_AT_high_pc     : 0x2
    <123c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <123e>   DW_AT_call_all_calls: 1
 <1><123e>: Abbrev Number: 3 (DW_TAG_subprogram)
    <123f>   DW_AT_name        : (indirect string, offset: 0x5ed): FaultISR
    <1243>   DW_AT_decl_file   : 1
    <1243>   DW_AT_decl_line   : 286
    <1245>   DW_AT_decl_column : 1
    <1245>   DW_AT_prototyped  : 1
    <1245>   DW_AT_low_pc      : 0xba2
    <1249>   DW_AT_high_pc     : 0x2
    <124d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <124f>   DW_AT_call_all_calls: 1
 <1><124f>: Abbrev Number: 3 (DW_TAG_subprogram)
    <1250>   DW_AT_name        : (indirect string, offset: 0x61f): NmiSR
    <1254>   DW_AT_decl_file   : 1
    <1254>   DW_AT_decl_line   : 268
    <1256>   DW_AT_decl_column : 1
    <1256>   DW_AT_prototyped  : 1
    <1256>   DW_AT_low_pc      : 0xba0
    <125a>   DW_AT_high_pc     : 0x2
    <125e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1260>   DW_AT_call_all_calls: 1
 <1><1260>: Abbrev Number: 17 (DW_TAG_subprogram)
    <1261>   DW_AT_external    : 1
    <1261>   DW_AT_name        : (indirect string, offset: 0x616): ResetISR
    <1265>   DW_AT_decl_file   : 1
    <1266>   DW_AT_decl_line   : 226
    <1267>   DW_AT_decl_column : 1
    <1268>   DW_AT_prototyped  : 1
    <1268>   DW_AT_low_pc      : 0xba8
    <126c>   DW_AT_high_pc     : 0x48
    <1270>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1272>   DW_AT_call_all_calls: 1
    <1272>   DW_AT_sibling     : <0x12a6>
 <2><1276>: Abbrev Number: 9 (DW_TAG_variable)
    <1277>   DW_AT_name        : (indirect string, offset: 0x60f): pulSrc
    <127b>   DW_AT_decl_file   : 1
    <127b>   DW_AT_decl_line   : 228
    <127c>   DW_AT_decl_column : 20
    <127d>   DW_AT_type        : <0x12a6>
    <1281>   DW_AT_location    : 0x43d (location list)
    <1285>   DW_AT_GNU_locviews: 0x437
 <2><1289>: Abbrev Number: 9 (DW_TAG_variable)
    <128a>   DW_AT_name        : (indirect string, offset: 0x5c5): pulDest
    <128e>   DW_AT_decl_file   : 1
    <128e>   DW_AT_decl_line   : 228
    <128f>   DW_AT_decl_column : 29
    <1290>   DW_AT_type        : <0x12a6>
    <1294>   DW_AT_location    : 0x45a (location list)
    <1298>   DW_AT_GNU_locviews: 0x454
 <2><129c>: Abbrev Number: 18 (DW_TAG_call_site)
    <129d>   DW_AT_call_return_pc: 0xbe0
    <12a1>   DW_AT_call_origin : <0x1219>
 <2><12a5>: Abbrev Number: 0
 <1><12a6>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <12a7>   DW_AT_byte_size   : 4
    <12a7>   DW_AT_type        : <0x116a>
 <1><12ab>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_enumeration_type    [has children]
    DW_AT_encoding     DW_FORM_implicit_const: 7
    DW_AT_byte_size    DW_FORM_implicit_const: 1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_bit_size     DW_FORM_data1
    DW_AT_data_bit_offset DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_implicit_const: 128
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 32
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_union_type    [has children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_implicit_const: 4
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 9
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
   35      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   36      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   37      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   38      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   39      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   40      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   41      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   42      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   43      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x291)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_formal_parameter    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x349)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_specification DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x45d)
   1      DW_TAG_call_site_parameter    [no children]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_call_value   DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 6
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 7
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_unspecified_parameters    [no children]
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_lexical_block    [has children]
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_call_site    [has children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_target  DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x628)
   1      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_implicit_const: 22
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_implicit_const: 1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_implicit_const: 4
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subroutine_type    [no children]
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_call_site    [no children]
    DW_AT_call_return_pc DW_FORM_addr
    DW_AT_call_origin  DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_loclists section:

    Offset   Begin            End              Expression

    0000000c v0000000 v0000000 location view pair

    0000000e v0000000 v0000000 views at 0000000c for:
             0000052a 00000546 (DW_OP_reg0 (r0))
    00000016 <End of list>

    00000017 v0000000 v0000000 location view pair

    00000019 v0000000 v0000000 views at 00000017 for:
             0000065a 0000066b (DW_OP_reg1 (r1))
    00000021 <End of list>

    00000022 v0000000 v0000000 location view pair

    00000024 v0000000 v0000000 views at 00000022 for:
             000006d4 00000700 (DW_OP_reg4 (r4))
    0000002c <End of list>

    0000002d v0000000 v0000000 location view pair

    0000002f v0000000 v0000000 views at 0000002d for:
             000006e6 00000700 (DW_OP_reg0 (r0))
    00000037 <End of list>

    00000038 v0000002 v0000000 location view pair
    0000003a v0000000 v0000000 location view pair

    0000003c 000004be (base address)
    00000041 v0000002 v0000000 views at 00000038 for:
             000004be 000004c2 (DW_OP_lit0; DW_OP_stack_value)
    00000047 v0000000 v0000000 views at 0000003a for:
             000004c2 000004e9 (DW_OP_reg2 (r2))
    0000004c <End of list>

    0000004d v0000002 v0000000 location view pair
    0000004f v0000000 v0000000 location view pair

    00000051 000004ea (base address)
    00000056 v0000002 v0000000 views at 0000004d for:
             000004ea 000004ee (DW_OP_lit15; DW_OP_stack_value)
    0000005c v0000000 v0000000 views at 0000004f for:
             000004ee 00000506 (DW_OP_reg4 (r4))
    00000061 <End of list>

    00000062 v0000000 v0000000 location view pair
    00000064 v0000000 v0000000 location view pair
    00000066 v0000000 v0000000 location view pair

    00000068 00000484 (base address)
    0000006d v0000000 v0000000 views at 00000062 for:
             00000484 0000049e (DW_OP_reg0 (r0))
    00000072 v0000000 v0000000 views at 00000064 for:
             0000049e 000004b0 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000080 v0000000 v0000000 views at 00000066 for:
             000004b0 000004bc (DW_OP_reg0 (r0))
    00000085 <End of list>

    00000086 v0000000 v0000000 location view pair
    00000088 v0000000 v0000000 location view pair
    0000008a v0000000 v0000000 location view pair
    0000008c v0000000 v0000000 location view pair

    0000008e 00000484 (base address)
    00000093 v0000000 v0000000 views at 00000086 for:
             00000484 0000048a (DW_OP_reg1 (r1))
    00000098 v0000000 v0000000 views at 00000088 for:
             0000048a 000004b0 (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000a6 v0000000 v0000000 views at 0000008a for:
             000004b0 000004b2 (DW_OP_reg1 (r1))
    000000ab v0000000 v0000000 views at 0000008c for:
             000004b2 000004bc (DW_OP_entry_value: (DW_OP_regval_type: 1 (r1) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000b9 <End of list>

    000000ba v0000000 v0000000 location view pair
    000000bc v0000000 v0000000 location view pair
    000000be v0000000 v0000000 location view pair
    000000c0 v0000000 v0000000 location view pair

    000000c2 00000484 (base address)
    000000c7 v0000000 v0000000 views at 000000ba for:
             00000484 0000048e (DW_OP_reg2 (r2))
    000000cc v0000000 v0000000 views at 000000bc for:
             0000048e 000004b0 (DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000da v0000000 v0000000 views at 000000be for:
             000004b0 000004b4 (DW_OP_reg2 (r2))
    000000df v0000000 v0000000 views at 000000c0 for:
             000004b4 000004bc (DW_OP_entry_value: (DW_OP_regval_type: 2 (r2) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    000000ed <End of list>

    000000ee v0000000 v0000000 location view pair
    000000f0 v0000000 v0000000 location view pair
    000000f2 v0000000 v0000000 location view pair
    000000f4 v0000000 v0000000 location view pair

    000000f6 00000484 (base address)
    000000fb v0000000 v0000000 views at 000000ee for:
             00000484 00000492 (DW_OP_reg3 (r3))
    00000100 v0000000 v0000000 views at 000000f0 for:
             00000492 000004b0 (DW_OP_entry_value: (DW_OP_regval_type: 3 (r3) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    0000010e v0000000 v0000000 views at 000000f2 for:
             000004b0 000004b4 (DW_OP_reg3 (r3))
    00000113 v0000000 v0000000 views at 000000f4 for:
             000004b4 000004bc (DW_OP_entry_value: (DW_OP_regval_type: 3 (r3) <0x26>); DW_OP_convert <0x2d>; DW_OP_convert <0>; DW_OP_stack_value)
    00000121 <End of list>

    00000122 v0000000 v0000000 location view pair
    00000124 v0000000 v0000000 location view pair

    00000126 0000048a (base address)
    0000012b v0000000 v0000000 views at 00000122 for:
             0000048a 00000498 (DW_OP_reg1 (r1))
    00000130 v0000000 v0000000 views at 00000124 for:
             000004b4 000004bc (DW_OP_reg1 (r1))
    00000135 <End of list>

    00000136 v0000000 v0000000 location view pair
    00000138 v0000000 v0000000 location view pair

    0000013a 0000048e (base address)
    0000013f v0000000 v0000000 views at 00000136 for:
             0000048e 0000049a (DW_OP_reg2 (r2))
    00000144 v0000000 v0000000 views at 00000138 for:
             000004b4 000004bc (DW_OP_reg2 (r2))
    00000149 <End of list>

    0000014a v0000003 v0000000 location view pair
    0000014c v0000000 v0000000 location view pair

    0000014e 00000288 (base address)
    00000153 v0000003 v0000000 views at 0000014a for:
             00000288 0000028a (DW_OP_lit0; DW_OP_stack_value)
    00000159 v0000000 v0000000 views at 0000014c for:
             0000028a 00000328 (DW_OP_reg0 (r0))
    0000015f <End of list>

    00000160 v0000000 v0000001 location view pair
    00000162 v0000001 v0000000 location view pair
    00000164 v0000000 v0000000 location view pair
    00000166 v0000000 v0000000 location view pair
    00000168 v0000000 v0000000 location view pair

    0000016a 0000029a (base address)
    0000016f v0000000 v0000001 views at 00000160 for:
             0000029a 000002ae (DW_OP_reg3 (r3))
    00000174 v0000001 v0000000 views at 00000162 for:
             000002ae 000002b0 (DW_OP_breg3 (r3): -1; DW_OP_stack_value)
    0000017b v0000000 v0000000 views at 00000164 for:
             000002b0 000002bc (DW_OP_reg3 (r3))
    00000180 v0000000 v0000000 views at 00000166 for:
             000002be 000002c0 (DW_OP_reg3 (r3))
    00000185 v0000000 v0000000 views at 00000168 for:
             00000314 0000031e (DW_OP_reg3 (r3))
    0000018b <End of list>

    0000018c v0000000 v0000000 location view pair
    0000018e v0000000 v0000000 location view pair
    00000190 v0000000 v0000000 location view pair

    00000192 0000029a (base address)
    00000197 v0000000 v0000000 views at 0000018c for:
             0000029a 000002b8 (DW_OP_reg4 (r4))
    0000019c v0000000 v0000000 views at 0000018e for:
             000002be 000002c4 (DW_OP_reg4 (r4))
    000001a1 v0000000 v0000000 views at 00000190 for:
             0000031c 0000031e (DW_OP_reg4 (r4))
    000001a8 <End of list>

    000001a9 v0000001 v0000000 location view pair
    000001ab v0000000 v0000000 location view pair
    000001ad v0000000 v0000000 location view pair

    000001af 000002be (base address)
    000001b4 v0000001 v0000000 views at 000001a9 for:
             000002be 000002c0 (DW_OP_breg0 (r0): 1; DW_OP_stack_value)
    000001bb v0000000 v0000000 views at 000001ab for:
             000002c0 000002e8 (DW_OP_reg3 (r3))
    000001c0 v0000000 v0000000 views at 000001ad for:
             000002ea 000002ee (DW_OP_reg3 (r3))
    000001c5 <End of list>

    000001c6 v0000000 v0000000 location view pair
    000001c8 v0000000 v0000000 location view pair

    000001ca 000002c6 (base address)
    000001cf v0000000 v0000000 views at 000001c6 for:
             000002c6 000002e6 (DW_OP_reg4 (r4))
    000001d4 v0000000 v0000000 views at 000001c8 for:
             000002ea 000002f6 (DW_OP_reg4 (r4))
    000001d9 <End of list>

    000001da v0000003 v0000000 location view pair
    000001dc v0000000 v0000000 location view pair

    000001de 0000026c (base address)
    000001e3 v0000003 v0000000 views at 000001da for:
             0000026c 00000270 (DW_OP_lit0; DW_OP_stack_value)
    000001e9 v0000000 v0000000 views at 000001dc for:
             00000270 00000288 (DW_OP_reg3 (r3))
    000001ee <End of list>

    000001fb v0000000 v0000000 location view pair
    000001fd v0000000 v0000000 location view pair

    000001ff 00000000 (base address)
    00000204 v0000000 v0000000 views at 000001fb for:
             00000000 0000001a (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    0000020e v0000000 v0000000 views at 000001fd for:
             0000002a 00000046 (DW_OP_reg6 (r6); DW_OP_piece: 4; DW_OP_reg7 (r7); DW_OP_piece: 4)
    00000218 <End of list>

    00000225 v0000006 v0000000 location view pair
    00000227 v0000000 v0000001 location view pair
    00000229 v0000001 v0000000 location view pair
    0000022b v0000000 v0000000 location view pair
    0000022d v0000000 v0000000 location view pair
    0000022f v0000000 v0000000 location view pair
    00000231 v0000000 v0000000 location view pair

    00000233 00000ac2 (base address)
    00000238 v0000006 v0000000 views at 00000225 for:
             00000ac2 00000ac6 (DW_OP_lit0; DW_OP_stack_value)
    0000023e v0000000 v0000001 views at 00000227 for:
             00000ac6 00000aec (DW_OP_reg6 (r6))
    00000243 v0000001 v0000000 views at 00000229 for:
             00000aec 00000aee (DW_OP_reg4 (r4))
    00000248 v0000000 v0000000 views at 0000022b for:
             00000aee 00000b22 (DW_OP_reg6 (r6))
    0000024d v0000000 v0000000 views at 0000022d for:
             00000b22 00000b32 (DW_OP_reg4 (r4))
    00000252 v0000000 v0000000 views at 0000022f for:
             00000b32 00000b94 (DW_OP_reg6 (r6))
    00000258 v0000000 v0000000 views at 00000231 for:
             00000b94 00000b9a (DW_OP_reg4 (r4))
    0000025f <End of list>

    00000260 v0000000 v0000000 location view pair
    00000262 v0000000 v0000000 location view pair
    00000264 v0000000 v0000000 location view pair
    00000266 v0000000 v0000000 location view pair
    00000268 v0000000 v0000001 location view pair
    0000026a v0000000 v0000000 location view pair
    0000026c v0000000 v0000000 location view pair
    0000026e v0000000 v0000000 location view pair
    00000270 v0000000 v0000001 location view pair
    00000272 v0000001 v0000000 location view pair

    00000274 00000994 (base address)
    00000279 v0000000 v0000000 views at 00000260 for:
             00000994 00000a00 (DW_OP_regx: 64 (r64))
    0000027f v0000000 v0000000 views at 00000262 for:
             00000a16 00000a1b (DW_OP_regx: 64 (r64))
    00000287 v0000000 v0000000 views at 00000264 for:
             00000a1b 00000a1e (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc18>); DW_OP_stack_value)
    00000293 v0000000 v0000000 views at 00000266 for:
             00000a1e 00000a23 (DW_OP_regx: 64 (r64))
    0000029b v0000000 v0000001 views at 00000268 for:
             00000a23 00000a24 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc18>); DW_OP_stack_value)
    000002a7 v0000000 v0000000 views at 0000026a for:
             00000a2c 00000a31 (DW_OP_regx: 64 (r64))
    000002af v0000000 v0000000 views at 0000026c for:
             00000a31 00000a34 (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc18>); DW_OP_stack_value)
    000002bb v0000000 v0000000 views at 0000026e for:
             00000a34 00000a39 (DW_OP_regx: 64 (r64))
    000002c3 v0000000 v0000001 views at 00000270 for:
             00000a39 00000a3a (DW_OP_entry_value: (DW_OP_regval_type: 64 (r64) <0xc18>); DW_OP_stack_value)
    000002cf v0000001 v0000000 views at 00000272 for:
             00000a3a 00000a40 (DW_OP_regx: 80 (r80))
    000002d7 <End of list>

    000002d8 v0000000 v0000000 location view pair
    000002da v0000000 v0000000 location view pair

    000002dc 000009f8 (base address)
    000002e1 v0000000 v0000000 views at 000002d8 for:
             000009f8 00000a16 (DW_OP_regx: 79 (r79))
    000002e7 v0000000 v0000000 views at 000002da for:
             00000a40 00000a7f (DW_OP_regx: 79 (r79))
    000002ee <End of list>

    000002ef v0000000 v0000000 location view pair
    000002f1 v0000000 v0000000 location view pair
    000002f3 v0000000 v0000000 location view pair

    000002f5 00000a10 (base address)
    000002fa v0000000 v0000000 views at 000002ef for:
             00000a10 00000a16 (DW_OP_reg3 (r3))
    000002ff v0000000 v0000000 views at 000002f1 for:
             00000a40 00000a58 (DW_OP_reg3 (r3))
    00000304 v0000000 v0000000 views at 000002f3 for:
             00000a60 00000a6e (DW_OP_reg3 (r3))
    00000309 <End of list>

    0000030a v0000001 v0000000 location view pair
    0000030c v0000000 v0000000 location view pair
    0000030e v0000000 v0000000 location view pair
    00000310 v0000000 v0000000 location view pair
    00000312 v0000000 v0000000 location view pair
    00000314 v0000000 v0000001 location view pair
    00000316 v0000001 v0000000 location view pair

    00000318 00000a10 (base address)
    0000031d v0000001 v0000000 views at 0000030a for:
             00000a10 00000a16 (DW_OP_lit0; DW_OP_stack_value)
    00000323 v0000000 v0000000 views at 0000030c for:
             00000a40 00000a52 (DW_OP_reg1 (r1))
    00000328 v0000000 v0000000 views at 0000030e for:
             00000a52 00000a64 (DW_OP_breg1 (r1): 1; DW_OP_stack_value)
    0000032f v0000000 v0000000 views at 00000310 for:
             00000a64 00000a6a (DW_OP_reg1 (r1))
    00000334 v0000000 v0000000 views at 00000312 for:
             00000a6a 00000a84 (DW_OP_reg4 (r4))
    00000339 v0000000 v0000001 views at 00000314 for:
             00000a84 00000a92 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    00000341 v0000001 v0000000 views at 00000316 for:
             00000a92 00000ab4 (DW_OP_reg4 (r4))
    00000348 <End of list>

    00000349 v0000003 v0000000 location view pair
    0000034b v0000000 v0000000 location view pair

    0000034d 00000a10 (base address)
    00000352 v0000003 v0000000 views at 00000349 for:
             00000a10 00000a16 (DW_OP_lit0; DW_OP_stack_value)
    00000358 v0000000 v0000000 views at 0000034b for:
             00000a40 00000a7c (DW_OP_reg0 (r0))
    0000035d <End of list>

    0000035e v0000000 v0000000 location view pair
    00000360 v0000000 v0000000 location view pair
    00000362 v0000000 v0000000 location view pair
    00000364 v0000000 v0000000 location view pair

    00000366 0000097c (base address)
    0000036b v0000000 v0000000 views at 0000035e for:
             0000097c 00000982 (DW_OP_reg0 (r0))
    00000370 v0000000 v0000000 views at 00000360 for:
             00000982 0000098a (DW_OP_reg4 (r4))
    00000375 v0000000 v0000000 views at 00000362 for:
             0000098a 0000098c (DW_OP_reg0 (r0))
    0000037a v0000000 v0000000 views at 00000364 for:
             0000098c 00000994 (DW_OP_reg4 (r4))
    0000037f <End of list>

    00000380 v0000000 v0000000 location view pair
    00000382 v0000000 v0000000 location view pair

    00000384 00000930 (base address)
    00000389 v0000000 v0000000 views at 00000380 for:
             00000930 00000936 (DW_OP_reg0 (r0))
    0000038e v0000000 v0000000 views at 00000382 for:
             00000936 00000960 (DW_OP_reg0 (r0))
    00000393 <End of list>

    00000394 v0000002 v0000000 location view pair
    00000396 v0000000 v0000000 location view pair
    00000398 v0000000 v0000000 location view pair
    0000039a v0000000 v0000000 location view pair
    0000039c v0000000 v0000001 location view pair
    0000039e v0000001 v0000000 location view pair

    000003a0 00000934 (base address)
    000003a5 v0000002 v0000000 views at 00000394 for:
             00000934 00000936 (DW_OP_lit0; DW_OP_stack_value)
    000003ab v0000000 v0000000 views at 00000396 for:
             00000936 00000952 (DW_OP_reg4 (r4))
    000003b0 v0000000 v0000000 views at 00000398 for:
             00000952 00000960 (DW_OP_breg4 (r4): -1; DW_OP_stack_value)
    000003b7 v0000000 v0000000 views at 0000039a for:
             00000960 00000962 (DW_OP_reg4 (r4))
    000003bc v0000000 v0000001 views at 0000039c for:
             00000962 00000970 (DW_OP_breg4 (r4): 1; DW_OP_stack_value)
    000003c3 v0000001 v0000000 views at 0000039e for:
             00000970 00000978 (DW_OP_reg4 (r4))
    000003c8 <End of list>

    000003c9 v0000000 v0000000 location view pair
    000003cb v0000000 v0000000 location view pair

    000003cd 00000918 (base address)
    000003d2 v0000000 v0000000 views at 000003c9 for:
             00000918 00000920 (DW_OP_reg0 (r0))
    000003d7 v0000000 v0000000 views at 000003cb for:
             00000920 0000092e (DW_OP_reg5 (r5))
    000003dc <End of list>

    000003dd v0000002 v0000000 location view pair
    000003df v0000000 v0000000 location view pair

    000003e1 0000091c (base address)
    000003e6 v0000002 v0000000 views at 000003dd for:
             0000091c 00000920 (DW_OP_lit0; DW_OP_stack_value)
    000003ec v0000000 v0000000 views at 000003df for:
             00000920 0000092e (DW_OP_reg4 (r4))
    000003f1 <End of list>

    000003f2 v0000000 v0000000 location view pair
    000003f4 v0000000 v0000000 location view pair
    000003f6 v0000000 v0000000 location view pair

    000003f8 000008d4 (base address)
    000003fd v0000000 v0000000 views at 000003f2 for:
             000008d4 000008e2 (DW_OP_reg0 (r0))
    00000402 v0000000 v0000000 views at 000003f4 for:
             000008e2 000008e3 (DW_OP_reg1 (r1))
    00000407 v0000000 v0000000 views at 000003f6 for:
             000008e3 00000918 (DW_OP_entry_value: (DW_OP_regval_type: 0 (r0) <0xc1f>); DW_OP_convert <0xc26>; DW_OP_convert <0>; DW_OP_stack_value)
    00000415 <End of list>

    00000416 v0000002 v0000000 location view pair
    00000418 v0000000 v0000000 location view pair

    0000041a 00000904 (base address)
    0000041f v0000002 v0000000 views at 00000416 for:
             00000904 00000906 (DW_OP_lit0; DW_OP_stack_value)
    00000425 v0000000 v0000000 views at 00000418 for:
             00000906 0000090e (DW_OP_reg3 (r3))
    0000042a <End of list>

    00000437 v0000000 v0000001 location view pair
    00000439 v0000001 v0000000 location view pair
    0000043b v0000000 v0000000 location view pair

    0000043d 00000bb0 (base address)
    00000442 v0000000 v0000001 views at 00000437 for:
             00000bb0 00000bb0 (DW_OP_reg2 (r2))
    00000447 v0000001 v0000000 views at 00000439 for:
             00000bb0 00000bb4 (DW_OP_breg2 (r2): 4; DW_OP_stack_value)
    0000044e v0000000 v0000000 views at 0000043b for:
             00000bb4 00000bd8 (DW_OP_reg2 (r2))
    00000453 <End of list>

    00000454 v0000000 v0000001 location view pair
    00000456 v0000001 v0000000 location view pair
    00000458 v0000000 v0000000 location view pair

    0000045a 00000bb0 (base address)
    0000045f v0000000 v0000001 views at 00000454 for:
             00000bb0 00000bb0 (DW_OP_reg3 (r3))
    00000464 v0000001 v0000000 views at 00000456 for:
             00000bb0 00000bb8 (DW_OP_breg3 (r3): 4; DW_OP_stack_value)
    0000046b v0000000 v0000000 views at 00000458 for:
             00000bb8 00000bd4 (DW_OP_reg3 (r3))
    00000470 <End of list>

Contents of the .debug_aranges section:

  Length:                   92
  Version:                  2
  Offset into .debug_info:  0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000026c 0000001c
    00000288 000000a0
    00000328 000000ec
    00000414 00000024
    00000438 00000024
    0000045c 00000028
    00000484 00000038
    000004bc 0000005c
    00000518 00000270
    00000000 00000000
  Length:                   28
  Version:                  2
  Offset into .debug_info:  0x8b2
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000788 00000078
    00000000 00000000
  Length:                   44
  Version:                  2
  Offset into .debug_info:  0xa74
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000000 0000007c
    00000800 00000064
    00000000 00000058
    00000000 00000000
  Length:                   76
  Version:                  2
  Offset into .debug_info:  0xbf2
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000864 00000070
    000008d4 00000044
    00000918 00000016
    00000930 0000004c
    0000097c 00000018
    00000994 00000120
    00000ab4 000000ea
    00000000 00000000
  Length:                   52
  Version:                  2
  Offset into .debug_info:  0x1115
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000ba0 00000002
    00000ba2 00000002
    00000ba4 00000002
    00000ba8 00000048
    00000000 00000000

Contents of the .debug_rnglists section:

 Table at Offset: 0:
  Length:          0x5c
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xc, Index: 0
    Offset   Begin    End
    0000000c 00000288 (base address)
    00000011 00000288 00000290 
    00000014 00000294 0000031e 
    00000018 <End of list>

 Table at Offset: 0x60:
  Length:          0xf
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x6c, Index: 0
    Offset   Begin    End
    0000006c 00000788 00000800 
    00000072 <End of list>

 Table at Offset: 0x73:
  Length:          0x1b
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x7f, Index: 0
    Offset   Begin    End
    0000007f 00000000 0000007c 
    00000085 00000800 00000864 
    0000008b 00000000 00000058 
    00000091 <End of list>

 Table at Offset: 0x92:
  Length:          0x44
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0x9e, Index: 0
    Offset   Begin    End
    0000009e 00000a10 (base address)
    000000a3 00000a10 00000a12 
    000000a6 00000a14 00000a16 
    000000a9 00000a40 00000a68 
    000000ac <End of list>

 Table at Offset: 0xda:
  Length:          0x21
  DWARF version:   5
  Address size:    4
  Segment size:    0
  Offset entries:  0

  Offset: 0xe6, Index: 0
    Offset   Begin    End
    000000e6 00000ba0 00000ba2 
    000000ec 00000ba2 00000ba4 
    000000f2 00000ba4 00000ba6 
    000000f8 00000ba8 00000bf0 
    000000fe <End of list>

Raw dump of debug contents of section .debug_line:

  Offset:                      0
  Length:                      1487
  DWARF Version:               3
  Prologue Length:             160
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x62):
  Entry	Dir	Time	Size	Name
  1	1	0	0	lidar.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x000000aa]  Set column to 27
  [0x000000ac]  Extended opcode 2: set Address to 0x26c
  [0x000000b3]  Advance Line by 38 to 39
  [0x000000b5]  Copy
  [0x000000b6]  Set column to 2
  [0x000000b8]  Special opcode 6: advance Address by 0 to 0x26c and Line by 1 to 40 (view 1)
  [0x000000b9]  Set column to 6
  [0x000000bb]  Copy (view 2)
  [0x000000bc]  Set column to 10
  [0x000000be]  Set is_stmt to 0
  [0x000000bf]  Copy (view 3)
  [0x000000c0]  Set column to 2
  [0x000000c2]  Special opcode 19: advance Address by 2 to 0x26e and Line by 0 to 40
  [0x000000c3]  Set column to 3
  [0x000000c5]  Set is_stmt to 1
  [0x000000c6]  Special opcode 20: advance Address by 2 to 0x270 and Line by 1 to 41
  [0x000000c7]  Set column to 25
  [0x000000c9]  Set is_stmt to 0
  [0x000000ca]  Copy (view 1)
  [0x000000cb]  Set column to 29
  [0x000000cd]  Special opcode 33: advance Address by 4 to 0x274 and Line by 0 to 41
  [0x000000ce]  Set column to 39
  [0x000000d0]  Extended opcode 4: set Discriminator to 3
  [0x000000d4]  Set is_stmt to 1
  [0x000000d5]  Special opcode 46: advance Address by 6 to 0x27a and Line by -1 to 40
  [0x000000d6]  Set column to 19
  [0x000000d8]  Extended opcode 4: set Discriminator to 1
  [0x000000dc]  Special opcode 19: advance Address by 2 to 0x27c and Line by 0 to 40
  [0x000000dd]  Set column to 1
  [0x000000df]  Set is_stmt to 0
  [0x000000e0]  Special opcode 50: advance Address by 6 to 0x282 and Line by 3 to 43
  [0x000000e1]  Advance PC by 6 to 0x288
  [0x000000e3]  Extended opcode 1: End of Sequence

  [0x000000e6]  Set column to 26
  [0x000000e8]  Extended opcode 2: set Address to 0x288
  [0x000000ef]  Advance Line by 46 to 47
  [0x000000f1]  Copy
  [0x000000f2]  Set column to 2
  [0x000000f4]  Special opcode 7: advance Address by 0 to 0x288 and Line by 2 to 49 (view 1)
  [0x000000f5]  Set column to 6
  [0x000000f7]  Copy (view 2)
  [0x000000f8]  Set column to 10
  [0x000000fa]  Set is_stmt to 0
  [0x000000fb]  Copy (view 3)
  [0x000000fc]  Set column to 19
  [0x000000fe]  Extended opcode 4: set Discriminator to 1
  [0x00000102]  Set is_stmt to 1
  [0x00000103]  Special opcode 19: advance Address by 2 to 0x28a and Line by 0 to 49
  [0x00000104]  Set column to 26
  [0x00000106]  Set is_stmt to 0
  [0x00000107]  Special opcode 45: advance Address by 6 to 0x290 and Line by -2 to 47
  [0x00000108]  Set column to 48
  [0x0000010a]  Extended opcode 4: set Discriminator to 2
  [0x0000010e]  Special opcode 39: advance Address by 4 to 0x294 and Line by 6 to 53
  [0x0000010f]  Set column to 6
  [0x00000111]  Set is_stmt to 1
  [0x00000112]  Special opcode 53: advance Address by 6 to 0x29a and Line by 6 to 59
  [0x00000113]  Set column to 32
  [0x00000115]  Set is_stmt to 0
  [0x00000116]  Copy (view 1)
  [0x00000117]  Set column to 6
  [0x00000119]  Set is_stmt to 1
  [0x0000011a]  Special opcode 48: advance Address by 6 to 0x2a0 and Line by 1 to 60
  [0x0000011b]  Set column to 43
  [0x0000011d]  Special opcode 0: advance Address by 0 to 0x2a0 and Line by -5 to 55 (view 1)
  [0x0000011e]  Set column to 33
  [0x00000120]  Set is_stmt to 0
  [0x00000121]  Copy (view 2)
  [0x00000122]  Set column to 43
  [0x00000124]  Special opcode 89: advance Address by 12 to 0x2ac and Line by 0 to 55
  [0x00000125]  Set column to 4
  [0x00000127]  Set is_stmt to 1
  [0x00000128]  Special opcode 20: advance Address by 2 to 0x2ae and Line by 1 to 56
  [0x00000129]  Special opcode 6: advance Address by 0 to 0x2ae and Line by 1 to 57 (view 1)
  [0x0000012a]  Set column to 7
  [0x0000012c]  Set is_stmt to 0
  [0x0000012d]  Copy (view 2)
  [0x0000012e]  Special opcode 19: advance Address by 2 to 0x2b0 and Line by 0 to 57
  [0x0000012f]  Set column to 5
  [0x00000131]  Set is_stmt to 1
  [0x00000132]  Special opcode 20: advance Address by 2 to 0x2b2 and Line by 1 to 58
  [0x00000133]  Set column to 7
  [0x00000135]  Set is_stmt to 0
  [0x00000136]  Copy (view 1)
  [0x00000137]  Set column to 15
  [0x00000139]  Special opcode 38: advance Address by 4 to 0x2b6 and Line by 5 to 63
  [0x0000013a]  Set column to 14
  [0x0000013c]  Special opcode 18: advance Address by 2 to 0x2b8 and Line by -1 to 62
  [0x0000013d]  Special opcode 33: advance Address by 4 to 0x2bc and Line by 0 to 62
  [0x0000013e]  Set column to 3
  [0x00000140]  Set is_stmt to 1
  [0x00000141]  Special opcode 26: advance Address by 2 to 0x2be and Line by 7 to 69
  [0x00000142]  Special opcode 6: advance Address by 0 to 0x2be and Line by 1 to 70 (view 1)
  [0x00000143]  Set column to 8
  [0x00000145]  Set is_stmt to 0
  [0x00000146]  Copy (view 2)
  [0x00000147]  Special opcode 19: advance Address by 2 to 0x2c0 and Line by 0 to 70
  [0x00000148]  Special opcode 33: advance Address by 4 to 0x2c4 and Line by 0 to 70
  [0x00000149]  Set column to 3
  [0x0000014b]  Set is_stmt to 1
  [0x0000014c]  Special opcode 20: advance Address by 2 to 0x2c6 and Line by 1 to 71
  [0x0000014d]  Set column to 8
  [0x0000014f]  Set is_stmt to 0
  [0x00000150]  Copy (view 1)
  [0x00000151]  Set column to 6
  [0x00000153]  Set is_stmt to 1
  [0x00000154]  Special opcode 22: advance Address by 2 to 0x2c8 and Line by 3 to 74
  [0x00000155]  Set column to 32
  [0x00000157]  Set is_stmt to 0
  [0x00000158]  Copy (view 1)
  [0x00000159]  Set column to 6
  [0x0000015b]  Set is_stmt to 1
  [0x0000015c]  Special opcode 48: advance Address by 6 to 0x2ce and Line by 1 to 75
  [0x0000015d]  Set column to 42
  [0x0000015f]  Special opcode 1: advance Address by 0 to 0x2ce and Line by -4 to 71 (view 1)
  [0x00000160]  Set column to 31
  [0x00000162]  Set is_stmt to 0
  [0x00000163]  Copy (view 2)
  [0x00000164]  Set column to 42
  [0x00000166]  Special opcode 61: advance Address by 8 to 0x2d6 and Line by 0 to 71
  [0x00000167]  Set column to 4
  [0x00000169]  Set is_stmt to 1
  [0x0000016a]  Special opcode 20: advance Address by 2 to 0x2d8 and Line by 1 to 72
  [0x0000016b]  Set column to 6
  [0x0000016d]  Set is_stmt to 0
  [0x0000016e]  Copy (view 1)
  [0x0000016f]  Special opcode 19: advance Address by 2 to 0x2da and Line by 0 to 72
  [0x00000170]  Set column to 5
  [0x00000172]  Set is_stmt to 1
  [0x00000173]  Special opcode 48: advance Address by 6 to 0x2e0 and Line by 1 to 73
  [0x00000174]  Set column to 7
  [0x00000176]  Set is_stmt to 0
  [0x00000177]  Copy (view 1)
  [0x00000178]  Set column to 13
  [0x0000017a]  Special opcode 38: advance Address by 4 to 0x2e4 and Line by 5 to 78
  [0x0000017b]  Set column to 15
  [0x0000017d]  Special opcode 18: advance Address by 2 to 0x2e6 and Line by -1 to 77
  [0x0000017e]  Special opcode 19: advance Address by 2 to 0x2e8 and Line by 0 to 77
  [0x0000017f]  Set column to 3
  [0x00000181]  Set is_stmt to 1
  [0x00000182]  Special opcode 24: advance Address by 2 to 0x2ea and Line by 5 to 82
  [0x00000183]  Set column to 54
  [0x00000185]  Set is_stmt to 0
  [0x00000186]  Copy (view 1)
  [0x00000187]  Set column to 64
  [0x00000189]  Special opcode 33: advance Address by 4 to 0x2ee and Line by 0 to 82
  [0x0000018a]  Set column to 99
  [0x0000018c]  Special opcode 19: advance Address by 2 to 0x2f0 and Line by 0 to 82
  [0x0000018d]  Set column to 29
  [0x0000018f]  Special opcode 19: advance Address by 2 to 0x2f2 and Line by 0 to 82
  [0x00000190]  Special opcode 33: advance Address by 4 to 0x2f6 and Line by 0 to 82
  [0x00000191]  Set column to 39
  [0x00000193]  Extended opcode 4: set Discriminator to 2
  [0x00000197]  Set is_stmt to 1
  [0x00000198]  Advance Line by -33 to 49
  [0x0000019a]  Copy (view 1)
  [0x0000019b]  Set column to 19
  [0x0000019d]  Extended opcode 4: set Discriminator to 1
  [0x000001a1]  Special opcode 19: advance Address by 2 to 0x2f8 and Line by 0 to 49
  [0x000001a2]  Set column to 3
  [0x000001a4]  Special opcode 49: advance Address by 6 to 0x2fe and Line by 2 to 51
  [0x000001a5]  Set column to 28
  [0x000001a7]  Set is_stmt to 0
  [0x000001a8]  Copy (view 1)
  [0x000001a9]  Set column to 5
  [0x000001ab]  Special opcode 89: advance Address by 12 to 0x30a and Line by 0 to 51
  [0x000001ac]  Set column to 3
  [0x000001ae]  Set is_stmt to 1
  [0x000001af]  Special opcode 35: advance Address by 4 to 0x30e and Line by 2 to 53
  [0x000001b0]  Set column to 48
  [0x000001b2]  Set is_stmt to 0
  [0x000001b3]  Copy (view 1)
  [0x000001b4]  Extended opcode 4: set Discriminator to 1
  [0x000001b8]  Special opcode 33: advance Address by 4 to 0x312 and Line by 0 to 53
  [0x000001b9]  Set column to 3
  [0x000001bb]  Set is_stmt to 1
  [0x000001bc]  Special opcode 20: advance Address by 2 to 0x314 and Line by 1 to 54
  [0x000001bd]  Set column to 8
  [0x000001bf]  Set is_stmt to 0
  [0x000001c0]  Copy (view 1)
  [0x000001c1]  Set column to 3
  [0x000001c3]  Set is_stmt to 1
  [0x000001c4]  Special opcode 62: advance Address by 8 to 0x31c and Line by 1 to 55
  [0x000001c5]  Set column to 9
  [0x000001c7]  Set is_stmt to 0
  [0x000001c8]  Copy (view 1)
  [0x000001c9]  Special opcode 19: advance Address by 2 to 0x31e and Line by 0 to 55
  [0x000001ca]  Set column to 1
  [0x000001cc]  Advance Line by 29 to 84
  [0x000001ce]  Copy (view 1)
  [0x000001cf]  Special opcode 19: advance Address by 2 to 0x320 and Line by 0 to 84
  [0x000001d0]  Advance PC by 8 to 0x328
  [0x000001d2]  Extended opcode 1: End of Sequence

  [0x000001d5]  Set column to 29
  [0x000001d7]  Extended opcode 2: set Address to 0x328
  [0x000001de]  Advance Line by 85 to 86
  [0x000001e1]  Copy
  [0x000001e2]  Set column to 2
  [0x000001e4]  Special opcode 20: advance Address by 2 to 0x32a and Line by 1 to 87
  [0x000001e5]  Special opcode 90: advance Address by 12 to 0x336 and Line by 1 to 88
  [0x000001e6]  Special opcode 62: advance Address by 8 to 0x33e and Line by 1 to 89
  [0x000001e7]  Set column to 57
  [0x000001e9]  Extended opcode 4: set Discriminator to 1
  [0x000001ed]  Copy (view 1)
  [0x000001ee]  Set column to 8
  [0x000001f0]  Extended opcode 4: set Discriminator to 1
  [0x000001f4]  Copy (view 2)
  [0x000001f5]  Set column to 9
  [0x000001f7]  Extended opcode 4: set Discriminator to 1
  [0x000001fb]  Set is_stmt to 0
  [0x000001fc]  Copy (view 3)
  [0x000001fd]  Set column to 8
  [0x000001ff]  Extended opcode 4: set Discriminator to 1
  [0x00000203]  Special opcode 103: advance Address by 14 to 0x34c and Line by 0 to 89
  [0x00000204]  Set column to 58
  [0x00000206]  Extended opcode 4: set Discriminator to 2
  [0x0000020a]  Set is_stmt to 1
  [0x0000020b]  Special opcode 33: advance Address by 4 to 0x350 and Line by 0 to 89
  [0x0000020c]  Set column to 2
  [0x0000020e]  Special opcode 6: advance Address by 0 to 0x350 and Line by 1 to 90 (view 1)
  [0x0000020f]  Set column to 20
  [0x00000211]  Set is_stmt to 0
  [0x00000212]  Copy (view 2)
  [0x00000213]  Set column to 2
  [0x00000215]  Set is_stmt to 1
  [0x00000216]  Special opcode 62: advance Address by 8 to 0x358 and Line by 1 to 91
  [0x00000217]  Set column to 18
  [0x00000219]  Set is_stmt to 0
  [0x0000021a]  Special opcode 33: advance Address by 4 to 0x35c and Line by 0 to 91
  [0x0000021b]  Set column to 2
  [0x0000021d]  Set is_stmt to 1
  [0x0000021e]  Special opcode 62: advance Address by 8 to 0x364 and Line by 1 to 92
  [0x0000021f]  Set column to 19
  [0x00000221]  Set is_stmt to 0
  [0x00000222]  Special opcode 33: advance Address by 4 to 0x368 and Line by 0 to 92
  [0x00000223]  Set column to 2
  [0x00000225]  Set is_stmt to 1
  [0x00000226]  Special opcode 62: advance Address by 8 to 0x370 and Line by 1 to 93
  [0x00000227]  Set column to 23
  [0x00000229]  Set is_stmt to 0
  [0x0000022a]  Copy (view 1)
  [0x0000022b]  Set column to 41
  [0x0000022d]  Special opcode 33: advance Address by 4 to 0x374 and Line by 0 to 93
  [0x0000022e]  Set column to 102
  [0x00000230]  Special opcode 33: advance Address by 4 to 0x378 and Line by 0 to 93
  [0x00000231]  Set column to 20
  [0x00000233]  Special opcode 33: advance Address by 4 to 0x37c and Line by 0 to 93
  [0x00000234]  Set column to 2
  [0x00000236]  Set is_stmt to 1
  [0x00000237]  Special opcode 34: advance Address by 4 to 0x380 and Line by 1 to 94
  [0x00000238]  Special opcode 132: advance Address by 18 to 0x392 and Line by 1 to 95
  [0x00000239]  Special opcode 104: advance Address by 14 to 0x3a0 and Line by 1 to 96
  [0x0000023a]  Special opcode 90: advance Address by 12 to 0x3ac and Line by 1 to 97
  [0x0000023b]  Set column to 36
  [0x0000023d]  Set is_stmt to 0
  [0x0000023e]  Special opcode 33: advance Address by 4 to 0x3b0 and Line by 0 to 97
  [0x0000023f]  Set column to 2
  [0x00000241]  Special opcode 33: advance Address by 4 to 0x3b4 and Line by 0 to 97
  [0x00000242]  Extended opcode 4: set Discriminator to 1
  [0x00000246]  Special opcode 33: advance Address by 4 to 0x3b8 and Line by 0 to 97
  [0x00000247]  Set is_stmt to 1
  [0x00000248]  Special opcode 77: advance Address by 10 to 0x3c2 and Line by 2 to 99
  [0x00000249]  Set column to 25
  [0x0000024b]  Set is_stmt to 0
  [0x0000024c]  Copy (view 1)
  [0x0000024d]  Set column to 2
  [0x0000024f]  Set is_stmt to 1
  [0x00000250]  Special opcode 48: advance Address by 6 to 0x3c8 and Line by 1 to 100
  [0x00000251]  Special opcode 34: advance Address by 4 to 0x3cc and Line by 1 to 101
  [0x00000252]  Set column to 25
  [0x00000254]  Set is_stmt to 0
  [0x00000255]  Copy (view 1)
  [0x00000256]  Set column to 2
  [0x00000258]  Set is_stmt to 1
  [0x00000259]  Special opcode 34: advance Address by 4 to 0x3d0 and Line by 1 to 102
  [0x0000025a]  Special opcode 34: advance Address by 4 to 0x3d4 and Line by 1 to 103
  [0x0000025b]  Set column to 24
  [0x0000025d]  Set is_stmt to 0
  [0x0000025e]  Copy (view 1)
  [0x0000025f]  Set column to 28
  [0x00000261]  Special opcode 19: advance Address by 2 to 0x3d6 and Line by 0 to 103
  [0x00000262]  Set column to 2
  [0x00000264]  Set is_stmt to 1
  [0x00000265]  Special opcode 34: advance Address by 4 to 0x3da and Line by 1 to 104
  [0x00000266]  Special opcode 34: advance Address by 4 to 0x3de and Line by 1 to 105
  [0x00000267]  Set column to 22
  [0x00000269]  Set is_stmt to 0
  [0x0000026a]  Copy (view 1)
  [0x0000026b]  Set column to 2
  [0x0000026d]  Set is_stmt to 1
  [0x0000026e]  Special opcode 34: advance Address by 4 to 0x3e2 and Line by 1 to 106
  [0x0000026f]  Set column to 25
  [0x00000271]  Set is_stmt to 0
  [0x00000272]  Copy (view 1)
  [0x00000273]  Set column to 2
  [0x00000275]  Set is_stmt to 1
  [0x00000276]  Special opcode 34: advance Address by 4 to 0x3e6 and Line by 1 to 107
  [0x00000277]  Set column to 1
  [0x00000279]  Set is_stmt to 0
  [0x0000027a]  Special opcode 36: advance Address by 4 to 0x3ea and Line by 3 to 110
  [0x0000027b]  Advance PC by 42 to 0x414
  [0x0000027d]  Extended opcode 1: End of Sequence

  [0x00000280]  Set column to 29
  [0x00000282]  Extended opcode 2: set Address to 0x414
  [0x00000289]  Advance Line by 111 to 112
  [0x0000028c]  Copy
  [0x0000028d]  Set column to 2
  [0x0000028f]  Special opcode 20: advance Address by 2 to 0x416 and Line by 1 to 113
  [0x00000290]  Special opcode 118: advance Address by 16 to 0x426 and Line by 1 to 114
  [0x00000291]  Set column to 1
  [0x00000293]  Set is_stmt to 0
  [0x00000294]  Special opcode 76: advance Address by 10 to 0x430 and Line by 1 to 115
  [0x00000295]  Advance PC by 8 to 0x438
  [0x00000297]  Extended opcode 1: End of Sequence

  [0x0000029a]  Set column to 28
  [0x0000029c]  Extended opcode 2: set Address to 0x438
  [0x000002a3]  Advance Line by 116 to 117
  [0x000002a6]  Copy
  [0x000002a7]  Set column to 2
  [0x000002a9]  Special opcode 20: advance Address by 2 to 0x43a and Line by 1 to 118
  [0x000002aa]  Special opcode 118: advance Address by 16 to 0x44a and Line by 1 to 119
  [0x000002ab]  Set column to 1
  [0x000002ad]  Set is_stmt to 0
  [0x000002ae]  Special opcode 76: advance Address by 10 to 0x454 and Line by 1 to 120
  [0x000002af]  Advance PC by 8 to 0x45c
  [0x000002b1]  Extended opcode 1: End of Sequence

  [0x000002b4]  Set column to 26
  [0x000002b6]  Extended opcode 2: set Address to 0x45c
  [0x000002bd]  Advance Line by 121 to 122
  [0x000002c0]  Copy
  [0x000002c1]  Set column to 2
  [0x000002c3]  Special opcode 20: advance Address by 2 to 0x45e and Line by 1 to 123
  [0x000002c4]  Set column to 7
  [0x000002c6]  Set is_stmt to 0
  [0x000002c7]  Copy (view 1)
  [0x000002c8]  Set column to 3
  [0x000002ca]  Set is_stmt to 1
  [0x000002cb]  Special opcode 20: advance Address by 2 to 0x460 and Line by 1 to 124
  [0x000002cc]  Set column to 8
  [0x000002ce]  Special opcode 88: advance Address by 12 to 0x46c and Line by -1 to 123
  [0x000002cf]  Extended opcode 4: set Discriminator to 1
  [0x000002d3]  Set is_stmt to 0
  [0x000002d4]  Special opcode 89: advance Address by 12 to 0x478 and Line by 0 to 123
  [0x000002d5]  Set column to 1
  [0x000002d7]  Special opcode 36: advance Address by 4 to 0x47c and Line by 3 to 126
  [0x000002d8]  Advance PC by 8 to 0x484
  [0x000002da]  Extended opcode 1: End of Sequence

  [0x000002dd]  Set column to 67
  [0x000002df]  Extended opcode 2: set Address to 0x484
  [0x000002e6]  Advance Line by 127 to 128
  [0x000002e9]  Copy
  [0x000002ea]  Set column to 2
  [0x000002ec]  Special opcode 6: advance Address by 0 to 0x484 and Line by 1 to 129 (view 1)
  [0x000002ed]  Set column to 54
  [0x000002ef]  Set is_stmt to 0
  [0x000002f0]  Copy (view 2)
  [0x000002f1]  Extended opcode 4: set Discriminator to 1
  [0x000002f5]  Special opcode 33: advance Address by 4 to 0x488 and Line by 0 to 129
  [0x000002f6]  Set column to 2
  [0x000002f8]  Set is_stmt to 1
  [0x000002f9]  Special opcode 20: advance Address by 2 to 0x48a and Line by 1 to 130
  [0x000002fa]  Set column to 16
  [0x000002fc]  Set is_stmt to 0
  [0x000002fd]  Copy (view 1)
  [0x000002fe]  Set column to 2
  [0x00000300]  Set is_stmt to 1
  [0x00000301]  Special opcode 34: advance Address by 4 to 0x48e and Line by 1 to 131
  [0x00000302]  Set column to 38
  [0x00000304]  Set is_stmt to 0
  [0x00000305]  Copy (view 1)
  [0x00000306]  Set column to 47
  [0x00000308]  Special opcode 33: advance Address by 4 to 0x492 and Line by 0 to 131
  [0x00000309]  Set column to 53
  [0x0000030b]  Special opcode 47: advance Address by 6 to 0x498 and Line by 0 to 131
  [0x0000030c]  Special opcode 19: advance Address by 2 to 0x49a and Line by 0 to 131
  [0x0000030d]  Special opcode 33: advance Address by 4 to 0x49e and Line by 0 to 131
  [0x0000030e]  Set column to 1
  [0x00000310]  Special opcode 62: advance Address by 8 to 0x4a6 and Line by 1 to 132
  [0x00000311]  Set column to 54
  [0x00000313]  Extended opcode 4: set Discriminator to 2
  [0x00000317]  Special opcode 72: advance Address by 10 to 0x4b0 and Line by -3 to 129
  [0x00000318]  Extended opcode 4: set Discriminator to 2
  [0x0000031c]  Special opcode 19: advance Address by 2 to 0x4b2 and Line by 0 to 129
  [0x0000031d]  Set column to 47
  [0x0000031f]  Special opcode 21: advance Address by 2 to 0x4b4 and Line by 2 to 131
  [0x00000320]  Advance PC by 8 to 0x4bc
  [0x00000322]  Extended opcode 1: End of Sequence

  [0x00000325]  Set column to 25
  [0x00000327]  Extended opcode 2: set Address to 0x4bc
  [0x0000032e]  Advance Line by 133 to 134
  [0x00000331]  Copy
  [0x00000332]  Set column to 2
  [0x00000334]  Special opcode 20: advance Address by 2 to 0x4be and Line by 1 to 135
  [0x00000335]  Set column to 6
  [0x00000337]  Copy (view 1)
  [0x00000338]  Set column to 10
  [0x0000033a]  Set is_stmt to 0
  [0x0000033b]  Copy (view 2)
  [0x0000033c]  Set column to 2
  [0x0000033e]  Special opcode 19: advance Address by 2 to 0x4c0 and Line by 0 to 135
  [0x0000033f]  Set column to 3
  [0x00000341]  Set is_stmt to 1
  [0x00000342]  Special opcode 20: advance Address by 2 to 0x4c2 and Line by 1 to 136
  [0x00000343]  Set column to 36
  [0x00000345]  Set is_stmt to 0
  [0x00000346]  Copy (view 1)
  [0x00000347]  Set column to 39
  [0x00000349]  Special opcode 47: advance Address by 6 to 0x4c8 and Line by 0 to 136
  [0x0000034a]  Set column to 63
  [0x0000034c]  Special opcode 33: advance Address by 4 to 0x4cc and Line by 0 to 136
  [0x0000034d]  Set column to 42
  [0x0000034f]  Special opcode 61: advance Address by 8 to 0x4d4 and Line by 0 to 136
  [0x00000350]  Set column to 67
  [0x00000352]  Special opcode 19: advance Address by 2 to 0x4d6 and Line by 0 to 136
  [0x00000353]  Set column to 20
  [0x00000355]  Special opcode 19: advance Address by 2 to 0x4d8 and Line by 0 to 136
  [0x00000356]  Set column to 25
  [0x00000358]  Extended opcode 4: set Discriminator to 3
  [0x0000035c]  Set is_stmt to 1
  [0x0000035d]  Special opcode 32: advance Address by 4 to 0x4dc and Line by -1 to 135
  [0x0000035e]  Set column to 18
  [0x00000360]  Extended opcode 4: set Discriminator to 1
  [0x00000364]  Special opcode 19: advance Address by 2 to 0x4de and Line by 0 to 135
  [0x00000365]  Set column to 2
  [0x00000367]  Special opcode 50: advance Address by 6 to 0x4e4 and Line by 3 to 138
  [0x00000368]  Special opcode 48: advance Address by 6 to 0x4ea and Line by 1 to 139
  [0x00000369]  Set column to 6
  [0x0000036b]  Copy (view 1)
  [0x0000036c]  Set column to 10
  [0x0000036e]  Set is_stmt to 0
  [0x0000036f]  Copy (view 2)
  [0x00000370]  Set column to 2
  [0x00000372]  Special opcode 19: advance Address by 2 to 0x4ec and Line by 0 to 139
  [0x00000373]  Set column to 3
  [0x00000375]  Set is_stmt to 1
  [0x00000376]  Special opcode 20: advance Address by 2 to 0x4ee and Line by 1 to 140
  [0x00000377]  Set column to 28
  [0x00000379]  Extended opcode 4: set Discriminator to 3
  [0x0000037d]  Special opcode 102: advance Address by 14 to 0x4fc and Line by -1 to 139
  [0x0000037e]  Set column to 20
  [0x00000380]  Extended opcode 4: set Discriminator to 1
  [0x00000384]  Special opcode 19: advance Address by 2 to 0x4fe and Line by 0 to 139
  [0x00000385]  Set column to 1
  [0x00000387]  Set is_stmt to 0
  [0x00000388]  Special opcode 50: advance Address by 6 to 0x504 and Line by 3 to 142
  [0x00000389]  Special opcode 19: advance Address by 2 to 0x506 and Line by 0 to 142
  [0x0000038a]  Advance PC by 18 to 0x518
  [0x0000038c]  Extended opcode 1: End of Sequence

  [0x0000038f]  Set column to 28
  [0x00000391]  Extended opcode 2: set Address to 0x518
  [0x00000398]  Advance Line by 143 to 144
  [0x0000039b]  Copy
  [0x0000039c]  Set column to 2
  [0x0000039e]  Special opcode 20: advance Address by 2 to 0x51a and Line by 1 to 145
  [0x0000039f]  Special opcode 6: advance Address by 0 to 0x51a and Line by 1 to 146 (view 1)
  [0x000003a0]  Special opcode 6: advance Address by 0 to 0x51a and Line by 1 to 147 (view 2)
  [0x000003a1]  Special opcode 6: advance Address by 0 to 0x51a and Line by 1 to 148 (view 3)
  [0x000003a2]  Special opcode 11: advance Address by 0 to 0x51a and Line by 6 to 154 (view 4)
  [0x000003a3]  Set column to 7
  [0x000003a5]  Set is_stmt to 0
  [0x000003a6]  Copy (view 5)
  [0x000003a7]  Set column to 5
  [0x000003a9]  Set is_stmt to 1
  [0x000003aa]  Special opcode 22: advance Address by 2 to 0x51c and Line by 3 to 157
  [0x000003ab]  Set column to 16
  [0x000003ad]  Set is_stmt to 0
  [0x000003ae]  Copy (view 1)
  [0x000003af]  Set column to 10
  [0x000003b1]  Extended opcode 4: set Discriminator to 1
  [0x000003b5]  Special opcode 89: advance Address by 12 to 0x528 and Line by 0 to 157
  [0x000003b6]  Set column to 5
  [0x000003b8]  Set is_stmt to 1
  [0x000003b9]  Special opcode 20: advance Address by 2 to 0x52a and Line by 1 to 158
  [0x000003ba]  Set column to 7
  [0x000003bc]  Set is_stmt to 0
  [0x000003bd]  Copy (view 1)
  [0x000003be]  Set column to 20
  [0x000003c0]  Extended opcode 4: set Discriminator to 1
  [0x000003c4]  Special opcode 33: advance Address by 4 to 0x52e and Line by 0 to 158
  [0x000003c5]  Set column to 5
  [0x000003c7]  Set is_stmt to 1
  [0x000003c8]  Special opcode 48: advance Address by 6 to 0x534 and Line by 1 to 159
  [0x000003c9]  Set column to 16
  [0x000003cb]  Set is_stmt to 0
  [0x000003cc]  Copy (view 1)
  [0x000003cd]  Set column to 5
  [0x000003cf]  Set is_stmt to 1
  [0x000003d0]  Special opcode 48: advance Address by 6 to 0x53a and Line by 1 to 160
  [0x000003d1]  Set column to 18
  [0x000003d3]  Set is_stmt to 0
  [0x000003d4]  Copy (view 1)
  [0x000003d5]  Set column to 5
  [0x000003d7]  Set is_stmt to 1
  [0x000003d8]  Special opcode 34: advance Address by 4 to 0x53e and Line by 1 to 161
  [0x000003d9]  Set column to 30
  [0x000003db]  Set is_stmt to 0
  [0x000003dc]  Copy (view 1)
  [0x000003dd]  Set column to 5
  [0x000003df]  Set is_stmt to 1
  [0x000003e0]  Special opcode 48: advance Address by 6 to 0x544 and Line by 1 to 162
  [0x000003e1]  Set is_stmt to 0
  [0x000003e2]  Special opcode 19: advance Address by 2 to 0x546 and Line by 0 to 162
  [0x000003e3]  Set column to 6
  [0x000003e5]  Set is_stmt to 1
  [0x000003e6]  Special opcode 34: advance Address by 4 to 0x54a and Line by 1 to 163
  [0x000003e7]  Set column to 5
  [0x000003e9]  Special opcode 22: advance Address by 2 to 0x54c and Line by 3 to 166
  [0x000003ea]  Set column to 45
  [0x000003ec]  Set is_stmt to 0
  [0x000003ed]  Copy (view 1)
  [0x000003ee]  Set column to 39
  [0x000003f0]  Extended opcode 4: set Discriminator to 1
  [0x000003f4]  Special opcode 89: advance Address by 12 to 0x558 and Line by 0 to 166
  [0x000003f5]  Set column to 43
  [0x000003f7]  Extended opcode 4: set Discriminator to 1
  [0x000003fb]  Special opcode 75: advance Address by 10 to 0x562 and Line by 0 to 166
  [0x000003fc]  Set column to 5
  [0x000003fe]  Set is_stmt to 1
  [0x000003ff]  Special opcode 36: advance Address by 4 to 0x566 and Line by 3 to 169
  [0x00000400]  Set column to 7
  [0x00000402]  Set is_stmt to 0
  [0x00000403]  Copy (view 1)
  [0x00000404]  Set column to 5
  [0x00000406]  Set is_stmt to 1
  [0x00000407]  Special opcode 50: advance Address by 6 to 0x56c and Line by 3 to 172
  [0x00000408]  Set column to 30
  [0x0000040a]  Set is_stmt to 0
  [0x0000040b]  Copy (view 1)
  [0x0000040c]  Set column to 7
  [0x0000040e]  Special opcode 19: advance Address by 2 to 0x56e and Line by 0 to 172
  [0x0000040f]  Set column to 6
  [0x00000411]  Set is_stmt to 1
  [0x00000412]  Special opcode 62: advance Address by 8 to 0x576 and Line by 1 to 173
  [0x00000413]  Special opcode 48: advance Address by 6 to 0x57c and Line by 1 to 174
  [0x00000414]  Special opcode 34: advance Address by 4 to 0x580 and Line by 1 to 175
  [0x00000415]  Special opcode 34: advance Address by 4 to 0x584 and Line by 1 to 176
  [0x00000416]  Special opcode 118: advance Address by 16 to 0x594 and Line by 1 to 177
  [0x00000417]  Special opcode 34: advance Address by 4 to 0x598 and Line by 1 to 178
  [0x00000418]  Special opcode 34: advance Address by 4 to 0x59c and Line by 1 to 179
  [0x00000419]  Set column to 17
  [0x0000041b]  Set is_stmt to 0
  [0x0000041c]  Copy (view 1)
  [0x0000041d]  Set column to 6
  [0x0000041f]  Set is_stmt to 1
  [0x00000420]  Special opcode 48: advance Address by 6 to 0x5a2 and Line by 1 to 180
  [0x00000421]  Special opcode 21: advance Address by 2 to 0x5a4 and Line by 2 to 182
  [0x00000422]  Set column to 5
  [0x00000424]  Special opcode 50: advance Address by 6 to 0x5aa and Line by 3 to 185
  [0x00000425]  Set column to 34
  [0x00000427]  Set is_stmt to 0
  [0x00000428]  Copy (view 1)
  [0x00000429]  Set column to 7
  [0x0000042b]  Set is_stmt to 1
  [0x0000042c]  Special opcode 91: advance Address by 12 to 0x5b6 and Line by 2 to 187
  [0x0000042d]  Set column to 18
  [0x0000042f]  Set is_stmt to 0
  [0x00000430]  Copy (view 1)
  [0x00000431]  Set column to 7
  [0x00000433]  Set is_stmt to 1
  [0x00000434]  Special opcode 48: advance Address by 6 to 0x5bc and Line by 1 to 188
  [0x00000435]  Set column to 20
  [0x00000437]  Set is_stmt to 0
  [0x00000438]  Copy (view 1)
  [0x00000439]  Set column to 7
  [0x0000043b]  Set is_stmt to 1
  [0x0000043c]  Special opcode 48: advance Address by 6 to 0x5c2 and Line by 1 to 189
  [0x0000043d]  Set column to 6
  [0x0000043f]  Special opcode 48: advance Address by 6 to 0x5c8 and Line by 1 to 190
  [0x00000440]  Set column to 7
  [0x00000442]  Special opcode 22: advance Address by 2 to 0x5ca and Line by 3 to 193
  [0x00000443]  Set column to 18
  [0x00000445]  Set is_stmt to 0
  [0x00000446]  Copy (view 1)
  [0x00000447]  Set column to 6
  [0x00000449]  Set is_stmt to 1
  [0x0000044a]  Special opcode 48: advance Address by 6 to 0x5d0 and Line by 1 to 194
  [0x0000044b]  Set column to 7
  [0x0000044d]  Special opcode 22: advance Address by 2 to 0x5d2 and Line by 3 to 197
  [0x0000044e]  Special opcode 48: advance Address by 6 to 0x5d8 and Line by 1 to 198
  [0x0000044f]  Set column to 18
  [0x00000451]  Set is_stmt to 0
  [0x00000452]  Copy (view 1)
  [0x00000453]  Set column to 6
  [0x00000455]  Set is_stmt to 1
  [0x00000456]  Special opcode 48: advance Address by 6 to 0x5de and Line by 1 to 199
  [0x00000457]  Set column to 5
  [0x00000459]  Special opcode 24: advance Address by 2 to 0x5e0 and Line by 5 to 204
  [0x0000045a]  Set column to 8
  [0x0000045c]  Set is_stmt to 0
  [0x0000045d]  Copy (view 1)
  [0x0000045e]  Set column to 7
  [0x00000460]  Extended opcode 4: set Discriminator to 1
  [0x00000464]  Special opcode 89: advance Address by 12 to 0x5ec and Line by 0 to 204
  [0x00000465]  Set column to 5
  [0x00000467]  Set is_stmt to 1
  [0x00000468]  Special opcode 48: advance Address by 6 to 0x5f2 and Line by 1 to 205
  [0x00000469]  Set column to 16
  [0x0000046b]  Set is_stmt to 0
  [0x0000046c]  Copy (view 1)
  [0x0000046d]  Set column to 5
  [0x0000046f]  Set is_stmt to 1
  [0x00000470]  Special opcode 48: advance Address by 6 to 0x5f8 and Line by 1 to 206
  [0x00000471]  Set column to 18
  [0x00000473]  Set is_stmt to 0
  [0x00000474]  Copy (view 1)
  [0x00000475]  Set column to 5
  [0x00000477]  Set is_stmt to 1
  [0x00000478]  Special opcode 48: advance Address by 6 to 0x5fe and Line by 1 to 207
  [0x00000479]  Set column to 27
  [0x0000047b]  Set is_stmt to 0
  [0x0000047c]  Copy (view 1)
  [0x0000047d]  Set column to 6
  [0x0000047f]  Set is_stmt to 1
  [0x00000480]  Special opcode 48: advance Address by 6 to 0x604 and Line by 1 to 208
  [0x00000481]  Set column to 5
  [0x00000483]  Special opcode 22: advance Address by 2 to 0x606 and Line by 3 to 211
  [0x00000484]  Set column to 42
  [0x00000486]  Set is_stmt to 0
  [0x00000487]  Copy (view 1)
  [0x00000488]  Set column to 36
  [0x0000048a]  Extended opcode 4: set Discriminator to 1
  [0x0000048e]  Special opcode 89: advance Address by 12 to 0x612 and Line by 0 to 211
  [0x0000048f]  Set column to 40
  [0x00000491]  Extended opcode 4: set Discriminator to 1
  [0x00000495]  Special opcode 75: advance Address by 10 to 0x61c and Line by 0 to 211
  [0x00000496]  Set column to 5
  [0x00000498]  Set is_stmt to 1
  [0x00000499]  Special opcode 36: advance Address by 4 to 0x620 and Line by 3 to 214
  [0x0000049a]  Set column to 7
  [0x0000049c]  Set is_stmt to 0
  [0x0000049d]  Copy (view 1)
  [0x0000049e]  Set column to 5
  [0x000004a0]  Set is_stmt to 1
  [0x000004a1]  Special opcode 35: advance Address by 4 to 0x624 and Line by 2 to 216
  [0x000004a2]  Set column to 27
  [0x000004a4]  Set is_stmt to 0
  [0x000004a5]  Copy (view 1)
  [0x000004a6]  Set column to 7
  [0x000004a8]  Special opcode 19: advance Address by 2 to 0x626 and Line by 0 to 216
  [0x000004a9]  Set column to 5
  [0x000004ab]  Set is_stmt to 1
  [0x000004ac]  Special opcode 69: advance Address by 8 to 0x62e and Line by 8 to 224
  [0x000004ad]  Set column to 27
  [0x000004af]  Set is_stmt to 0
  [0x000004b0]  Copy (view 1)
  [0x000004b1]  Set column to 7
  [0x000004b3]  Special opcode 33: advance Address by 4 to 0x632 and Line by 0 to 224
  [0x000004b4]  Set column to 6
  [0x000004b6]  Set is_stmt to 1
  [0x000004b7]  Advance Line by 14 to 238
  [0x000004b9]  Special opcode 33: advance Address by 4 to 0x636 and Line by 0 to 238
  [0x000004ba]  Set column to 17
  [0x000004bc]  Set is_stmt to 0
  [0x000004bd]  Copy (view 1)
  [0x000004be]  Set column to 6
  [0x000004c0]  Set is_stmt to 1
  [0x000004c1]  Special opcode 48: advance Address by 6 to 0x63c and Line by 1 to 239
  [0x000004c2]  Set column to 19
  [0x000004c4]  Set is_stmt to 0
  [0x000004c5]  Copy (view 1)
  [0x000004c6]  Set column to 6
  [0x000004c8]  Set is_stmt to 1
  [0x000004c9]  Advance Line by -19 to 220
  [0x000004cb]  Special opcode 61: advance Address by 8 to 0x644 and Line by 0 to 220
  [0x000004cc]  Set column to 17
  [0x000004ce]  Set is_stmt to 0
  [0x000004cf]  Copy (view 1)
  [0x000004d0]  Set column to 6
  [0x000004d2]  Set is_stmt to 1
  [0x000004d3]  Special opcode 48: advance Address by 6 to 0x64a and Line by 1 to 221
  [0x000004d4]  Set column to 18
  [0x000004d6]  Set is_stmt to 0
  [0x000004d7]  Copy (view 1)
  [0x000004d8]  Set column to 6
  [0x000004da]  Set is_stmt to 1
  [0x000004db]  Special opcode 48: advance Address by 6 to 0x650 and Line by 1 to 222
  [0x000004dc]  Set column to 1
  [0x000004de]  Set is_stmt to 0
  [0x000004df]  Advance Line by 59 to 281
  [0x000004e1]  Copy (view 1)
  [0x000004e2]  Set column to 6
  [0x000004e4]  Set is_stmt to 1
  [0x000004e5]  Advance Line by -54 to 227
  [0x000004e7]  Special opcode 19: advance Address by 2 to 0x652 and Line by 0 to 227
  [0x000004e8]  Special opcode 34: advance Address by 4 to 0x656 and Line by 1 to 228
  [0x000004e9]  Set column to 16
  [0x000004eb]  Set is_stmt to 0
  [0x000004ec]  Copy (view 1)
  [0x000004ed]  Set column to 6
  [0x000004ef]  Set is_stmt to 1
  [0x000004f0]  Special opcode 34: advance Address by 4 to 0x65a and Line by 1 to 229
  [0x000004f1]  Set column to 26
  [0x000004f3]  Set is_stmt to 0
  [0x000004f4]  Copy (view 1)
  [0x000004f5]  Set column to 6
  [0x000004f7]  Set is_stmt to 1
  [0x000004f8]  Special opcode 48: advance Address by 6 to 0x660 and Line by 1 to 230
  [0x000004f9]  Set column to 29
  [0x000004fb]  Set is_stmt to 0
  [0x000004fc]  Copy (view 1)
  [0x000004fd]  Set column to 6
  [0x000004ff]  Set is_stmt to 1
  [0x00000500]  Special opcode 20: advance Address by 2 to 0x662 and Line by 1 to 231
  [0x00000501]  Set column to 19
  [0x00000503]  Set is_stmt to 0
  [0x00000504]  Copy (view 1)
  [0x00000505]  Set column to 6
  [0x00000507]  Set is_stmt to 1
  [0x00000508]  Special opcode 48: advance Address by 6 to 0x668 and Line by 1 to 232
  [0x00000509]  Special opcode 34: advance Address by 4 to 0x66c and Line by 1 to 233
  [0x0000050a]  Set column to 17
  [0x0000050c]  Set is_stmt to 0
  [0x0000050d]  Copy (view 1)
  [0x0000050e]  Set column to 6
  [0x00000510]  Set is_stmt to 1
  [0x00000511]  Special opcode 48: advance Address by 6 to 0x672 and Line by 1 to 234
  [0x00000512]  Set column to 5
  [0x00000514]  Advance Line by 11 to 245
  [0x00000516]  Special opcode 47: advance Address by 6 to 0x678 and Line by 0 to 245
  [0x00000517]  Special opcode 6: advance Address by 0 to 0x678 and Line by 1 to 246 (view 1)
  [0x00000518]  Set column to 25
  [0x0000051a]  Set is_stmt to 0
  [0x0000051b]  Copy (view 2)
  [0x0000051c]  Set column to 6
  [0x0000051e]  Set is_stmt to 1
  [0x0000051f]  Advance Line by 17 to 263
  [0x00000521]  Special opcode 89: advance Address by 12 to 0x684 and Line by 0 to 263
  [0x00000522]  Set column to 5
  [0x00000524]  Special opcode 6: advance Address by 0 to 0x684 and Line by 1 to 264 (view 1)
  [0x00000525]  Set column to 9
  [0x00000527]  Set is_stmt to 0
  [0x00000528]  Copy (view 2)
  [0x00000529]  Set column to 7
  [0x0000052b]  Special opcode 61: advance Address by 8 to 0x68c and Line by 0 to 264
  [0x0000052c]  Set column to 50
  [0x0000052e]  Special opcode 19: advance Address by 2 to 0x68e and Line by 0 to 264
  [0x0000052f]  Set column to 7
  [0x00000531]  Special opcode 33: advance Address by 4 to 0x692 and Line by 0 to 264
  [0x00000532]  Set column to 6
  [0x00000534]  Set is_stmt to 1
  [0x00000535]  Special opcode 48: advance Address by 6 to 0x698 and Line by 1 to 265
  [0x00000536]  Set column to 19
  [0x00000538]  Set is_stmt to 0
  [0x00000539]  Copy (view 1)
  [0x0000053a]  Set column to 6
  [0x0000053c]  Set is_stmt to 1
  [0x0000053d]  Special opcode 48: advance Address by 6 to 0x69e and Line by 1 to 266
  [0x0000053e]  Set column to 17
  [0x00000540]  Set is_stmt to 0
  [0x00000541]  Copy (view 1)
  [0x00000542]  Set column to 7
  [0x00000544]  Set is_stmt to 1
  [0x00000545]  Advance Line by -18 to 248
  [0x00000547]  Special opcode 61: advance Address by 8 to 0x6a6 and Line by 0 to 248
  [0x00000548]  Set column to 13
  [0x0000054a]  Set is_stmt to 0
  [0x0000054b]  Copy (view 1)
  [0x0000054c]  Set column to 11
  [0x0000054e]  Extended opcode 4: set Discriminator to 1
  [0x00000552]  Special opcode 89: advance Address by 12 to 0x6b2 and Line by 0 to 248
  [0x00000553]  Set column to 6
  [0x00000555]  Set is_stmt to 1
  [0x00000556]  Special opcode 34: advance Address by 4 to 0x6b6 and Line by 1 to 249
  [0x00000557]  Set column to 7
  [0x00000559]  Special opcode 22: advance Address by 2 to 0x6b8 and Line by 3 to 252
  [0x0000055a]  Set column to 13
  [0x0000055c]  Set is_stmt to 0
  [0x0000055d]  Copy (view 1)
  [0x0000055e]  Set column to 11
  [0x00000560]  Extended opcode 4: set Discriminator to 1
  [0x00000564]  Special opcode 89: advance Address by 12 to 0x6c4 and Line by 0 to 252
  [0x00000565]  Set column to 7
  [0x00000567]  Set is_stmt to 1
  [0x00000568]  Special opcode 34: advance Address by 4 to 0x6c8 and Line by 1 to 253
  [0x00000569]  Set column to 28
  [0x0000056b]  Set is_stmt to 0
  [0x0000056c]  Copy (view 1)
  [0x0000056d]  Set column to 34
  [0x0000056f]  Special opcode 19: advance Address by 2 to 0x6ca and Line by 0 to 253
  [0x00000570]  Set column to 41
  [0x00000572]  Special opcode 61: advance Address by 8 to 0x6d2 and Line by 0 to 253
  [0x00000573]  Set column to 7
  [0x00000575]  Set is_stmt to 1
  [0x00000576]  Special opcode 21: advance Address by 2 to 0x6d4 and Line by 2 to 255
  [0x00000577]  Set column to 48
  [0x00000579]  Set is_stmt to 0
  [0x0000057a]  Copy (view 1)
  [0x0000057b]  Set column to 19
  [0x0000057d]  Special opcode 19: advance Address by 2 to 0x6d6 and Line by 0 to 255
  [0x0000057e]  Set column to 7
  [0x00000580]  Set is_stmt to 1
  [0x00000581]  Special opcode 119: advance Address by 16 to 0x6e6 and Line by 2 to 257
  [0x00000582]  Set column to 33
  [0x00000584]  Set is_stmt to 0
  [0x00000585]  Copy (view 1)
  [0x00000586]  Set column to 10
  [0x00000588]  Special opcode 61: advance Address by 8 to 0x6ee and Line by 0 to 257
  [0x00000589]  Set column to 8
  [0x0000058b]  Set is_stmt to 1
  [0x0000058c]  Special opcode 20: advance Address by 2 to 0x6f0 and Line by 1 to 258
  [0x0000058d]  Set column to 71
  [0x0000058f]  Set is_stmt to 0
  [0x00000590]  Copy (view 1)
  [0x00000591]  Set column to 78
  [0x00000593]  Special opcode 19: advance Address by 2 to 0x6f2 and Line by 0 to 258
  [0x00000594]  Set column to 38
  [0x00000596]  Special opcode 19: advance Address by 2 to 0x6f4 and Line by 0 to 258
  [0x00000597]  Set column to 8
  [0x00000599]  Set is_stmt to 1
  [0x0000059a]  Special opcode 49: advance Address by 6 to 0x6fa and Line by 2 to 260
  [0x0000059b]  Set column to 38
  [0x0000059d]  Set is_stmt to 0
  [0x0000059e]  Copy (view 1)
  [0x0000059f]  Special opcode 47: advance Address by 6 to 0x700 and Line by 0 to 260
  [0x000005a0]  Set column to 5
  [0x000005a2]  Set is_stmt to 1
  [0x000005a3]  Advance Line by 12 to 272
  [0x000005a5]  Copy (view 1)
  [0x000005a6]  Set column to 16
  [0x000005a8]  Set is_stmt to 0
  [0x000005a9]  Copy (view 2)
  [0x000005aa]  Set column to 4
  [0x000005ac]  Set is_stmt to 1
  [0x000005ad]  Special opcode 48: advance Address by 6 to 0x706 and Line by 1 to 273
  [0x000005ae]  Set column to 8
  [0x000005b0]  Advance Line by -119 to 154
  [0x000005b3]  Copy (view 1)
  [0x000005b4]  Extended opcode 4: set Discriminator to 1
  [0x000005b8]  Set is_stmt to 0
  [0x000005b9]  Special opcode 89: advance Address by 12 to 0x712 and Line by 0 to 154
  [0x000005ba]  Set column to 3
  [0x000005bc]  Set is_stmt to 1
  [0x000005bd]  Special opcode 34: advance Address by 4 to 0x716 and Line by 1 to 155
  [0x000005be]  Set column to 5
  [0x000005c0]  Advance Line by 121 to 276
  [0x000005c3]  Advance PC by constant 34 to 0x738
  [0x000005c4]  Special opcode 33: advance Address by 4 to 0x73c and Line by 0 to 276
  [0x000005c5]  Special opcode 48: advance Address by 6 to 0x742 and Line by 1 to 277
  [0x000005c6]  Set column to 16
  [0x000005c8]  Set is_stmt to 0
  [0x000005c9]  Copy (view 1)
  [0x000005ca]  Set column to 4
  [0x000005cc]  Set is_stmt to 1
  [0x000005cd]  Special opcode 48: advance Address by 6 to 0x748 and Line by 1 to 278
  [0x000005ce]  Advance PC by 64 to 0x788
  [0x000005d0]  Extended opcode 1: End of Sequence


  Offset:                      0x5d3
  Length:                      210
  DWARF Version:               3
  Prologue Length:             159
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x5ee):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x635):
  Entry	Dir	Time	Size	Name
  1	1	0	0	main.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	lidar.h
  5	1	0	0	uart_print.h

 Line Number Statements:
  [0x0000067c]  Set column to 17
  [0x0000067e]  Extended opcode 2: set Address to 0x788
  [0x00000685]  Advance Line by 19 to 20
  [0x00000687]  Copy
  [0x00000688]  Set column to 2
  [0x0000068a]  Special opcode 20: advance Address by 2 to 0x78a and Line by 1 to 21
  [0x0000068b]  Special opcode 91: advance Address by 12 to 0x796 and Line by 2 to 23
  [0x0000068c]  Special opcode 34: advance Address by 4 to 0x79a and Line by 1 to 24
  [0x0000068d]  Special opcode 48: advance Address by 6 to 0x7a0 and Line by 1 to 25
  [0x0000068e]  Special opcode 34: advance Address by 4 to 0x7a4 and Line by 1 to 26
  [0x0000068f]  Special opcode 48: advance Address by 6 to 0x7aa and Line by 1 to 27
  [0x00000690]  Special opcode 34: advance Address by 4 to 0x7ae and Line by 1 to 28
  [0x00000691]  Special opcode 48: advance Address by 6 to 0x7b4 and Line by 1 to 29
  [0x00000692]  Special opcode 34: advance Address by 4 to 0x7b8 and Line by 1 to 30
  [0x00000693]  Special opcode 20: advance Address by 2 to 0x7ba and Line by 1 to 31
  [0x00000694]  Special opcode 79: advance Address by 10 to 0x7c4 and Line by 4 to 35
  [0x00000695]  Special opcode 48: advance Address by 6 to 0x7ca and Line by 1 to 36
  [0x00000696]  Special opcode 34: advance Address by 4 to 0x7ce and Line by 1 to 37
  [0x00000697]  Special opcode 90: advance Address by 12 to 0x7da and Line by 1 to 38
  [0x00000698]  Special opcode 34: advance Address by 4 to 0x7de and Line by 1 to 39
  [0x00000699]  Special opcode 34: advance Address by 4 to 0x7e2 and Line by 1 to 40
  [0x0000069a]  Set column to 3
  [0x0000069c]  Extended opcode 4: set Discriminator to 1
  [0x000006a0]  Special opcode 6: advance Address by 0 to 0x7e2 and Line by 1 to 41 (view 1)
  [0x000006a1]  Set column to 7
  [0x000006a3]  Special opcode 32: advance Address by 4 to 0x7e6 and Line by -1 to 40
  [0x000006a4]  Advance PC by 26 to 0x800
  [0x000006a6]  Extended opcode 1: End of Sequence


  Offset:                      0x6a9
  Length:                      496
  DWARF Version:               3
  Prologue Length:             146
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x6c4):
  1	src
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x70b):
  Entry	Dir	Time	Size	Name
  1	1	0	0	timers.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	1	0	0	timers.h

 Line Number Statements:
  [0x00000745]  Set column to 35
  [0x00000747]  Extended opcode 2: set Address to 0
  [0x0000074e]  Advance Line by 15 to 16
  [0x00000750]  Copy
  [0x00000751]  Set column to 2
  [0x00000753]  Special opcode 21: advance Address by 2 to 0x2 and Line by 2 to 18
  [0x00000754]  Set column to 21
  [0x00000756]  Set is_stmt to 0
  [0x00000757]  Special opcode 47: advance Address by 6 to 0x8 and Line by 0 to 18
  [0x00000758]  Set column to 2
  [0x0000075a]  Set is_stmt to 1
  [0x0000075b]  Special opcode 63: advance Address by 8 to 0x10 and Line by 2 to 20
  [0x0000075c]  Set column to 53
  [0x0000075e]  Extended opcode 4: set Discriminator to 1
  [0x00000762]  Copy (view 1)
  [0x00000763]  Set column to 9
  [0x00000765]  Extended opcode 4: set Discriminator to 1
  [0x00000769]  Copy (view 2)
  [0x0000076a]  Set column to 11
  [0x0000076c]  Extended opcode 4: set Discriminator to 1
  [0x00000770]  Set is_stmt to 0
  [0x00000771]  Copy (view 3)
  [0x00000772]  Set column to 9
  [0x00000774]  Extended opcode 4: set Discriminator to 1
  [0x00000778]  Special opcode 47: advance Address by 6 to 0x16 and Line by 0 to 20
  [0x00000779]  Set column to 2
  [0x0000077b]  Set is_stmt to 1
  [0x0000077c]  Special opcode 49: advance Address by 6 to 0x1c and Line by 2 to 22
  [0x0000077d]  Set column to 15
  [0x0000077f]  Set is_stmt to 0
  [0x00000780]  Special opcode 33: advance Address by 4 to 0x20 and Line by 0 to 22
  [0x00000781]  Set column to 2
  [0x00000783]  Set is_stmt to 1
  [0x00000784]  Special opcode 48: advance Address by 6 to 0x26 and Line by 1 to 23
  [0x00000785]  Set column to 15
  [0x00000787]  Set is_stmt to 0
  [0x00000788]  Special opcode 19: advance Address by 2 to 0x28 and Line by 0 to 23
  [0x00000789]  Set column to 2
  [0x0000078b]  Set is_stmt to 1
  [0x0000078c]  Special opcode 48: advance Address by 6 to 0x2e and Line by 1 to 24
  [0x0000078d]  Set column to 15
  [0x0000078f]  Set is_stmt to 0
  [0x00000790]  Copy (view 1)
  [0x00000791]  Set column to 2
  [0x00000793]  Set is_stmt to 1
  [0x00000794]  Special opcode 34: advance Address by 4 to 0x32 and Line by 1 to 25
  [0x00000795]  Set column to 16
  [0x00000797]  Set is_stmt to 0
  [0x00000798]  Special opcode 19: advance Address by 2 to 0x34 and Line by 0 to 25
  [0x00000799]  Set column to 2
  [0x0000079b]  Set is_stmt to 1
  [0x0000079c]  Special opcode 48: advance Address by 6 to 0x3a and Line by 1 to 26
  [0x0000079d]  Set column to 19
  [0x0000079f]  Set is_stmt to 0
  [0x000007a0]  Copy (view 1)
  [0x000007a1]  Extended opcode 4: set Discriminator to 1
  [0x000007a5]  Special opcode 75: advance Address by 10 to 0x44 and Line by 0 to 26
  [0x000007a6]  Set column to 31
  [0x000007a8]  Extended opcode 4: set Discriminator to 1
  [0x000007ac]  Special opcode 19: advance Address by 2 to 0x46 and Line by 0 to 26
  [0x000007ad]  Set column to 17
  [0x000007af]  Extended opcode 4: set Discriminator to 1
  [0x000007b3]  Special opcode 19: advance Address by 2 to 0x48 and Line by 0 to 26
  [0x000007b4]  Set column to 2
  [0x000007b6]  Set is_stmt to 1
  [0x000007b7]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 27
  [0x000007b8]  Set column to 16
  [0x000007ba]  Set is_stmt to 0
  [0x000007bb]  Copy (view 1)
  [0x000007bc]  Set column to 2
  [0x000007be]  Set is_stmt to 1
  [0x000007bf]  Special opcode 20: advance Address by 2 to 0x4c and Line by 1 to 28
  [0x000007c0]  Set column to 15
  [0x000007c2]  Set is_stmt to 0
  [0x000007c3]  Special opcode 19: advance Address by 2 to 0x4e and Line by 0 to 28
  [0x000007c4]  Set column to 2
  [0x000007c6]  Set is_stmt to 1
  [0x000007c7]  Special opcode 48: advance Address by 6 to 0x54 and Line by 1 to 29
  [0x000007c8]  Set column to 15
  [0x000007ca]  Set is_stmt to 0
  [0x000007cb]  Special opcode 19: advance Address by 2 to 0x56 and Line by 0 to 29
  [0x000007cc]  Set column to 2
  [0x000007ce]  Set is_stmt to 1
  [0x000007cf]  Special opcode 48: advance Address by 6 to 0x5c and Line by 1 to 30
  [0x000007d0]  Set column to 13
  [0x000007d2]  Set is_stmt to 0
  [0x000007d3]  Copy (view 1)
  [0x000007d4]  Set column to 2
  [0x000007d6]  Set is_stmt to 1
  [0x000007d7]  Special opcode 90: advance Address by 12 to 0x68 and Line by 1 to 31
  [0x000007d8]  Set column to 15
  [0x000007da]  Set is_stmt to 0
  [0x000007db]  Special opcode 19: advance Address by 2 to 0x6a and Line by 0 to 31
  [0x000007dc]  Set column to 1
  [0x000007de]  Special opcode 48: advance Address by 6 to 0x70 and Line by 1 to 32
  [0x000007df]  Advance PC by 12 to 0x7c
  [0x000007e1]  Extended opcode 1: End of Sequence

  [0x000007e4]  Set column to 27
  [0x000007e6]  Extended opcode 2: set Address to 0x800
  [0x000007ed]  Advance Line by 33 to 34
  [0x000007ef]  Copy
  [0x000007f0]  Set column to 2
  [0x000007f2]  Special opcode 20: advance Address by 2 to 0x802 and Line by 1 to 35
  [0x000007f3]  Special opcode 6: advance Address by 0 to 0x802 and Line by 1 to 36 (view 1)
  [0x000007f4]  Special opcode 7: advance Address by 0 to 0x802 and Line by 2 to 38 (view 2)
  [0x000007f5]  Set column to 15
  [0x000007f7]  Set is_stmt to 0
  [0x000007f8]  Special opcode 33: advance Address by 4 to 0x806 and Line by 0 to 38
  [0x000007f9]  Set column to 2
  [0x000007fb]  Set is_stmt to 1
  [0x000007fc]  Special opcode 48: advance Address by 6 to 0x80c and Line by 1 to 39
  [0x000007fd]  Set column to 15
  [0x000007ff]  Set is_stmt to 0
  [0x00000800]  Special opcode 19: advance Address by 2 to 0x80e and Line by 0 to 39
  [0x00000801]  Set column to 2
  [0x00000803]  Set is_stmt to 1
  [0x00000804]  Special opcode 49: advance Address by 6 to 0x814 and Line by 2 to 41
  [0x00000805]  Set column to 23
  [0x00000807]  Set is_stmt to 0
  [0x00000808]  Copy (view 1)
  [0x00000809]  Set column to 2
  [0x0000080b]  Set is_stmt to 1
  [0x0000080c]  Special opcode 120: advance Address by 16 to 0x824 and Line by 3 to 44
  [0x0000080d]  Set column to 5
  [0x0000080f]  Set is_stmt to 0
  [0x00000810]  Copy (view 1)
  [0x00000811]  Set column to 4
  [0x00000813]  Special opcode 61: advance Address by 8 to 0x82c and Line by 0 to 44
  [0x00000814]  Set column to 2
  [0x00000816]  Set is_stmt to 1
  [0x00000817]  Special opcode 52: advance Address by 6 to 0x832 and Line by 5 to 49
  [0x00000818]  Set column to 15
  [0x0000081a]  Set is_stmt to 0
  [0x0000081b]  Special opcode 33: advance Address by 4 to 0x836 and Line by 0 to 49
  [0x0000081c]  Set column to 1
  [0x0000081e]  Special opcode 48: advance Address by 6 to 0x83c and Line by 1 to 50
  [0x0000081f]  Set column to 3
  [0x00000821]  Set is_stmt to 1
  [0x00000822]  Special opcode 42: advance Address by 6 to 0x842 and Line by -5 to 45
  [0x00000823]  Set column to 17
  [0x00000825]  Set is_stmt to 0
  [0x00000826]  Copy (view 1)
  [0x00000827]  Set column to 3
  [0x00000829]  Set is_stmt to 1
  [0x0000082a]  Special opcode 62: advance Address by 8 to 0x84a and Line by 1 to 46
  [0x0000082b]  Set column to 18
  [0x0000082d]  Set is_stmt to 0
  [0x0000082e]  Copy (view 1)
  [0x0000082f]  Advance PC by 26 to 0x864
  [0x00000831]  Extended opcode 1: End of Sequence

  [0x00000834]  Set column to 34
  [0x00000836]  Extended opcode 2: set Address to 0
  [0x0000083d]  Advance Line by 51 to 52
  [0x0000083f]  Copy
  [0x00000840]  Set column to 3
  [0x00000842]  Special opcode 39: advance Address by 4 to 0x4 and Line by 6 to 58
  [0x00000843]  Set column to 22
  [0x00000845]  Set is_stmt to 0
  [0x00000846]  Copy (view 1)
  [0x00000847]  Set column to 3
  [0x00000849]  Set is_stmt to 1
  [0x0000084a]  Special opcode 48: advance Address by 6 to 0xa and Line by 1 to 59
  [0x0000084b]  Set column to 16
  [0x0000084d]  Set is_stmt to 0
  [0x0000084e]  Copy (view 1)
  [0x0000084f]  Set column to 31
  [0x00000851]  Extended opcode 4: set Discriminator to 1
  [0x00000855]  Special opcode 75: advance Address by 10 to 0x14 and Line by 0 to 59
  [0x00000856]  Set column to 14
  [0x00000858]  Extended opcode 4: set Discriminator to 1
  [0x0000085c]  Special opcode 33: advance Address by 4 to 0x18 and Line by 0 to 59
  [0x0000085d]  Set column to 11
  [0x0000085f]  Set is_stmt to 1
  [0x00000860]  Special opcode 35: advance Address by 4 to 0x1c and Line by 2 to 61
  [0x00000861]  Set column to 2
  [0x00000863]  Advance Line by -8 to 53
  [0x00000865]  Special opcode 61: advance Address by 8 to 0x24 and Line by 0 to 53
  [0x00000866]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 54 (view 1)
  [0x00000867]  Special opcode 7: advance Address by 0 to 0x24 and Line by 2 to 56 (view 2)
  [0x00000868]  Set column to 3
  [0x0000086a]  Special opcode 6: advance Address by 0 to 0x24 and Line by 1 to 57 (view 3)
  [0x0000086b]  Set column to 6
  [0x0000086d]  Set is_stmt to 0
  [0x0000086e]  Copy (view 4)
  [0x0000086f]  Set column to 5
  [0x00000871]  Special opcode 33: advance Address by 4 to 0x28 and Line by 0 to 57
  [0x00000872]  Set column to 28
  [0x00000874]  Extended opcode 4: set Discriminator to 1
  [0x00000878]  Set is_stmt to 1
  [0x00000879]  Special opcode 47: advance Address by 6 to 0x2e and Line by 0 to 57
  [0x0000087a]  Set column to 2
  [0x0000087c]  Special opcode 53: advance Address by 6 to 0x34 and Line by 6 to 63
  [0x0000087d]  Set column to 10
  [0x0000087f]  Set is_stmt to 0
  [0x00000880]  Copy (view 1)
  [0x00000881]  Extended opcode 4: set Discriminator to 1
  [0x00000885]  Special opcode 75: advance Address by 10 to 0x3e and Line by 0 to 63
  [0x00000886]  Set column to 23
  [0x00000888]  Extended opcode 4: set Discriminator to 1
  [0x0000088c]  Special opcode 19: advance Address by 2 to 0x40 and Line by 0 to 63
  [0x0000088d]  Set column to 45
  [0x0000088f]  Extended opcode 4: set Discriminator to 1
  [0x00000893]  Special opcode 61: advance Address by 8 to 0x48 and Line by 0 to 63
  [0x00000894]  Set column to 1
  [0x00000896]  Special opcode 20: advance Address by 2 to 0x4a and Line by 1 to 64
  [0x00000897]  Special opcode 47: advance Address by 6 to 0x50 and Line by 0 to 64
  [0x00000898]  Advance PC by 8 to 0x58
  [0x0000089a]  Extended opcode 1: End of Sequence


  Offset:                      0x89d
  Length:                      1056
  DWARF Version:               3
  Prologue Length:             206
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x8b8):
  1	src
  2	/usr/lib/gcc/arm-none-eabi/13.2.0/include
  3	/usr/arm-none-eabi/include/machine
  4	/usr/arm-none-eabi/include/sys

 The File Name Table (offset 0x929):
  Entry	Dir	Time	Size	Name
  1	1	0	0	uart_print.c
  2	2	0	0	stdarg.h
  3	3	0	0	_default_types.h
  4	4	0	0	_stdint.h
  5	0	0	0	<built-in>

 Line Number Statements:
  [0x00000975]  Set column to 30
  [0x00000977]  Extended opcode 2: set Address to 0x864
  [0x0000097e]  Advance Line by 14 to 15
  [0x00000980]  Copy
  [0x00000981]  Set column to 2
  [0x00000983]  Special opcode 20: advance Address by 2 to 0x866 and Line by 1 to 16
  [0x00000984]  Special opcode 90: advance Address by 12 to 0x872 and Line by 1 to 17
  [0x00000985]  Special opcode 62: advance Address by 8 to 0x87a and Line by 1 to 18
  [0x00000986]  Set column to 57
  [0x00000988]  Extended opcode 4: set Discriminator to 1
  [0x0000098c]  Copy (view 1)
  [0x0000098d]  Set column to 8
  [0x0000098f]  Extended opcode 4: set Discriminator to 1
  [0x00000993]  Copy (view 2)
  [0x00000994]  Set column to 9
  [0x00000996]  Extended opcode 4: set Discriminator to 1
  [0x0000099a]  Set is_stmt to 0
  [0x0000099b]  Copy (view 3)
  [0x0000099c]  Set column to 8
  [0x0000099e]  Extended opcode 4: set Discriminator to 1
  [0x000009a2]  Special opcode 103: advance Address by 14 to 0x888 and Line by 0 to 18
  [0x000009a3]  Set column to 58
  [0x000009a5]  Extended opcode 4: set Discriminator to 2
  [0x000009a9]  Set is_stmt to 1
  [0x000009aa]  Special opcode 33: advance Address by 4 to 0x88c and Line by 0 to 18
  [0x000009ab]  Set column to 2
  [0x000009ad]  Special opcode 7: advance Address by 0 to 0x88c and Line by 2 to 20 (view 1)
  [0x000009ae]  Special opcode 146: advance Address by 20 to 0x8a0 and Line by 1 to 21
  [0x000009af]  Special opcode 104: advance Address by 14 to 0x8ae and Line by 1 to 22
  [0x000009b0]  Set column to 38
  [0x000009b2]  Set is_stmt to 0
  [0x000009b3]  Special opcode 33: advance Address by 4 to 0x8b2 and Line by 0 to 22
  [0x000009b4]  Set column to 2
  [0x000009b6]  Special opcode 33: advance Address by 4 to 0x8b6 and Line by 0 to 22
  [0x000009b7]  Extended opcode 4: set Discriminator to 1
  [0x000009bb]  Special opcode 33: advance Address by 4 to 0x8ba and Line by 0 to 22
  [0x000009bc]  Set column to 1
  [0x000009be]  Special opcode 63: advance Address by 8 to 0x8c2 and Line by 2 to 24
  [0x000009bf]  Advance PC by 18 to 0x8d4
  [0x000009c1]  Extended opcode 1: End of Sequence

  [0x000009c4]  Set column to 22
  [0x000009c6]  Extended opcode 2: set Address to 0x8d4
  [0x000009cd]  Advance Line by 25 to 26
  [0x000009cf]  Copy
  [0x000009d0]  Set is_stmt to 0
  [0x000009d1]  Copy (view 1)
  [0x000009d2]  Set column to 2
  [0x000009d4]  Set is_stmt to 1
  [0x000009d5]  Special opcode 34: advance Address by 4 to 0x8d8 and Line by 1 to 27
  [0x000009d6]  Special opcode 6: advance Address by 0 to 0x8d8 and Line by 1 to 28 (view 1)
  [0x000009d7]  Set is_stmt to 0
  [0x000009d8]  Special opcode 75: advance Address by 10 to 0x8e2 and Line by 0 to 28
  [0x000009d9]  Set is_stmt to 1
  [0x000009da]  Special opcode 20: advance Address by 2 to 0x8e4 and Line by 1 to 29
  [0x000009db]  Set column to 35
  [0x000009dd]  Extended opcode 4: set Discriminator to 1
  [0x000009e1]  Copy (view 1)
  [0x000009e2]  Set column to 8
  [0x000009e4]  Extended opcode 4: set Discriminator to 1
  [0x000009e8]  Copy (view 2)
  [0x000009e9]  Set column to 36
  [0x000009eb]  Extended opcode 4: set Discriminator to 2
  [0x000009ef]  Special opcode 117: advance Address by 16 to 0x8f4 and Line by 0 to 29
  [0x000009f0]  Set column to 2
  [0x000009f2]  Special opcode 8: advance Address by 0 to 0x8f4 and Line by 3 to 32 (view 1)
  [0x000009f3]  Set column to 5
  [0x000009f5]  Set is_stmt to 0
  [0x000009f6]  Copy (view 2)
  [0x000009f7]  Set column to 4
  [0x000009f9]  Special opcode 47: advance Address by 6 to 0x8fa and Line by 0 to 32
  [0x000009fa]  Set column to 3
  [0x000009fc]  Set is_stmt to 1
  [0x000009fd]  Special opcode 48: advance Address by 6 to 0x900 and Line by 1 to 33
  [0x000009fe]  Set column to 23
  [0x00000a00]  Set is_stmt to 0
  [0x00000a01]  Copy (view 1)
  [0x00000a02]  Set column to 3
  [0x00000a04]  Set is_stmt to 1
  [0x00000a05]  Special opcode 34: advance Address by 4 to 0x904 and Line by 1 to 34
  [0x00000a06]  Set column to 7
  [0x00000a08]  Copy (view 1)
  [0x00000a09]  Set column to 3
  [0x00000a0b]  Set is_stmt to 0
  [0x00000a0c]  Copy (view 2)
  [0x00000a0d]  Set column to 4
  [0x00000a0f]  Set is_stmt to 1
  [0x00000a10]  Special opcode 20: advance Address by 2 to 0x906 and Line by 1 to 35
  [0x00000a11]  Set column to 28
  [0x00000a13]  Extended opcode 4: set Discriminator to 3
  [0x00000a17]  Special opcode 18: advance Address by 2 to 0x908 and Line by -1 to 34
  [0x00000a18]  Set column to 20
  [0x00000a1a]  Extended opcode 4: set Discriminator to 1
  [0x00000a1e]  Special opcode 19: advance Address by 2 to 0x90a and Line by 0 to 34
  [0x00000a1f]  Extended opcode 4: set Discriminator to 1
  [0x00000a23]  Set is_stmt to 0
  [0x00000a24]  Special opcode 33: advance Address by 4 to 0x90e and Line by 0 to 34
  [0x00000a25]  Set column to 1
  [0x00000a27]  Special opcode 9: advance Address by 0 to 0x90e and Line by 4 to 38 (view 1)
  [0x00000a28]  Advance PC by 10 to 0x918
  [0x00000a2a]  Extended opcode 1: End of Sequence

  [0x00000a2d]  Set column to 43
  [0x00000a2f]  Extended opcode 2: set Address to 0x918
  [0x00000a36]  Advance Line by 39 to 40
  [0x00000a38]  Copy
  [0x00000a39]  Set is_stmt to 0
  [0x00000a3a]  Copy (view 1)
  [0x00000a3b]  Set column to 2
  [0x00000a3d]  Set is_stmt to 1
  [0x00000a3e]  Special opcode 34: advance Address by 4 to 0x91c and Line by 1 to 41
  [0x00000a3f]  Set column to 6
  [0x00000a41]  Copy (view 1)
  [0x00000a42]  Set column to 10
  [0x00000a44]  Set is_stmt to 0
  [0x00000a45]  Copy (view 2)
  [0x00000a46]  Set column to 2
  [0x00000a48]  Special opcode 19: advance Address by 2 to 0x91e and Line by 0 to 41
  [0x00000a49]  Set column to 3
  [0x00000a4b]  Set is_stmt to 1
  [0x00000a4c]  Special opcode 20: advance Address by 2 to 0x920 and Line by 1 to 42
  [0x00000a4d]  Set column to 34
  [0x00000a4f]  Extended opcode 4: set Discriminator to 3
  [0x00000a53]  Special opcode 32: advance Address by 4 to 0x924 and Line by -1 to 41
  [0x00000a54]  Set column to 24
  [0x00000a56]  Extended opcode 4: set Discriminator to 1
  [0x00000a5a]  Special opcode 19: advance Address by 2 to 0x926 and Line by 0 to 41
  [0x00000a5b]  Set column to 20
  [0x00000a5d]  Extended opcode 4: set Discriminator to 1
  [0x00000a61]  Set is_stmt to 0
  [0x00000a62]  Copy (view 1)
  [0x00000a63]  Set column to 24
  [0x00000a65]  Extended opcode 4: set Discriminator to 1
  [0x00000a69]  Special opcode 19: advance Address by 2 to 0x928 and Line by 0 to 41
  [0x00000a6a]  Set column to 1
  [0x00000a6c]  Special opcode 36: advance Address by 4 to 0x92c and Line by 3 to 44
  [0x00000a6d]  Special opcode 19: advance Address by 2 to 0x92e and Line by 0 to 44
  [0x00000a6e]  Extended opcode 1: End of Sequence

  [0x00000a71]  Set column to 42
  [0x00000a73]  Extended opcode 2: set Address to 0x930
  [0x00000a7a]  Advance Line by 45 to 46
  [0x00000a7c]  Copy
  [0x00000a7d]  Set is_stmt to 0
  [0x00000a7e]  Copy (view 1)
  [0x00000a7f]  Set column to 2
  [0x00000a81]  Set is_stmt to 1
  [0x00000a82]  Special opcode 35: advance Address by 4 to 0x934 and Line by 2 to 48
  [0x00000a83]  Special opcode 7: advance Address by 0 to 0x934 and Line by 2 to 50 (view 1)
  [0x00000a84]  Set column to 6
  [0x00000a86]  Set is_stmt to 0
  [0x00000a87]  Copy (view 2)
  [0x00000a88]  Set column to 2
  [0x00000a8a]  Set is_stmt to 1
  [0x00000a8b]  Special opcode 21: advance Address by 2 to 0x936 and Line by 2 to 52
  [0x00000a8c]  Set column to 3
  [0x00000a8e]  Special opcode 6: advance Address by 0 to 0x936 and Line by 1 to 53 (view 1)
  [0x00000a8f]  Set column to 37
  [0x00000a91]  Set is_stmt to 0
  [0x00000a92]  Copy (view 2)
  [0x00000a93]  Set column to 19
  [0x00000a95]  Special opcode 145: advance Address by 20 to 0x94a and Line by 0 to 53
  [0x00000a96]  Set column to 17
  [0x00000a98]  Special opcode 19: advance Address by 2 to 0x94c and Line by 0 to 53
  [0x00000a99]  Special opcode 47: advance Address by 6 to 0x952 and Line by 0 to 53
  [0x00000a9a]  Set column to 3
  [0x00000a9c]  Set is_stmt to 1
  [0x00000a9d]  Special opcode 34: advance Address by 4 to 0x956 and Line by 1 to 54
  [0x00000a9e]  Set column to 7
  [0x00000aa0]  Set is_stmt to 0
  [0x00000aa1]  Special opcode 19: advance Address by 2 to 0x958 and Line by 0 to 54
  [0x00000aa2]  Set column to 15
  [0x00000aa4]  Extended opcode 4: set Discriminator to 1
  [0x00000aa8]  Set is_stmt to 1
  [0x00000aa9]  Special opcode 20: advance Address by 2 to 0x95a and Line by 1 to 55
  [0x00000aaa]  Set column to 3
  [0x00000aac]  Special opcode 50: advance Address by 6 to 0x960 and Line by 3 to 58
  [0x00000aad]  Set column to 22
  [0x00000aaf]  Set is_stmt to 0
  [0x00000ab0]  Copy (view 1)
  [0x00000ab1]  Set column to 3
  [0x00000ab3]  Special opcode 19: advance Address by 2 to 0x962 and Line by 0 to 58
  [0x00000ab4]  Set column to 22
  [0x00000ab6]  Extended opcode 4: set Discriminator to 2
  [0x00000aba]  Set is_stmt to 1
  [0x00000abb]  Special opcode 102: advance Address by 14 to 0x970 and Line by -1 to 57
  [0x00000abc]  Set column to 8
  [0x00000abe]  Extended opcode 4: set Discriminator to 1
  [0x00000ac2]  Copy (view 1)
  [0x00000ac3]  Set column to 1
  [0x00000ac5]  Set is_stmt to 0
  [0x00000ac6]  Special opcode 36: advance Address by 4 to 0x974 and Line by 3 to 60
  [0x00000ac7]  Special opcode 33: advance Address by 4 to 0x978 and Line by 0 to 60
  [0x00000ac8]  Advance PC by 4 to 0x97c
  [0x00000aca]  Extended opcode 1: End of Sequence

  [0x00000acd]  Set column to 32
  [0x00000acf]  Extended opcode 2: set Address to 0x97c
  [0x00000ad6]  Advance Line by 61 to 62
  [0x00000ad8]  Copy
  [0x00000ad9]  Set is_stmt to 0
  [0x00000ada]  Copy (view 1)
  [0x00000adb]  Set column to 2
  [0x00000add]  Set is_stmt to 1
  [0x00000ade]  Special opcode 21: advance Address by 2 to 0x97e and Line by 2 to 64
  [0x00000adf]  Set column to 5
  [0x00000ae1]  Set is_stmt to 0
  [0x00000ae2]  Copy (view 1)
  [0x00000ae3]  Set column to 2
  [0x00000ae5]  Set is_stmt to 1
  [0x00000ae6]  Special opcode 38: advance Address by 4 to 0x982 and Line by 5 to 69
  [0x00000ae7]  Set column to 1
  [0x00000ae9]  Set is_stmt to 0
  [0x00000aea]  Special opcode 48: advance Address by 6 to 0x988 and Line by 1 to 70
  [0x00000aeb]  Set column to 3
  [0x00000aed]  Set is_stmt to 1
  [0x00000aee]  Special opcode 14: advance Address by 2 to 0x98a and Line by -5 to 65
  [0x00000aef]  Set is_stmt to 0
  [0x00000af0]  Special opcode 19: advance Address by 2 to 0x98c and Line by 0 to 65
  [0x00000af1]  Set is_stmt to 1
  [0x00000af2]  Special opcode 34: advance Address by 4 to 0x990 and Line by 1 to 66
  [0x00000af3]  Set column to 7
  [0x00000af5]  Set is_stmt to 0
  [0x00000af6]  Copy (view 1)
  [0x00000af7]  Special opcode 19: advance Address by 2 to 0x992 and Line by 0 to 66
  [0x00000af8]  Advance PC by 2 to 0x994
  [0x00000afa]  Extended opcode 1: End of Sequence

  [0x00000afd]  Set column to 32
  [0x00000aff]  Extended opcode 2: set Address to 0x994
  [0x00000b06]  Advance Line by 71 to 72
  [0x00000b09]  Copy
  [0x00000b0a]  Set is_stmt to 0
  [0x00000b0b]  Copy (view 1)
  [0x00000b0c]  Set column to 2
  [0x00000b0e]  Set is_stmt to 1
  [0x00000b0f]  Special opcode 63: advance Address by 8 to 0x99c and Line by 2 to 74
  [0x00000b10]  Set column to 4
  [0x00000b12]  Set is_stmt to 0
  [0x00000b13]  Copy (view 1)
  [0x00000b14]  Set column to 2
  [0x00000b16]  Set is_stmt to 1
  [0x00000b17]  Special opcode 80: advance Address by 10 to 0x9a6 and Line by 5 to 79
  [0x00000b18]  Set column to 15
  [0x00000b1a]  Set is_stmt to 0
  [0x00000b1b]  Copy (view 1)
  [0x00000b1c]  Set column to 4
  [0x00000b1e]  Special opcode 89: advance Address by 12 to 0x9b2 and Line by 0 to 79
  [0x00000b1f]  Set column to 24
  [0x00000b21]  Extended opcode 4: set Discriminator to 1
  [0x00000b25]  Special opcode 75: advance Address by 10 to 0x9bc and Line by 0 to 79
  [0x00000b26]  Set column to 2
  [0x00000b28]  Set is_stmt to 1
  [0x00000b29]  Special opcode 108: advance Address by 14 to 0x9ca and Line by 5 to 84
  [0x00000b2a]  Set column to 4
  [0x00000b2c]  Set is_stmt to 0
  [0x00000b2d]  Copy (view 1)
  [0x00000b2e]  Set column to 30
  [0x00000b30]  Extended opcode 4: set Discriminator to 1
  [0x00000b34]  Special opcode 103: advance Address by 14 to 0x9d8 and Line by 0 to 84
  [0x00000b35]  Set column to 25
  [0x00000b37]  Extended opcode 4: set Discriminator to 1
  [0x00000b3b]  Special opcode 61: advance Address by 8 to 0x9e0 and Line by 0 to 84
  [0x00000b3c]  Set column to 2
  [0x00000b3e]  Set is_stmt to 1
  [0x00000b3f]  Special opcode 80: advance Address by 10 to 0x9ea and Line by 5 to 89
  [0x00000b40]  Special opcode 7: advance Address by 0 to 0x9ea and Line by 2 to 91 (view 1)
  [0x00000b41]  Set column to 4
  [0x00000b43]  Set is_stmt to 0
  [0x00000b44]  Copy (view 2)
  [0x00000b45]  Set column to 2
  [0x00000b47]  Set is_stmt to 1
  [0x00000b48]  Special opcode 80: advance Address by 10 to 0x9f4 and Line by 5 to 96
  [0x00000b49]  Set column to 11
  [0x00000b4b]  Set is_stmt to 0
  [0x00000b4c]  Copy (view 1)
  [0x00000b4d]  Set column to 2
  [0x00000b4f]  Set is_stmt to 1
  [0x00000b50]  Special opcode 34: advance Address by 4 to 0x9f8 and Line by 1 to 97
  [0x00000b51]  Set column to 44
  [0x00000b53]  Set is_stmt to 0
  [0x00000b54]  Copy (view 1)
  [0x00000b55]  Set column to 59
  [0x00000b57]  Special opcode 61: advance Address by 8 to 0xa00 and Line by 0 to 97
  [0x00000b58]  Set column to 11
  [0x00000b5a]  Special opcode 61: advance Address by 8 to 0xa08 and Line by 0 to 97
  [0x00000b5b]  Set column to 2
  [0x00000b5d]  Set is_stmt to 1
  [0x00000b5e]  Special opcode 63: advance Address by 8 to 0xa10 and Line by 2 to 99
  [0x00000b5f]  Special opcode 7: advance Address by 0 to 0xa10 and Line by 2 to 101 (view 1)
  [0x00000b60]  Set column to 6
  [0x00000b62]  Copy (view 2)
  [0x00000b63]  Set column to 10
  [0x00000b65]  Set is_stmt to 0
  [0x00000b66]  Copy (view 3)
  [0x00000b67]  Set column to 6
  [0x00000b69]  Special opcode 17: advance Address by 2 to 0xa12 and Line by -2 to 99
  [0x00000b6a]  Set column to 2
  [0x00000b6c]  Special opcode 21: advance Address by 2 to 0xa14 and Line by 2 to 101
  [0x00000b6d]  Special opcode 19: advance Address by 2 to 0xa16 and Line by 0 to 101
  [0x00000b6e]  Set column to 3
  [0x00000b70]  Set is_stmt to 1
  [0x00000b71]  Advance Line by -26 to 75
  [0x00000b73]  Copy (view 1)
  [0x00000b74]  Special opcode 48: advance Address by 6 to 0xa1c and Line by 1 to 76
  [0x00000b75]  Special opcode 23: advance Address by 2 to 0xa1e and Line by 4 to 80
  [0x00000b76]  Special opcode 48: advance Address by 6 to 0xa24 and Line by 1 to 81
  [0x00000b77]  Set column to 1
  [0x00000b79]  Set is_stmt to 0
  [0x00000b7a]  Advance Line by 32 to 113
  [0x00000b7c]  Copy (view 1)
  [0x00000b7d]  Set column to 3
  [0x00000b7f]  Set is_stmt to 1
  [0x00000b80]  Advance Line by -28 to 85
  [0x00000b82]  Special opcode 61: advance Address by 8 to 0xa2c and Line by 0 to 85
  [0x00000b83]  Special opcode 48: advance Address by 6 to 0xa32 and Line by 1 to 86
  [0x00000b84]  Special opcode 25: advance Address by 2 to 0xa34 and Line by 6 to 92
  [0x00000b85]  Special opcode 48: advance Address by 6 to 0xa3a and Line by 1 to 93
  [0x00000b86]  Set column to 10
  [0x00000b88]  Set is_stmt to 0
  [0x00000b89]  Copy (view 1)
  [0x00000b8a]  Set column to 3
  [0x00000b8c]  Set is_stmt to 1
  [0x00000b8d]  Advance Line by 9 to 102
  [0x00000b8f]  Special opcode 47: advance Address by 6 to 0xa40 and Line by 0 to 102
  [0x00000b90]  Set column to 44
  [0x00000b92]  Set is_stmt to 0
  [0x00000b93]  Copy (view 1)
  [0x00000b94]  Set column to 19
  [0x00000b96]  Special opcode 131: advance Address by 18 to 0xa52 and Line by 0 to 102
  [0x00000b97]  Set column to 17
  [0x00000b99]  Special opcode 19: advance Address by 2 to 0xa54 and Line by 0 to 102
  [0x00000b9a]  Special opcode 33: advance Address by 4 to 0xa58 and Line by 0 to 102
  [0x00000b9b]  Set column to 3
  [0x00000b9d]  Set is_stmt to 1
  [0x00000b9e]  Special opcode 48: advance Address by 6 to 0xa5e and Line by 1 to 103
  [0x00000b9f]  Set column to 15
  [0x00000ba1]  Set is_stmt to 0
  [0x00000ba2]  Copy (view 1)
  [0x00000ba3]  Set column to 25
  [0x00000ba5]  Extended opcode 4: set Discriminator to 3
  [0x00000ba9]  Set is_stmt to 1
  [0x00000baa]  Special opcode 17: advance Address by 2 to 0xa60 and Line by -2 to 101
  [0x00000bab]  Set column to 13
  [0x00000bad]  Set is_stmt to 0
  [0x00000bae]  Special opcode 20: advance Address by 2 to 0xa62 and Line by 1 to 102
  [0x00000baf]  Set column to 19
  [0x00000bb1]  Extended opcode 4: set Discriminator to 1
  [0x00000bb5]  Set is_stmt to 1
  [0x00000bb6]  Special opcode 18: advance Address by 2 to 0xa64 and Line by -1 to 101
  [0x00000bb7]  Set column to 3
  [0x00000bb9]  Special opcode 36: advance Address by 4 to 0xa68 and Line by 3 to 104
  [0x00000bba]  Set column to 2
  [0x00000bbc]  Special opcode 7: advance Address by 0 to 0xa68 and Line by 2 to 106 (view 1)
  [0x00000bbd]  Set column to 12
  [0x00000bbf]  Set is_stmt to 0
  [0x00000bc0]  Copy (view 2)
  [0x00000bc1]  Set column to 16
  [0x00000bc3]  Special opcode 19: advance Address by 2 to 0xa6a and Line by 0 to 106
  [0x00000bc4]  Special opcode 33: advance Address by 4 to 0xa6e and Line by 0 to 106
  [0x00000bc5]  Set column to 2
  [0x00000bc7]  Set is_stmt to 1
  [0x00000bc8]  Special opcode 77: advance Address by 10 to 0xa78 and Line by 2 to 108
  [0x00000bc9]  Set is_stmt to 0
  [0x00000bca]  Special opcode 33: advance Address by 4 to 0xa7c and Line by 0 to 108
  [0x00000bcb]  Set is_stmt to 1
  [0x00000bcc]  Special opcode 35: advance Address by 4 to 0xa80 and Line by 2 to 110
  [0x00000bcd]  Set column to 3
  [0x00000bcf]  Special opcode 20: advance Address by 2 to 0xa82 and Line by 1 to 111
  [0x00000bd0]  Set column to 22
  [0x00000bd2]  Set is_stmt to 0
  [0x00000bd3]  Copy (view 1)
  [0x00000bd4]  Set column to 3
  [0x00000bd6]  Special opcode 19: advance Address by 2 to 0xa84 and Line by 0 to 111
  [0x00000bd7]  Set column to 22
  [0x00000bd9]  Extended opcode 4: set Discriminator to 2
  [0x00000bdd]  Set is_stmt to 1
  [0x00000bde]  Special opcode 102: advance Address by 14 to 0xa92 and Line by -1 to 110
  [0x00000bdf]  Set column to 8
  [0x00000be1]  Extended opcode 4: set Discriminator to 1
  [0x00000be5]  Copy (view 1)
  [0x00000be6]  Extended opcode 4: set Discriminator to 1
  [0x00000bea]  Set is_stmt to 0
  [0x00000beb]  Special opcode 33: advance Address by 4 to 0xa96 and Line by 0 to 110
  [0x00000bec]  Advance PC by 30 to 0xab4
  [0x00000bee]  Extended opcode 1: End of Sequence

  [0x00000bf1]  Set column to 34
  [0x00000bf3]  Extended opcode 2: set Address to 0xab4
  [0x00000bfa]  Advance Line by 114 to 115
  [0x00000bfd]  Copy
  [0x00000bfe]  Set is_stmt to 0
  [0x00000bff]  Copy (view 1)
  [0x00000c00]  Set column to 2
  [0x00000c02]  Set is_stmt to 1
  [0x00000c03]  Special opcode 90: advance Address by 12 to 0xac0 and Line by 1 to 116
  [0x00000c04]  Special opcode 6: advance Address by 0 to 0xac0 and Line by 1 to 117 (view 1)
  [0x00000c05]  Special opcode 21: advance Address by 2 to 0xac2 and Line by 2 to 119
  [0x00000c06]  Special opcode 6: advance Address by 0 to 0xac2 and Line by 1 to 120 (view 1)
  [0x00000c07]  Special opcode 6: advance Address by 0 to 0xac2 and Line by 1 to 121 (view 2)
  [0x00000c08]  Special opcode 6: advance Address by 0 to 0xac2 and Line by 1 to 122 (view 3)
  [0x00000c09]  Special opcode 7: advance Address by 0 to 0xac2 and Line by 2 to 124 (view 4)
  [0x00000c0a]  Set column to 6
  [0x00000c0c]  Copy (view 5)
  [0x00000c0d]  Set column to 10
  [0x00000c0f]  Set is_stmt to 0
  [0x00000c10]  Copy (view 6)
  [0x00000c11]  Set column to 2
  [0x00000c13]  Special opcode 19: advance Address by 2 to 0xac4 and Line by 0 to 124
  [0x00000c14]  Set column to 7
  [0x00000c16]  Set is_stmt to 1
  [0x00000c17]  Special opcode 25: advance Address by 2 to 0xac6 and Line by 6 to 130
  [0x00000c18]  Set column to 12
  [0x00000c1a]  Set is_stmt to 0
  [0x00000c1b]  Copy (view 1)
  [0x00000c1c]  Set column to 7
  [0x00000c1e]  Set is_stmt to 1
  [0x00000c1f]  Special opcode 48: advance Address by 6 to 0xacc and Line by 1 to 131
  [0x00000c20]  Set column to 6
  [0x00000c22]  Special opcode 48: advance Address by 6 to 0xad2 and Line by 1 to 132
  [0x00000c23]  Set is_stmt to 0
  [0x00000c24]  Special opcode 0: advance Address by 0 to 0xad2 and Line by -5 to 127 (view 1)
  [0x00000c25]  Special opcode 24: advance Address by 2 to 0xad4 and Line by 5 to 132
  [0x00000c26]  Set column to 7
  [0x00000c28]  Set is_stmt to 1
  [0x00000c29]  Special opcode 22: advance Address by 2 to 0xad6 and Line by 3 to 135
  [0x00000c2a]  Set column to 11
  [0x00000c2c]  Set is_stmt to 0
  [0x00000c2d]  Copy (view 1)
  [0x00000c2e]  Set column to 7
  [0x00000c30]  Set is_stmt to 1
  [0x00000c31]  Special opcode 48: advance Address by 6 to 0xadc and Line by 1 to 136
  [0x00000c32]  Set column to 6
  [0x00000c34]  Special opcode 48: advance Address by 6 to 0xae2 and Line by 1 to 137
  [0x00000c35]  Set is_stmt to 0
  [0x00000c36]  Advance Line by -10 to 127
  [0x00000c38]  Copy (view 1)
  [0x00000c39]  Advance Line by 10 to 137
  [0x00000c3b]  Special opcode 19: advance Address by 2 to 0xae4 and Line by 0 to 137
  [0x00000c3c]  Set column to 7
  [0x00000c3e]  Set is_stmt to 1
  [0x00000c3f]  Special opcode 22: advance Address by 2 to 0xae6 and Line by 3 to 140
  [0x00000c40]  Special opcode 48: advance Address by 6 to 0xaec and Line by 1 to 141
  [0x00000c41]  Set column to 6
  [0x00000c43]  Special opcode 6: advance Address by 0 to 0xaec and Line by 1 to 142 (view 1)
  [0x00000c44]  Set column to 7
  [0x00000c46]  Special opcode 22: advance Address by 2 to 0xaee and Line by 3 to 145
  [0x00000c47]  Set column to 11
  [0x00000c49]  Set is_stmt to 0
  [0x00000c4a]  Copy (view 1)
  [0x00000c4b]  Set column to 7
  [0x00000c4d]  Set is_stmt to 1
  [0x00000c4e]  Special opcode 48: advance Address by 6 to 0xaf4 and Line by 1 to 146
  [0x00000c4f]  Set column to 6
  [0x00000c51]  Special opcode 48: advance Address by 6 to 0xafa and Line by 1 to 147
  [0x00000c52]  Set is_stmt to 0
  [0x00000c53]  Advance Line by -20 to 127
  [0x00000c55]  Copy (view 1)
  [0x00000c56]  Advance Line by 20 to 147
  [0x00000c58]  Special opcode 19: advance Address by 2 to 0xafc and Line by 0 to 147
  [0x00000c59]  Set column to 7
  [0x00000c5b]  Set is_stmt to 1
  [0x00000c5c]  Special opcode 22: advance Address by 2 to 0xafe and Line by 3 to 150
  [0x00000c5d]  Set column to 12
  [0x00000c5f]  Set is_stmt to 0
  [0x00000c60]  Copy (view 1)
  [0x00000c61]  Set column to 7
  [0x00000c63]  Set is_stmt to 1
  [0x00000c64]  Special opcode 62: advance Address by 8 to 0xb06 and Line by 1 to 151
  [0x00000c65]  Set column to 6
  [0x00000c67]  Special opcode 62: advance Address by 8 to 0xb0e and Line by 1 to 152
  [0x00000c68]  Set is_stmt to 0
  [0x00000c69]  Advance Line by -25 to 127
  [0x00000c6b]  Copy (view 1)
  [0x00000c6c]  Advance Line by 25 to 152
  [0x00000c6e]  Special opcode 19: advance Address by 2 to 0xb10 and Line by 0 to 152
  [0x00000c6f]  Set is_stmt to 1
  [0x00000c70]  Special opcode 22: advance Address by 2 to 0xb12 and Line by 3 to 155
  [0x00000c71]  Special opcode 48: advance Address by 6 to 0xb18 and Line by 1 to 156
  [0x00000c72]  Special opcode 48: advance Address by 6 to 0xb1e and Line by 1 to 157
  [0x00000c73]  Set is_stmt to 0
  [0x00000c74]  Advance Line by -30 to 127
  [0x00000c76]  Copy (view 1)
  [0x00000c77]  Advance Line by 30 to 157
  [0x00000c79]  Special opcode 19: advance Address by 2 to 0xb20 and Line by 0 to 157
  [0x00000c7a]  Set column to 5
  [0x00000c7c]  Set is_stmt to 1
  [0x00000c7d]  Special opcode 24: advance Address by 2 to 0xb22 and Line by 5 to 162
  [0x00000c7e]  Set column to 4
  [0x00000c80]  Special opcode 34: advance Address by 4 to 0xb26 and Line by 1 to 163
  [0x00000c81]  Set column to 35
  [0x00000c83]  Extended opcode 4: set Discriminator to 2
  [0x00000c87]  Advance Line by -39 to 124
  [0x00000c89]  Copy (view 1)
  [0x00000c8a]  Set column to 25
  [0x00000c8c]  Extended opcode 4: set Discriminator to 1
  [0x00000c90]  Special opcode 19: advance Address by 2 to 0xb28 and Line by 0 to 124
  [0x00000c91]  Set column to 21
  [0x00000c93]  Extended opcode 4: set Discriminator to 1
  [0x00000c97]  Set is_stmt to 0
  [0x00000c98]  Copy (view 1)
  [0x00000c99]  Set column to 25
  [0x00000c9b]  Extended opcode 4: set Discriminator to 1
  [0x00000c9f]  Special opcode 19: advance Address by 2 to 0xb2a and Line by 0 to 124
  [0x00000ca0]  Set column to 3
  [0x00000ca2]  Set is_stmt to 1
  [0x00000ca3]  Special opcode 20: advance Address by 2 to 0xb2c and Line by 1 to 125
  [0x00000ca4]  Set column to 5
  [0x00000ca6]  Special opcode 35: advance Address by 4 to 0xb30 and Line by 2 to 127
  [0x00000ca7]  Set column to 6
  [0x00000ca9]  Set is_stmt to 0
  [0x00000caa]  Copy (view 1)
  [0x00000cab]  Set column to 5
  [0x00000cad]  Set is_stmt to 1
  [0x00000cae]  Special opcode 20: advance Address by 2 to 0xb32 and Line by 1 to 128
  [0x00000caf]  Set column to 18
  [0x00000cb1]  Set is_stmt to 0
  [0x00000cb2]  Copy (view 1)
  [0x00000cb3]  Advance PC by 98 to 0xb94
  [0x00000cb5]  Special opcode 5: advance Address by 0 to 0xb94 and Line by 0 to 128
  [0x00000cb6]  Set column to 1
  [0x00000cb8]  Advance Line by 40 to 168
  [0x00000cba]  Copy (view 1)
  [0x00000cbb]  Special opcode 47: advance Address by 6 to 0xb9a and Line by 0 to 168
  [0x00000cbc]  Advance PC by 4 to 0xb9e
  [0x00000cbe]  Extended opcode 1: End of Sequence


  Offset:                      0xcc1
  Length:                      308
  DWARF Version:               3
  Prologue Length:             155
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0xcdc):
  1	sys
  2	/usr/arm-none-eabi/include/machine
  3	/usr/arm-none-eabi/include/sys
  4	src

 The File Name Table (offset 0xd27):
  Entry	Dir	Time	Size	Name
  1	1	0	0	startup_gcc.c
  2	2	0	0	_default_types.h
  3	3	0	0	_stdint.h
  4	4	0	0	timers.h

 Line Number Statements:
  [0x00000d66]  Set column to 1
  [0x00000d68]  Extended opcode 2: set Address to 0xba0
  [0x00000d6f]  Advance Line by 268 to 269
  [0x00000d72]  Copy
  [0x00000d73]  Set column to 5
  [0x00000d75]  Special opcode 9: advance Address by 0 to 0xba0 and Line by 4 to 273 (view 1)
  [0x00000d76]  Special opcode 7: advance Address by 0 to 0xba0 and Line by 2 to 275 (view 2)
  [0x00000d77]  Set column to 10
  [0x00000d79]  Special opcode 3: advance Address by 0 to 0xba0 and Line by -2 to 273 (view 3)
  [0x00000d7a]  Advance PC by 2 to 0xba2
  [0x00000d7c]  Extended opcode 1: End of Sequence

  [0x00000d7f]  Set column to 1
  [0x00000d81]  Extended opcode 2: set Address to 0xba2
  [0x00000d88]  Advance Line by 286 to 287
  [0x00000d8b]  Copy
  [0x00000d8c]  Set column to 5
  [0x00000d8e]  Special opcode 9: advance Address by 0 to 0xba2 and Line by 4 to 291 (view 1)
  [0x00000d8f]  Special opcode 7: advance Address by 0 to 0xba2 and Line by 2 to 293 (view 2)
  [0x00000d90]  Set column to 10
  [0x00000d92]  Special opcode 3: advance Address by 0 to 0xba2 and Line by -2 to 291 (view 3)
  [0x00000d93]  Advance PC by 2 to 0xba4
  [0x00000d95]  Extended opcode 1: End of Sequence

  [0x00000d98]  Set column to 1
  [0x00000d9a]  Extended opcode 2: set Address to 0xba4
  [0x00000da1]  Advance Line by 304 to 305
  [0x00000da4]  Copy
  [0x00000da5]  Set column to 5
  [0x00000da7]  Special opcode 9: advance Address by 0 to 0xba4 and Line by 4 to 309 (view 1)
  [0x00000da8]  Special opcode 7: advance Address by 0 to 0xba4 and Line by 2 to 311 (view 2)
  [0x00000da9]  Set column to 10
  [0x00000dab]  Special opcode 3: advance Address by 0 to 0xba4 and Line by -2 to 309 (view 3)
  [0x00000dac]  Advance PC by 2 to 0xba6
  [0x00000dae]  Extended opcode 1: End of Sequence

  [0x00000db1]  Set column to 1
  [0x00000db3]  Extended opcode 2: set Address to 0xba8
  [0x00000dba]  Advance Line by 226 to 227
  [0x00000dbd]  Copy
  [0x00000dbe]  Set column to 5
  [0x00000dc0]  Special opcode 20: advance Address by 2 to 0xbaa and Line by 1 to 228
  [0x00000dc1]  Special opcode 10: advance Address by 0 to 0xbaa and Line by 5 to 233 (view 1)
  [0x00000dc2]  Special opcode 6: advance Address by 0 to 0xbaa and Line by 1 to 234 (view 2)
  [0x00000dc3]  Set column to 17
  [0x00000dc5]  Set is_stmt to 0
  [0x00000dc6]  Copy (view 3)
  [0x00000dc7]  Set column to 12
  [0x00000dc9]  Special opcode 18: advance Address by 2 to 0xbac and Line by -1 to 233
  [0x00000dca]  Set column to 5
  [0x00000dcc]  Special opcode 20: advance Address by 2 to 0xbae and Line by 1 to 234
  [0x00000dcd]  Set column to 9
  [0x00000dcf]  Set is_stmt to 1
  [0x00000dd0]  Special opcode 21: advance Address by 2 to 0xbb0 and Line by 2 to 236
  [0x00000dd1]  Set column to 22
  [0x00000dd3]  Set is_stmt to 0
  [0x00000dd4]  Copy (view 1)
  [0x00000dd5]  Set column to 20
  [0x00000dd7]  Special opcode 33: advance Address by 4 to 0xbb4 and Line by 0 to 236
  [0x00000dd8]  Set column to 35
  [0x00000dda]  Extended opcode 4: set Discriminator to 1
  [0x00000dde]  Set is_stmt to 1
  [0x00000ddf]  Special opcode 31: advance Address by 4 to 0xbb8 and Line by -2 to 234
  [0x00000de0]  Set column to 5
  [0x00000de2]  Special opcode 55: advance Address by 6 to 0xbbe and Line by 8 to 242
  [0x00000de3]  Advance Line by 14 to 256
  [0x00000de5]  Special opcode 131: advance Address by 18 to 0xbd0 and Line by 0 to 256
  [0x00000de6]  Set column to 31
  [0x00000de8]  Set is_stmt to 0
  [0x00000de9]  Copy (view 1)
  [0x00000dea]  Special opcode 33: advance Address by 4 to 0xbd4 and Line by 0 to 256
  [0x00000deb]  Special opcode 33: advance Address by 4 to 0xbd8 and Line by 0 to 256
  [0x00000dec]  Set column to 5
  [0x00000dee]  Set is_stmt to 1
  [0x00000def]  Special opcode 34: advance Address by 4 to 0xbdc and Line by 1 to 257
  [0x00000df0]  Set column to 1
  [0x00000df2]  Set is_stmt to 0
  [0x00000df3]  Special opcode 34: advance Address by 4 to 0xbe0 and Line by 1 to 258
  [0x00000df4]  Advance PC by 24 to 0xbf8
  [0x00000df6]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 68656164 65720053 63616e48 65616465 header.ScanHeade
  0x00000010 72466965 6c647300 57414954 494e475f rFields.WAITING_
  0x00000020 5343414e 5f484541 44455200 7a65726f SCAN_HEADER.zero
  0x00000030 5f706f69 6e745f62 75660073 72632f6c _point_buf.src/l
  0x00000040 69646172 2e630073 686f7274 20696e74 idar.c.short int
  0x00000050 0066726f 6d5f746f 70006465 6c746100 .from_top.delta.
  0x00000060 5f5f7569 6e743332 5f740070 72696e74 __uint32_t.print
  0x00000070 5f616e67 6c657300 6d6f6465 00726967 _angles.mode.rig
  0x00000080 68746964 78005354 4152545f 5041434b htidx.START_PACK
  0x00000090 4554005f 5f75696e 7431365f 74007374 ET.__uint16_t.st
  0x000000a0 6172745f 636f6465 006c6566 74696478 art_code.leftidx
  0x000000b0 00444154 415f5041 434b4554 00616e67 .DATA_PACKET.ang
  0x000000c0 6c655f6d 61700052 45434549 56494e47 le_map.RECEIVING
  0x000000d0 5f534341 4e5f4845 41444552 0074656d _SCAN_HEADER.tem
  0x000000e0 70006c6f 6e67206c 6f6e6720 696e7400 p.long long int.
  0x000000f0 64656c74 615f7065 725f636f 756e7400 delta_per_count.
  0x00000100 63757272 656e745f 7363616e 00616374 current_scan.act
  0x00000110 6976655f 706f696e 745f6275 66666572 ive_point_buffer
  0x00000120 002f686f 6d652f6a 6b6d756e 736f6e2f ./home/jkmunson/
  0x00000130 776f726b 73706163 652f4545 4e473436 workspace/EENG46
  0x00000140 312f4545 4e473436 315f4c49 44415200 1/EENG461_LIDAR.
  0x00000150 7072696e 746c6600 63757272 656e745f printlf.current_
  0x00000160 62797465 00524543 45495649 4e475f53 byte.RECEIVING_S
  0x00000170 43414e5f 44415441 00737461 72745f6c CAN_DATA.start_l
  0x00000180 69646172 5f736361 6e006c65 6e677468 idar_scan.length
  0x00000190 00756e73 69676e65 64206368 61720065 .unsigned char.e
  0x000001a0 6e645f61 6e676c65 006c6f6e 67206c6f nd_angle.long lo
  0x000001b0 6e672075 6e736967 6e656420 696e7400 ng unsigned int.
  0x000001c0 706f696e 74735f62 75665f30 00706f69 points_buf_0.poi
  0x000001d0 6e74735f 6275665f 3100434f 4d4d5f57 nts_buf_1.COMM_W
  0x000001e0 41495449 4e470073 74617274 0073686f AITING.start.sho
  0x000001f0 72742075 6e736967 6e656420 696e7400 rt unsigned int.
  0x00000200 4d4f4445 5f434f4e 54494e55 4f555300 MODE_CONTINUOUS.
  0x00000210 54595045 5f484541 4c54485f 53544154 TYPE_HEALTH_STAT
  0x00000220 55530063 6c656172 5f6c6964 61725f49 US.clear_lidar_I
  0x00000230 4f007479 70650073 616d706c 655f636f O.type.sample_co
  0x00000240 756e7400 5f426f6f 6c00474e 55204331 unt._Bool.GNU C1
  0x00000250 37203133 2e322e30 202d6d74 68756d62 7 13.2.0 -mthumb
  0x00000260 202d6d63 70753d63 6f727465 782d6d34  -mcpu=cortex-m4
  0x00000270 202d6d66 70753d66 7076342d 73702d64  -mfpu=fpv4-sp-d
  0x00000280 3136202d 6d666c6f 61742d61 62693d68 16 -mfloat-abi=h
  0x00000290 61726420 2d6d6172 63683d61 726d7637 ard -march=armv7
  0x000002a0 652d6d2b 6670202d 67202d4f 67202d73 e-m+fp -g -Og -s
  0x000002b0 74643d63 3137202d 6666756e 6374696f td=c17 -ffunctio
  0x000002c0 6e2d7365 6374696f 6e73202d 666e6f2d n-sections -fno-
  0x000002d0 6275696c 74696e20 2d666461 74612d73 builtin -fdata-s
  0x000002e0 65637469 6f6e7300 4d4f4445 5f53494e ections.MODE_SIN
  0x000002f0 474c4500 70726f63 6573735f 7061636b GLE.process_pack
  0x00000300 65747300 73657475 705f6c69 6461725f ets.setup_lidar_
  0x00000310 636f6d6d 73006279 74657300 63757272 comms.bytes.curr
  0x00000320 656e745f 6d657373 61676500 66726f6d ent_message.from
  0x00000330 5f300050 61636b65 74486561 64657200 _0.PacketHeader.
  0x00000340 706f696e 74735f73 6d6f6f74 68005f5f points_smooth.__
  0x00000350 696e7433 325f7400 73746f70 5f6c6964 int32_t.stop_lid
  0x00000360 61725f73 63616e00 5363616e 48656164 ar_scan.ScanHead
  0x00000370 65720063 6865636b 73756d00 54595045 er.checksum.TYPE
  0x00000380 5f534341 4e00706f 73697469 6f6e0073 _SCAN.position.s
  0x00000390 74617274 5f616e67 6c650070 726f6365 tart_angle.proce
  0x000003a0 73735f70 6f696e74 5f627566 66005245 ss_point_buff.RE
  0x000003b0 43454956 494e475f 48454144 45520063 CEIVING_HEADER.c
  0x000003c0 6f6d6d5f 73746174 65005245 43454956 omm_state.RECEIV
  0x000003d0 494e475f 4845414c 54485f52 45504f52 ING_HEALTH_REPOR
  0x000003e0 54007265 63656976 696e675f 706f696e T.receiving_poin
  0x000003f0 745f6275 66666572 005f5f75 696e7438 t_buffer.__uint8
  0x00000400 5f740073 65747570 5f756172 745f7072 _t.setup_uart_pr
  0x00000410 696e7465 72006d61 696e0073 72632f6d inter.main.src/m
  0x00000420 61696e2e 63007365 636f6e64 5f636f75 ain.c.second_cou
  0x00000430 6e746572 00676574 5f757074 696d655f nter.get_uptime_
  0x00000440 6379636c 65730063 79636c65 735f6e6f cycles.cycles_no
  0x00000450 77007372 632f7469 6d657273 2e630075 w.src/timers.c.u
  0x00000460 7074696d 655f7365 636f6e64 73007469 ptime_seconds.ti
  0x00000470 6d657231 5f6f7665 72666c6f 775f636f mer1_overflow_co
  0x00000480 756e7400 74696d65 4b656570 65724953 unt.timeKeeperIS
  0x00000490 52006f76 6572666c 6f775f63 6f756e74 R.overflow_count
  0x000004a0 5f6e6f77 005f5f75 696e7436 345f7400 _now.__uint64_t.
  0x000004b0 736f6e69 635f7365 6e736f72 5f616374 sonic_sensor_act
  0x000004c0 696f6e5f 64697600 636f6e66 69677572 ion_div.configur
  0x000004d0 65446562 6f756e63 6554696d 65720069 eDebounceTimer.i
  0x000004e0 6e746567 65725061 72740070 72696e74 ntegerPart.print
  0x000004f0 5f737472 696e6700 63686172 735f7365 _string.chars_se
  0x00000500 6e745f72 6563656e 746c7900 64656369 nt_recently.deci
  0x00000510 6d616c50 61727400 5f5f676e 75635f76 malPart.__gnuc_v
  0x00000520 615f6c69 7374006e 756d7500 70757463 a_list.numu.putc
  0x00000530 68617200 7072696e 745f666c 6f617400 har.print_float.
  0x00000540 7372632f 75617274 5f707269 6e742e63 src/uart_print.c
  0x00000550 00666f72 6d617400 7072696e 745f756e .format.print_un
  0x00000560 7369676e 65645f64 6563696d 616c0070 signed_decimal.p
  0x00000570 72696e74 5f646563 696d616c 005f5f61 rint_decimal.__a
  0x00000580 7000706c 61636573 006e756d 62657200 p.places.number.
  0x00000590 6e756d66 005f5f76 615f6c69 73740061 numf.__va_list.a
  0x000005a0 72677300 5f646174 61007075 6c537461 rgs._data.pulSta
  0x000005b0 636b0049 6e744465 6661756c 7448616e ck.IntDefaultHan
  0x000005c0 646c6572 0070756c 44657374 005f6574 dler.pulDest._et
  0x000005d0 65787400 5f656461 74610073 79732f73 ext._edata.sys/s
  0x000005e0 74617274 75705f67 63632e63 00466175 tartup_gcc.c.Fau
  0x000005f0 6c744953 5200675f 70666e56 6563746f ltISR.g_pfnVecto
  0x00000600 7273006c 6f6e6720 646f7562 6c650070 rs.long double.p
  0x00000610 756c5372 63005265 73657449 5352004e ulSrc.ResetISR.N
  0x00000620 6d695352 00                         miSR.

Contents of the .debug_frame section:


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 0000000c 00000000 FDE cie=00000000 pc=0000026c..00000288

00000020 0000001c 00000000 FDE cie=00000000 pc=00000288..00000328
  DW_CFA_advance_loc: 10 to 00000292
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc1: 142 to 00000320
  DW_CFA_def_cfa_offset: 0
  DW_CFA_restore: r4
  DW_CFA_restore: r14
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000040 00000018 00000000 FDE cie=00000000 pc=00000328..00000414
  DW_CFA_advance_loc: 2 to 0000032a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r5 at cfa-12
  DW_CFA_offset: r6 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

0000005c 00000018 00000000 FDE cie=00000000 pc=00000414..00000438
  DW_CFA_advance_loc: 2 to 00000416
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000078 00000018 00000000 FDE cie=00000000 pc=00000438..0000045c
  DW_CFA_advance_loc: 2 to 0000043a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000094 00000014 00000000 FDE cie=00000000 pc=0000045c..00000484
  DW_CFA_advance_loc: 2 to 0000045e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000ac 0000000c 00000000 FDE cie=00000000 pc=00000484..000004bc

000000bc 00000014 00000000 FDE cie=00000000 pc=000004bc..00000518
  DW_CFA_advance_loc: 2 to 000004be
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000d4 00000014 00000000 FDE cie=00000000 pc=00000518..00000788
  DW_CFA_advance_loc: 2 to 0000051a
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000000ec 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000000fc 00000014 000000ec FDE cie=000000ec pc=00000788..00000800
  DW_CFA_advance_loc: 2 to 0000078a
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000114 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000124 00000018 00000114 FDE cie=00000114 pc=00000000..0000007c
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000140 00000018 00000114 FDE cie=00000114 pc=00000800..00000864
  DW_CFA_advance_loc: 2 to 00000802
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r4 at cfa-4
  DW_CFA_advance_loc: 62 to 00000840
  DW_CFA_remember_state
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 0
  DW_CFA_advance_loc: 2 to 00000842
  DW_CFA_restore_state

0000015c 00000018 00000114 FDE cie=00000114 pc=00000000..00000058
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r4 at cfa-16
  DW_CFA_offset: r6 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000178 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000188 00000018 00000178 FDE cie=00000178 pc=00000864..000008d4
  DW_CFA_advance_loc: 2 to 00000866
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001a4 00000014 00000178 FDE cie=00000178 pc=000008d4..00000918
  DW_CFA_advance_loc: 2 to 000008d6
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001bc 00000018 00000178 FDE cie=00000178 pc=00000918..0000092e
  DW_CFA_advance_loc: 2 to 0000091a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r3 at cfa-16
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r5 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

000001d8 0000001c 00000178 FDE cie=00000178 pc=00000930..0000097c
  DW_CFA_advance_loc: 2 to 00000932
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 00000934
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 66 to 00000976
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000001f8 00000014 00000178 FDE cie=00000178 pc=0000097c..00000994
  DW_CFA_advance_loc: 2 to 0000097e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop

00000210 00000030 00000178 FDE cie=00000178 pc=00000994..00000ab4
  DW_CFA_advance_loc: 2 to 00000996
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r4 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 0000099a
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset_extended: r80 at cfa-16
  DW_CFA_offset_extended: r81 at cfa-12
  DW_CFA_advance_loc: 2 to 0000099c
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc1: 138 to 00000a26
  DW_CFA_remember_state
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 4 to 00000a2a
  DW_CFA_restore_extended: r80
  DW_CFA_restore_extended: r81
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000a2c
  DW_CFA_restore_state
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000244 00000038 00000178 FDE cie=00000178 pc=00000ab4..00000b9e
  DW_CFA_advance_loc: 2 to 00000ab6
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r0 at cfa-16
  DW_CFA_offset: r1 at cfa-12
  DW_CFA_offset: r2 at cfa-8
  DW_CFA_offset: r3 at cfa-4
  DW_CFA_advance_loc: 2 to 00000ab8
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r4 at cfa-32
  DW_CFA_offset: r5 at cfa-28
  DW_CFA_offset: r6 at cfa-24
  DW_CFA_offset: r14 at cfa-20
  DW_CFA_advance_loc: 2 to 00000aba
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc1: 220 to 00000b96
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 4 to 00000b9a
  DW_CFA_restore: r14
  DW_CFA_restore: r6
  DW_CFA_restore: r5
  DW_CFA_restore: r4
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000b9c
  DW_CFA_restore: r3
  DW_CFA_restore: r2
  DW_CFA_restore: r1
  DW_CFA_restore: r0
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000280 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000290 0000000c 00000280 FDE cie=00000280 pc=00000ba0..00000ba2

000002a0 0000000c 00000280 FDE cie=00000280 pc=00000ba2..00000ba4

000002b0 0000000c 00000280 FDE cie=00000280 pc=00000ba4..00000ba6

000002c0 00000014 00000280 FDE cie=00000280 pc=00000ba8..00000bf0
  DW_CFA_advance_loc: 2 to 00000baa
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r3 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_nop


Disassembly of section .text:

00000000 <g_pfnVectors>:
volatile int32_t uptime_seconds;
volatile uint64_t timer1_overflow_count;

#define TIMER_ISR_IS_PENDING (TIMER1_MIS_R & TIMER_ICR_TATOCINT)

void configureDebounceTimer(void) {
   0:	18 12 00 20 a9 0b 00 00 a1 0b 00 00 a3 0b 00 00     ... ............

	SYSCTL_RCGCTIMER_R |= SYSCTL_RCGCTIMER_R1; //Enable Run Mode Clock Gating Control for Timer 0

	while (!(SYSCTL_PRTIMER_R & SYSCTL_RCGCTIMER_R1)) {}
  10:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 00 00 00 00     ................
	...

	TIMER1_CTL_R &= ~TIMER_CTL_TAEN; //Disable Timer
	TIMER1_CTL_R |= TIMER_CTL_TASTALL; //Stall for debug
  2c:	a5 0b 00 00 a5 0b 00 00 00 00 00 00 a5 0b 00 00     ................
	TIMER1_CFG_R = TIMER_CFG_32_BIT_TIMER;
	TIMER1_TAMR_R |= TIMER_TAMR_TAMR_PERIOD; //Set Timer to count down periodically
	TIMER1_TAILR_R = TIMER_CYCLES-1;
  3c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
	TIMER1_TAPR_R = 0;
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
  4c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt as Timeout
	NVIC_EN0_R = 1 << (INT_TIMER1A - 16);
  5c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
	TIMER1_CTL_R |= TIMER_CTL_TAEN; //Enable Timer
  6c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  7c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  8c:	a5 0b 00 00 a5 0b 00 00 01 08 00 00 a5 0b 00 00     ................
  9c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  ac:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  bc:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  cc:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  dc:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  ec:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
  fc:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 10c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 11c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 12c:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 13c:	a5 0b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
 14c:	00 00 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 15c:	a5 0b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
 1b0:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 1c0:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 1d0:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 1e0:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 1f0:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 200:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 00 00 00 00     ................
 210:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 220:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 230:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 240:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 250:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00 a5 0b 00 00     ................
 260:	a5 0b 00 00 a5 0b 00 00 a5 0b 00 00                 ............

0000026c <zero_point_buf>:
uint32_t points_smooth[POINTS_BUF_SIZE];
uint32_t *active_point_buffer;
uint32_t *receiving_point_buffer;

void zero_point_buf(void) {
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 26c:	2300      	movs	r3, #0
 26e:	e005      	b.n	27c <zero_point_buf+0x10>
		receiving_point_buffer[i] = 0;
 270:	4a04      	ldr	r2, [pc, #16]	@ (284 <zero_point_buf+0x18>)
 272:	6812      	ldr	r2, [r2, #0]
 274:	2100      	movs	r1, #0
 276:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 27a:	3301      	adds	r3, #1
 27c:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 280:	dbf6      	blt.n	270 <zero_point_buf+0x4>
	}
}
 282:	4770      	bx	lr
 284:	2000001c 	.word	0x2000001c

00000288 <process_point_buff>:

//Fill in any missing points with the average of the closest points to the left and the right.
//Unfortunately the lidar has significant "holes" in it's data.
void process_point_buff(){
	
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 288:	2000      	movs	r0, #0
 28a:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 28e:	da47      	bge.n	320 <process_point_buff+0x98>
void process_point_buff(){
 290:	b510      	push	{r4, lr}
 292:	e034      	b.n	2fe <process_point_buff+0x76>
		
		if(receiving_point_buffer[i] != 0) continue;
		//Find closest point to the "left" that has a value
		int leftidx = (i == 0) ? (POINTS_BUF_SIZE-1) : (i-1);
 294:	f240 1367 	movw	r3, #359	@ 0x167
 298:	e03c      	b.n	314 <process_point_buff+0x8c>
		bool from_top = (leftidx > 0);
		while ((receiving_point_buffer[leftidx] == 0)) {
			leftidx--;
			if (leftidx < 0) {
				if(from_top){
					receiving_point_buffer[i] = 1; // No data was collected from lidar???
 29a:	2101      	movs	r1, #1
 29c:	f842 100e 	str.w	r1, [r2, lr]
		while ((receiving_point_buffer[leftidx] == 0)) {
 2a0:	4a20      	ldr	r2, [pc, #128]	@ (324 <process_point_buff+0x9c>)
 2a2:	6812      	ldr	r2, [r2, #0]
 2a4:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 2a8:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 2ac:	b939      	cbnz	r1, 2be <process_point_buff+0x36>
			if (leftidx < 0) {
 2ae:	3b01      	subs	r3, #1
 2b0:	d5f6      	bpl.n	2a0 <process_point_buff+0x18>
				if(from_top){
 2b2:	2c00      	cmp	r4, #0
 2b4:	d1f1      	bne.n	29a <process_point_buff+0x12>
					continue;
				} else {
					leftidx = (POINTS_BUF_SIZE-1);
					from_top = true;
 2b6:	2401      	movs	r4, #1
					leftidx = (POINTS_BUF_SIZE-1);
 2b8:	f240 1367 	movw	r3, #359	@ 0x167
 2bc:	e7f0      	b.n	2a0 <process_point_buff+0x18>
			}
		}
		
		//Find closest point to the right that has a value
		int rightidx = (i < POINTS_BUF_SIZE) ? (i+1) : 0;
		bool from_0 = !rightidx;
 2be:	1c43      	adds	r3, r0, #1
 2c0:	bf0c      	ite	eq
 2c2:	2401      	moveq	r4, #1
 2c4:	2400      	movne	r4, #0
		while(receiving_point_buffer[rightidx] == 0) {
 2c6:	e002      	b.n	2ce <process_point_buff+0x46>
			if(++rightidx >= POINTS_BUF_SIZE){
				if(from_0) {
					receiving_point_buffer[i] = 1; // No data was collected from lidar?
 2c8:	2201      	movs	r2, #1
 2ca:	f841 200e 	str.w	r2, [r1, lr]
		while(receiving_point_buffer[rightidx] == 0) {
 2ce:	4a15      	ldr	r2, [pc, #84]	@ (324 <process_point_buff+0x9c>)
 2d0:	6811      	ldr	r1, [r2, #0]
 2d2:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 2d6:	b942      	cbnz	r2, 2ea <process_point_buff+0x62>
			if(++rightidx >= POINTS_BUF_SIZE){
 2d8:	3301      	adds	r3, #1
 2da:	f5b3 7fb4 	cmp.w	r3, #360	@ 0x168
 2de:	dbf6      	blt.n	2ce <process_point_buff+0x46>
				if(from_0) {
 2e0:	2c00      	cmp	r4, #0
 2e2:	d1f1      	bne.n	2c8 <process_point_buff+0x40>
					continue;
				} else {
					rightidx = 0;
					from_0 = true;
 2e4:	2401      	movs	r4, #1
					rightidx = 0;
 2e6:	2300      	movs	r3, #0
 2e8:	e7f1      	b.n	2ce <process_point_buff+0x46>
				}
			}
		}
		receiving_point_buffer[i] = (receiving_point_buffer[leftidx] + receiving_point_buffer[rightidx])/2;
 2ea:	f851 300c 	ldr.w	r3, [r1, ip]
 2ee:	441a      	add	r2, r3
 2f0:	0852      	lsrs	r2, r2, #1
 2f2:	f841 200e 	str.w	r2, [r1, lr]
	for(int i = 0; i < POINTS_BUF_SIZE; i++){
 2f6:	3001      	adds	r0, #1
 2f8:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 2fc:	da0f      	bge.n	31e <process_point_buff+0x96>
		if(receiving_point_buffer[i] != 0) continue;
 2fe:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 302:	4b08      	ldr	r3, [pc, #32]	@ (324 <process_point_buff+0x9c>)
 304:	681b      	ldr	r3, [r3, #0]
 306:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 30a:	2b00      	cmp	r3, #0
 30c:	d1f3      	bne.n	2f6 <process_point_buff+0x6e>
		int leftidx = (i == 0) ? (POINTS_BUF_SIZE-1) : (i-1);
 30e:	2800      	cmp	r0, #0
 310:	d0c0      	beq.n	294 <process_point_buff+0xc>
 312:	1e43      	subs	r3, r0, #1
		bool from_top = (leftidx > 0);
 314:	2b00      	cmp	r3, #0
 316:	bfd4      	ite	le
 318:	2400      	movle	r4, #0
 31a:	2401      	movgt	r4, #1
		while ((receiving_point_buffer[leftidx] == 0)) {
 31c:	e7c0      	b.n	2a0 <process_point_buff+0x18>
	}
}
 31e:	bd10      	pop	{r4, pc}
 320:	4770      	bx	lr
 322:	bf00      	nop
 324:	2000001c 	.word	0x2000001c

00000328 <setup_lidar_comms>:

void setup_lidar_comms(void){
 328:	b570      	push	{r4, r5, r6, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
 32a:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 32e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 330:	699b      	ldr	r3, [r3, #24]
 332:	482e      	ldr	r0, [pc, #184]	@ (3ec <setup_lidar_comms+0xc4>)
 334:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART2);
 336:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 338:	699b      	ldr	r3, [r3, #24]
 33a:	482d      	ldr	r0, [pc, #180]	@ (3f0 <setup_lidar_comms+0xc8>)
 33c:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART2)){};
 33e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 342:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 344:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 348:	4829      	ldr	r0, [pc, #164]	@ (3f0 <setup_lidar_comms+0xc8>)
 34a:	4798      	blx	r3
 34c:	2800      	cmp	r0, #0
 34e:	d0f6      	beq.n	33e <setup_lidar_comms+0x16>
	GPIO_PORTD_LOCK_R = 0x4C4F434B;
 350:	4c28      	ldr	r4, [pc, #160]	@ (3f4 <setup_lidar_comms+0xcc>)
 352:	4b29      	ldr	r3, [pc, #164]	@ (3f8 <setup_lidar_comms+0xd0>)
 354:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
	GPIO_PORTD_CR_R |= 0xFF;
 358:	f8d4 3524 	ldr.w	r3, [r4, #1316]	@ 0x524
 35c:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 360:	f8c4 3524 	str.w	r3, [r4, #1316]	@ 0x524
	GPIO_PORTD_DEN_R |= 0xFF;
 364:	f8d4 351c 	ldr.w	r3, [r4, #1308]	@ 0x51c
 368:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 36c:	f8c4 351c 	str.w	r3, [r4, #1308]	@ 0x51c
	GPIO_PORTD_PCTL_R = (GPIO_PORTD_PCTL_R & ~(GPIO_PCTL_PD7_M | GPIO_PCTL_PD6_M)) | GPIO_PCTL_PD7_U2TX | GPIO_PCTL_PD6_U2RX;
 370:	f8d4 352c 	ldr.w	r3, [r4, #1324]	@ 0x52c
 374:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 378:	f043 5388 	orr.w	r3, r3, #285212672	@ 0x11000000
 37c:	f8c4 352c 	str.w	r3, [r4, #1324]	@ 0x52c
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, LID_PINS, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 380:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 384:	6a2b      	ldr	r3, [r5, #32]
 386:	695e      	ldr	r6, [r3, #20]
 388:	2308      	movs	r3, #8
 38a:	2266      	movs	r2, #102	@ 0x66
 38c:	21c0      	movs	r1, #192	@ 0xc0
 38e:	4620      	mov	r0, r4
 390:	47b0      	blx	r6
	ROM_GPIOPadConfigSet(GPIO_PORTD_BASE, RX_PIN, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD_WPU);
 392:	6a2b      	ldr	r3, [r5, #32]
 394:	695e      	ldr	r6, [r3, #20]
 396:	230a      	movs	r3, #10
 398:	2266      	movs	r2, #102	@ 0x66
 39a:	2140      	movs	r1, #64	@ 0x40
 39c:	4620      	mov	r0, r4
 39e:	47b0      	blx	r6
	ROM_GPIODirModeSet(GPIO_PORTD_BASE, LID_PINS, GPIO_DIR_MODE_HW);
 3a0:	6a2b      	ldr	r3, [r5, #32]
 3a2:	685b      	ldr	r3, [r3, #4]
 3a4:	2202      	movs	r2, #2
 3a6:	21c0      	movs	r1, #192	@ 0xc0
 3a8:	4620      	mov	r0, r4
 3aa:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(LID_BASE, ROM_SysCtlClockGet(), LID_BAUD, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));
 3ac:	696b      	ldr	r3, [r5, #20]
 3ae:	695c      	ldr	r4, [r3, #20]
 3b0:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 3b2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 3b4:	4798      	blx	r3
 3b6:	4601      	mov	r1, r0
 3b8:	2360      	movs	r3, #96	@ 0x60
 3ba:	f44f 3261 	mov.w	r2, #230400	@ 0x38400
 3be:	480f      	ldr	r0, [pc, #60]	@ (3fc <setup_lidar_comms+0xd4>)
 3c0:	47a0      	blx	r4
	
	receiving_point_buffer = points_smooth;
 3c2:	4c0f      	ldr	r4, [pc, #60]	@ (400 <setup_lidar_comms+0xd8>)
 3c4:	4b0f      	ldr	r3, [pc, #60]	@ (404 <setup_lidar_comms+0xdc>)
 3c6:	6023      	str	r3, [r4, #0]
	zero_point_buf();
 3c8:	f7ff ff50 	bl	26c <zero_point_buf>
	receiving_point_buffer = points_buf_0;
 3cc:	4d0e      	ldr	r5, [pc, #56]	@ (408 <setup_lidar_comms+0xe0>)
 3ce:	6025      	str	r5, [r4, #0]
	zero_point_buf();
 3d0:	f7ff ff4c 	bl	26c <zero_point_buf>
	receiving_point_buffer[0] = 1;
 3d4:	6823      	ldr	r3, [r4, #0]
 3d6:	2201      	movs	r2, #1
 3d8:	601a      	str	r2, [r3, #0]
	process_point_buff();
 3da:	f7ff ff55 	bl	288 <process_point_buff>
	active_point_buffer = points_buf_0;
 3de:	4b0b      	ldr	r3, [pc, #44]	@ (40c <setup_lidar_comms+0xe4>)
 3e0:	601d      	str	r5, [r3, #0]
	receiving_point_buffer = points_buf_1;
 3e2:	4b0b      	ldr	r3, [pc, #44]	@ (410 <setup_lidar_comms+0xe8>)
 3e4:	6023      	str	r3, [r4, #0]
	zero_point_buf();
 3e6:	f7ff ff41 	bl	26c <zero_point_buf>
	
	
}
 3ea:	bd70      	pop	{r4, r5, r6, pc}
 3ec:	f0000803 	.word	0xf0000803
 3f0:	f0001802 	.word	0xf0001802
 3f4:	40007000 	.word	0x40007000
 3f8:	4c4f434b 	.word	0x4c4f434b
 3fc:	4000e000 	.word	0x4000e000
 400:	2000001c 	.word	0x2000001c
 404:	20000024 	.word	0x20000024
 408:	20000b64 	.word	0x20000b64
 40c:	20000020 	.word	0x20000020
 410:	200005c4 	.word	0x200005c4

00000414 <start_lidar_scan>:

void start_lidar_scan(void) {
 414:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, MAGIC);
 416:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 41a:	696b      	ldr	r3, [r5, #20]
 41c:	681b      	ldr	r3, [r3, #0]
 41e:	4c05      	ldr	r4, [pc, #20]	@ (434 <start_lidar_scan+0x20>)
 420:	21a5      	movs	r1, #165	@ 0xa5
 422:	4620      	mov	r0, r4
 424:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, START);
 426:	696b      	ldr	r3, [r5, #20]
 428:	681b      	ldr	r3, [r3, #0]
 42a:	2160      	movs	r1, #96	@ 0x60
 42c:	4620      	mov	r0, r4
 42e:	4798      	blx	r3
}
 430:	bd38      	pop	{r3, r4, r5, pc}
 432:	bf00      	nop
 434:	4000e000 	.word	0x4000e000

00000438 <stop_lidar_scan>:

void stop_lidar_scan(void) {
 438:	b538      	push	{r3, r4, r5, lr}
	ROM_UARTCharPut(LID_BASE, MAGIC);
 43a:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
 43e:	696b      	ldr	r3, [r5, #20]
 440:	681b      	ldr	r3, [r3, #0]
 442:	4c05      	ldr	r4, [pc, #20]	@ (458 <stop_lidar_scan+0x20>)
 444:	21a5      	movs	r1, #165	@ 0xa5
 446:	4620      	mov	r0, r4
 448:	4798      	blx	r3
	ROM_UARTCharPut(LID_BASE, STOP);
 44a:	696b      	ldr	r3, [r5, #20]
 44c:	681b      	ldr	r3, [r3, #0]
 44e:	2165      	movs	r1, #101	@ 0x65
 450:	4620      	mov	r0, r4
 452:	4798      	blx	r3
}
 454:	bd38      	pop	{r3, r4, r5, pc}
 456:	bf00      	nop
 458:	4000e000 	.word	0x4000e000

0000045c <clear_lidar_IO>:

void clear_lidar_IO(void){
 45c:	b508      	push	{r3, lr}
	while(ROM_UARTCharsAvail(LID_BASE)){
 45e:	e005      	b.n	46c <clear_lidar_IO+0x10>
		ROM_UARTCharGet(LID_BASE);
 460:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 464:	695b      	ldr	r3, [r3, #20]
 466:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 468:	4805      	ldr	r0, [pc, #20]	@ (480 <clear_lidar_IO+0x24>)
 46a:	4798      	blx	r3
	while(ROM_UARTCharsAvail(LID_BASE)){
 46c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 470:	695b      	ldr	r3, [r3, #20]
 472:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 474:	4802      	ldr	r0, [pc, #8]	@ (480 <clear_lidar_IO+0x24>)
 476:	4798      	blx	r3
 478:	2800      	cmp	r0, #0
 47a:	d1f1      	bne.n	460 <clear_lidar_IO+0x4>
	}
}
 47c:	bd08      	pop	{r3, pc}
 47e:	bf00      	nop
 480:	4000e000 	.word	0x4000e000

00000484 <angle_map>:

int angle_map(int32_t start, int32_t end, int count, int position){
	const int32_t delta = (end > start) ? (end - start) : (start - end);
 484:	4281      	cmp	r1, r0
 486:	dd13      	ble.n	4b0 <angle_map+0x2c>
 488:	1a09      	subs	r1, r1, r0
	const int32_t delta_per_count = delta/count;
 48a:	fb91 f2f2 	sdiv	r2, r1, r2
	return (((position*delta_per_count) + start) / 64) % 360;
 48e:	fb03 0302 	mla	r3, r3, r2, r0
 492:	2b00      	cmp	r3, #0
 494:	db0e      	blt.n	4b4 <angle_map+0x30>
 496:	1199      	asrs	r1, r3, #6
 498:	4a07      	ldr	r2, [pc, #28]	@ (4b8 <angle_map+0x34>)
 49a:	fb82 0201 	smull	r0, r2, r2, r1
 49e:	440a      	add	r2, r1
 4a0:	17db      	asrs	r3, r3, #31
 4a2:	ebc3 2322 	rsb	r3, r3, r2, asr #8
}
 4a6:	f44f 70b4 	mov.w	r0, #360	@ 0x168
 4aa:	fb00 1013 	mls	r0, r0, r3, r1
 4ae:	4770      	bx	lr
	const int32_t delta = (end > start) ? (end - start) : (start - end);
 4b0:	1a41      	subs	r1, r0, r1
 4b2:	e7ea      	b.n	48a <angle_map+0x6>
	return (((position*delta_per_count) + start) / 64) % 360;
 4b4:	333f      	adds	r3, #63	@ 0x3f
 4b6:	e7ee      	b.n	496 <angle_map+0x12>
 4b8:	b60b60b7 	.word	0xb60b60b7

000004bc <print_angles>:

void print_angles(void) {
 4bc:	b510      	push	{r4, lr}
	for(int i = 0; i<360; i++){
 4be:	2200      	movs	r2, #0
 4c0:	e00d      	b.n	4de <print_angles+0x22>
		points_smooth[i] = (points_smooth[i]*3 + active_point_buffer[i])/4;
 4c2:	4911      	ldr	r1, [pc, #68]	@ (508 <print_angles+0x4c>)
 4c4:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 4c8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 4cc:	480f      	ldr	r0, [pc, #60]	@ (50c <print_angles+0x50>)
 4ce:	6800      	ldr	r0, [r0, #0]
 4d0:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 4d4:	4403      	add	r3, r0
 4d6:	089b      	lsrs	r3, r3, #2
 4d8:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
	for(int i = 0; i<360; i++){
 4dc:	3201      	adds	r2, #1
 4de:	f5b2 7fb4 	cmp.w	r2, #360	@ 0x168
 4e2:	dbee      	blt.n	4c2 <print_angles+0x6>
	}
	printlf("\033c");
 4e4:	480a      	ldr	r0, [pc, #40]	@ (510 <print_angles+0x54>)
 4e6:	f000 fae5 	bl	ab4 <printlf>
	for(int i = 15; i < 360; i+=15) {
 4ea:	240f      	movs	r4, #15
 4ec:	e007      	b.n	4fe <print_angles+0x42>
		printlf("%d:\t%d\n", i, points_smooth[i]);
 4ee:	4b06      	ldr	r3, [pc, #24]	@ (508 <print_angles+0x4c>)
 4f0:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
 4f4:	4621      	mov	r1, r4
 4f6:	4807      	ldr	r0, [pc, #28]	@ (514 <print_angles+0x58>)
 4f8:	f000 fadc 	bl	ab4 <printlf>
	for(int i = 15; i < 360; i+=15) {
 4fc:	340f      	adds	r4, #15
 4fe:	f5b4 7fb4 	cmp.w	r4, #360	@ 0x168
 502:	dbf4      	blt.n	4ee <print_angles+0x32>
	}
}
 504:	bd10      	pop	{r4, pc}
 506:	bf00      	nop
 508:	20000024 	.word	0x20000024
 50c:	20000020 	.word	0x20000020
 510:	00000bf8 	.word	0x00000bf8
 514:	00000bfc 	.word	0x00000bfc

00000518 <process_packets>:

void process_packets(void) {
 518:	b510      	push	{r4, lr}
	
	//while(ROM_UARTCharsAvail(LID_BASE)) {
	//	ROM_UARTCharPut(UART0_BASE,ROM_UARTCharGet(LID_BASE));
	//} return;
	
	while(ROM_UARTCharsAvail(LID_BASE)) {
 51a:	e0f4      	b.n	706 <process_packets+0x1ee>
		switch(comm_state) {
			case COMM_WAITING:{
				char tmp = ROM_UARTCharGet(LID_BASE);
 51c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 520:	695b      	ldr	r3, [r3, #20]
 522:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 524:	4889      	ldr	r0, [pc, #548]	@ (74c <process_packets+0x234>)
 526:	4798      	blx	r3
 528:	b2c0      	uxtb	r0, r0
				if(tmp != 0xA5 && tmp != 0xAA ) break; // Really we're looking for 0xA5, but is 0xAA is seen, this will lead to a reset.
 52a:	28a5      	cmp	r0, #165	@ 0xa5
 52c:	d002      	beq.n	534 <process_packets+0x1c>
 52e:	28aa      	cmp	r0, #170	@ 0xaa
 530:	f040 80e9 	bne.w	706 <process_packets+0x1ee>
				comm_state = RECEIVING_HEADER;
 534:	2301      	movs	r3, #1
 536:	4a86      	ldr	r2, [pc, #536]	@ (750 <process_packets+0x238>)
 538:	7013      	strb	r3, [r2, #0]
				current_byte = 1;
 53a:	4a86      	ldr	r2, [pc, #536]	@ (754 <process_packets+0x23c>)
 53c:	8013      	strh	r3, [r2, #0]
				current_message.bytes[0] = 0xA5;
 53e:	4b86      	ldr	r3, [pc, #536]	@ (758 <process_packets+0x240>)
 540:	22a5      	movs	r2, #165	@ 0xa5
 542:	701a      	strb	r2, [r3, #0]
				printlf("Header Started\n");
 544:	4885      	ldr	r0, [pc, #532]	@ (75c <process_packets+0x244>)
 546:	f000 fab5 	bl	ab4 <printlf>
			} break;
 54a:	e0dc      	b.n	706 <process_packets+0x1ee>
			
			case RECEIVING_HEADER: {
				current_message.bytes[current_byte++] = ROM_UARTCharGet(LID_BASE);
 54c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 550:	695b      	ldr	r3, [r3, #20]
 552:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 554:	487d      	ldr	r0, [pc, #500]	@ (74c <process_packets+0x234>)
 556:	4798      	blx	r3
 558:	497e      	ldr	r1, [pc, #504]	@ (754 <process_packets+0x23c>)
 55a:	880a      	ldrh	r2, [r1, #0]
 55c:	1c53      	adds	r3, r2, #1
 55e:	b29b      	uxth	r3, r3
 560:	800b      	strh	r3, [r1, #0]
 562:	497d      	ldr	r1, [pc, #500]	@ (758 <process_packets+0x240>)
 564:	5488      	strb	r0, [r1, r2]
				//printlf(" %d : %d\n", current_message.bytes[current_byte-1], current_byte-1);
				//If we're not done receiving the header, continue
				if(current_byte < sizeof(current_message)) break; 
 566:	2b06      	cmp	r3, #6
 568:	f240 80cd 	bls.w	706 <process_packets+0x1ee>
				
				//process the header
				if(current_message.header.start_code != HEADER_MAGIC) {
 56c:	8809      	ldrh	r1, [r1, #0]
 56e:	f645 23a5 	movw	r3, #23205	@ 0x5aa5
 572:	4299      	cmp	r1, r3
 574:	d016      	beq.n	5a4 <process_packets+0x8c>
					printlf("Unexpected Header %d, resetting\n", current_message.header.start_code);
 576:	487a      	ldr	r0, [pc, #488]	@ (760 <process_packets+0x248>)
 578:	f000 fa9c 	bl	ab4 <printlf>
					stop_lidar_scan();
 57c:	f7ff ff5c 	bl	438 <stop_lidar_scan>
					clear_lidar_IO();
 580:	f7ff ff6c 	bl	45c <clear_lidar_IO>
					ROM_SysCtlDelay(20000);
 584:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 588:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 58a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 58e:	f644 6020 	movw	r0, #20000	@ 0x4e20
 592:	4798      	blx	r3
					clear_lidar_IO();
 594:	f7ff ff62 	bl	45c <clear_lidar_IO>
					start_lidar_scan();
 598:	f7ff ff3c 	bl	414 <start_lidar_scan>
					comm_state = COMM_WAITING;
 59c:	4b6c      	ldr	r3, [pc, #432]	@ (750 <process_packets+0x238>)
 59e:	2200      	movs	r2, #0
 5a0:	701a      	strb	r2, [r3, #0]
					break;
 5a2:	e0b0      	b.n	706 <process_packets+0x1ee>
				} else {
					printlf("Got valid header!\n");
 5a4:	486f      	ldr	r0, [pc, #444]	@ (764 <process_packets+0x24c>)
 5a6:	f000 fa85 	bl	ab4 <printlf>
				}
				
				switch(current_message.header.type){
 5aa:	4b6b      	ldr	r3, [pc, #428]	@ (758 <process_packets+0x240>)
 5ac:	7999      	ldrb	r1, [r3, #6]
 5ae:	2906      	cmp	r1, #6
 5b0:	d00b      	beq.n	5ca <process_packets+0xb2>
 5b2:	2981      	cmp	r1, #129	@ 0x81
 5b4:	d10d      	bne.n	5d2 <process_packets+0xba>
					case TYPE_SCAN:
						comm_state = WAITING_SCAN_HEADER;
 5b6:	4b66      	ldr	r3, [pc, #408]	@ (750 <process_packets+0x238>)
 5b8:	2202      	movs	r2, #2
 5ba:	701a      	strb	r2, [r3, #0]
						current_byte = 0;
 5bc:	4b65      	ldr	r3, [pc, #404]	@ (754 <process_packets+0x23c>)
 5be:	2200      	movs	r2, #0
 5c0:	801a      	strh	r2, [r3, #0]
						printlf("Header is start of scan\n");
 5c2:	4869      	ldr	r0, [pc, #420]	@ (768 <process_packets+0x250>)
 5c4:	f000 fa76 	bl	ab4 <printlf>
					break;
 5c8:	e09d      	b.n	706 <process_packets+0x1ee>
					
					case TYPE_HEALTH_STATUS:
						comm_state = RECEIVING_HEALTH_REPORT;
 5ca:	4b61      	ldr	r3, [pc, #388]	@ (750 <process_packets+0x238>)
 5cc:	2205      	movs	r2, #5
 5ce:	701a      	strb	r2, [r3, #0]
					break;
 5d0:	e099      	b.n	706 <process_packets+0x1ee>
					
					default:
						printlf("Unexpected message type %d. Discarding...\n", (uint32_t)current_message.header.type);
 5d2:	4866      	ldr	r0, [pc, #408]	@ (76c <process_packets+0x254>)
 5d4:	f000 fa6e 	bl	ab4 <printlf>
						comm_state = COMM_WAITING;
 5d8:	4b5d      	ldr	r3, [pc, #372]	@ (750 <process_packets+0x238>)
 5da:	2200      	movs	r2, #0
 5dc:	701a      	strb	r2, [r3, #0]
					break;
 5de:	e092      	b.n	706 <process_packets+0x1ee>
				}
			} break;
			
			case WAITING_SCAN_HEADER:{
				if(ROM_UARTCharGet(LID_BASE) != 0xAA) break;
 5e0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 5e4:	695b      	ldr	r3, [r3, #20]
 5e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 5e8:	4858      	ldr	r0, [pc, #352]	@ (74c <process_packets+0x234>)
 5ea:	4798      	blx	r3
 5ec:	28aa      	cmp	r0, #170	@ 0xaa
 5ee:	f040 808a 	bne.w	706 <process_packets+0x1ee>
				comm_state = RECEIVING_SCAN_HEADER;
 5f2:	4b57      	ldr	r3, [pc, #348]	@ (750 <process_packets+0x238>)
 5f4:	2203      	movs	r2, #3
 5f6:	701a      	strb	r2, [r3, #0]
				current_byte = 1;
 5f8:	4b56      	ldr	r3, [pc, #344]	@ (754 <process_packets+0x23c>)
 5fa:	2201      	movs	r2, #1
 5fc:	801a      	strh	r2, [r3, #0]
				current_scan.bytes[0] = 0xAA;
 5fe:	4b5c      	ldr	r3, [pc, #368]	@ (770 <process_packets+0x258>)
 600:	22aa      	movs	r2, #170	@ 0xaa
 602:	701a      	strb	r2, [r3, #0]
			} break;
 604:	e07f      	b.n	706 <process_packets+0x1ee>
				
			case RECEIVING_SCAN_HEADER: {
				current_scan.bytes[current_byte++] = ROM_UARTCharGet(LID_BASE);
 606:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 60a:	695b      	ldr	r3, [r3, #20]
 60c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 60e:	484f      	ldr	r0, [pc, #316]	@ (74c <process_packets+0x234>)
 610:	4798      	blx	r3
 612:	4950      	ldr	r1, [pc, #320]	@ (754 <process_packets+0x23c>)
 614:	880a      	ldrh	r2, [r1, #0]
 616:	1c53      	adds	r3, r2, #1
 618:	b29b      	uxth	r3, r3
 61a:	800b      	strh	r3, [r1, #0]
 61c:	4954      	ldr	r1, [pc, #336]	@ (770 <process_packets+0x258>)
 61e:	5488      	strb	r0, [r1, r2]
				//ROM_UARTCharPut(UART0_BASE, current_scan.bytes[current_byte-1]);
				//If we're not done receiving the header, continue
				if(current_byte < sizeof(current_scan)) break;
 620:	2b09      	cmp	r3, #9
 622:	d970      	bls.n	706 <process_packets+0x1ee>
				//printlf("Got scan header\n");
				if(current_scan.header.start_code != SCAN_MAGIC){
 624:	880a      	ldrh	r2, [r1, #0]
 626:	f245 53aa 	movw	r3, #21930	@ 0x55aa
 62a:	429a      	cmp	r2, r3
 62c:	d10a      	bne.n	644 <process_packets+0x12c>
					//start_lidar_scan();
					comm_state = WAITING_SCAN_HEADER;
					current_byte=0;
					return;
				}
				if(current_scan.header.type == START_PACKET) {
 62e:	4b50      	ldr	r3, [pc, #320]	@ (770 <process_packets+0x258>)
 630:	789b      	ldrb	r3, [r3, #2]
 632:	2b01      	cmp	r3, #1
 634:	d00d      	beq.n	652 <process_packets+0x13a>
					comm_state = WAITING_SCAN_HEADER;
					print_angles();
					
				} else {
					//printlf("Receiving Data\n");
					comm_state = RECEIVING_SCAN_DATA;
 636:	4b46      	ldr	r3, [pc, #280]	@ (750 <process_packets+0x238>)
 638:	2204      	movs	r2, #4
 63a:	701a      	strb	r2, [r3, #0]
					current_byte = 0;
 63c:	4b45      	ldr	r3, [pc, #276]	@ (754 <process_packets+0x23c>)
 63e:	2200      	movs	r2, #0
 640:	801a      	strh	r2, [r3, #0]
 642:	e060      	b.n	706 <process_packets+0x1ee>
					comm_state = WAITING_SCAN_HEADER;
 644:	4b42      	ldr	r3, [pc, #264]	@ (750 <process_packets+0x238>)
 646:	2202      	movs	r2, #2
 648:	701a      	strb	r2, [r3, #0]
					current_byte=0;
 64a:	4b42      	ldr	r3, [pc, #264]	@ (754 <process_packets+0x23c>)
 64c:	2200      	movs	r2, #0
 64e:	801a      	strh	r2, [r3, #0]
				printlf("Invalid comm state - resetting");
				comm_state = COMM_WAITING;
			break;
		}
	}
}
 650:	bd10      	pop	{r4, pc}
					process_point_buff();
 652:	f7ff fe19 	bl	288 <process_point_buff>
					uint32_t *temp = active_point_buffer;
 656:	4a47      	ldr	r2, [pc, #284]	@ (774 <process_packets+0x25c>)
 658:	6811      	ldr	r1, [r2, #0]
					active_point_buffer = receiving_point_buffer;
 65a:	4b47      	ldr	r3, [pc, #284]	@ (778 <process_packets+0x260>)
 65c:	6818      	ldr	r0, [r3, #0]
 65e:	6010      	str	r0, [r2, #0]
					receiving_point_buffer = temp;
 660:	6019      	str	r1, [r3, #0]
					current_byte = 0;
 662:	4b3c      	ldr	r3, [pc, #240]	@ (754 <process_packets+0x23c>)
 664:	2200      	movs	r2, #0
 666:	801a      	strh	r2, [r3, #0]
					zero_point_buf();
 668:	f7ff fe00 	bl	26c <zero_point_buf>
					comm_state = WAITING_SCAN_HEADER;
 66c:	4b38      	ldr	r3, [pc, #224]	@ (750 <process_packets+0x238>)
 66e:	2202      	movs	r2, #2
 670:	701a      	strb	r2, [r3, #0]
					print_angles();
 672:	f7ff ff23 	bl	4bc <print_angles>
 676:	e046      	b.n	706 <process_packets+0x1ee>
				switch(current_byte % 2){
 678:	4b36      	ldr	r3, [pc, #216]	@ (754 <process_packets+0x23c>)
 67a:	881b      	ldrh	r3, [r3, #0]
 67c:	f013 0301 	ands.w	r3, r3, #1
 680:	d011      	beq.n	6a6 <process_packets+0x18e>
 682:	b9cb      	cbnz	r3, 6b8 <process_packets+0x1a0>
				if((++current_byte)>>1 == current_scan.header.sample_count){
 684:	4a33      	ldr	r2, [pc, #204]	@ (754 <process_packets+0x23c>)
 686:	8813      	ldrh	r3, [r2, #0]
 688:	3301      	adds	r3, #1
 68a:	b29b      	uxth	r3, r3
 68c:	8013      	strh	r3, [r2, #0]
 68e:	4a38      	ldr	r2, [pc, #224]	@ (770 <process_packets+0x258>)
 690:	78d2      	ldrb	r2, [r2, #3]
 692:	ebb2 0f53 	cmp.w	r2, r3, lsr #1
 696:	d136      	bne.n	706 <process_packets+0x1ee>
					current_byte = 0;
 698:	4b2e      	ldr	r3, [pc, #184]	@ (754 <process_packets+0x23c>)
 69a:	2200      	movs	r2, #0
 69c:	801a      	strh	r2, [r3, #0]
					comm_state = WAITING_SCAN_HEADER;
 69e:	4b2c      	ldr	r3, [pc, #176]	@ (750 <process_packets+0x238>)
 6a0:	2202      	movs	r2, #2
 6a2:	701a      	strb	r2, [r3, #0]
 6a4:	e02f      	b.n	706 <process_packets+0x1ee>
						lsb = ROM_UARTCharGet(LID_BASE);
 6a6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 6aa:	695b      	ldr	r3, [r3, #20]
 6ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 6ae:	4827      	ldr	r0, [pc, #156]	@ (74c <process_packets+0x234>)
 6b0:	4798      	blx	r3
 6b2:	4b32      	ldr	r3, [pc, #200]	@ (77c <process_packets+0x264>)
 6b4:	7018      	strb	r0, [r3, #0]
					break;
 6b6:	e7e5      	b.n	684 <process_packets+0x16c>
						msb = ROM_UARTCharGet(LID_BASE);
 6b8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 6bc:	695b      	ldr	r3, [r3, #20]
 6be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 6c0:	4822      	ldr	r0, [pc, #136]	@ (74c <process_packets+0x234>)
 6c2:	4798      	blx	r3
 6c4:	4b2e      	ldr	r3, [pc, #184]	@ (780 <process_packets+0x268>)
 6c6:	7018      	strb	r0, [r3, #0]
						uint32_t val = ((msb << 8) | lsb) >> 2;
 6c8:	b2c0      	uxtb	r0, r0
 6ca:	4b2c      	ldr	r3, [pc, #176]	@ (77c <process_packets+0x264>)
 6cc:	781b      	ldrb	r3, [r3, #0]
 6ce:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 6d2:	109c      	asrs	r4, r3, #2
						int angle = angle_map(current_scan.header.start_angle, current_scan.header.end_angle, current_scan.header.sample_count, current_byte>>1);
 6d4:	4826      	ldr	r0, [pc, #152]	@ (770 <process_packets+0x258>)
 6d6:	4b1f      	ldr	r3, [pc, #124]	@ (754 <process_packets+0x23c>)
 6d8:	881b      	ldrh	r3, [r3, #0]
 6da:	085b      	lsrs	r3, r3, #1
 6dc:	78c2      	ldrb	r2, [r0, #3]
 6de:	88c1      	ldrh	r1, [r0, #6]
 6e0:	8880      	ldrh	r0, [r0, #4]
 6e2:	f7ff fecf 	bl	484 <angle_map>
						if (receiving_point_buffer[angle]) {
 6e6:	4b24      	ldr	r3, [pc, #144]	@ (778 <process_packets+0x260>)
 6e8:	681a      	ldr	r2, [r3, #0]
 6ea:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
 6ee:	b123      	cbz	r3, 6fa <process_packets+0x1e2>
							receiving_point_buffer[angle] = (receiving_point_buffer[angle] + val) >> 1;
 6f0:	4423      	add	r3, r4
 6f2:	085b      	lsrs	r3, r3, #1
 6f4:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 6f8:	e7c4      	b.n	684 <process_packets+0x16c>
							receiving_point_buffer[angle] = val;
 6fa:	f842 4020 	str.w	r4, [r2, r0, lsl #2]
 6fe:	e7c1      	b.n	684 <process_packets+0x16c>
				comm_state = COMM_WAITING;
 700:	4b13      	ldr	r3, [pc, #76]	@ (750 <process_packets+0x238>)
 702:	2200      	movs	r2, #0
 704:	701a      	strb	r2, [r3, #0]
	while(ROM_UARTCharsAvail(LID_BASE)) {
 706:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 70a:	695b      	ldr	r3, [r3, #20]
 70c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 70e:	480f      	ldr	r0, [pc, #60]	@ (74c <process_packets+0x234>)
 710:	4798      	blx	r3
 712:	2800      	cmp	r0, #0
 714:	d09c      	beq.n	650 <process_packets+0x138>
		switch(comm_state) {
 716:	4b0e      	ldr	r3, [pc, #56]	@ (750 <process_packets+0x238>)
 718:	781b      	ldrb	r3, [r3, #0]
 71a:	2b05      	cmp	r3, #5
 71c:	d80e      	bhi.n	73c <process_packets+0x224>
 71e:	a201      	add	r2, pc, #4	@ (adr r2, 724 <process_packets+0x20c>)
 720:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 724:	0000051d 	.word	0x0000051d
 728:	0000054d 	.word	0x0000054d
 72c:	000005e1 	.word	0x000005e1
 730:	00000607 	.word	0x00000607
 734:	00000679 	.word	0x00000679
 738:	00000701 	.word	0x00000701
				printlf("Invalid comm state - resetting");
 73c:	4811      	ldr	r0, [pc, #68]	@ (784 <process_packets+0x26c>)
 73e:	f000 f9b9 	bl	ab4 <printlf>
				comm_state = COMM_WAITING;
 742:	4b03      	ldr	r3, [pc, #12]	@ (750 <process_packets+0x238>)
 744:	2200      	movs	r2, #0
 746:	701a      	strb	r2, [r3, #0]
			break;
 748:	e7dd      	b.n	706 <process_packets+0x1ee>
 74a:	bf00      	nop
 74c:	4000e000 	.word	0x4000e000
 750:	2000001a 	.word	0x2000001a
 754:	20000018 	.word	0x20000018
 758:	20000010 	.word	0x20000010
 75c:	00000c04 	.word	0x00000c04
 760:	00000c14 	.word	0x00000c14
 764:	00000c38 	.word	0x00000c38
 768:	00000c4c 	.word	0x00000c4c
 76c:	00000c68 	.word	0x00000c68
 770:	20000004 	.word	0x20000004
 774:	20000020 	.word	0x20000020
 778:	2000001c 	.word	0x2000001c
 77c:	20000001 	.word	0x20000001
 780:	20000000 	.word	0x20000000
 784:	00000c94 	.word	0x00000c94

00000788 <main>:

#define Disable_Interrupts() __asm("CPSID I")
#define Enable_Interrupts() 


int main (void) {
 788:	b508      	push	{r3, lr}
	ROM_SysCtlClockSet(SYSCTL_SYSDIV_2_5 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);
 78a:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 78e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 790:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 792:	4815      	ldr	r0, [pc, #84]	@ (7e8 <main+0x60>)
 794:	4798      	blx	r3
	
	setup_uart_printer();
 796:	f000 f865 	bl	864 <setup_uart_printer>
	printlf("Init Lidar Comms\n");
 79a:	4814      	ldr	r0, [pc, #80]	@ (7ec <main+0x64>)
 79c:	f000 f98a 	bl	ab4 <printlf>
	setup_lidar_comms();
 7a0:	f7ff fdc2 	bl	328 <setup_lidar_comms>
	printlf("Stopping Lidar scan\n");
 7a4:	4812      	ldr	r0, [pc, #72]	@ (7f0 <main+0x68>)
 7a6:	f000 f985 	bl	ab4 <printlf>
	stop_lidar_scan();
 7aa:	f7ff fe45 	bl	438 <stop_lidar_scan>
	printlf("Flushing Lidar buffer\n");
 7ae:	4811      	ldr	r0, [pc, #68]	@ (7f4 <main+0x6c>)
 7b0:	f000 f980 	bl	ab4 <printlf>
	clear_lidar_IO();
 7b4:	f7ff fe52 	bl	45c <clear_lidar_IO>
	__asm("CPSIE I");
 7b8:	b662      	cpsie	i
	ROM_SysCtlDelay(20000000);
 7ba:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 7bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 7c0:	480d      	ldr	r0, [pc, #52]	@ (7f8 <main+0x70>)
 7c2:	4798      	blx	r3
	//ROM_SysCtlDelay(20000000);
	//ROM_SysCtlDelay(20000000);
	//ROM_SysCtlDelay(20000000);
	printlf("Starting lidar scan#####################\n");
 7c4:	480d      	ldr	r0, [pc, #52]	@ (7fc <main+0x74>)
 7c6:	f000 f975 	bl	ab4 <printlf>
	clear_lidar_IO();
 7ca:	f7ff fe47 	bl	45c <clear_lidar_IO>
	ROM_SysCtlDelay(20000);
 7ce:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 7d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 7d4:	f644 6020 	movw	r0, #20000	@ 0x4e20
 7d8:	4798      	blx	r3
	clear_lidar_IO();
 7da:	f7ff fe3f 	bl	45c <clear_lidar_IO>
	start_lidar_scan();
 7de:	f7ff fe19 	bl	414 <start_lidar_scan>
	while(1) {
		process_packets();
 7e2:	f7ff fe99 	bl	518 <process_packets>
	while(1) {
 7e6:	e7fc      	b.n	7e2 <main+0x5a>
 7e8:	c1000540 	.word	0xc1000540
 7ec:	00000cb4 	.word	0x00000cb4
 7f0:	00000cc8 	.word	0x00000cc8
 7f4:	00000ce0 	.word	0x00000ce0
 7f8:	01312d00 	.word	0x01312d00
 7fc:	00000cf8 	.word	0x00000cf8

00000800 <timeKeeperISR>:
}

void timeKeeperISR (void) {
 800:	b410      	push	{r4}
	static char second_counter = 0;
	static char sonic_sensor_action_div = 0;
	
	TIMER1_IMR_R &= ~TIMER_IMR_TATOIM; //Disable Interrupt
 802:	4b14      	ldr	r3, [pc, #80]	@ (854 <timeKeeperISR+0x54>)
 804:	699a      	ldr	r2, [r3, #24]
 806:	f022 0201 	bic.w	r2, r2, #1
 80a:	619a      	str	r2, [r3, #24]
	TIMER1_ICR_R |= TIMER_ICR_TATOCINT; //Clear Interrupt
 80c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80e:	f042 0201 	orr.w	r2, r2, #1
 812:	625a      	str	r2, [r3, #36]	@ 0x24
	
	timer1_overflow_count++;
 814:	4c10      	ldr	r4, [pc, #64]	@ (858 <timeKeeperISR+0x58>)
 816:	e9d4 2300 	ldrd	r2, r3, [r4]
 81a:	1c50      	adds	r0, r2, #1
 81c:	f143 0100 	adc.w	r1, r3, #0
 820:	e9c4 0100 	strd	r0, r1, [r4]
	
	//Every second
	if(++second_counter == TIMER1_MULTIPLIER) {
 824:	4a0d      	ldr	r2, [pc, #52]	@ (85c <timeKeeperISR+0x5c>)
 826:	7813      	ldrb	r3, [r2, #0]
 828:	3301      	adds	r3, #1
 82a:	b2db      	uxtb	r3, r3
 82c:	7013      	strb	r3, [r2, #0]
 82e:	2b20      	cmp	r3, #32
 830:	d007      	beq.n	842 <timeKeeperISR+0x42>
		uptime_seconds++;
		second_counter = 0;
	}
	
	TIMER1_IMR_R |= TIMER_IMR_TATOIM; //Enable Interrupt
 832:	4a08      	ldr	r2, [pc, #32]	@ (854 <timeKeeperISR+0x54>)
 834:	6993      	ldr	r3, [r2, #24]
 836:	f043 0301 	orr.w	r3, r3, #1
 83a:	6193      	str	r3, [r2, #24]
}
 83c:	f85d 4b04 	ldr.w	r4, [sp], #4
 840:	4770      	bx	lr
		uptime_seconds++;
 842:	4a07      	ldr	r2, [pc, #28]	@ (860 <timeKeeperISR+0x60>)
 844:	6813      	ldr	r3, [r2, #0]
 846:	3301      	adds	r3, #1
 848:	6013      	str	r3, [r2, #0]
		second_counter = 0;
 84a:	4b04      	ldr	r3, [pc, #16]	@ (85c <timeKeeperISR+0x5c>)
 84c:	2200      	movs	r2, #0
 84e:	701a      	strb	r2, [r3, #0]
 850:	e7ef      	b.n	832 <timeKeeperISR+0x32>
 852:	bf00      	nop
 854:	40031000 	.word	0x40031000
 858:	20001108 	.word	0x20001108
 85c:	20001104 	.word	0x20001104
 860:	20001110 	.word	0x20001110

00000864 <setup_uart_printer>:
#include <inc/hw_memmap.h>
#include <common/tm4c123gh6pm.h>

#define INFINITY 1.0f/0.f

void setup_uart_printer(void){
 864:	b538      	push	{r3, r4, r5, lr}
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
 866:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 86a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 86c:	699b      	ldr	r3, [r3, #24]
 86e:	4815      	ldr	r0, [pc, #84]	@ (8c4 <setup_uart_printer+0x60>)
 870:	4798      	blx	r3
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
 872:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 874:	699b      	ldr	r3, [r3, #24]
 876:	4814      	ldr	r0, [pc, #80]	@ (8c8 <setup_uart_printer+0x64>)
 878:	4798      	blx	r3
	while(!ROM_SysCtlPeripheralReady(SYSCTL_PERIPH_UART0)){};
 87a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 87e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 880:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 884:	4810      	ldr	r0, [pc, #64]	@ (8c8 <setup_uart_printer+0x64>)
 886:	4798      	blx	r3
 888:	2800      	cmp	r0, #0
 88a:	d0f6      	beq.n	87a <setup_uart_printer+0x16>
	
	ROM_GPIOPadConfigSet(GPIO_PORTA_BASE, 3, GPIO_STRENGTH_8MA, GPIO_PIN_TYPE_STD);
 88c:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
 890:	6a23      	ldr	r3, [r4, #32]
 892:	695d      	ldr	r5, [r3, #20]
 894:	2308      	movs	r3, #8
 896:	2266      	movs	r2, #102	@ 0x66
 898:	2103      	movs	r1, #3
 89a:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 89e:	47a8      	blx	r5
	ROM_GPIODirModeSet(GPIO_PORTA_BASE, 3, GPIO_DIR_MODE_HW);
 8a0:	6a23      	ldr	r3, [r4, #32]
 8a2:	685b      	ldr	r3, [r3, #4]
 8a4:	2202      	movs	r2, #2
 8a6:	2103      	movs	r1, #3
 8a8:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 8ac:	4798      	blx	r3
	ROM_UARTConfigSetExpClk(UART0_BASE, ROM_SysCtlClockGet(), 4000000,
 8ae:	6963      	ldr	r3, [r4, #20]
 8b0:	695d      	ldr	r5, [r3, #20]
 8b2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8b4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8b6:	4798      	blx	r3
 8b8:	4601      	mov	r1, r0
 8ba:	2368      	movs	r3, #104	@ 0x68
 8bc:	4a03      	ldr	r2, [pc, #12]	@ (8cc <setup_uart_printer+0x68>)
 8be:	4804      	ldr	r0, [pc, #16]	@ (8d0 <setup_uart_printer+0x6c>)
 8c0:	47a8      	blx	r5
                            (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_TWO | UART_CONFIG_PAR_NONE));
}
 8c2:	bd38      	pop	{r3, r4, r5, pc}
 8c4:	f0000800 	.word	0xf0000800
 8c8:	f0001800 	.word	0xf0001800
 8cc:	003d0900 	.word	0x003d0900
 8d0:	4000c000 	.word	0x4000c000

000008d4 <putchar>:

void putchar(char c) {
 8d4:	b508      	push	{r3, lr}
 8d6:	4601      	mov	r1, r0
	static int chars_sent_recently = 0;
	ROM_UARTCharPut(UART0_BASE, c);
 8d8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8dc:	695b      	ldr	r3, [r3, #20]
 8de:	681b      	ldr	r3, [r3, #0]
 8e0:	480b      	ldr	r0, [pc, #44]	@ (910 <putchar+0x3c>)
 8e2:	4798      	blx	r3
	while(ROM_UARTBusy(UART0_BASE)) {};
 8e4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8e8:	695b      	ldr	r3, [r3, #20]
 8ea:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8ec:	4808      	ldr	r0, [pc, #32]	@ (910 <putchar+0x3c>)
 8ee:	4798      	blx	r3
 8f0:	2800      	cmp	r0, #0
 8f2:	d1f7      	bne.n	8e4 <putchar+0x10>
	
	//Really dumb, but avoid overwhelming ICDI
	if(++chars_sent_recently > 7) {
 8f4:	4a07      	ldr	r2, [pc, #28]	@ (914 <putchar+0x40>)
 8f6:	6813      	ldr	r3, [r2, #0]
 8f8:	3301      	adds	r3, #1
 8fa:	6013      	str	r3, [r2, #0]
 8fc:	2b07      	cmp	r3, #7
 8fe:	dd06      	ble.n	90e <putchar+0x3a>
		chars_sent_recently = 0;
 900:	2300      	movs	r3, #0
 902:	6013      	str	r3, [r2, #0]
		for(int i = 0; i < 175; i++) {
 904:	e001      	b.n	90a <putchar+0x36>
			__asm("mov r1,r1\n");
 906:	4609      	mov	r1, r1
		for(int i = 0; i < 175; i++) {
 908:	3301      	adds	r3, #1
 90a:	2bae      	cmp	r3, #174	@ 0xae
 90c:	ddfb      	ble.n	906 <putchar+0x32>
		}
	}
}
 90e:	bd08      	pop	{r3, pc}
 910:	4000c000 	.word	0x4000c000
 914:	20001114 	.word	0x20001114

00000918 <print_string>:

void print_string(const char * const str) {
 918:	b538      	push	{r3, r4, r5, lr}
 91a:	4605      	mov	r5, r0
	for(int i = 0; str[i] != '\0'; i++) {
 91c:	2400      	movs	r4, #0
 91e:	e002      	b.n	926 <print_string+0xe>
		putchar( str[i]);
 920:	f7ff ffd8 	bl	8d4 <putchar>
	for(int i = 0; str[i] != '\0'; i++) {
 924:	3401      	adds	r4, #1
 926:	5d28      	ldrb	r0, [r5, r4]
 928:	2800      	cmp	r0, #0
 92a:	d1f9      	bne.n	920 <print_string+0x8>
	}
}
 92c:	bd38      	pop	{r3, r4, r5, pc}
	...

00000930 <print_unsigned_decimal>:

void print_unsigned_decimal(uint32_t num){
 930:	b510      	push	{r4, lr}
 932:	b084      	sub	sp, #16
	
	char buf[11]; //Large enough to fit any value of num
	
	int places = 0;
 934:	2400      	movs	r4, #0
	
	do {
		buf[places++] = (char)('0' + (num % 10));
 936:	4b10      	ldr	r3, [pc, #64]	@ (978 <print_unsigned_decimal+0x48>)
 938:	fba3 2300 	umull	r2, r3, r3, r0
 93c:	08db      	lsrs	r3, r3, #3
 93e:	4619      	mov	r1, r3
 940:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 944:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 948:	4622      	mov	r2, r4
 94a:	3330      	adds	r3, #48	@ 0x30
 94c:	3210      	adds	r2, #16
 94e:	446a      	add	r2, sp
 950:	3401      	adds	r4, #1
 952:	f802 3c0c 	strb.w	r3, [r2, #-12]
		num /= 10;
 956:	4603      	mov	r3, r0
 958:	4608      	mov	r0, r1
	} while (num > 0);
 95a:	2b09      	cmp	r3, #9
 95c:	d8eb      	bhi.n	936 <print_unsigned_decimal+0x6>
 95e:	e007      	b.n	970 <print_unsigned_decimal+0x40>
	
	for(; places; places--) {
		putchar( buf[places-1]);
 960:	3c01      	subs	r4, #1
 962:	f104 0310 	add.w	r3, r4, #16
 966:	446b      	add	r3, sp
 968:	f813 0c0c 	ldrb.w	r0, [r3, #-12]
 96c:	f7ff ffb2 	bl	8d4 <putchar>
	for(; places; places--) {
 970:	2c00      	cmp	r4, #0
 972:	d1f5      	bne.n	960 <print_unsigned_decimal+0x30>
	}
}
 974:	b004      	add	sp, #16
 976:	bd10      	pop	{r4, pc}
 978:	cccccccd 	.word	0xcccccccd

0000097c <print_decimal>:

void print_decimal(int32_t num){
 97c:	b510      	push	{r4, lr}
	
	if (num < 0) {
 97e:	1e04      	subs	r4, r0, #0
 980:	db03      	blt.n	98a <print_decimal+0xe>
		putchar( '-');
		num = 0 - num;
	}
	
	print_unsigned_decimal((uint32_t)num);
 982:	4620      	mov	r0, r4
 984:	f7ff ffd4 	bl	930 <print_unsigned_decimal>
}
 988:	bd10      	pop	{r4, pc}
		putchar( '-');
 98a:	202d      	movs	r0, #45	@ 0x2d
 98c:	f7ff ffa2 	bl	8d4 <putchar>
		num = 0 - num;
 990:	4264      	negs	r4, r4
 992:	e7f6      	b.n	982 <print_decimal+0x6>

00000994 <print_float>:

void print_float(float number) {
 994:	b510      	push	{r4, lr}
 996:	ed2d 8b02 	vpush	{d8}
 99a:	b084      	sub	sp, #16
	
	if(number != number) { //NaN is not equal to anything, including NaN
 99c:	eeb4 0a40 	vcmp.f32	s0, s0
 9a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9a4:	d137      	bne.n	a16 <print_float+0x82>
		print_string("NaN");
		return;
	}
	
	if(number == INFINITY || number == -INFINITY) {
 9a6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 9aa:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ a98 <print_float+0x104>
 9ae:	eec6 7a87 	vdiv.f32	s15, s13, s14
 9b2:	eef4 7a40 	vcmp.f32	s15, s0
 9b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9ba:	d030      	beq.n	a1e <print_float+0x8a>
 9bc:	eef1 7a67 	vneg.f32	s15, s15
 9c0:	eef4 7a40 	vcmp.f32	s15, s0
 9c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9c8:	d029      	beq.n	a1e <print_float+0x8a>
		print_string("inf");
		return;
	}
	
	if(number > UINT32_MAX || (0-number) > UINT32_MAX) {
 9ca:	eddf 7a34 	vldr	s15, [pc, #208]	@ a9c <print_float+0x108>
 9ce:	eeb4 0ae7 	vcmpe.f32	s0, s15
 9d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9d6:	dc29      	bgt.n	a2c <print_float+0x98>
 9d8:	ed9f 8a2f 	vldr	s16, [pc, #188]	@ a98 <print_float+0x104>
 9dc:	ee38 8a40 	vsub.f32	s16, s16, s0
 9e0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 9e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9e8:	dc20      	bgt.n	a2c <print_float+0x98>
		return;
	}
	
	char buf[15]; // large enough to fit any value
	
	if(number < 0) {
 9ea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 9ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 9f2:	d41f      	bmi.n	a34 <print_float+0xa0>
		putchar( '-');
		number = 0 - number;
	}
	
	uint32_t integerPart = (uint32_t)number;
 9f4:	eefc 7ac0 	vcvt.u32.f32	s15, s0
	uint32_t decimalPart = (uint32_t)((number - integerPart) * 1000);
 9f8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 9fc:	ee30 0a47 	vsub.f32	s0, s0, s14
 a00:	ed9f 7a27 	vldr	s14, [pc, #156]	@ aa0 <print_float+0x10c>
 a04:	ee20 0a07 	vmul.f32	s0, s0, s14
 a08:	eebc 7ac0 	vcvt.u32.f32	s14, s0
 a0c:	ee17 3a10 	vmov	r3, s14
	
	int places = 0;
	
	for(int i = 0; i < 3; i++) {
 a10:	2000      	movs	r0, #0
	int places = 0;
 a12:	4601      	mov	r1, r0
	for(int i = 0; i < 3; i++) {
 a14:	e026      	b.n	a64 <print_float+0xd0>
		print_string("NaN");
 a16:	4823      	ldr	r0, [pc, #140]	@ (aa4 <print_float+0x110>)
 a18:	f7ff ff7e 	bl	918 <print_string>
		return;
 a1c:	e002      	b.n	a24 <print_float+0x90>
		print_string("inf");
 a1e:	4822      	ldr	r0, [pc, #136]	@ (aa8 <print_float+0x114>)
 a20:	f7ff ff7a 	bl	918 <print_string>
	print_unsigned_decimal(integerPart);
	
	for(; places; places--) {
		putchar( buf[places-1]);
	}
}
 a24:	b004      	add	sp, #16
 a26:	ecbd 8b02 	vpop	{d8}
 a2a:	bd10      	pop	{r4, pc}
		print_string("[out of range]");
 a2c:	481f      	ldr	r0, [pc, #124]	@ (aac <print_float+0x118>)
 a2e:	f7ff ff73 	bl	918 <print_string>
		return;
 a32:	e7f7      	b.n	a24 <print_float+0x90>
		putchar( '-');
 a34:	202d      	movs	r0, #45	@ 0x2d
 a36:	f7ff ff4d 	bl	8d4 <putchar>
		number = 0 - number;
 a3a:	eeb0 0a48 	vmov.f32	s0, s16
 a3e:	e7d9      	b.n	9f4 <print_float+0x60>
		buf[places++] = (char)('0' + decimalPart % 10);
 a40:	4a1b      	ldr	r2, [pc, #108]	@ (ab0 <print_float+0x11c>)
 a42:	fba2 4203 	umull	r4, r2, r2, r3
 a46:	08d2      	lsrs	r2, r2, #3
 a48:	4614      	mov	r4, r2
 a4a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 a4e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
 a52:	3230      	adds	r2, #48	@ 0x30
 a54:	f101 0310 	add.w	r3, r1, #16
 a58:	446b      	add	r3, sp
 a5a:	f803 2c10 	strb.w	r2, [r3, #-16]
		decimalPart /= 10;
 a5e:	4623      	mov	r3, r4
	for(int i = 0; i < 3; i++) {
 a60:	3001      	adds	r0, #1
		buf[places++] = (char)('0' + decimalPart % 10);
 a62:	3101      	adds	r1, #1
	for(int i = 0; i < 3; i++) {
 a64:	2802      	cmp	r0, #2
 a66:	ddeb      	ble.n	a40 <print_float+0xac>
	buf[places++] = '.';
 a68:	1c4c      	adds	r4, r1, #1
 a6a:	f101 0310 	add.w	r3, r1, #16
 a6e:	eb0d 0103 	add.w	r1, sp, r3
 a72:	232e      	movs	r3, #46	@ 0x2e
 a74:	f801 3c10 	strb.w	r3, [r1, #-16]
	print_unsigned_decimal(integerPart);
 a78:	ee17 0a90 	vmov	r0, s15
 a7c:	f7ff ff58 	bl	930 <print_unsigned_decimal>
	for(; places; places--) {
 a80:	e007      	b.n	a92 <print_float+0xfe>
		putchar( buf[places-1]);
 a82:	3c01      	subs	r4, #1
 a84:	f104 0310 	add.w	r3, r4, #16
 a88:	446b      	add	r3, sp
 a8a:	f813 0c10 	ldrb.w	r0, [r3, #-16]
 a8e:	f7ff ff21 	bl	8d4 <putchar>
	for(; places; places--) {
 a92:	2c00      	cmp	r4, #0
 a94:	d1f5      	bne.n	a82 <print_float+0xee>
 a96:	e7c5      	b.n	a24 <print_float+0x90>
 a98:	00000000 	.word	0x00000000
 a9c:	4f800000 	.word	0x4f800000
 aa0:	447a0000 	.word	0x447a0000
 aa4:	00000d24 	.word	0x00000d24
 aa8:	00000d28 	.word	0x00000d28
 aac:	00000d2c 	.word	0x00000d2c
 ab0:	cccccccd 	.word	0xcccccccd

00000ab4 <printlf>:

void printlf(char format[], ...) {
 ab4:	b40f      	push	{r0, r1, r2, r3}
 ab6:	b570      	push	{r4, r5, r6, lr}
 ab8:	b082      	sub	sp, #8
 aba:	ab06      	add	r3, sp, #24
 abc:	f853 5b04 	ldr.w	r5, [r3], #4
	va_list args;
	va_start(args, format);
 ac0:	9301      	str	r3, [sp, #4]
	char *str;
	int32_t num;
	uint32_t numu;
	float *numf;
	
	for(int i=0; format[i] != '\0'; i++) {
 ac2:	2400      	movs	r4, #0
 ac4:	e030      	b.n	b28 <printlf+0x74>
		switch(format[i]) {
			case '%' :
				i++;
				switch(format[i]) {
					case 'u': //unsigned decimal number
						numu = va_arg(args, uint32_t);
 ac6:	9b01      	ldr	r3, [sp, #4]
 ac8:	1d1a      	adds	r2, r3, #4
 aca:	9201      	str	r2, [sp, #4]
						print_unsigned_decimal(numu);
 acc:	6818      	ldr	r0, [r3, #0]
 ace:	f7ff ff2f 	bl	930 <print_unsigned_decimal>
				i++;
 ad2:	4634      	mov	r4, r6
					break;
 ad4:	e027      	b.n	b26 <printlf+0x72>
					
					case 'd': //signed decimal number
						num = va_arg(args, int32_t);
 ad6:	9b01      	ldr	r3, [sp, #4]
 ad8:	1d1a      	adds	r2, r3, #4
 ada:	9201      	str	r2, [sp, #4]
						print_decimal(num);
 adc:	6818      	ldr	r0, [r3, #0]
 ade:	f7ff ff4d 	bl	97c <print_decimal>
				i++;
 ae2:	4634      	mov	r4, r6
					break;
 ae4:	e01f      	b.n	b26 <printlf+0x72>
					
					case '\0': // End of string
						putchar( '%');
 ae6:	2025      	movs	r0, #37	@ 0x25
 ae8:	f7ff fef4 	bl	8d4 <putchar>
						i--; //let the for loop catch this
					break;
 aec:	e01b      	b.n	b26 <printlf+0x72>
					
					case 's': //string
						str = va_arg(args, char*);
 aee:	9b01      	ldr	r3, [sp, #4]
 af0:	1d1a      	adds	r2, r3, #4
 af2:	9201      	str	r2, [sp, #4]
						print_string(str);
 af4:	6818      	ldr	r0, [r3, #0]
 af6:	f7ff ff0f 	bl	918 <print_string>
				i++;
 afa:	4634      	mov	r4, r6
					break;
 afc:	e013      	b.n	b26 <printlf+0x72>
					
					case 'f': //float
						numf = va_arg(args, float *);
 afe:	9b01      	ldr	r3, [sp, #4]
 b00:	1d1a      	adds	r2, r3, #4
 b02:	9201      	str	r2, [sp, #4]
 b04:	681b      	ldr	r3, [r3, #0]
						print_float(*numf);
 b06:	ed93 0a00 	vldr	s0, [r3]
 b0a:	f7ff ff43 	bl	994 <print_float>
				i++;
 b0e:	4634      	mov	r4, r6
					break;
 b10:	e009      	b.n	b26 <printlf+0x72>
					
					default: //Not recognized
					putchar( '%');
 b12:	2025      	movs	r0, #37	@ 0x25
 b14:	f7ff fede 	bl	8d4 <putchar>
					putchar( format[i]);
 b18:	5da8      	ldrb	r0, [r5, r6]
 b1a:	f7ff fedb 	bl	8d4 <putchar>
				i++;
 b1e:	4634      	mov	r4, r6
					break;
 b20:	e001      	b.n	b26 <printlf+0x72>
				}
			break;
				
			default:
				putchar( format[i]);
 b22:	f7ff fed7 	bl	8d4 <putchar>
	for(int i=0; format[i] != '\0'; i++) {
 b26:	3401      	adds	r4, #1
 b28:	5d28      	ldrb	r0, [r5, r4]
 b2a:	b398      	cbz	r0, b94 <printlf+0xe0>
		switch(format[i]) {
 b2c:	2825      	cmp	r0, #37	@ 0x25
 b2e:	d1f8      	bne.n	b22 <printlf+0x6e>
				i++;
 b30:	1c66      	adds	r6, r4, #1
				switch(format[i]) {
 b32:	5dab      	ldrb	r3, [r5, r6]
 b34:	2b00      	cmp	r3, #0
 b36:	d0d6      	beq.n	ae6 <printlf+0x32>
 b38:	2b75      	cmp	r3, #117	@ 0x75
 b3a:	d8ea      	bhi.n	b12 <printlf+0x5e>
 b3c:	2b64      	cmp	r3, #100	@ 0x64
 b3e:	d3e8      	bcc.n	b12 <printlf+0x5e>
 b40:	3b64      	subs	r3, #100	@ 0x64
 b42:	2b11      	cmp	r3, #17
 b44:	d8e5      	bhi.n	b12 <printlf+0x5e>
 b46:	a201      	add	r2, pc, #4	@ (adr r2, b4c <printlf+0x98>)
 b48:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 b4c:	00000ad7 	.word	0x00000ad7
 b50:	00000b13 	.word	0x00000b13
 b54:	00000aff 	.word	0x00000aff
 b58:	00000b13 	.word	0x00000b13
 b5c:	00000b13 	.word	0x00000b13
 b60:	00000b13 	.word	0x00000b13
 b64:	00000b13 	.word	0x00000b13
 b68:	00000b13 	.word	0x00000b13
 b6c:	00000b13 	.word	0x00000b13
 b70:	00000b13 	.word	0x00000b13
 b74:	00000b13 	.word	0x00000b13
 b78:	00000b13 	.word	0x00000b13
 b7c:	00000b13 	.word	0x00000b13
 b80:	00000b13 	.word	0x00000b13
 b84:	00000b13 	.word	0x00000b13
 b88:	00000aef 	.word	0x00000aef
 b8c:	00000b13 	.word	0x00000b13
 b90:	00000ac7 	.word	0x00000ac7
			break;
		}
	}
	
	va_end(args);
}
 b94:	b002      	add	sp, #8
 b96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 b9a:	b004      	add	sp, #16
 b9c:	4770      	bx	lr
 b9e:	bf00      	nop

00000ba0 <NmiSR>:
NmiSR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 ba0:	e7fe      	b.n	ba0 <NmiSR>

00000ba2 <FaultISR>:
FaultISR(void)
{
    //
    // Enter an infinite loop.
    //
    while(1)
 ba2:	e7fe      	b.n	ba2 <FaultISR>

00000ba4 <IntDefaultHandler>:
IntDefaultHandler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
 ba4:	e7fe      	b.n	ba4 <IntDefaultHandler>
	...

00000ba8 <ResetISR>:
{
 ba8:	b508      	push	{r3, lr}
    for(pulDest = &_data; pulDest < &_edata; )
 baa:	4b0e      	ldr	r3, [pc, #56]	@ (be4 <zero_loop+0x1e>)
    pulSrc = &_etext;
 bac:	4a0e      	ldr	r2, [pc, #56]	@ (be8 <zero_loop+0x22>)
    for(pulDest = &_data; pulDest < &_edata; )
 bae:	e003      	b.n	bb8 <ResetISR+0x10>
        *pulDest++ = *pulSrc++;
 bb0:	f852 1b04 	ldr.w	r1, [r2], #4
 bb4:	f843 1b04 	str.w	r1, [r3], #4
    for(pulDest = &_data; pulDest < &_edata; )
 bb8:	490c      	ldr	r1, [pc, #48]	@ (bec <zero_loop+0x26>)
 bba:	428b      	cmp	r3, r1
 bbc:	d3f8      	bcc.n	bb0 <ResetISR+0x8>
    __asm("    ldr     r0, =_bss\n"
 bbe:	480c      	ldr	r0, [pc, #48]	@ (bf0 <zero_loop+0x2a>)
 bc0:	490c      	ldr	r1, [pc, #48]	@ (bf4 <zero_loop+0x2e>)
 bc2:	f04f 0200 	mov.w	r2, #0

00000bc6 <zero_loop>:
 bc6:	4288      	cmp	r0, r1
 bc8:	bfb8      	it	lt
 bca:	f840 2b04 	strlt.w	r2, [r0], #4
 bce:	dbfa      	blt.n	bc6 <zero_loop>
    *((uint32_t *)0xE000ED88) = 0xFFFFFFFF; //SPM376e pg 133 - enable FPU
 bd0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 bd4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 bd8:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
    main();
 bdc:	f7ff fdd4 	bl	788 <main>
}
 be0:	bd08      	pop	{r3, pc}
 be2:	bf00      	nop
 be4:	20000000 	.word	0x20000000
 be8:	00000d3b 	.word	0x00000d3b
 bec:	20000000 	.word	0x20000000
 bf0:	20000000 	.word	0x20000000
 bf4:	20001218 	.word	0x20001218
 bf8:	0000631b 	.word	0x0000631b
 bfc:	093a6425 	.word	0x093a6425
 c00:	000a6425 	.word	0x000a6425
 c04:	64616548 	.word	0x64616548
 c08:	53207265 	.word	0x53207265
 c0c:	74726174 	.word	0x74726174
 c10:	000a6465 	.word	0x000a6465
 c14:	78656e55 	.word	0x78656e55
 c18:	74636570 	.word	0x74636570
 c1c:	48206465 	.word	0x48206465
 c20:	65646165 	.word	0x65646165
 c24:	64252072 	.word	0x64252072
 c28:	6572202c 	.word	0x6572202c
 c2c:	74746573 	.word	0x74746573
 c30:	0a676e69 	.word	0x0a676e69
 c34:	00000000 	.word	0x00000000
 c38:	20746f47 	.word	0x20746f47
 c3c:	696c6176 	.word	0x696c6176
 c40:	65682064 	.word	0x65682064
 c44:	72656461 	.word	0x72656461
 c48:	00000a21 	.word	0x00000a21
 c4c:	64616548 	.word	0x64616548
 c50:	69207265 	.word	0x69207265
 c54:	74732073 	.word	0x74732073
 c58:	20747261 	.word	0x20747261
 c5c:	7320666f 	.word	0x7320666f
 c60:	0a6e6163 	.word	0x0a6e6163
 c64:	00000000 	.word	0x00000000
 c68:	78656e55 	.word	0x78656e55
 c6c:	74636570 	.word	0x74636570
 c70:	6d206465 	.word	0x6d206465
 c74:	61737365 	.word	0x61737365
 c78:	74206567 	.word	0x74206567
 c7c:	20657079 	.word	0x20657079
 c80:	202e6425 	.word	0x202e6425
 c84:	63736944 	.word	0x63736944
 c88:	69647261 	.word	0x69647261
 c8c:	2e2e676e 	.word	0x2e2e676e
 c90:	00000a2e 	.word	0x00000a2e
 c94:	61766e49 	.word	0x61766e49
 c98:	2064696c 	.word	0x2064696c
 c9c:	6d6d6f63 	.word	0x6d6d6f63
 ca0:	61747320 	.word	0x61747320
 ca4:	2d206574 	.word	0x2d206574
 ca8:	73657220 	.word	0x73657220
 cac:	69747465 	.word	0x69747465
 cb0:	0000676e 	.word	0x0000676e
 cb4:	74696e49 	.word	0x74696e49
 cb8:	64694c20 	.word	0x64694c20
 cbc:	43207261 	.word	0x43207261
 cc0:	736d6d6f 	.word	0x736d6d6f
 cc4:	0000000a 	.word	0x0000000a
 cc8:	706f7453 	.word	0x706f7453
 ccc:	676e6970 	.word	0x676e6970
 cd0:	64694c20 	.word	0x64694c20
 cd4:	73207261 	.word	0x73207261
 cd8:	0a6e6163 	.word	0x0a6e6163
 cdc:	00000000 	.word	0x00000000
 ce0:	73756c46 	.word	0x73756c46
 ce4:	676e6968 	.word	0x676e6968
 ce8:	64694c20 	.word	0x64694c20
 cec:	62207261 	.word	0x62207261
 cf0:	65666675 	.word	0x65666675
 cf4:	00000a72 	.word	0x00000a72
 cf8:	72617453 	.word	0x72617453
 cfc:	676e6974 	.word	0x676e6974
 d00:	64696c20 	.word	0x64696c20
 d04:	73207261 	.word	0x73207261
 d08:	236e6163 	.word	0x236e6163
 d0c:	23232323 	.word	0x23232323
 d10:	23232323 	.word	0x23232323
 d14:	23232323 	.word	0x23232323
 d18:	23232323 	.word	0x23232323
 d1c:	23232323 	.word	0x23232323
 d20:	0000000a 	.word	0x0000000a
 d24:	004e614e 	.word	0x004e614e
 d28:	00666e69 	.word	0x00666e69
 d2c:	74756f5b 	.word	0x74756f5b
 d30:	20666f20 	.word	0x20666f20
 d34:	676e6172 	.word	0x676e6172
 d38:	5d65      	.short	0x5d65
	...
